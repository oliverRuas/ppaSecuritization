'use strict';var cov_1pebg41whg=function(){var path="/home/oliver/go/src/github.com/hyperledger/fabric-samples/securitization-chaincode/chaincodes/my_chaincodeTest/lib/securitizationContract.js";var hash="a6b30dfdfcdc771ff5f76c96a53a8301572e8381";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/oliver/go/src/github.com/hyperledger/fabric-samples/securitization-chaincode/chaincodes/my_chaincodeTest/lib/securitizationContract.js",statementMap:{"0":{start:{line:3,column:26},end:{line:3,column:56}},"1":{start:{line:9,column:8},end:{line:9,column:16}},"2":{start:{line:13,column:8},end:{line:13,column:46}},"3":{start:{line:18,column:8},end:{line:18,column:59}},"4":{start:{line:27,column:8},end:{line:27,column:42}},"5":{start:{line:31,column:8},end:{line:31,column:46}},"6":{start:{line:35,column:8},end:{line:35,column:77}},"7":{start:{line:40,column:8},end:{line:40,column:24}},"8":{start:{line:103,column:8},end:{line:103,column:67}},"9":{start:{line:108,column:8},end:{line:108,column:38}},"10":{start:{line:113,column:8},end:{line:113,column:32}},"11":{start:{line:122,column:8},end:{line:122,column:43}},"12":{start:{line:129,column:8},end:{line:129,column:43}},"13":{start:{line:137,column:21},end:{line:137,column:40}},"14":{start:{line:139,column:17},end:{line:139,column:67}},"15":{start:{line:141,column:8},end:{line:143,column:9}},"16":{start:{line:142,column:12},end:{line:142,column:74}},"17":{start:{line:144,column:16},end:{line:144,column:57}},"18":{start:{line:145,column:19},end:{line:145,column:26}},"19":{start:{line:146,column:20},end:{line:146,column:30}},"20":{start:{line:149,column:8},end:{line:153,column:9}},"21":{start:{line:149,column:19},end:{line:149,column:20}},"22":{start:{line:150,column:12},end:{line:152,column:13}},"23":{start:{line:151,column:16},end:{line:151,column:73}},"24":{start:{line:171,column:27},end:{line:171,column:44}},"25":{start:{line:173,column:18},end:{line:173,column:19}},"26":{start:{line:174,column:8},end:{line:182,column:9}},"27":{start:{line:174,column:18},end:{line:174,column:19}},"28":{start:{line:175,column:12},end:{line:178,column:13}},"29":{start:{line:176,column:16},end:{line:176,column:24}},"30":{start:{line:177,column:16},end:{line:177,column:30}},"31":{start:{line:179,column:12},end:{line:181,column:13}},"32":{start:{line:180,column:16},end:{line:180,column:79}},"33":{start:{line:184,column:8},end:{line:186,column:9}},"34":{start:{line:185,column:12},end:{line:185,column:45}},"35":{start:{line:188,column:8},end:{line:188,column:34}},"36":{start:{line:189,column:8},end:{line:191,column:9}},"37":{start:{line:190,column:12},end:{line:190,column:64}},"38":{start:{line:193,column:8},end:{line:193,column:19}},"39":{start:{line:219,column:24},end:{line:219,column:48}},"40":{start:{line:221,column:19},end:{line:221,column:93}},"41":{start:{line:223,column:8},end:{line:225,column:9}},"42":{start:{line:224,column:12},end:{line:224,column:44}},"43":{start:{line:227,column:19},end:{line:227,column:23}},"44":{start:{line:228,column:19},end:{line:237,column:9}},"45":{start:{line:239,column:8},end:{line:239,column:72}},"46":{start:{line:240,column:8},end:{line:240,column:19}},"47":{start:{line:244,column:21},end:{line:244,column:53}},"48":{start:{line:245,column:21},end:{line:245,column:96}},"49":{start:{line:247,column:23},end:{line:247,column:25}},"50":{start:{line:248,column:20},end:{line:248,column:21}},"51":{start:{line:250,column:8},end:{line:261,column:9}},"52":{start:{line:251,column:12},end:{line:251,column:53}},"53":{start:{line:253,column:12},end:{line:253,column:32}},"54":{start:{line:254,column:12},end:{line:257,column:13}},"55":{start:{line:255,column:16},end:{line:255,column:42}},"56":{start:{line:256,column:16},end:{line:256,column:39}},"57":{start:{line:258,column:12},end:{line:260,column:13}},"58":{start:{line:259,column:16},end:{line:259,column:21}},"59":{start:{line:262,column:8},end:{line:264,column:9}},"60":{start:{line:263,column:12},end:{line:263,column:59}},"61":{start:{line:265,column:16},end:{line:265,column:74}},"62":{start:{line:266,column:8},end:{line:266,column:18}},"63":{start:{line:281,column:18},end:{line:281,column:79}},"64":{start:{line:282,column:8},end:{line:284,column:9}},"65":{start:{line:283,column:12},end:{line:283,column:49}},"66":{start:{line:285,column:8},end:{line:285,column:19}},"67":{start:{line:289,column:19},end:{line:289,column:21}},"68":{start:{line:290,column:12},end:{line:290,column:33}},"69":{start:{line:291,column:2},end:{line:316,column:3}},"70":{start:{line:292,column:3},end:{line:314,column:4}},"71":{start:{line:293,column:18},end:{line:293,column:20}},"72":{start:{line:295,column:4},end:{line:312,column:5}},"73":{start:{line:296,column:5},end:{line:296,column:36}},"74":{start:{line:297,column:5},end:{line:297,column:45}},"75":{start:{line:298,column:5},end:{line:303,column:6}},"76":{start:{line:299,column:6},end:{line:299,column:67}},"77":{start:{line:302,column:6},end:{line:302,column:55}},"78":{start:{line:305,column:5},end:{line:305,column:33}},"79":{start:{line:306,column:5},end:{line:311,column:6}},"80":{start:{line:307,column:6},end:{line:307,column:68}},"81":{start:{line:310,column:6},end:{line:310,column:56}},"82":{start:{line:313,column:4},end:{line:313,column:29}},"83":{start:{line:315,column:3},end:{line:315,column:31}},"84":{start:{line:317,column:2},end:{line:317,column:19}},"85":{start:{line:318,column:2},end:{line:318,column:20}},"86":{start:{line:323,column:18},end:{line:323,column:73}},"87":{start:{line:324,column:30},end:{line:324,column:66}},"88":{start:{line:325,column:16},end:{line:325,column:64}},"89":{start:{line:326,column:2},end:{line:326,column:17}},"90":{start:{line:340,column:8},end:{line:340,column:42}},"91":{start:{line:343,column:24},end:{line:343,column:48}},"92":{start:{line:344,column:22},end:{line:344,column:54}},"93":{start:{line:346,column:18},end:{line:346,column:92}},"94":{start:{line:349,column:8},end:{line:349,column:19}},"95":{start:{line:351,column:34},end:{line:360,column:9}},"96":{start:{line:361,column:8},end:{line:361,column:103}},"97":{start:{line:362,column:8},end:{line:362,column:34}},"98":{start:{line:367,column:23},end:{line:367,column:82}},"99":{start:{line:368,column:20},end:{line:368,column:21}},"100":{start:{line:371,column:8},end:{line:374,column:13}},"101":{start:{line:372,column:12},end:{line:372,column:52}},"102":{start:{line:373,column:12},end:{line:373,column:30}},"103":{start:{line:375,column:8},end:{line:379,column:9}},"104":{start:{line:376,column:12},end:{line:376,column:45}},"105":{start:{line:377,column:14},end:{line:379,column:9}},"106":{start:{line:378,column:12},end:{line:378,column:24}},"107":{start:{line:380,column:8},end:{line:380,column:23}},"108":{start:{line:385,column:21},end:{line:385,column:53}},"109":{start:{line:386,column:23},end:{line:386,column:98}},"110":{start:{line:387,column:22},end:{line:387,column:24}},"111":{start:{line:389,column:8},end:{line:392,column:9}},"112":{start:{line:390,column:12},end:{line:390,column:52}},"113":{start:{line:391,column:12},end:{line:391,column:32}},"114":{start:{line:393,column:8},end:{line:393,column:23}},"115":{start:{line:398,column:21},end:{line:398,column:53}},"116":{start:{line:399,column:23},end:{line:399,column:89}},"117":{start:{line:400,column:22},end:{line:400,column:24}},"118":{start:{line:402,column:8},end:{line:405,column:9}},"119":{start:{line:403,column:12},end:{line:403,column:52}},"120":{start:{line:404,column:12},end:{line:404,column:32}},"121":{start:{line:406,column:8},end:{line:406,column:23}},"122":{start:{line:415,column:8},end:{line:415,column:40}},"123":{start:{line:418,column:8},end:{line:418,column:43}},"124":{start:{line:421,column:22},end:{line:421,column:42}},"125":{start:{line:422,column:8},end:{line:424,column:9}},"126":{start:{line:423,column:12},end:{line:423,column:74}},"127":{start:{line:425,column:21},end:{line:425,column:40}},"128":{start:{line:427,column:8},end:{line:429,column:9}},"129":{start:{line:428,column:12},end:{line:428,column:74}},"130":{start:{line:430,column:8},end:{line:430,column:38}},"131":{start:{line:431,column:16},end:{line:431,column:57}},"132":{start:{line:432,column:19},end:{line:432,column:26}},"133":{start:{line:433,column:20},end:{line:433,column:30}},"134":{start:{line:436,column:8},end:{line:440,column:9}},"135":{start:{line:436,column:19},end:{line:436,column:20}},"136":{start:{line:437,column:12},end:{line:439,column:13}},"137":{start:{line:438,column:16},end:{line:438,column:73}},"138":{start:{line:441,column:20},end:{line:441,column:35}},"139":{start:{line:442,column:8},end:{line:488,column:9}},"140":{start:{line:444,column:16},end:{line:449,column:17}},"141":{start:{line:446,column:20},end:{line:446,column:82}},"142":{start:{line:448,column:20},end:{line:448,column:26}},"143":{start:{line:451,column:16},end:{line:455,column:17}},"144":{start:{line:452,column:20},end:{line:452,column:82}},"145":{start:{line:454,column:20},end:{line:454,column:26}},"146":{start:{line:457,column:16},end:{line:461,column:17}},"147":{start:{line:458,column:20},end:{line:458,column:82}},"148":{start:{line:460,column:20},end:{line:460,column:26}},"149":{start:{line:463,column:16},end:{line:467,column:17}},"150":{start:{line:464,column:20},end:{line:464,column:82}},"151":{start:{line:466,column:20},end:{line:466,column:26}},"152":{start:{line:469,column:16},end:{line:473,column:17}},"153":{start:{line:470,column:20},end:{line:470,column:82}},"154":{start:{line:472,column:20},end:{line:472,column:26}},"155":{start:{line:475,column:16},end:{line:479,column:17}},"156":{start:{line:476,column:20},end:{line:476,column:82}},"157":{start:{line:478,column:20},end:{line:478,column:26}},"158":{start:{line:481,column:16},end:{line:485,column:17}},"159":{start:{line:482,column:20},end:{line:482,column:82}},"160":{start:{line:484,column:20},end:{line:484,column:26}},"161":{start:{line:493,column:15},end:{line:493,column:42}},"162":{start:{line:494,column:8},end:{line:494,column:20}},"163":{start:{line:503,column:23},end:{line:503,column:80}},"164":{start:{line:504,column:20},end:{line:504,column:22}},"165":{start:{line:505,column:8},end:{line:508,column:9}},"166":{start:{line:507,column:12},end:{line:507,column:34}},"167":{start:{line:509,column:8},end:{line:515,column:9}},"168":{start:{line:510,column:12},end:{line:510,column:24}},"169":{start:{line:511,column:14},end:{line:515,column:9}},"170":{start:{line:512,column:12},end:{line:512,column:24}},"171":{start:{line:514,column:12},end:{line:514,column:47}},"172":{start:{line:525,column:23},end:{line:525,column:53}},"173":{start:{line:526,column:8},end:{line:530,column:9}},"174":{start:{line:527,column:12},end:{line:527,column:24}},"175":{start:{line:529,column:12},end:{line:529,column:23}},"176":{start:{line:541,column:23},end:{line:541,column:83}},"177":{start:{line:542,column:20},end:{line:542,column:21}},"178":{start:{line:544,column:8},end:{line:547,column:13}},"179":{start:{line:545,column:12},end:{line:545,column:52}},"180":{start:{line:546,column:12},end:{line:546,column:30}},"181":{start:{line:548,column:8},end:{line:552,column:9}},"182":{start:{line:549,column:12},end:{line:549,column:67}},"183":{start:{line:550,column:14},end:{line:552,column:9}},"184":{start:{line:551,column:12},end:{line:551,column:25}},"185":{start:{line:553,column:8},end:{line:553,column:23}},"186":{start:{line:567,column:23},end:{line:567,column:89}},"187":{start:{line:568,column:20},end:{line:568,column:21}},"188":{start:{line:571,column:8},end:{line:574,column:9}},"189":{start:{line:572,column:12},end:{line:572,column:52}},"190":{start:{line:573,column:12},end:{line:573,column:30}},"191":{start:{line:575,column:8},end:{line:579,column:9}},"192":{start:{line:576,column:12},end:{line:576,column:67}},"193":{start:{line:577,column:14},end:{line:579,column:9}},"194":{start:{line:578,column:12},end:{line:578,column:24}},"195":{start:{line:580,column:8},end:{line:580,column:23}},"196":{start:{line:585,column:21},end:{line:585,column:78}},"197":{start:{line:587,column:8},end:{line:589,column:9}},"198":{start:{line:588,column:12},end:{line:588,column:51}},"199":{start:{line:590,column:8},end:{line:590,column:35}},"200":{start:{line:596,column:17},end:{line:596,column:74}},"201":{start:{line:597,column:16},end:{line:597,column:18}},"202":{start:{line:598,column:8},end:{line:601,column:9}},"203":{start:{line:599,column:12},end:{line:599,column:27}},"204":{start:{line:600,column:12},end:{line:600,column:22}},"205":{start:{line:602,column:29},end:{line:602,column:62}},"206":{start:{line:603,column:8},end:{line:603,column:32}},"207":{start:{line:604,column:8},end:{line:604,column:28}},"208":{start:{line:605,column:8},end:{line:605,column:18}},"209":{start:{line:614,column:21},end:{line:614,column:53}},"210":{start:{line:616,column:8},end:{line:618,column:9}},"211":{start:{line:617,column:12},end:{line:617,column:103}},"212":{start:{line:619,column:8},end:{line:621,column:9}},"213":{start:{line:620,column:12},end:{line:620,column:67}},"214":{start:{line:625,column:24},end:{line:625,column:48}},"215":{start:{line:628,column:20},end:{line:628,column:83}},"216":{start:{line:631,column:34},end:{line:631,column:70}},"217":{start:{line:632,column:8},end:{line:634,column:9}},"218":{start:{line:633,column:12},end:{line:633,column:90}},"219":{start:{line:639,column:18},end:{line:639,column:19}},"220":{start:{line:640,column:20},end:{line:640,column:22}},"221":{start:{line:641,column:20},end:{line:641,column:24}},"222":{start:{line:643,column:38},end:{line:643,column:82}},"223":{start:{line:644,column:29},end:{line:644,column:51}},"224":{start:{line:646,column:23},end:{line:646,column:25}},"225":{start:{line:648,column:28},end:{line:648,column:56}},"226":{start:{line:651,column:22},end:{line:651,column:24}},"227":{start:{line:652,column:20},end:{line:652,column:22}},"228":{start:{line:653,column:22},end:{line:653,column:24}},"229":{start:{line:654,column:29},end:{line:654,column:31}},"230":{start:{line:656,column:34},end:{line:656,column:36}},"231":{start:{line:657,column:25},end:{line:657,column:27}},"232":{start:{line:658,column:33},end:{line:658,column:35}},"233":{start:{line:659,column:33},end:{line:659,column:35}},"234":{start:{line:661,column:31},end:{line:661,column:33}},"235":{start:{line:662,column:59},end:{line:662,column:61}},"236":{start:{line:663,column:36},end:{line:663,column:38}},"237":{start:{line:664,column:36},end:{line:664,column:38}},"238":{start:{line:665,column:69},end:{line:665,column:71}},"239":{start:{line:666,column:48},end:{line:666,column:50}},"240":{start:{line:667,column:37},end:{line:667,column:39}},"241":{start:{line:668,column:30},end:{line:668,column:32}},"242":{start:{line:669,column:29},end:{line:669,column:31}},"243":{start:{line:670,column:33},end:{line:670,column:35}},"244":{start:{line:671,column:25},end:{line:671,column:27}},"245":{start:{line:672,column:33},end:{line:672,column:36}},"246":{start:{line:675,column:41},end:{line:675,column:43}},"247":{start:{line:676,column:45},end:{line:676,column:47}},"248":{start:{line:677,column:30},end:{line:677,column:32}},"249":{start:{line:678,column:35},end:{line:678,column:37}},"250":{start:{line:679,column:34},end:{line:679,column:36}},"251":{start:{line:680,column:39},end:{line:680,column:41}},"252":{start:{line:681,column:43},end:{line:681,column:45}},"253":{start:{line:682,column:33},end:{line:682,column:35}},"254":{start:{line:683,column:43},end:{line:683,column:45}},"255":{start:{line:684,column:44},end:{line:684,column:46}},"256":{start:{line:685,column:32},end:{line:685,column:34}},"257":{start:{line:686,column:42},end:{line:686,column:44}},"258":{start:{line:687,column:35},end:{line:687,column:37}},"259":{start:{line:688,column:33},end:{line:688,column:35}},"260":{start:{line:689,column:37},end:{line:689,column:39}},"261":{start:{line:690,column:34},end:{line:690,column:36}},"262":{start:{line:691,column:39},end:{line:691,column:41}},"263":{start:{line:692,column:51},end:{line:692,column:53}},"264":{start:{line:693,column:35},end:{line:693,column:37}},"265":{start:{line:694,column:36},end:{line:694,column:38}},"266":{start:{line:695,column:49},end:{line:695,column:51}},"267":{start:{line:696,column:44},end:{line:696,column:46}},"268":{start:{line:697,column:37},end:{line:697,column:39}},"269":{start:{line:698,column:38},end:{line:698,column:40}},"270":{start:{line:699,column:41},end:{line:699,column:43}},"271":{start:{line:700,column:51},end:{line:700,column:53}},"272":{start:{line:701,column:34},end:{line:701,column:36}},"273":{start:{line:702,column:30},end:{line:702,column:32}},"274":{start:{line:703,column:38},end:{line:703,column:40}},"275":{start:{line:704,column:42},end:{line:704,column:44}},"276":{start:{line:705,column:34},end:{line:705,column:48}},"277":{start:{line:706,column:38},end:{line:706,column:40}},"278":{start:{line:707,column:24},end:{line:707,column:29}},"279":{start:{line:708,column:33},end:{line:708,column:35}},"280":{start:{line:709,column:34},end:{line:709,column:36}},"281":{start:{line:710,column:36},end:{line:710,column:38}},"282":{start:{line:711,column:37},end:{line:711,column:39}},"283":{start:{line:714,column:18},end:{line:792,column:9}},"284":{start:{line:794,column:28},end:{line:794,column:60}},"285":{start:{line:797,column:8},end:{line:797,column:47}},"286":{start:{line:798,column:8},end:{line:798,column:46}},"287":{start:{line:803,column:8},end:{line:803,column:51}},"288":{start:{line:804,column:8},end:{line:804,column:18}},"289":{start:{line:808,column:22},end:{line:808,column:54}},"290":{start:{line:809,column:22},end:{line:809,column:46}},"291":{start:{line:810,column:23},end:{line:815,column:9}},"292":{start:{line:816,column:28},end:{line:816,column:67}},"293":{start:{line:819,column:8},end:{line:819,column:47}},"294":{start:{line:820,column:8},end:{line:820,column:47}},"295":{start:{line:822,column:8},end:{line:822,column:59}},"296":{start:{line:823,column:8},end:{line:823,column:25}},"297":{start:{line:827,column:22},end:{line:827,column:54}},"298":{start:{line:828,column:23},end:{line:828,column:53}},"299":{start:{line:829,column:8},end:{line:831,column:9}},"300":{start:{line:830,column:12},end:{line:830,column:73}},"301":{start:{line:832,column:18},end:{line:832,column:49}},"302":{start:{line:834,column:8},end:{line:836,column:9}},"303":{start:{line:835,column:12},end:{line:835,column:95}},"304":{start:{line:837,column:8},end:{line:837,column:18}},"305":{start:{line:845,column:22},end:{line:845,column:54}},"306":{start:{line:846,column:23},end:{line:846,column:53}},"307":{start:{line:847,column:8},end:{line:849,column:9}},"308":{start:{line:848,column:12},end:{line:848,column:73}},"309":{start:{line:850,column:18},end:{line:850,column:49}},"310":{start:{line:855,column:8},end:{line:857,column:9}},"311":{start:{line:856,column:12},end:{line:856,column:74}},"312":{start:{line:860,column:8},end:{line:862,column:9}},"313":{start:{line:861,column:12},end:{line:861,column:64}},"314":{start:{line:865,column:8},end:{line:865,column:26}},"315":{start:{line:869,column:8},end:{line:869,column:46}},"316":{start:{line:871,column:28},end:{line:871,column:60}},"317":{start:{line:874,column:8},end:{line:874,column:47}},"318":{start:{line:875,column:8},end:{line:875,column:45}},"319":{start:{line:876,column:8},end:{line:876,column:55}},"320":{start:{line:877,column:8},end:{line:877,column:18}},"321":{start:{line:884,column:24},end:{line:884,column:48}},"322":{start:{line:885,column:23},end:{line:885,column:53}},"323":{start:{line:887,column:8},end:{line:889,column:9}},"324":{start:{line:888,column:12},end:{line:888,column:71}},"325":{start:{line:890,column:18},end:{line:890,column:49}},"326":{start:{line:891,column:22},end:{line:891,column:54}},"327":{start:{line:892,column:8},end:{line:894,column:9}},"328":{start:{line:893,column:9},end:{line:893,column:89}},"329":{start:{line:895,column:8},end:{line:897,column:9}},"330":{start:{line:896,column:12},end:{line:896,column:60}},"331":{start:{line:898,column:8},end:{line:900,column:9}},"332":{start:{line:899,column:12},end:{line:899,column:67}},"333":{start:{line:904,column:27},end:{line:904,column:57}},"334":{start:{line:906,column:8},end:{line:928,column:9}},"335":{start:{line:907,column:12},end:{line:913,column:13}},"336":{start:{line:914,column:12},end:{line:914,column:37}},"337":{start:{line:915,column:12},end:{line:915,column:40}},"338":{start:{line:916,column:12},end:{line:916,column:78}},"339":{start:{line:918,column:12},end:{line:918,column:83}},"340":{start:{line:920,column:12},end:{line:920,column:75}},"341":{start:{line:922,column:12},end:{line:922,column:37}},"342":{start:{line:923,column:12},end:{line:923,column:40}},"343":{start:{line:924,column:12},end:{line:924,column:50}},"344":{start:{line:925,column:12},end:{line:925,column:52}},"345":{start:{line:926,column:12},end:{line:926,column:78}},"346":{start:{line:927,column:12},end:{line:927,column:83}},"347":{start:{line:929,column:24},end:{line:929,column:57}},"348":{start:{line:930,column:8},end:{line:930,column:47}},"349":{start:{line:931,column:8},end:{line:931,column:49}},"350":{start:{line:932,column:8},end:{line:932,column:19}},"351":{start:{line:961,column:30},end:{line:974,column:9}},"352":{start:{line:976,column:21},end:{line:976,column:53}},"353":{start:{line:977,column:23},end:{line:977,column:53}},"354":{start:{line:978,column:8},end:{line:980,column:9}},"355":{start:{line:979,column:12},end:{line:979,column:67}},"356":{start:{line:981,column:18},end:{line:981,column:49}},"357":{start:{line:983,column:8},end:{line:985,column:9}},"358":{start:{line:984,column:12},end:{line:984,column:68}},"359":{start:{line:988,column:8},end:{line:990,column:9}},"360":{start:{line:989,column:12},end:{line:989,column:60}},"361":{start:{line:992,column:8},end:{line:994,column:9}},"362":{start:{line:993,column:12},end:{line:993,column:73}},"363":{start:{line:995,column:23},end:{line:995,column:97}},"364":{start:{line:995,column:56},end:{line:995,column:95}},"365":{start:{line:997,column:8},end:{line:1004,column:9}},"366":{start:{line:998,column:12},end:{line:998,column:86}},"367":{start:{line:1001,column:12},end:{line:1001,column:56}},"368":{start:{line:1002,column:12},end:{line:1002,column:56}},"369":{start:{line:1003,column:12},end:{line:1003,column:50}},"370":{start:{line:1006,column:8},end:{line:1006,column:46}},"371":{start:{line:1007,column:8},end:{line:1007,column:40}},"372":{start:{line:1008,column:8},end:{line:1008,column:42}},"373":{start:{line:1010,column:28},end:{line:1010,column:60}},"374":{start:{line:1011,column:8},end:{line:1011,column:55}},"375":{start:{line:1012,column:8},end:{line:1012,column:54}},"376":{start:{line:1013,column:8},end:{line:1013,column:47}},"377":{start:{line:1014,column:8},end:{line:1014,column:18}},"378":{start:{line:1064,column:20},end:{line:1064,column:52}},"379":{start:{line:1066,column:23},end:{line:1066,column:53}},"380":{start:{line:1067,column:8},end:{line:1069,column:9}},"381":{start:{line:1068,column:12},end:{line:1068,column:68}},"382":{start:{line:1070,column:16},end:{line:1070,column:47}},"383":{start:{line:1072,column:8},end:{line:1074,column:9}},"384":{start:{line:1073,column:12},end:{line:1073,column:74}},"385":{start:{line:1075,column:8},end:{line:1077,column:9}},"386":{start:{line:1076,column:12},end:{line:1076,column:60}},"387":{start:{line:1079,column:21},end:{line:1079,column:50}},"388":{start:{line:1081,column:8},end:{line:1081,column:46}},"389":{start:{line:1085,column:8},end:{line:1087,column:9}},"390":{start:{line:1086,column:12},end:{line:1086,column:37}},"391":{start:{line:1089,column:8},end:{line:1093,column:9}},"392":{start:{line:1090,column:12},end:{line:1090,column:33}},"393":{start:{line:1092,column:12},end:{line:1092,column:34}},"394":{start:{line:1095,column:8},end:{line:1095,column:43}},"395":{start:{line:1096,column:8},end:{line:1096,column:41}},"396":{start:{line:1097,column:8},end:{line:1097,column:43}},"397":{start:{line:1098,column:8},end:{line:1098,column:44}},"398":{start:{line:1099,column:8},end:{line:1099,column:33}},"399":{start:{line:1100,column:25},end:{line:1100,column:57}},"400":{start:{line:1101,column:8},end:{line:1101,column:53}},"401":{start:{line:1102,column:8},end:{line:1102,column:47}},"402":{start:{line:1103,column:8},end:{line:1103,column:45}},"403":{start:{line:1104,column:8},end:{line:1104,column:18}},"404":{start:{line:1112,column:29},end:{line:1112,column:47}},"405":{start:{line:1113,column:29},end:{line:1113,column:49}},"406":{start:{line:1114,column:29},end:{line:1114,column:47}},"407":{start:{line:1116,column:29},end:{line:1116,column:75}},"408":{start:{line:1118,column:29},end:{line:1118,column:98}},"409":{start:{line:1118,column:56},end:{line:1118,column:97}},"410":{start:{line:1119,column:8},end:{line:1119,column:36}},"411":{start:{line:1128,column:22},end:{line:1128,column:54}},"412":{start:{line:1129,column:27},end:{line:1129,column:106}},"413":{start:{line:1130,column:25},end:{line:1130,column:62}},"414":{start:{line:1131,column:8},end:{line:1133,column:9}},"415":{start:{line:1132,column:12},end:{line:1132,column:82}},"416":{start:{line:1134,column:20},end:{line:1134,column:53}},"417":{start:{line:1136,column:8},end:{line:1138,column:9}},"418":{start:{line:1137,column:12},end:{line:1137,column:164}},"419":{start:{line:1141,column:25},end:{line:1141,column:55}},"420":{start:{line:1143,column:8},end:{line:1145,column:9}},"421":{start:{line:1144,column:12},end:{line:1144,column:67}},"422":{start:{line:1147,column:19},end:{line:1147,column:52}},"423":{start:{line:1150,column:8},end:{line:1152,column:9}},"424":{start:{line:1151,column:12},end:{line:1151,column:74}},"425":{start:{line:1153,column:8},end:{line:1155,column:9}},"426":{start:{line:1154,column:12},end:{line:1154,column:72}},"427":{start:{line:1158,column:26},end:{line:1158,column:40}},"428":{start:{line:1159,column:23},end:{line:1159,column:47}},"429":{start:{line:1161,column:35},end:{line:1161,column:88}},"430":{start:{line:1163,column:24},end:{line:1163,column:83}},"431":{start:{line:1167,column:24},end:{line:1167,column:60}},"432":{start:{line:1168,column:8},end:{line:1170,column:9}},"433":{start:{line:1169,column:12},end:{line:1169,column:50}},"434":{start:{line:1174,column:26},end:{line:1187,column:9}},"435":{start:{line:1176,column:29},end:{line:1176,column:88}},"436":{start:{line:1178,column:32},end:{line:1178,column:51}},"437":{start:{line:1179,column:16},end:{line:1179,column:32}},"438":{start:{line:1182,column:26},end:{line:1182,column:88}},"439":{start:{line:1182,column:72},end:{line:1182,column:85}},"440":{start:{line:1183,column:29},end:{line:1183,column:137}},"441":{start:{line:1184,column:32},end:{line:1184,column:51}},"442":{start:{line:1185,column:16},end:{line:1185,column:32}},"443":{start:{line:1189,column:8},end:{line:1191,column:9}},"444":{start:{line:1190,column:12},end:{line:1190,column:63}},"445":{start:{line:1197,column:8},end:{line:1202,column:9}},"446":{start:{line:1198,column:12},end:{line:1198,column:118}},"447":{start:{line:1201,column:12},end:{line:1201,column:172}},"448":{start:{line:1204,column:21},end:{line:1204,column:36}},"449":{start:{line:1206,column:22},end:{line:1206,column:34}},"450":{start:{line:1207,column:22},end:{line:1207,column:52}},"451":{start:{line:1208,column:8},end:{line:1210,column:9}},"452":{start:{line:1209,column:12},end:{line:1209,column:111}},"453":{start:{line:1212,column:8},end:{line:1212,column:48}},"454":{start:{line:1213,column:8},end:{line:1213,column:46}},"455":{start:{line:1214,column:8},end:{line:1214,column:45}},"456":{start:{line:1215,column:8},end:{line:1215,column:44}},"457":{start:{line:1216,column:8},end:{line:1216,column:34}},"458":{start:{line:1222,column:30},end:{line:1222,column:70}},"459":{start:{line:1223,column:8},end:{line:1226,column:9}},"460":{start:{line:1225,column:12},end:{line:1225,column:31}},"461":{start:{line:1228,column:26},end:{line:1228,column:69}},"462":{start:{line:1238,column:8},end:{line:1244,column:9}},"463":{start:{line:1239,column:12},end:{line:1239,column:77}},"464":{start:{line:1243,column:12},end:{line:1243,column:111}},"465":{start:{line:1250,column:8},end:{line:1250,column:79}},"466":{start:{line:1251,column:8},end:{line:1251,column:18}},"467":{start:{line:1269,column:25},end:{line:1269,column:57}},"468":{start:{line:1270,column:8},end:{line:1272,column:9}},"469":{start:{line:1271,column:12},end:{line:1271,column:77}},"470":{start:{line:1273,column:20},end:{line:1273,column:53}},"471":{start:{line:1275,column:22},end:{line:1275,column:41}},"472":{start:{line:1278,column:21},end:{line:1278,column:47}},"473":{start:{line:1279,column:24},end:{line:1279,column:48}},"474":{start:{line:1281,column:19},end:{line:1281,column:93}},"475":{start:{line:1282,column:19},end:{line:1282,column:97}},"476":{start:{line:1284,column:8},end:{line:1284,column:19}},"477":{start:{line:1285,column:20},end:{line:1294,column:9}},"478":{start:{line:1295,column:8},end:{line:1295,column:20}},"479":{start:{line:1296,column:20},end:{line:1305,column:9}},"480":{start:{line:1307,column:18},end:{line:1307,column:20}},"481":{start:{line:1308,column:8},end:{line:1308,column:45}},"482":{start:{line:1309,column:8},end:{line:1309,column:77}},"483":{start:{line:1310,column:8},end:{line:1317,column:9}},"484":{start:{line:1311,column:12},end:{line:1311,column:81}},"485":{start:{line:1312,column:12},end:{line:1312,column:31}},"486":{start:{line:1313,column:12},end:{line:1313,column:24}},"487":{start:{line:1315,column:12},end:{line:1315,column:25}},"488":{start:{line:1316,column:12},end:{line:1316,column:24}},"489":{start:{line:1323,column:25},end:{line:1323,column:57}},"490":{start:{line:1324,column:8},end:{line:1326,column:9}},"491":{start:{line:1325,column:12},end:{line:1325,column:77}},"492":{start:{line:1327,column:20},end:{line:1327,column:53}},"493":{start:{line:1329,column:22},end:{line:1329,column:41}},"494":{start:{line:1334,column:21},end:{line:1334,column:47}},"495":{start:{line:1335,column:24},end:{line:1335,column:48}},"496":{start:{line:1337,column:19},end:{line:1337,column:93}},"497":{start:{line:1338,column:19},end:{line:1338,column:97}},"498":{start:{line:1340,column:8},end:{line:1340,column:19}},"499":{start:{line:1341,column:20},end:{line:1350,column:9}},"500":{start:{line:1352,column:8},end:{line:1352,column:20}},"501":{start:{line:1353,column:20},end:{line:1362,column:9}},"502":{start:{line:1363,column:8},end:{line:1363,column:20}},"503":{start:{line:1364,column:20},end:{line:1373,column:9}},"504":{start:{line:1376,column:18},end:{line:1376,column:20}},"505":{start:{line:1377,column:8},end:{line:1377,column:45}},"506":{start:{line:1378,column:8},end:{line:1378,column:77}},"507":{start:{line:1379,column:8},end:{line:1379,column:77}},"508":{start:{line:1380,column:8},end:{line:1387,column:9}},"509":{start:{line:1381,column:12},end:{line:1381,column:81}},"510":{start:{line:1382,column:12},end:{line:1382,column:37}},"511":{start:{line:1383,column:12},end:{line:1383,column:24}},"512":{start:{line:1385,column:12},end:{line:1385,column:31}},"513":{start:{line:1386,column:12},end:{line:1386,column:24}},"514":{start:{line:1438,column:8},end:{line:1438,column:41}},"515":{start:{line:1442,column:8},end:{line:1442,column:43}},"516":{start:{line:1447,column:23},end:{line:1447,column:82}},"517":{start:{line:1448,column:20},end:{line:1448,column:21}},"518":{start:{line:1451,column:8},end:{line:1454,column:13}},"519":{start:{line:1452,column:12},end:{line:1452,column:52}},"520":{start:{line:1453,column:12},end:{line:1453,column:30}},"521":{start:{line:1455,column:8},end:{line:1459,column:9}},"522":{start:{line:1456,column:12},end:{line:1456,column:67}},"523":{start:{line:1457,column:14},end:{line:1459,column:9}},"524":{start:{line:1458,column:12},end:{line:1458,column:24}},"525":{start:{line:1460,column:8},end:{line:1460,column:23}},"526":{start:{line:1465,column:22},end:{line:1465,column:36}},"527":{start:{line:1466,column:8},end:{line:1468,column:9}},"528":{start:{line:1467,column:12},end:{line:1467,column:100}},"529":{start:{line:1469,column:21},end:{line:1469,column:40}},"530":{start:{line:1470,column:8},end:{line:1472,column:9}},"531":{start:{line:1471,column:12},end:{line:1471,column:74}},"532":{start:{line:1473,column:8},end:{line:1473,column:38}},"533":{start:{line:1474,column:16},end:{line:1474,column:57}},"534":{start:{line:1475,column:19},end:{line:1475,column:26}},"535":{start:{line:1476,column:19},end:{line:1476,column:29}},"536":{start:{line:1477,column:8},end:{line:1481,column:9}},"537":{start:{line:1477,column:19},end:{line:1477,column:20}},"538":{start:{line:1478,column:12},end:{line:1480,column:13}},"539":{start:{line:1479,column:16},end:{line:1479,column:73}},"540":{start:{line:1482,column:8},end:{line:1537,column:9}},"541":{start:{line:1484,column:16},end:{line:1488,column:17}},"542":{start:{line:1485,column:20},end:{line:1485,column:108}},"543":{start:{line:1487,column:20},end:{line:1487,column:26}},"544":{start:{line:1490,column:16},end:{line:1494,column:17}},"545":{start:{line:1491,column:20},end:{line:1491,column:108}},"546":{start:{line:1493,column:20},end:{line:1493,column:26}},"547":{start:{line:1496,column:16},end:{line:1500,column:17}},"548":{start:{line:1497,column:20},end:{line:1497,column:108}},"549":{start:{line:1499,column:20},end:{line:1499,column:26}},"550":{start:{line:1502,column:16},end:{line:1506,column:17}},"551":{start:{line:1503,column:20},end:{line:1503,column:108}},"552":{start:{line:1505,column:20},end:{line:1505,column:26}},"553":{start:{line:1508,column:16},end:{line:1512,column:17}},"554":{start:{line:1509,column:20},end:{line:1509,column:108}},"555":{start:{line:1511,column:20},end:{line:1511,column:26}},"556":{start:{line:1514,column:16},end:{line:1518,column:17}},"557":{start:{line:1515,column:20},end:{line:1515,column:108}},"558":{start:{line:1517,column:20},end:{line:1517,column:26}},"559":{start:{line:1520,column:16},end:{line:1524,column:17}},"560":{start:{line:1521,column:20},end:{line:1521,column:108}},"561":{start:{line:1523,column:20},end:{line:1523,column:26}},"562":{start:{line:1526,column:16},end:{line:1530,column:17}},"563":{start:{line:1527,column:20},end:{line:1527,column:108}},"564":{start:{line:1529,column:20},end:{line:1529,column:26}},"565":{start:{line:1532,column:16},end:{line:1536,column:17}},"566":{start:{line:1533,column:20},end:{line:1533,column:108}},"567":{start:{line:1535,column:20},end:{line:1535,column:26}},"568":{start:{line:1541,column:18},end:{line:1541,column:45}},"569":{start:{line:1542,column:8},end:{line:1542,column:20}},"570":{start:{line:1551,column:23},end:{line:1551,column:80}},"571":{start:{line:1552,column:20},end:{line:1552,column:22}},"572":{start:{line:1553,column:8},end:{line:1556,column:9}},"573":{start:{line:1555,column:12},end:{line:1555,column:34}},"574":{start:{line:1557,column:8},end:{line:1563,column:9}},"575":{start:{line:1558,column:12},end:{line:1558,column:24}},"576":{start:{line:1559,column:14},end:{line:1563,column:9}},"577":{start:{line:1560,column:12},end:{line:1560,column:24}},"578":{start:{line:1562,column:12},end:{line:1562,column:47}},"579":{start:{line:1574,column:24},end:{line:1574,column:84}},"580":{start:{line:1575,column:20},end:{line:1575,column:21}},"581":{start:{line:1578,column:16},end:{line:1578,column:18}},"582":{start:{line:1579,column:8},end:{line:1582,column:9}},"583":{start:{line:1580,column:12},end:{line:1580,column:52}},"584":{start:{line:1581,column:12},end:{line:1581,column:30}},"585":{start:{line:1584,column:8},end:{line:1595,column:9}},"586":{start:{line:1585,column:12},end:{line:1585,column:26}},"587":{start:{line:1586,column:12},end:{line:1586,column:32}},"588":{start:{line:1587,column:12},end:{line:1587,column:29}},"589":{start:{line:1588,column:12},end:{line:1588,column:23}},"590":{start:{line:1589,column:14},end:{line:1595,column:9}},"591":{start:{line:1590,column:12},end:{line:1590,column:28}},"592":{start:{line:1591,column:12},end:{line:1591,column:32}},"593":{start:{line:1592,column:12},end:{line:1592,column:23}},"594":{start:{line:1594,column:12},end:{line:1594,column:67}},"595":{start:{line:1599,column:17},end:{line:1599,column:76}},"596":{start:{line:1600,column:8},end:{line:1602,column:9}},"597":{start:{line:1601,column:12},end:{line:1601,column:74}},"598":{start:{line:1603,column:8},end:{line:1603,column:22}},"599":{start:{line:1622,column:21},end:{line:1622,column:53}},"600":{start:{line:1624,column:24},end:{line:1624,column:48}},"601":{start:{line:1625,column:24},end:{line:1625,column:90}},"602":{start:{line:1627,column:18},end:{line:1635,column:9}},"603":{start:{line:1637,column:28},end:{line:1637,column:62}},"604":{start:{line:1638,column:8},end:{line:1638,column:55}},"605":{start:{line:1639,column:8},end:{line:1639,column:51}},"606":{start:{line:1640,column:8},end:{line:1640,column:47}},"607":{start:{line:1641,column:8},end:{line:1641,column:20}},"608":{start:{line:1645,column:21},end:{line:1645,column:79}},"609":{start:{line:1647,column:20},end:{line:1647,column:22}},"610":{start:{line:1648,column:8},end:{line:1650,column:9}},"611":{start:{line:1649,column:12},end:{line:1649,column:58}},"612":{start:{line:1651,column:8},end:{line:1651,column:22}},"613":{start:{line:1664,column:21},end:{line:1664,column:53}},"614":{start:{line:1666,column:24},end:{line:1666,column:48}},"615":{start:{line:1667,column:24},end:{line:1667,column:91}},"616":{start:{line:1669,column:18},end:{line:1677,column:9}},"617":{start:{line:1678,column:28},end:{line:1678,column:62}},"618":{start:{line:1679,column:8},end:{line:1679,column:55}},"619":{start:{line:1680,column:8},end:{line:1680,column:52}},"620":{start:{line:1681,column:8},end:{line:1681,column:47}},"621":{start:{line:1682,column:8},end:{line:1682,column:20}},"622":{start:{line:1686,column:21},end:{line:1686,column:80}},"623":{start:{line:1688,column:20},end:{line:1688,column:22}},"624":{start:{line:1689,column:8},end:{line:1691,column:9}},"625":{start:{line:1690,column:12},end:{line:1690,column:58}},"626":{start:{line:1692,column:8},end:{line:1692,column:22}},"627":{start:{line:1696,column:21},end:{line:1696,column:80}},"628":{start:{line:1698,column:20},end:{line:1698,column:22}},"629":{start:{line:1699,column:8},end:{line:1701,column:9}},"630":{start:{line:1700,column:12},end:{line:1700,column:58}},"631":{start:{line:1702,column:8},end:{line:1702,column:22}},"632":{start:{line:1714,column:21},end:{line:1714,column:53}},"633":{start:{line:1716,column:30},end:{line:1716,column:67}},"634":{start:{line:1717,column:8},end:{line:1719,column:9}},"635":{start:{line:1718,column:12},end:{line:1718,column:86}},"636":{start:{line:1720,column:25},end:{line:1720,column:63}},"637":{start:{line:1722,column:8},end:{line:1724,column:9}},"638":{start:{line:1723,column:12},end:{line:1723,column:99}},"639":{start:{line:1732,column:23},end:{line:1732,column:95}},"640":{start:{line:1733,column:25},end:{line:1733,column:65}},"641":{start:{line:1734,column:8},end:{line:1736,column:9}},"642":{start:{line:1735,column:12},end:{line:1735,column:85}},"643":{start:{line:1737,column:22},end:{line:1737,column:55}},"644":{start:{line:1739,column:8},end:{line:1741,column:9}},"645":{start:{line:1740,column:12},end:{line:1740,column:63}},"646":{start:{line:1744,column:8},end:{line:1746,column:9}},"647":{start:{line:1745,column:12},end:{line:1745,column:103}},"648":{start:{line:1749,column:8},end:{line:1749,column:33}},"649":{start:{line:1752,column:31},end:{line:1752,column:69}},"650":{start:{line:1753,column:8},end:{line:1755,column:9}},"651":{start:{line:1754,column:12},end:{line:1754,column:79}},"652":{start:{line:1756,column:24},end:{line:1756,column:63}},"653":{start:{line:1757,column:8},end:{line:1759,column:9}},"654":{start:{line:1758,column:12},end:{line:1758,column:61}},"655":{start:{line:1761,column:8},end:{line:1761,column:45}},"656":{start:{line:1763,column:17},end:{line:1763,column:41}},"657":{start:{line:1765,column:22},end:{line:1770,column:9}},"658":{start:{line:1771,column:25},end:{line:1771,column:39}},"659":{start:{line:1772,column:27},end:{line:1772,column:63}},"660":{start:{line:1773,column:8},end:{line:1773,column:55}},"661":{start:{line:1774,column:8},end:{line:1774,column:51}},"662":{start:{line:1775,column:8},end:{line:1775,column:50}},"663":{start:{line:1776,column:8},end:{line:1776,column:50}},"664":{start:{line:1777,column:8},end:{line:1777,column:47}},"665":{start:{line:1778,column:8},end:{line:1778,column:24}},"666":{start:{line:1783,column:25},end:{line:1783,column:57}},"667":{start:{line:1784,column:8},end:{line:1786,column:9}},"668":{start:{line:1785,column:12},end:{line:1785,column:93}},"669":{start:{line:1787,column:20},end:{line:1787,column:53}},"670":{start:{line:1789,column:28},end:{line:1789,column:63}},"671":{start:{line:1790,column:8},end:{line:1792,column:9}},"672":{start:{line:1791,column:12},end:{line:1791,column:95}},"673":{start:{line:1793,column:23},end:{line:1793,column:59}},"674":{start:{line:1795,column:8},end:{line:1797,column:9}},"675":{start:{line:1796,column:12},end:{line:1796,column:75}},"676":{start:{line:1799,column:24},end:{line:1799,column:48}},"677":{start:{line:1802,column:19},end:{line:1802,column:98}},"678":{start:{line:1803,column:19},end:{line:1803,column:101}},"679":{start:{line:1804,column:27},end:{line:1804,column:92}},"680":{start:{line:1807,column:28},end:{line:1807,column:57}},"681":{start:{line:1813,column:8},end:{line:1813,column:20}},"682":{start:{line:1814,column:8},end:{line:1823,column:10}},"683":{start:{line:1824,column:8},end:{line:1824,column:20}},"684":{start:{line:1825,column:8},end:{line:1833,column:10}},"685":{start:{line:1835,column:8},end:{line:1835,column:37}},"686":{start:{line:1836,column:8},end:{line:1836,column:35}},"687":{start:{line:1838,column:8},end:{line:1838,column:44}},"688":{start:{line:1839,column:8},end:{line:1839,column:47}},"689":{start:{line:1841,column:8},end:{line:1841,column:77}},"690":{start:{line:1842,column:8},end:{line:1842,column:87}},"691":{start:{line:1843,column:8},end:{line:1845,column:9}},"692":{start:{line:1844,column:12},end:{line:1844,column:81}},"693":{start:{line:1858,column:22},end:{line:1858,column:54}},"694":{start:{line:1859,column:25},end:{line:1859,column:63}},"695":{start:{line:1860,column:8},end:{line:1862,column:9}},"696":{start:{line:1861,column:12},end:{line:1861,column:59}},"697":{start:{line:1863,column:20},end:{line:1863,column:53}},"698":{start:{line:1866,column:23},end:{line:1866,column:75}},"699":{start:{line:1867,column:24},end:{line:1867,column:56}},"700":{start:{line:1868,column:8},end:{line:1870,column:9}},"701":{start:{line:1869,column:12},end:{line:1869,column:94}},"702":{start:{line:1872,column:8},end:{line:1875,column:9}},"703":{start:{line:1874,column:12},end:{line:1874,column:73}},"704":{start:{line:1876,column:19},end:{line:1876,column:51}},"705":{start:{line:1877,column:8},end:{line:1880,column:9}},"706":{start:{line:1879,column:12},end:{line:1879,column:74}},"707":{start:{line:1881,column:8},end:{line:1883,column:9}},"708":{start:{line:1882,column:12},end:{line:1882,column:81}},"709":{start:{line:1885,column:8},end:{line:1885,column:40}},"710":{start:{line:1886,column:8},end:{line:1888,column:9}},"711":{start:{line:1887,column:12},end:{line:1887,column:75}},"712":{start:{line:1890,column:8},end:{line:1890,column:78}},"713":{start:{line:1892,column:8},end:{line:1892,column:50}},"714":{start:{line:1900,column:22},end:{line:1900,column:54}},"715":{start:{line:1901,column:24},end:{line:1901,column:55}},"716":{start:{line:1902,column:8},end:{line:1904,column:9}},"717":{start:{line:1903,column:12},end:{line:1903,column:83}},"718":{start:{line:1905,column:18},end:{line:1905,column:70}},"719":{start:{line:1906,column:20},end:{line:1911,column:9}},"720":{start:{line:1912,column:28},end:{line:1912,column:62}},"721":{start:{line:1913,column:8},end:{line:1913,column:50}},"722":{start:{line:1914,column:8},end:{line:1914,column:20}},"723":{start:{line:1920,column:22},end:{line:1920,column:54}},"724":{start:{line:1922,column:27},end:{line:1922,column:60}},"725":{start:{line:1923,column:8},end:{line:1925,column:9}},"726":{start:{line:1924,column:12},end:{line:1924,column:58}},"727":{start:{line:1926,column:21},end:{line:1926,column:55}},"728":{start:{line:1927,column:21},end:{line:1927,column:36}},"729":{start:{line:1928,column:24},end:{line:1928,column:55}},"730":{start:{line:1929,column:8},end:{line:1931,column:9}},"731":{start:{line:1930,column:12},end:{line:1930,column:81}},"732":{start:{line:1932,column:19},end:{line:1932,column:51}},"733":{start:{line:1933,column:8},end:{line:1935,column:9}},"734":{start:{line:1934,column:12},end:{line:1934,column:67}},"735":{start:{line:1939,column:24},end:{line:1939,column:48}},"736":{start:{line:1940,column:18},end:{line:1940,column:83}},"737":{start:{line:1942,column:23},end:{line:1948,column:9}},"738":{start:{line:1950,column:21},end:{line:1950,column:25}},"739":{start:{line:1951,column:21},end:{line:1951,column:31}},"740":{start:{line:1956,column:24},end:{line:1972,column:9}},"741":{start:{line:1973,column:24},end:{line:1973,column:62}},"742":{start:{line:1974,column:8},end:{line:1974,column:53}},"743":{start:{line:1975,column:8},end:{line:1975,column:43}},"744":{start:{line:1976,column:8},end:{line:1976,column:82}},"745":{start:{line:1977,column:8},end:{line:1977,column:48}},"746":{start:{line:1978,column:8},end:{line:1978,column:47}},"747":{start:{line:1979,column:8},end:{line:1979,column:27}},"748":{start:{line:1992,column:8},end:{line:1992,column:46}},"749":{start:{line:1996,column:8},end:{line:1996,column:43}},"750":{start:{line:2001,column:22},end:{line:2001,column:36}},"751":{start:{line:2002,column:8},end:{line:2004,column:9}},"752":{start:{line:2003,column:12},end:{line:2003,column:100}},"753":{start:{line:2005,column:21},end:{line:2005,column:40}},"754":{start:{line:2007,column:8},end:{line:2009,column:9}},"755":{start:{line:2008,column:12},end:{line:2008,column:74}},"756":{start:{line:2010,column:8},end:{line:2010,column:38}},"757":{start:{line:2011,column:16},end:{line:2011,column:51}},"758":{start:{line:2012,column:19},end:{line:2012,column:26}},"759":{start:{line:2013,column:19},end:{line:2013,column:29}},"760":{start:{line:2014,column:8},end:{line:2018,column:9}},"761":{start:{line:2014,column:19},end:{line:2014,column:20}},"762":{start:{line:2015,column:12},end:{line:2017,column:13}},"763":{start:{line:2016,column:16},end:{line:2016,column:92}},"764":{start:{line:2020,column:8},end:{line:2077,column:9}},"765":{start:{line:2022,column:16},end:{line:2026,column:17}},"766":{start:{line:2023,column:20},end:{line:2023,column:108}},"767":{start:{line:2025,column:20},end:{line:2025,column:26}},"768":{start:{line:2028,column:16},end:{line:2032,column:17}},"769":{start:{line:2029,column:20},end:{line:2029,column:108}},"770":{start:{line:2031,column:20},end:{line:2031,column:26}},"771":{start:{line:2034,column:16},end:{line:2038,column:17}},"772":{start:{line:2035,column:20},end:{line:2035,column:108}},"773":{start:{line:2037,column:20},end:{line:2037,column:26}},"774":{start:{line:2040,column:16},end:{line:2044,column:17}},"775":{start:{line:2041,column:20},end:{line:2041,column:108}},"776":{start:{line:2043,column:20},end:{line:2043,column:26}},"777":{start:{line:2052,column:16},end:{line:2056,column:17}},"778":{start:{line:2053,column:20},end:{line:2053,column:108}},"779":{start:{line:2055,column:20},end:{line:2055,column:26}},"780":{start:{line:2070,column:16},end:{line:2074,column:17}},"781":{start:{line:2071,column:20},end:{line:2071,column:108}},"782":{start:{line:2073,column:20},end:{line:2073,column:26}},"783":{start:{line:2081,column:18},end:{line:2081,column:45}},"784":{start:{line:2082,column:8},end:{line:2082,column:20}},"785":{start:{line:2088,column:23},end:{line:2088,column:82}},"786":{start:{line:2089,column:20},end:{line:2089,column:21}},"787":{start:{line:2092,column:8},end:{line:2095,column:13}},"788":{start:{line:2093,column:12},end:{line:2093,column:52}},"789":{start:{line:2094,column:12},end:{line:2094,column:30}},"790":{start:{line:2096,column:8},end:{line:2100,column:9}},"791":{start:{line:2097,column:12},end:{line:2097,column:89}},"792":{start:{line:2098,column:14},end:{line:2100,column:9}},"793":{start:{line:2099,column:12},end:{line:2099,column:24}},"794":{start:{line:2101,column:8},end:{line:2101,column:23}},"795":{start:{line:2106,column:24},end:{line:2106,column:48}},"796":{start:{line:2108,column:19},end:{line:2108,column:84}},"797":{start:{line:2110,column:8},end:{line:2112,column:9}},"798":{start:{line:2111,column:12},end:{line:2111,column:44}},"799":{start:{line:2114,column:19},end:{line:2114,column:23}},"800":{start:{line:2115,column:24},end:{line:2131,column:9}},"801":{start:{line:2133,column:30},end:{line:2133,column:68}},"802":{start:{line:2134,column:8},end:{line:2134,column:54}},"803":{start:{line:2135,column:8},end:{line:2135,column:24}},"804":{start:{line:2140,column:22},end:{line:2140,column:54}},"805":{start:{line:2141,column:23},end:{line:2141,column:89}},"806":{start:{line:2143,column:23},end:{line:2143,column:25}},"807":{start:{line:2144,column:20},end:{line:2144,column:21}},"808":{start:{line:2147,column:8},end:{line:2157,column:9}},"809":{start:{line:2148,column:12},end:{line:2148,column:53}},"810":{start:{line:2149,column:12},end:{line:2149,column:32}},"811":{start:{line:2150,column:12},end:{line:2153,column:13}},"812":{start:{line:2151,column:16},end:{line:2151,column:42}},"813":{start:{line:2152,column:16},end:{line:2152,column:39}},"814":{start:{line:2154,column:12},end:{line:2156,column:13}},"815":{start:{line:2155,column:16},end:{line:2155,column:21}},"816":{start:{line:2159,column:8},end:{line:2162,column:9}},"817":{start:{line:2160,column:12},end:{line:2160,column:59}},"818":{start:{line:2163,column:16},end:{line:2163,column:73}},"819":{start:{line:2164,column:8},end:{line:2164,column:18}},"820":{start:{line:2182,column:27},end:{line:2182,column:44}},"821":{start:{line:2184,column:18},end:{line:2184,column:19}},"822":{start:{line:2185,column:8},end:{line:2193,column:9}},"823":{start:{line:2185,column:18},end:{line:2185,column:19}},"824":{start:{line:2186,column:12},end:{line:2189,column:13}},"825":{start:{line:2187,column:16},end:{line:2187,column:24}},"826":{start:{line:2188,column:16},end:{line:2188,column:30}},"827":{start:{line:2190,column:12},end:{line:2192,column:13}},"828":{start:{line:2191,column:16},end:{line:2191,column:79}},"829":{start:{line:2195,column:8},end:{line:2197,column:9}},"830":{start:{line:2196,column:12},end:{line:2196,column:45}},"831":{start:{line:2199,column:8},end:{line:2199,column:34}},"832":{start:{line:2200,column:8},end:{line:2202,column:9}},"833":{start:{line:2201,column:12},end:{line:2201,column:64}},"834":{start:{line:2204,column:8},end:{line:2204,column:19}},"835":{start:{line:2215,column:22},end:{line:2215,column:54}},"836":{start:{line:2216,column:25},end:{line:2216,column:57}},"837":{start:{line:2217,column:8},end:{line:2219,column:9}},"838":{start:{line:2218,column:12},end:{line:2218,column:93}},"839":{start:{line:2220,column:20},end:{line:2220,column:53}},"840":{start:{line:2222,column:8},end:{line:2224,column:9}},"841":{start:{line:2223,column:12},end:{line:2223,column:99}},"842":{start:{line:2229,column:8},end:{line:2231,column:9}},"843":{start:{line:2230,column:12},end:{line:2230,column:71}},"844":{start:{line:2233,column:22},end:{line:2233,column:41}},"845":{start:{line:2235,column:24},end:{line:2235,column:48}},"846":{start:{line:2236,column:19},end:{line:2236,column:93}},"847":{start:{line:2237,column:19},end:{line:2237,column:93}},"848":{start:{line:2240,column:8},end:{line:2240,column:19}},"849":{start:{line:2241,column:20},end:{line:2249,column:9}},"850":{start:{line:2250,column:8},end:{line:2250,column:20}},"851":{start:{line:2251,column:20},end:{line:2259,column:9}},"852":{start:{line:2261,column:8},end:{line:2261,column:45}},"853":{start:{line:2262,column:8},end:{line:2262,column:77}},"854":{start:{line:2263,column:8},end:{line:2265,column:9}},"855":{start:{line:2264,column:12},end:{line:2264,column:81}},"856":{start:{line:2267,column:8},end:{line:2267,column:23}},"857":{start:{line:2272,column:22},end:{line:2272,column:54}},"858":{start:{line:2273,column:24},end:{line:2273,column:55}},"859":{start:{line:2274,column:8},end:{line:2276,column:9}},"860":{start:{line:2275,column:12},end:{line:2275,column:91}},"861":{start:{line:2277,column:19},end:{line:2277,column:57}},"862":{start:{line:2279,column:8},end:{line:2281,column:9}},"863":{start:{line:2280,column:12},end:{line:2280,column:104}},"864":{start:{line:2282,column:8},end:{line:2284,column:9}},"865":{start:{line:2283,column:12},end:{line:2283,column:80}},"866":{start:{line:2286,column:22},end:{line:2286,column:40}},"867":{start:{line:2288,column:24},end:{line:2288,column:42}},"868":{start:{line:2289,column:19},end:{line:2289,column:88}},"869":{start:{line:2291,column:8},end:{line:2291,column:19}},"870":{start:{line:2292,column:8},end:{line:2292,column:27}},"871":{start:{line:2294,column:20},end:{line:2310,column:9}},"872":{start:{line:2312,column:8},end:{line:2339,column:9}},"873":{start:{line:2313,column:23},end:{line:2313,column:88}},"874":{start:{line:2314,column:12},end:{line:2314,column:24}},"875":{start:{line:2315,column:12},end:{line:2315,column:31}},"876":{start:{line:2316,column:24},end:{line:2332,column:13}},"877":{start:{line:2333,column:12},end:{line:2333,column:48}},"878":{start:{line:2334,column:12},end:{line:2334,column:79}},"879":{start:{line:2335,column:12},end:{line:2335,column:79}},"880":{start:{line:2337,column:12},end:{line:2337,column:48}},"881":{start:{line:2338,column:12},end:{line:2338,column:79}},"882":{start:{line:2340,column:8},end:{line:2340,column:23}},"883":{start:{line:2346,column:8},end:{line:2346,column:217}},"884":{start:{line:2346,column:39},end:{line:2346,column:215}},"885":{start:{line:2347,column:8},end:{line:2347,column:120}},"886":{start:{line:2347,column:39},end:{line:2347,column:118}},"887":{start:{line:2348,column:8},end:{line:2348,column:115}},"888":{start:{line:2348,column:39},end:{line:2348,column:113}},"889":{start:{line:2349,column:8},end:{line:2349,column:25}},"890":{start:{line:2355,column:8},end:{line:2355,column:217}},"891":{start:{line:2355,column:39},end:{line:2355,column:215}},"892":{start:{line:2356,column:8},end:{line:2356,column:120}},"893":{start:{line:2356,column:39},end:{line:2356,column:118}},"894":{start:{line:2357,column:8},end:{line:2357,column:115}},"895":{start:{line:2357,column:39},end:{line:2357,column:113}},"896":{start:{line:2358,column:8},end:{line:2358,column:25}},"897":{start:{line:2369,column:19},end:{line:2369,column:51}},"898":{start:{line:2371,column:27},end:{line:2371,column:68}},"899":{start:{line:2372,column:8},end:{line:2374,column:9}},"900":{start:{line:2373,column:12},end:{line:2373,column:36}},"901":{start:{line:2376,column:22},end:{line:2376,column:59}},"902":{start:{line:2377,column:20},end:{line:2377,column:36}},"903":{start:{line:2380,column:21},end:{line:2380,column:23}},"904":{start:{line:2381,column:23},end:{line:2381,column:25}},"905":{start:{line:2382,column:24},end:{line:2382,column:26}},"906":{start:{line:2383,column:33},end:{line:2383,column:35}},"907":{start:{line:2384,column:33},end:{line:2384,column:35}},"908":{start:{line:2385,column:33},end:{line:2385,column:35}},"909":{start:{line:2386,column:18},end:{line:2386,column:19}},"910":{start:{line:2387,column:28},end:{line:2387,column:30}},"911":{start:{line:2388,column:19},end:{line:2388,column:20}},"912":{start:{line:2391,column:26},end:{line:2391,column:50}},"913":{start:{line:2393,column:28},end:{line:2409,column:9}},"914":{start:{line:2411,column:17},end:{line:2411,column:29}},"915":{start:{line:2412,column:17},end:{line:2412,column:29}},"916":{start:{line:2414,column:8},end:{line:2477,column:9}},"917":{start:{line:2414,column:19},end:{line:2414,column:20}},"918":{start:{line:2415,column:28},end:{line:2415,column:48}},"919":{start:{line:2416,column:35},end:{line:2416,column:61}},"920":{start:{line:2417,column:12},end:{line:2420,column:13}},"921":{start:{line:2419,column:16},end:{line:2419,column:40}},"922":{start:{line:2425,column:27},end:{line:2425,column:63}},"923":{start:{line:2432,column:12},end:{line:2432,column:52}},"924":{start:{line:2434,column:31},end:{line:2434,column:42}},"925":{start:{line:2436,column:12},end:{line:2451,column:13}},"926":{start:{line:2438,column:16},end:{line:2438,column:50}},"927":{start:{line:2439,column:16},end:{line:2439,column:55}},"928":{start:{line:2440,column:16},end:{line:2440,column:58}},"929":{start:{line:2441,column:16},end:{line:2441,column:79}},"930":{start:{line:2442,column:16},end:{line:2442,column:64}},"931":{start:{line:2447,column:16},end:{line:2447,column:84}},"932":{start:{line:2448,column:16},end:{line:2448,column:87}},"933":{start:{line:2449,column:16},end:{line:2449,column:108}},"934":{start:{line:2450,column:16},end:{line:2450,column:93}},"935":{start:{line:2453,column:12},end:{line:2453,column:39}},"936":{start:{line:2454,column:12},end:{line:2454,column:32}},"937":{start:{line:2456,column:12},end:{line:2458,column:13}},"938":{start:{line:2457,column:16},end:{line:2457,column:40}},"939":{start:{line:2459,column:12},end:{line:2475,column:13}},"940":{start:{line:2461,column:16},end:{line:2461,column:52}},"941":{start:{line:2462,column:26},end:{line:2462,column:77}},"942":{start:{line:2462,column:51},end:{line:2462,column:76}},"943":{start:{line:2463,column:16},end:{line:2463,column:38}},"944":{start:{line:2467,column:26},end:{line:2467,column:59}},"945":{start:{line:2467,column:51},end:{line:2467,column:58}},"946":{start:{line:2468,column:16},end:{line:2468,column:47}},"947":{start:{line:2470,column:16},end:{line:2470,column:42}},"948":{start:{line:2471,column:16},end:{line:2471,column:87}},"949":{start:{line:2472,column:16},end:{line:2472,column:53}},"950":{start:{line:2473,column:16},end:{line:2473,column:38}},"951":{start:{line:2476,column:12},end:{line:2476,column:38}},"952":{start:{line:2479,column:8},end:{line:2502,column:9}},"953":{start:{line:2479,column:18},end:{line:2479,column:19}},"954":{start:{line:2484,column:12},end:{line:2484,column:120}},"955":{start:{line:2485,column:12},end:{line:2485,column:59}},"956":{start:{line:2487,column:12},end:{line:2487,column:48}},"957":{start:{line:2489,column:12},end:{line:2501,column:13}},"958":{start:{line:2491,column:16},end:{line:2491,column:62}},"959":{start:{line:2492,column:43},end:{line:2492,column:87}},"960":{start:{line:2493,column:16},end:{line:2493,column:81}},"961":{start:{line:2497,column:16},end:{line:2497,column:63}},"962":{start:{line:2498,column:43},end:{line:2498,column:87}},"963":{start:{line:2499,column:16},end:{line:2499,column:81}},"964":{start:{line:2504,column:8},end:{line:2507,column:9}},"965":{start:{line:2506,column:12},end:{line:2506,column:36}},"966":{start:{line:2509,column:32},end:{line:2518,column:9}},"967":{start:{line:2519,column:25},end:{line:2519,column:73}},"968":{start:{line:2520,column:28},end:{line:2520,column:40}},"969":{start:{line:2524,column:8},end:{line:2542,column:9}},"970":{start:{line:2526,column:36},end:{line:2535,column:13}},"971":{start:{line:2536,column:29},end:{line:2536,column:75}},"972":{start:{line:2537,column:12},end:{line:2537,column:74}},"973":{start:{line:2538,column:12},end:{line:2538,column:73}},"974":{start:{line:2541,column:12},end:{line:2541,column:73}},"975":{start:{line:2543,column:24},end:{line:2543,column:62}},"976":{start:{line:2544,column:8},end:{line:2544,column:57}},"977":{start:{line:2545,column:8},end:{line:2545,column:14}},"978":{start:{line:2549,column:8},end:{line:2549,column:45}},"979":{start:{line:2550,column:27},end:{line:2550,column:63}},"980":{start:{line:2551,column:8},end:{line:2553,column:9}},"981":{start:{line:2552,column:12},end:{line:2552,column:72}},"982":{start:{line:2554,column:22},end:{line:2554,column:59}},"983":{start:{line:2555,column:21},end:{line:2555,column:52}},"984":{start:{line:2557,column:8},end:{line:2559,column:9}},"985":{start:{line:2558,column:12},end:{line:2558,column:75}},"986":{start:{line:2560,column:8},end:{line:2562,column:9}},"987":{start:{line:2561,column:12},end:{line:2561,column:56}},"988":{start:{line:2563,column:24},end:{line:2563,column:40}},"989":{start:{line:2566,column:28},end:{line:2566,column:30}},"990":{start:{line:2567,column:29},end:{line:2567,column:31}},"991":{start:{line:2568,column:25},end:{line:2568,column:27}},"992":{start:{line:2569,column:23},end:{line:2569,column:25}},"993":{start:{line:2570,column:18},end:{line:2570,column:19}},"994":{start:{line:2575,column:22},end:{line:2575,column:79}},"995":{start:{line:2576,column:21},end:{line:2576,column:95}},"996":{start:{line:2577,column:8},end:{line:2593,column:9}},"997":{start:{line:2578,column:12},end:{line:2578,column:53}},"998":{start:{line:2579,column:12},end:{line:2579,column:49}},"999":{start:{line:2580,column:12},end:{line:2580,column:32}},"1000":{start:{line:2581,column:12},end:{line:2584,column:13}},"1001":{start:{line:2582,column:16},end:{line:2582,column:42}},"1002":{start:{line:2583,column:16},end:{line:2583,column:29}},"1003":{start:{line:2585,column:12},end:{line:2592,column:13}},"1004":{start:{line:2586,column:16},end:{line:2586,column:52}},"1005":{start:{line:2587,column:16},end:{line:2587,column:24}},"1006":{start:{line:2589,column:16},end:{line:2589,column:44}},"1007":{start:{line:2590,column:16},end:{line:2590,column:47}},"1008":{start:{line:2591,column:16},end:{line:2591,column:21}},"1009":{start:{line:2595,column:8},end:{line:2597,column:9}},"1010":{start:{line:2596,column:12},end:{line:2596,column:58}},"1011":{start:{line:2598,column:8},end:{line:2598,column:37}},"1012":{start:{line:2599,column:8},end:{line:2599,column:35}},"1013":{start:{line:2600,column:8},end:{line:2600,column:37}},"1014":{start:{line:2601,column:8},end:{line:2601,column:35}},"1015":{start:{line:2603,column:22},end:{line:2603,column:46}},"1016":{start:{line:2604,column:19},end:{line:2604,column:23}},"1017":{start:{line:2605,column:8},end:{line:2620,column:9}},"1018":{start:{line:2607,column:12},end:{line:2607,column:40}},"1019":{start:{line:2608,column:12},end:{line:2608,column:107}},"1020":{start:{line:2609,column:12},end:{line:2609,column:31}},"1021":{start:{line:2610,column:12},end:{line:2610,column:38}},"1022":{start:{line:2611,column:12},end:{line:2611,column:48}},"1023":{start:{line:2613,column:12},end:{line:2613,column:31}},"1024":{start:{line:2614,column:12},end:{line:2614,column:30}},"1025":{start:{line:2615,column:12},end:{line:2615,column:38}},"1026":{start:{line:2616,column:12},end:{line:2616,column:62}},"1027":{start:{line:2617,column:12},end:{line:2617,column:113}},"1028":{start:{line:2618,column:28},end:{line:2618,column:62}},"1029":{start:{line:2619,column:12},end:{line:2619,column:57}},"1030":{start:{line:2622,column:8},end:{line:2622,column:48}},"1031":{start:{line:2623,column:25},end:{line:2623,column:34}},"1032":{start:{line:2624,column:8},end:{line:2624,column:41}},"1033":{start:{line:2625,column:8},end:{line:2625,column:68}},"1034":{start:{line:2626,column:8},end:{line:2626,column:70}},"1035":{start:{line:2628,column:8},end:{line:2628,column:111}},"1036":{start:{line:2630,column:32},end:{line:2630,column:73}},"1037":{start:{line:2631,column:8},end:{line:2631,column:69}},"1038":{start:{line:2632,column:8},end:{line:2632,column:27}},"1039":{start:{line:2641,column:36},end:{line:2641,column:77}},"1040":{start:{line:2642,column:8},end:{line:2644,column:9}},"1041":{start:{line:2643,column:12},end:{line:2643,column:36}},"1042":{start:{line:2645,column:31},end:{line:2645,column:77}},"1043":{start:{line:2646,column:20},end:{line:2646,column:47}},"1044":{start:{line:2649,column:19},end:{line:2649,column:51}},"1045":{start:{line:2650,column:21},end:{line:2650,column:23}},"1046":{start:{line:2651,column:23},end:{line:2651,column:25}},"1047":{start:{line:2652,column:24},end:{line:2652,column:26}},"1048":{start:{line:2653,column:33},end:{line:2653,column:35}},"1049":{start:{line:2654,column:33},end:{line:2654,column:35}},"1050":{start:{line:2655,column:18},end:{line:2655,column:19}},"1051":{start:{line:2656,column:28},end:{line:2656,column:30}},"1052":{start:{line:2657,column:19},end:{line:2657,column:20}},"1053":{start:{line:2661,column:26},end:{line:2661,column:50}},"1054":{start:{line:2663,column:37},end:{line:2672,column:9}},"1055":{start:{line:2673,column:17},end:{line:2673,column:29}},"1056":{start:{line:2674,column:17},end:{line:2674,column:29}},"1057":{start:{line:2676,column:8},end:{line:2732,column:9}},"1058":{start:{line:2676,column:19},end:{line:2676,column:20}},"1059":{start:{line:2677,column:23},end:{line:2677,column:43}},"1060":{start:{line:2678,column:35},end:{line:2678,column:61}},"1061":{start:{line:2679,column:12},end:{line:2681,column:13}},"1062":{start:{line:2680,column:16},end:{line:2680,column:40}},"1063":{start:{line:2686,column:27},end:{line:2686,column:58}},"1064":{start:{line:2693,column:12},end:{line:2693,column:52}},"1065":{start:{line:2694,column:26},end:{line:2694,column:37}},"1066":{start:{line:2696,column:12},end:{line:2709,column:13}},"1067":{start:{line:2698,column:16},end:{line:2698,column:45}},"1068":{start:{line:2699,column:16},end:{line:2699,column:55}},"1069":{start:{line:2700,column:16},end:{line:2700,column:58}},"1070":{start:{line:2701,column:16},end:{line:2701,column:83}},"1071":{start:{line:2706,column:16},end:{line:2706,column:79}},"1072":{start:{line:2707,column:16},end:{line:2707,column:82}},"1073":{start:{line:2708,column:16},end:{line:2708,column:107}},"1074":{start:{line:2712,column:12},end:{line:2712,column:39}},"1075":{start:{line:2713,column:12},end:{line:2713,column:32}},"1076":{start:{line:2715,column:12},end:{line:2717,column:13}},"1077":{start:{line:2716,column:16},end:{line:2716,column:40}},"1078":{start:{line:2718,column:12},end:{line:2730,column:13}},"1079":{start:{line:2719,column:16},end:{line:2719,column:52}},"1080":{start:{line:2720,column:26},end:{line:2720,column:77}},"1081":{start:{line:2720,column:51},end:{line:2720,column:76}},"1082":{start:{line:2721,column:16},end:{line:2721,column:38}},"1083":{start:{line:2724,column:26},end:{line:2724,column:59}},"1084":{start:{line:2724,column:51},end:{line:2724,column:58}},"1085":{start:{line:2725,column:16},end:{line:2725,column:47}},"1086":{start:{line:2726,column:16},end:{line:2726,column:42}},"1087":{start:{line:2727,column:16},end:{line:2727,column:87}},"1088":{start:{line:2728,column:16},end:{line:2728,column:53}},"1089":{start:{line:2731,column:12},end:{line:2731,column:38}},"1090":{start:{line:2734,column:8},end:{line:2761,column:9}},"1091":{start:{line:2734,column:18},end:{line:2734,column:19}},"1092":{start:{line:2739,column:12},end:{line:2739,column:147}},"1093":{start:{line:2740,column:12},end:{line:2740,column:70}},"1094":{start:{line:2742,column:12},end:{line:2742,column:57}},"1095":{start:{line:2748,column:12},end:{line:2760,column:13}},"1096":{start:{line:2750,column:16},end:{line:2750,column:71}},"1097":{start:{line:2751,column:52},end:{line:2751,column:105}},"1098":{start:{line:2752,column:16},end:{line:2752,column:99}},"1099":{start:{line:2756,column:16},end:{line:2756,column:72}},"1100":{start:{line:2757,column:52},end:{line:2757,column:105}},"1101":{start:{line:2758,column:16},end:{line:2758,column:99}},"1102":{start:{line:2768,column:23},end:{line:2784,column:9}},"1103":{start:{line:2785,column:25},end:{line:2785,column:64}},"1104":{start:{line:2786,column:28},end:{line:2786,column:40}},"1105":{start:{line:2787,column:8},end:{line:2813,column:9}},"1106":{start:{line:2789,column:27},end:{line:2805,column:13}},"1107":{start:{line:2806,column:29},end:{line:2806,column:68}},"1108":{start:{line:2807,column:12},end:{line:2807,column:65}},"1109":{start:{line:2808,column:12},end:{line:2808,column:64}},"1110":{start:{line:2812,column:12},end:{line:2812,column:64}},"1111":{start:{line:2815,column:24},end:{line:2815,column:62}},"1112":{start:{line:2816,column:8},end:{line:2816,column:57}},"1113":{start:{line:2824,column:8},end:{line:2824,column:41}},"1114":{start:{line:2825,column:8},end:{line:2825,column:32}},"1115":{start:{line:2826,column:8},end:{line:2826,column:34}},"1116":{start:{line:2830,column:22},end:{line:2830,column:54}},"1117":{start:{line:2833,column:29},end:{line:2833,column:65}},"1118":{start:{line:2835,column:8},end:{line:2839,column:9}},"1119":{start:{line:2836,column:12},end:{line:2836,column:30}},"1120":{start:{line:2838,column:12},end:{line:2838,column:60}},"1121":{start:{line:2842,column:18},end:{line:2842,column:90}},"1122":{start:{line:2843,column:8},end:{line:2843,column:35}},"1123":{start:{line:2844,column:25},end:{line:2844,column:55}},"1124":{start:{line:2848,column:8},end:{line:2850,column:9}},"1125":{start:{line:2849,column:12},end:{line:2849,column:93}},"1126":{start:{line:2851,column:21},end:{line:2851,column:54}},"1127":{start:{line:2852,column:8},end:{line:2854,column:9}},"1128":{start:{line:2853,column:12},end:{line:2853,column:111}},"1129":{start:{line:2855,column:24},end:{line:2855,column:48}},"1130":{start:{line:2856,column:22},end:{line:2856,column:79}},"1131":{start:{line:2859,column:20},end:{line:2859,column:32}},"1132":{start:{line:2861,column:25},end:{line:2874,column:9}},"1133":{start:{line:2879,column:17},end:{line:2879,column:29}},"1134":{start:{line:2880,column:17},end:{line:2880,column:29}},"1135":{start:{line:2884,column:8},end:{line:2907,column:9}},"1136":{start:{line:2886,column:22},end:{line:2886,column:64}},"1137":{start:{line:2887,column:24},end:{line:2900,column:13}},"1138":{start:{line:2901,column:12},end:{line:2901,column:37}},"1139":{start:{line:2903,column:23},end:{line:2903,column:69}},"1140":{start:{line:2904,column:12},end:{line:2904,column:42}},"1141":{start:{line:2905,column:12},end:{line:2905,column:89}},"1142":{start:{line:2906,column:12},end:{line:2906,column:28}},"1143":{start:{line:2911,column:25},end:{line:2911,column:37}},"1144":{start:{line:2913,column:30},end:{line:2913,column:32}},"1145":{start:{line:2914,column:28},end:{line:2914,column:30}},"1146":{start:{line:2915,column:20},end:{line:2915,column:41}},"1147":{start:{line:2916,column:20},end:{line:2916,column:21}},"1148":{start:{line:2917,column:24},end:{line:2917,column:25}},"1149":{start:{line:2918,column:26},end:{line:2918,column:38}},"1150":{start:{line:2919,column:26},end:{line:2919,column:27}},"1151":{start:{line:2923,column:8},end:{line:2993,column:9}},"1152":{start:{line:2926,column:12},end:{line:2992,column:13}},"1153":{start:{line:2928,column:16},end:{line:2928,column:45}},"1154":{start:{line:2929,column:16},end:{line:2929,column:45}},"1155":{start:{line:2930,column:16},end:{line:2930,column:69}},"1156":{start:{line:2931,column:16},end:{line:2931,column:69}},"1157":{start:{line:2934,column:16},end:{line:2989,column:17}},"1158":{start:{line:2939,column:35},end:{line:2939,column:42}},"1159":{start:{line:2941,column:20},end:{line:2941,column:48}},"1160":{start:{line:2942,column:20},end:{line:2942,column:56}},"1161":{start:{line:2943,column:20},end:{line:2943,column:39}},"1162":{start:{line:2944,column:20},end:{line:2944,column:43}},"1163":{start:{line:2947,column:20},end:{line:2947,column:46}},"1164":{start:{line:2948,column:20},end:{line:2948,column:56}},"1165":{start:{line:2949,column:20},end:{line:2949,column:66}},"1166":{start:{line:2951,column:20},end:{line:2951,column:56}},"1167":{start:{line:2953,column:20},end:{line:2953,column:74}},"1168":{start:{line:2954,column:20},end:{line:2954,column:30}},"1169":{start:{line:2955,column:20},end:{line:2955,column:25}},"1170":{start:{line:2959,column:20},end:{line:2988,column:21}},"1171":{start:{line:2962,column:24},end:{line:2962,column:55}},"1172":{start:{line:2963,column:24},end:{line:2963,column:43}},"1173":{start:{line:2964,column:24},end:{line:2964,column:47}},"1174":{start:{line:2967,column:24},end:{line:2967,column:50}},"1175":{start:{line:2968,column:24},end:{line:2968,column:60}},"1176":{start:{line:2969,column:24},end:{line:2969,column:78}},"1177":{start:{line:2975,column:24},end:{line:2975,column:44}},"1178":{start:{line:2976,column:24},end:{line:2976,column:46}},"1179":{start:{line:2977,column:24},end:{line:2977,column:50}},"1180":{start:{line:2978,column:24},end:{line:2978,column:58}},"1181":{start:{line:2981,column:24},end:{line:2981,column:60}},"1182":{start:{line:2982,column:24},end:{line:2982,column:50}},"1183":{start:{line:2983,column:24},end:{line:2983,column:78}},"1184":{start:{line:2984,column:24},end:{line:2984,column:34}},"1185":{start:{line:2987,column:24},end:{line:2987,column:29}},"1186":{start:{line:2991,column:16},end:{line:2991,column:24}},"1187":{start:{line:3001,column:18},end:{line:3001,column:60}},"1188":{start:{line:3002,column:8},end:{line:3028,column:9}},"1189":{start:{line:3005,column:12},end:{line:3005,column:35}},"1190":{start:{line:3006,column:12},end:{line:3006,column:39}},"1191":{start:{line:3007,column:12},end:{line:3007,column:40}},"1192":{start:{line:3008,column:12},end:{line:3008,column:45}},"1193":{start:{line:3009,column:12},end:{line:3009,column:61}},"1194":{start:{line:3011,column:14},end:{line:3028,column:9}},"1195":{start:{line:3014,column:12},end:{line:3014,column:35}},"1196":{start:{line:3015,column:12},end:{line:3015,column:39}},"1197":{start:{line:3016,column:12},end:{line:3016,column:41}},"1198":{start:{line:3017,column:12},end:{line:3017,column:44}},"1199":{start:{line:3018,column:12},end:{line:3018,column:69}},"1200":{start:{line:3019,column:12},end:{line:3019,column:42}},"1201":{start:{line:3024,column:12},end:{line:3024,column:35}},"1202":{start:{line:3025,column:12},end:{line:3025,column:39}},"1203":{start:{line:3026,column:12},end:{line:3026,column:41}},"1204":{start:{line:3027,column:12},end:{line:3027,column:44}},"1205":{start:{line:3029,column:8},end:{line:3029,column:40}},"1206":{start:{line:3033,column:22},end:{line:3033,column:68}},"1207":{start:{line:3034,column:22},end:{line:3034,column:68}},"1208":{start:{line:3035,column:8},end:{line:3035,column:36}},"1209":{start:{line:3039,column:8},end:{line:3039,column:85}},"1210":{start:{line:3040,column:8},end:{line:3059,column:9}},"1211":{start:{line:3042,column:29},end:{line:3045,column:13}},"1212":{start:{line:3046,column:28},end:{line:3046,column:67}},"1213":{start:{line:3047,column:12},end:{line:3047,column:73}},"1214":{start:{line:3048,column:12},end:{line:3048,column:49}},"1215":{start:{line:3049,column:12},end:{line:3049,column:51}},"1216":{start:{line:3055,column:12},end:{line:3055,column:86}},"1217":{start:{line:3061,column:8},end:{line:3061,column:24}},"1218":{start:{line:3069,column:8},end:{line:3069,column:41}},"1219":{start:{line:3070,column:21},end:{line:3070,column:53}},"1220":{start:{line:3071,column:8},end:{line:3071,column:32}},"1221":{start:{line:3072,column:8},end:{line:3072,column:32}},"1222":{start:{line:3073,column:8},end:{line:3073,column:34}},"1223":{start:{line:3074,column:18},end:{line:3074,column:80}},"1224":{start:{line:3075,column:8},end:{line:3075,column:34}},"1225":{start:{line:3076,column:24},end:{line:3076,column:54}},"1226":{start:{line:3079,column:8},end:{line:3081,column:9}},"1227":{start:{line:3080,column:12},end:{line:3080,column:82}},"1228":{start:{line:3082,column:19},end:{line:3082,column:51}},"1229":{start:{line:3083,column:8},end:{line:3085,column:9}},"1230":{start:{line:3084,column:12},end:{line:3084,column:108}},"1231":{start:{line:3086,column:8},end:{line:3088,column:9}},"1232":{start:{line:3087,column:12},end:{line:3087,column:64}},"1233":{start:{line:3089,column:29},end:{line:3089,column:65}},"1234":{start:{line:3091,column:8},end:{line:3095,column:9}},"1235":{start:{line:3092,column:12},end:{line:3092,column:30}},"1236":{start:{line:3094,column:12},end:{line:3094,column:60}},"1237":{start:{line:3097,column:24},end:{line:3097,column:48}},"1238":{start:{line:3098,column:22},end:{line:3098,column:79}},"1239":{start:{line:3099,column:25},end:{line:3112,column:9}},"1240":{start:{line:3114,column:17},end:{line:3114,column:29}},"1241":{start:{line:3115,column:17},end:{line:3115,column:29}},"1242":{start:{line:3118,column:8},end:{line:3144,column:9}},"1243":{start:{line:3119,column:22},end:{line:3119,column:64}},"1244":{start:{line:3121,column:24},end:{line:3134,column:13}},"1245":{start:{line:3136,column:12},end:{line:3136,column:37}},"1246":{start:{line:3138,column:21},end:{line:3138,column:67}},"1247":{start:{line:3140,column:12},end:{line:3140,column:42}},"1248":{start:{line:3141,column:12},end:{line:3141,column:89}},"1249":{start:{line:3143,column:12},end:{line:3143,column:28}},"1250":{start:{line:3146,column:27},end:{line:3146,column:39}},"1251":{start:{line:3147,column:31},end:{line:3147,column:33}},"1252":{start:{line:3148,column:28},end:{line:3148,column:30}},"1253":{start:{line:3149,column:38},end:{line:3149,column:40}},"1254":{start:{line:3150,column:20},end:{line:3150,column:41}},"1255":{start:{line:3151,column:24},end:{line:3151,column:25}},"1256":{start:{line:3152,column:20},end:{line:3152,column:21}},"1257":{start:{line:3154,column:8},end:{line:3187,column:9}},"1258":{start:{line:3155,column:12},end:{line:3186,column:13}},"1259":{start:{line:3156,column:16},end:{line:3156,column:45}},"1260":{start:{line:3157,column:16},end:{line:3157,column:45}},"1261":{start:{line:3158,column:16},end:{line:3182,column:17}},"1262":{start:{line:3159,column:20},end:{line:3159,column:39}},"1263":{start:{line:3160,column:20},end:{line:3160,column:43}},"1264":{start:{line:3161,column:20},end:{line:3161,column:51}},"1265":{start:{line:3164,column:20},end:{line:3164,column:52}},"1266":{start:{line:3165,column:20},end:{line:3165,column:46}},"1267":{start:{line:3166,column:20},end:{line:3166,column:65}},"1268":{start:{line:3167,column:20},end:{line:3167,column:74}},"1269":{start:{line:3170,column:20},end:{line:3170,column:40}},"1270":{start:{line:3171,column:20},end:{line:3171,column:42}},"1271":{start:{line:3172,column:20},end:{line:3172,column:46}},"1272":{start:{line:3173,column:20},end:{line:3173,column:54}},"1273":{start:{line:3176,column:20},end:{line:3176,column:52}},"1274":{start:{line:3177,column:20},end:{line:3177,column:46}},"1275":{start:{line:3178,column:20},end:{line:3178,column:73}},"1276":{start:{line:3179,column:20},end:{line:3179,column:74}},"1277":{start:{line:3180,column:20},end:{line:3180,column:30}},"1278":{start:{line:3181,column:20},end:{line:3181,column:25}},"1279":{start:{line:3189,column:18},end:{line:3189,column:60}},"1280":{start:{line:3193,column:8},end:{line:3216,column:9}},"1281":{start:{line:3196,column:12},end:{line:3196,column:39}},"1282":{start:{line:3197,column:12},end:{line:3197,column:40}},"1283":{start:{line:3198,column:12},end:{line:3198,column:45}},"1284":{start:{line:3199,column:12},end:{line:3199,column:61}},"1285":{start:{line:3201,column:14},end:{line:3216,column:9}},"1286":{start:{line:3204,column:12},end:{line:3204,column:39}},"1287":{start:{line:3205,column:12},end:{line:3205,column:41}},"1288":{start:{line:3206,column:12},end:{line:3206,column:44}},"1289":{start:{line:3207,column:12},end:{line:3207,column:69}},"1290":{start:{line:3208,column:12},end:{line:3208,column:42}},"1291":{start:{line:3213,column:12},end:{line:3213,column:39}},"1292":{start:{line:3214,column:12},end:{line:3214,column:41}},"1293":{start:{line:3215,column:12},end:{line:3215,column:45}},"1294":{start:{line:3217,column:8},end:{line:3217,column:40}},"1295":{start:{line:3221,column:20},end:{line:3221,column:66}},"1296":{start:{line:3222,column:20},end:{line:3222,column:66}},"1297":{start:{line:3223,column:8},end:{line:3223,column:36}},"1298":{start:{line:3224,column:8},end:{line:3224,column:85}},"1299":{start:{line:3226,column:8},end:{line:3242,column:9}},"1300":{start:{line:3228,column:29},end:{line:3231,column:13}},"1301":{start:{line:3232,column:28},end:{line:3232,column:67}},"1302":{start:{line:3233,column:12},end:{line:3233,column:73}},"1303":{start:{line:3235,column:12},end:{line:3235,column:49}},"1304":{start:{line:3236,column:12},end:{line:3236,column:51}},"1305":{start:{line:3238,column:12},end:{line:3238,column:86}},"1306":{start:{line:3243,column:8},end:{line:3243,column:24}},"1307":{start:{line:3250,column:8},end:{line:3250,column:32}},"1308":{start:{line:3251,column:8},end:{line:3253,column:9}},"1309":{start:{line:3252,column:12},end:{line:3252,column:64}},"1310":{start:{line:3254,column:22},end:{line:3254,column:54}},"1311":{start:{line:3256,column:18},end:{line:3256,column:80}},"1312":{start:{line:3257,column:8},end:{line:3257,column:34}},"1313":{start:{line:3258,column:24},end:{line:3258,column:54}},"1314":{start:{line:3259,column:8},end:{line:3261,column:9}},"1315":{start:{line:3260,column:12},end:{line:3260,column:83}},"1316":{start:{line:3264,column:19},end:{line:3264,column:51}},"1317":{start:{line:3265,column:8},end:{line:3267,column:9}},"1318":{start:{line:3266,column:12},end:{line:3266,column:108}},"1319":{start:{line:3268,column:8},end:{line:3270,column:9}},"1320":{start:{line:3269,column:12},end:{line:3269,column:63}},"1321":{start:{line:3272,column:29},end:{line:3272,column:65}},"1322":{start:{line:3274,column:8},end:{line:3278,column:9}},"1323":{start:{line:3275,column:12},end:{line:3275,column:61}},"1324":{start:{line:3277,column:12},end:{line:3277,column:60}},"1325":{start:{line:3281,column:24},end:{line:3281,column:48}},"1326":{start:{line:3283,column:22},end:{line:3283,column:79}},"1327":{start:{line:3284,column:25},end:{line:3297,column:9}},"1328":{start:{line:3299,column:17},end:{line:3299,column:29}},"1329":{start:{line:3300,column:17},end:{line:3300,column:29}},"1330":{start:{line:3309,column:27},end:{line:3309,column:39}},"1331":{start:{line:3310,column:31},end:{line:3310,column:33}},"1332":{start:{line:3311,column:28},end:{line:3311,column:30}},"1333":{start:{line:3312,column:38},end:{line:3312,column:40}},"1334":{start:{line:3313,column:20},end:{line:3313,column:41}},"1335":{start:{line:3314,column:24},end:{line:3314,column:25}},"1336":{start:{line:3315,column:20},end:{line:3315,column:21}},"1337":{start:{line:3319,column:8},end:{line:3370,column:9}},"1338":{start:{line:3320,column:12},end:{line:3368,column:13}},"1339":{start:{line:3322,column:16},end:{line:3322,column:45}},"1340":{start:{line:3323,column:16},end:{line:3323,column:45}},"1341":{start:{line:3324,column:16},end:{line:3352,column:17}},"1342":{start:{line:3326,column:20},end:{line:3326,column:39}},"1343":{start:{line:3327,column:20},end:{line:3327,column:43}},"1344":{start:{line:3328,column:20},end:{line:3328,column:51}},"1345":{start:{line:3331,column:20},end:{line:3331,column:52}},"1346":{start:{line:3332,column:20},end:{line:3332,column:46}},"1347":{start:{line:3333,column:20},end:{line:3333,column:65}},"1348":{start:{line:3334,column:20},end:{line:3334,column:74}},"1349":{start:{line:3335,column:23},end:{line:3352,column:17}},"1350":{start:{line:3337,column:20},end:{line:3337,column:40}},"1351":{start:{line:3338,column:20},end:{line:3338,column:42}},"1352":{start:{line:3339,column:20},end:{line:3339,column:46}},"1353":{start:{line:3340,column:20},end:{line:3340,column:54}},"1354":{start:{line:3343,column:20},end:{line:3343,column:52}},"1355":{start:{line:3344,column:20},end:{line:3344,column:46}},"1356":{start:{line:3345,column:20},end:{line:3345,column:73}},"1357":{start:{line:3346,column:20},end:{line:3346,column:74}},"1358":{start:{line:3347,column:20},end:{line:3347,column:30}},"1359":{start:{line:3348,column:20},end:{line:3348,column:25}},"1360":{start:{line:3350,column:20},end:{line:3350,column:29}},"1361":{start:{line:3351,column:20},end:{line:3351,column:25}},"1362":{start:{line:3367,column:16},end:{line:3367,column:24}},"1363":{start:{line:3372,column:18},end:{line:3372,column:60}},"1364":{start:{line:3376,column:8},end:{line:3376,column:35}},"1365":{start:{line:3377,column:8},end:{line:3377,column:36}},"1366":{start:{line:3378,column:8},end:{line:3378,column:41}},"1367":{start:{line:3379,column:8},end:{line:3379,column:65}},"1368":{start:{line:3398,column:8},end:{line:3398,column:40}},"1369":{start:{line:3400,column:20},end:{line:3400,column:66}},"1370":{start:{line:3401,column:20},end:{line:3401,column:66}},"1371":{start:{line:3402,column:8},end:{line:3402,column:36}},"1372":{start:{line:3403,column:8},end:{line:3403,column:84}},"1373":{start:{line:3406,column:25},end:{line:3409,column:9}},"1374":{start:{line:3410,column:24},end:{line:3410,column:63}},"1375":{start:{line:3411,column:8},end:{line:3411,column:69}},"1376":{start:{line:3413,column:8},end:{line:3413,column:45}},"1377":{start:{line:3414,column:8},end:{line:3414,column:47}},"1378":{start:{line:3421,column:8},end:{line:3421,column:24}},"1379":{start:{line:3428,column:8},end:{line:3430,column:9}},"1380":{start:{line:3429,column:12},end:{line:3429,column:64}},"1381":{start:{line:3431,column:22},end:{line:3431,column:54}},"1382":{start:{line:3434,column:18},end:{line:3434,column:90}},"1383":{start:{line:3435,column:8},end:{line:3435,column:35}},"1384":{start:{line:3436,column:25},end:{line:3436,column:55}},"1385":{start:{line:3437,column:8},end:{line:3439,column:9}},"1386":{start:{line:3438,column:12},end:{line:3438,column:84}},"1387":{start:{line:3440,column:21},end:{line:3440,column:54}},"1388":{start:{line:3441,column:8},end:{line:3443,column:9}},"1389":{start:{line:3442,column:12},end:{line:3442,column:111}},"1390":{start:{line:3446,column:29},end:{line:3446,column:65}},"1391":{start:{line:3448,column:8},end:{line:3453,column:9}},"1392":{start:{line:3449,column:12},end:{line:3449,column:59}},"1393":{start:{line:3452,column:12},end:{line:3452,column:60}},"1394":{start:{line:3456,column:24},end:{line:3456,column:48}},"1395":{start:{line:3457,column:22},end:{line:3457,column:79}},"1396":{start:{line:3458,column:25},end:{line:3471,column:9}},"1397":{start:{line:3473,column:17},end:{line:3473,column:29}},"1398":{start:{line:3474,column:17},end:{line:3474,column:29}},"1399":{start:{line:3483,column:25},end:{line:3483,column:37}},"1400":{start:{line:3485,column:30},end:{line:3485,column:32}},"1401":{start:{line:3486,column:28},end:{line:3486,column:30}},"1402":{start:{line:3487,column:20},end:{line:3487,column:41}},"1403":{start:{line:3488,column:20},end:{line:3488,column:21}},"1404":{start:{line:3489,column:24},end:{line:3489,column:25}},"1405":{start:{line:3490,column:26},end:{line:3490,column:38}},"1406":{start:{line:3491,column:26},end:{line:3491,column:27}},"1407":{start:{line:3496,column:8},end:{line:3554,column:9}},"1408":{start:{line:3497,column:12},end:{line:3553,column:13}},"1409":{start:{line:3499,column:16},end:{line:3499,column:45}},"1410":{start:{line:3500,column:16},end:{line:3500,column:45}},"1411":{start:{line:3501,column:16},end:{line:3501,column:69}},"1412":{start:{line:3502,column:16},end:{line:3502,column:69}},"1413":{start:{line:3503,column:16},end:{line:3550,column:17}},"1414":{start:{line:3505,column:35},end:{line:3505,column:70}},"1415":{start:{line:3506,column:20},end:{line:3506,column:48}},"1416":{start:{line:3507,column:20},end:{line:3507,column:56}},"1417":{start:{line:3508,column:20},end:{line:3508,column:40}},"1418":{start:{line:3509,column:20},end:{line:3509,column:42}},"1419":{start:{line:3512,column:20},end:{line:3512,column:46}},"1420":{start:{line:3513,column:20},end:{line:3513,column:56}},"1421":{start:{line:3514,column:20},end:{line:3514,column:66}},"1422":{start:{line:3516,column:20},end:{line:3516,column:56}},"1423":{start:{line:3517,column:20},end:{line:3517,column:46}},"1424":{start:{line:3518,column:20},end:{line:3518,column:74}},"1425":{start:{line:3519,column:20},end:{line:3519,column:30}},"1426":{start:{line:3520,column:20},end:{line:3520,column:25}},"1427":{start:{line:3523,column:20},end:{line:3549,column:21}},"1428":{start:{line:3526,column:24},end:{line:3526,column:55}},"1429":{start:{line:3527,column:24},end:{line:3527,column:43}},"1430":{start:{line:3528,column:24},end:{line:3528,column:47}},"1431":{start:{line:3531,column:24},end:{line:3531,column:50}},"1432":{start:{line:3532,column:24},end:{line:3532,column:60}},"1433":{start:{line:3533,column:24},end:{line:3533,column:78}},"1434":{start:{line:3538,column:24},end:{line:3538,column:44}},"1435":{start:{line:3539,column:24},end:{line:3539,column:46}},"1436":{start:{line:3540,column:24},end:{line:3540,column:50}},"1437":{start:{line:3541,column:24},end:{line:3541,column:58}},"1438":{start:{line:3544,column:24},end:{line:3544,column:60}},"1439":{start:{line:3545,column:24},end:{line:3545,column:50}},"1440":{start:{line:3546,column:24},end:{line:3546,column:78}},"1441":{start:{line:3547,column:24},end:{line:3547,column:34}},"1442":{start:{line:3548,column:24},end:{line:3548,column:29}},"1443":{start:{line:3552,column:16},end:{line:3552,column:24}},"1444":{start:{line:3559,column:18},end:{line:3559,column:66}},"1445":{start:{line:3563,column:8},end:{line:3563,column:35}},"1446":{start:{line:3564,column:8},end:{line:3564,column:36}},"1447":{start:{line:3565,column:8},end:{line:3565,column:41}},"1448":{start:{line:3567,column:8},end:{line:3567,column:65}},"1449":{start:{line:3589,column:8},end:{line:3589,column:40}},"1450":{start:{line:3591,column:22},end:{line:3591,column:68}},"1451":{start:{line:3592,column:22},end:{line:3592,column:68}},"1452":{start:{line:3593,column:8},end:{line:3593,column:36}},"1453":{start:{line:3594,column:8},end:{line:3594,column:85}},"1454":{start:{line:3597,column:25},end:{line:3600,column:9}},"1455":{start:{line:3601,column:24},end:{line:3601,column:63}},"1456":{start:{line:3602,column:8},end:{line:3602,column:68}},"1457":{start:{line:3603,column:8},end:{line:3603,column:45}},"1458":{start:{line:3604,column:8},end:{line:3604,column:47}},"1459":{start:{line:3606,column:8},end:{line:3606,column:24}},"1460":{start:{line:3875,column:29},end:{line:3875,column:65}},"1461":{start:{line:3876,column:8},end:{line:3878,column:9}},"1462":{start:{line:3877,column:12},end:{line:3877,column:57}},"1463":{start:{line:3879,column:24},end:{line:3879,column:61}},"1464":{start:{line:3880,column:8},end:{line:3880,column:24}},"1465":{start:{line:3893,column:0},end:{line:3893,column:59}},"1466":{start:{line:3894,column:0},end:{line:3894,column:51}},"1467":{start:{line:3895,column:0},end:{line:3895,column:39}},"1468":{start:{line:3896,column:0},end:{line:3896,column:73}},"1469":{start:{line:3897,column:0},end:{line:3897,column:57}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:18},end:{line:10,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:14},end:{line:15,column:5}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:26},end:{line:19,column:5}},line:17},"3":{name:"(anonymous_3)",decl:{start:{line:26,column:4},end:{line:26,column:5}},loc:{start:{line:26,column:20},end:{line:28,column:5}},line:26},"4":{name:"(anonymous_4)",decl:{start:{line:30,column:4},end:{line:30,column:5}},loc:{start:{line:30,column:24},end:{line:32,column:5}},line:30},"5":{name:"(anonymous_5)",decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:13},end:{line:36,column:5}},line:34},"6":{name:"(anonymous_6)",decl:{start:{line:39,column:4},end:{line:39,column:5}},loc:{start:{line:39,column:19},end:{line:41,column:5}},line:39},"7":{name:"(anonymous_7)",decl:{start:{line:102,column:4},end:{line:102,column:5}},loc:{start:{line:102,column:21},end:{line:104,column:5}},line:102},"8":{name:"(anonymous_8)",decl:{start:{line:107,column:4},end:{line:107,column:5}},loc:{start:{line:107,column:33},end:{line:109,column:5}},line:107},"9":{name:"(anonymous_9)",decl:{start:{line:112,column:4},end:{line:112,column:5}},loc:{start:{line:112,column:27},end:{line:114,column:5}},line:112},"10":{name:"(anonymous_10)",decl:{start:{line:120,column:4},end:{line:120,column:5}},loc:{start:{line:120,column:18},end:{line:123,column:5}},line:120},"11":{name:"(anonymous_11)",decl:{start:{line:128,column:4},end:{line:128,column:5}},loc:{start:{line:128,column:20},end:{line:130,column:5}},line:128},"12":{name:"(anonymous_12)",decl:{start:{line:132,column:4},end:{line:132,column:5}},loc:{start:{line:132,column:33},end:{line:154,column:5}},line:132},"13":{name:"(anonymous_13)",decl:{start:{line:158,column:4},end:{line:158,column:5}},loc:{start:{line:158,column:32},end:{line:194,column:5}},line:158},"14":{name:"(anonymous_14)",decl:{start:{line:218,column:4},end:{line:218,column:5}},loc:{start:{line:218,column:52},end:{line:241,column:5}},line:218},"15":{name:"(anonymous_15)",decl:{start:{line:243,column:4},end:{line:243,column:5}},loc:{start:{line:243,column:24},end:{line:267,column:5}},line:243},"16":{name:"(anonymous_16)",decl:{start:{line:278,column:4},end:{line:278,column:5}},loc:{start:{line:278,column:30},end:{line:286,column:5}},line:278},"17":{name:"(anonymous_17)",decl:{start:{line:288,column:4},end:{line:288,column:5}},loc:{start:{line:288,column:46},end:{line:319,column:2}},line:288},"18":{name:"(anonymous_18)",decl:{start:{line:322,column:4},end:{line:322,column:5}},loc:{start:{line:322,column:44},end:{line:327,column:5}},line:322},"19":{name:"(anonymous_19)",decl:{start:{line:335,column:4},end:{line:335,column:5}},loc:{start:{line:335,column:26},end:{line:363,column:5}},line:335},"20":{name:"(anonymous_20)",decl:{start:{line:366,column:4},end:{line:366,column:5}},loc:{start:{line:366,column:61},end:{line:381,column:5}},line:366},"21":{name:"(anonymous_21)",decl:{start:{line:384,column:4},end:{line:384,column:5}},loc:{start:{line:384,column:27},end:{line:394,column:5}},line:384},"22":{name:"(anonymous_22)",decl:{start:{line:397,column:4},end:{line:397,column:5}},loc:{start:{line:397,column:26},end:{line:407,column:5}},line:397},"23":{name:"(anonymous_23)",decl:{start:{line:413,column:4},end:{line:413,column:5}},loc:{start:{line:413,column:18},end:{line:416,column:5}},line:413},"24":{name:"(anonymous_24)",decl:{start:{line:417,column:4},end:{line:417,column:5}},loc:{start:{line:417,column:20},end:{line:419,column:5}},line:417},"25":{name:"(anonymous_25)",decl:{start:{line:420,column:4},end:{line:420,column:5}},loc:{start:{line:420,column:33},end:{line:489,column:5}},line:420},"26":{name:"(anonymous_26)",decl:{start:{line:492,column:4},end:{line:492,column:5}},loc:{start:{line:492,column:31},end:{line:495,column:5}},line:492},"27":{name:"(anonymous_27)",decl:{start:{line:502,column:5},end:{line:502,column:6}},loc:{start:{line:502,column:39},end:{line:516,column:5}},line:502},"28":{name:"(anonymous_28)",decl:{start:{line:524,column:4},end:{line:524,column:5}},loc:{start:{line:524,column:35},end:{line:531,column:5}},line:524},"29":{name:"(anonymous_29)",decl:{start:{line:540,column:4},end:{line:540,column:5}},loc:{start:{line:540,column:62},end:{line:554,column:5}},line:540},"30":{name:"(anonymous_30)",decl:{start:{line:566,column:4},end:{line:566,column:5}},loc:{start:{line:566,column:68},end:{line:581,column:5}},line:566},"31":{name:"(anonymous_31)",decl:{start:{line:584,column:4},end:{line:584,column:5}},loc:{start:{line:584,column:44},end:{line:591,column:5}},line:584},"32":{name:"(anonymous_32)",decl:{start:{line:595,column:4},end:{line:595,column:5}},loc:{start:{line:595,column:33},end:{line:606,column:5}},line:595},"33":{name:"(anonymous_33)",decl:{start:{line:612,column:4},end:{line:612,column:5}},loc:{start:{line:612,column:50},end:{line:805,column:5}},line:612},"34":{name:"(anonymous_34)",decl:{start:{line:807,column:4},end:{line:807,column:5}},loc:{start:{line:807,column:38},end:{line:824,column:5}},line:807},"35":{name:"(anonymous_35)",decl:{start:{line:826,column:4},end:{line:826,column:5}},loc:{start:{line:826,column:31},end:{line:838,column:5}},line:826},"36":{name:"(anonymous_36)",decl:{start:{line:843,column:4},end:{line:843,column:5}},loc:{start:{line:843,column:35},end:{line:878,column:5}},line:843},"37":{name:"(anonymous_37)",decl:{start:{line:883,column:4},end:{line:883,column:5}},loc:{start:{line:883,column:33},end:{line:933,column:5}},line:883},"38":{name:"(anonymous_38)",decl:{start:{line:960,column:4},end:{line:960,column:5}},loc:{start:{line:960,column:76},end:{line:1015,column:5}},line:960},"39":{name:"(anonymous_39)",decl:{start:{line:995,column:45},end:{line:995,column:46}},loc:{start:{line:995,column:56},end:{line:995,column:95}},line:995},"40":{name:"(anonymous_40)",decl:{start:{line:1063,column:4},end:{line:1063,column:5}},loc:{start:{line:1063,column:67},end:{line:1105,column:5}},line:1063},"41":{name:"(anonymous_41)",decl:{start:{line:1111,column:4},end:{line:1111,column:5}},loc:{start:{line:1111,column:60},end:{line:1120,column:5}},line:1111},"42":{name:"(anonymous_42)",decl:{start:{line:1118,column:51},end:{line:1118,column:52}},loc:{start:{line:1118,column:56},end:{line:1118,column:97}},line:1118},"43":{name:"(anonymous_43)",decl:{start:{line:1124,column:4},end:{line:1124,column:5}},loc:{start:{line:1124,column:61},end:{line:1252,column:5}},line:1124},"44":{name:"(anonymous_44)",decl:{start:{line:1175,column:34},end:{line:1175,column:35}},loc:{start:{line:1175,column:98},end:{line:1180,column:13}},line:1175},"45":{name:"(anonymous_45)",decl:{start:{line:1181,column:38},end:{line:1181,column:39}},loc:{start:{line:1181,column:150},end:{line:1186,column:13}},line:1181},"46":{name:"(anonymous_46)",decl:{start:{line:1182,column:56},end:{line:1182,column:57}},loc:{start:{line:1182,column:70},end:{line:1182,column:87}},line:1182},"47":{name:"(anonymous_47)",decl:{start:{line:1266,column:4},end:{line:1266,column:5}},loc:{start:{line:1266,column:64},end:{line:1318,column:5}},line:1266},"48":{name:"(anonymous_48)",decl:{start:{line:1320,column:4},end:{line:1320,column:5}},loc:{start:{line:1320,column:98},end:{line:1388,column:5}},line:1320},"49":{name:"(anonymous_49)",decl:{start:{line:1437,column:4},end:{line:1437,column:5}},loc:{start:{line:1437,column:18},end:{line:1439,column:5}},line:1437},"50":{name:"(anonymous_50)",decl:{start:{line:1441,column:4},end:{line:1441,column:5}},loc:{start:{line:1441,column:20},end:{line:1443,column:5}},line:1441},"51":{name:"(anonymous_51)",decl:{start:{line:1446,column:4},end:{line:1446,column:5}},loc:{start:{line:1446,column:61},end:{line:1461,column:5}},line:1446},"52":{name:"(anonymous_52)",decl:{start:{line:1464,column:4},end:{line:1464,column:5}},loc:{start:{line:1464,column:33},end:{line:1538,column:5}},line:1464},"53":{name:"(anonymous_53)",decl:{start:{line:1540,column:4},end:{line:1540,column:5}},loc:{start:{line:1540,column:31},end:{line:1543,column:5}},line:1540},"54":{name:"(anonymous_54)",decl:{start:{line:1550,column:4},end:{line:1550,column:5}},loc:{start:{line:1550,column:38},end:{line:1564,column:5}},line:1550},"55":{name:"(anonymous_55)",decl:{start:{line:1573,column:4},end:{line:1573,column:5}},loc:{start:{line:1573,column:62},end:{line:1596,column:5}},line:1573},"56":{name:"(anonymous_56)",decl:{start:{line:1598,column:4},end:{line:1598,column:5}},loc:{start:{line:1598,column:33},end:{line:1604,column:5}},line:1598},"57":{name:"(anonymous_57)",decl:{start:{line:1616,column:4},end:{line:1616,column:5}},loc:{start:{line:1616,column:38},end:{line:1642,column:5}},line:1616},"58":{name:"(anonymous_58)",decl:{start:{line:1644,column:4},end:{line:1644,column:5}},loc:{start:{line:1644,column:30},end:{line:1653,column:5}},line:1644},"59":{name:"(anonymous_59)",decl:{start:{line:1663,column:4},end:{line:1663,column:5}},loc:{start:{line:1663,column:41},end:{line:1683,column:5}},line:1663},"60":{name:"(anonymous_60)",decl:{start:{line:1685,column:4},end:{line:1685,column:5}},loc:{start:{line:1685,column:31},end:{line:1693,column:5}},line:1685},"61":{name:"(anonymous_61)",decl:{start:{line:1695,column:4},end:{line:1695,column:5}},loc:{start:{line:1695,column:31},end:{line:1704,column:5}},line:1695},"62":{name:"(anonymous_62)",decl:{start:{line:1713,column:4},end:{line:1713,column:5}},loc:{start:{line:1713,column:126},end:{line:1779,column:5}},line:1713},"63":{name:"(anonymous_63)",decl:{start:{line:1782,column:4},end:{line:1782,column:5}},loc:{start:{line:1782,column:56},end:{line:1847,column:5}},line:1782},"64":{name:"(anonymous_64)",decl:{start:{line:1857,column:4},end:{line:1857,column:5}},loc:{start:{line:1857,column:119},end:{line:1893,column:5}},line:1857},"65":{name:"(anonymous_65)",decl:{start:{line:1899,column:4},end:{line:1899,column:5}},loc:{start:{line:1899,column:28},end:{line:1915,column:5}},line:1899},"66":{name:"(anonymous_66)",decl:{start:{line:1919,column:4},end:{line:1919,column:5}},loc:{start:{line:1919,column:35},end:{line:1980,column:5}},line:1919},"67":{name:"(anonymous_67)",decl:{start:{line:1990,column:4},end:{line:1990,column:5}},loc:{start:{line:1990,column:18},end:{line:1993,column:5}},line:1990},"68":{name:"(anonymous_68)",decl:{start:{line:1995,column:4},end:{line:1995,column:5}},loc:{start:{line:1995,column:20},end:{line:1997,column:5}},line:1995},"69":{name:"(anonymous_69)",decl:{start:{line:2000,column:4},end:{line:2000,column:5}},loc:{start:{line:2000,column:33},end:{line:2078,column:5}},line:2000},"70":{name:"(anonymous_70)",decl:{start:{line:2080,column:4},end:{line:2080,column:5}},loc:{start:{line:2080,column:31},end:{line:2083,column:5}},line:2080},"71":{name:"(anonymous_71)",decl:{start:{line:2087,column:4},end:{line:2087,column:5}},loc:{start:{line:2087,column:61},end:{line:2102,column:5}},line:2087},"72":{name:"(anonymous_72)",decl:{start:{line:2105,column:4},end:{line:2105,column:5}},loc:{start:{line:2105,column:51},end:{line:2136,column:5}},line:2105},"73":{name:"(anonymous_73)",decl:{start:{line:2139,column:4},end:{line:2139,column:5}},loc:{start:{line:2139,column:23},end:{line:2165,column:5}},line:2139},"74":{name:"(anonymous_74)",decl:{start:{line:2169,column:4},end:{line:2169,column:5}},loc:{start:{line:2169,column:32},end:{line:2205,column:5}},line:2169},"75":{name:"(anonymous_75)",decl:{start:{line:2214,column:4},end:{line:2214,column:5}},loc:{start:{line:2214,column:42},end:{line:2268,column:5}},line:2214},"76":{name:"(anonymous_76)",decl:{start:{line:2271,column:4},end:{line:2271,column:5}},loc:{start:{line:2271,column:42},end:{line:2341,column:5}},line:2271},"77":{name:"(anonymous_77)",decl:{start:{line:2345,column:4},end:{line:2345,column:5}},loc:{start:{line:2345,column:44},end:{line:2350,column:5}},line:2345},"78":{name:"(anonymous_78)",decl:{start:{line:2346,column:30},end:{line:2346,column:31}},loc:{start:{line:2346,column:39},end:{line:2346,column:215}},line:2346},"79":{name:"(anonymous_79)",decl:{start:{line:2347,column:30},end:{line:2347,column:31}},loc:{start:{line:2347,column:39},end:{line:2347,column:118}},line:2347},"80":{name:"(anonymous_80)",decl:{start:{line:2348,column:30},end:{line:2348,column:31}},loc:{start:{line:2348,column:39},end:{line:2348,column:113}},line:2348},"81":{name:"(anonymous_81)",decl:{start:{line:2354,column:4},end:{line:2354,column:5}},loc:{start:{line:2354,column:45},end:{line:2359,column:5}},line:2354},"82":{name:"(anonymous_82)",decl:{start:{line:2355,column:30},end:{line:2355,column:31}},loc:{start:{line:2355,column:39},end:{line:2355,column:215}},line:2355},"83":{name:"(anonymous_83)",decl:{start:{line:2356,column:30},end:{line:2356,column:31}},loc:{start:{line:2356,column:39},end:{line:2356,column:118}},line:2356},"84":{name:"(anonymous_84)",decl:{start:{line:2357,column:30},end:{line:2357,column:31}},loc:{start:{line:2357,column:39},end:{line:2357,column:113}},line:2357},"85":{name:"(anonymous_85)",decl:{start:{line:2366,column:4},end:{line:2366,column:5}},loc:{start:{line:2366,column:63},end:{line:2546,column:5}},line:2366},"86":{name:"(anonymous_86)",decl:{start:{line:2462,column:44},end:{line:2462,column:45}},loc:{start:{line:2462,column:51},end:{line:2462,column:76}},line:2462},"87":{name:"(anonymous_87)",decl:{start:{line:2467,column:44},end:{line:2467,column:45}},loc:{start:{line:2467,column:51},end:{line:2467,column:58}},line:2467},"88":{name:"(anonymous_88)",decl:{start:{line:2548,column:4},end:{line:2548,column:5}},loc:{start:{line:2548,column:50},end:{line:2633,column:5}},line:2548},"89":{name:"(anonymous_89)",decl:{start:{line:2637,column:4},end:{line:2637,column:5}},loc:{start:{line:2637,column:64},end:{line:2818,column:5}},line:2637},"90":{name:"(anonymous_90)",decl:{start:{line:2720,column:44},end:{line:2720,column:45}},loc:{start:{line:2720,column:51},end:{line:2720,column:76}},line:2720},"91":{name:"(anonymous_91)",decl:{start:{line:2724,column:44},end:{line:2724,column:45}},loc:{start:{line:2724,column:51},end:{line:2724,column:58}},line:2724},"92":{name:"(anonymous_92)",decl:{start:{line:2821,column:4},end:{line:2821,column:5}},loc:{start:{line:2821,column:66},end:{line:3063,column:5}},line:2821},"93":{name:"(anonymous_93)",decl:{start:{line:3068,column:4},end:{line:3068,column:5}},loc:{start:{line:3068,column:63},end:{line:3244,column:5}},line:3068},"94":{name:"(anonymous_94)",decl:{start:{line:3249,column:4},end:{line:3249,column:5}},loc:{start:{line:3249,column:63},end:{line:3422,column:5}},line:3249},"95":{name:"(anonymous_95)",decl:{start:{line:3427,column:4},end:{line:3427,column:5}},loc:{start:{line:3427,column:65},end:{line:3607,column:5}},line:3427},"96":{name:"(anonymous_96)",decl:{start:{line:3874,column:4},end:{line:3874,column:5}},loc:{start:{line:3874,column:29},end:{line:3881,column:5}},line:3874}},branchMap:{"0":{loc:{start:{line:141,column:8},end:{line:143,column:9}},type:"if",locations:[{start:{line:141,column:8},end:{line:143,column:9}},{start:{line:141,column:8},end:{line:143,column:9}}],line:141},"1":{loc:{start:{line:150,column:12},end:{line:152,column:13}},type:"if",locations:[{start:{line:150,column:12},end:{line:152,column:13}},{start:{line:150,column:12},end:{line:152,column:13}}],line:150},"2":{loc:{start:{line:175,column:12},end:{line:178,column:13}},type:"if",locations:[{start:{line:175,column:12},end:{line:178,column:13}},{start:{line:175,column:12},end:{line:178,column:13}}],line:175},"3":{loc:{start:{line:179,column:12},end:{line:181,column:13}},type:"if",locations:[{start:{line:179,column:12},end:{line:181,column:13}},{start:{line:179,column:12},end:{line:181,column:13}}],line:179},"4":{loc:{start:{line:184,column:8},end:{line:186,column:9}},type:"if",locations:[{start:{line:184,column:8},end:{line:186,column:9}},{start:{line:184,column:8},end:{line:186,column:9}}],line:184},"5":{loc:{start:{line:184,column:12},end:{line:184,column:54}},type:"binary-expr",locations:[{start:{line:184,column:12},end:{line:184,column:43}},{start:{line:184,column:47},end:{line:184,column:54}}],line:184},"6":{loc:{start:{line:189,column:8},end:{line:191,column:9}},type:"if",locations:[{start:{line:189,column:8},end:{line:191,column:9}},{start:{line:189,column:8},end:{line:191,column:9}}],line:189},"7":{loc:{start:{line:254,column:12},end:{line:257,column:13}},type:"if",locations:[{start:{line:254,column:12},end:{line:257,column:13}},{start:{line:254,column:12},end:{line:257,column:13}}],line:254},"8":{loc:{start:{line:254,column:16},end:{line:254,column:55}},type:"binary-expr",locations:[{start:{line:254,column:16},end:{line:254,column:31}},{start:{line:254,column:35},end:{line:254,column:55}}],line:254},"9":{loc:{start:{line:258,column:12},end:{line:260,column:13}},type:"if",locations:[{start:{line:258,column:12},end:{line:260,column:13}},{start:{line:258,column:12},end:{line:260,column:13}}],line:258},"10":{loc:{start:{line:262,column:8},end:{line:264,column:9}},type:"if",locations:[{start:{line:262,column:8},end:{line:264,column:9}},{start:{line:262,column:8},end:{line:264,column:9}}],line:262},"11":{loc:{start:{line:262,column:12},end:{line:262,column:60}},type:"binary-expr",locations:[{start:{line:262,column:12},end:{line:262,column:35}},{start:{line:262,column:39},end:{line:262,column:60}}],line:262},"12":{loc:{start:{line:282,column:8},end:{line:284,column:9}},type:"if",locations:[{start:{line:282,column:8},end:{line:284,column:9}},{start:{line:282,column:8},end:{line:284,column:9}}],line:282},"13":{loc:{start:{line:292,column:3},end:{line:314,column:4}},type:"if",locations:[{start:{line:292,column:3},end:{line:314,column:4}},{start:{line:292,column:3},end:{line:314,column:4}}],line:292},"14":{loc:{start:{line:292,column:7},end:{line:292,column:46}},type:"binary-expr",locations:[{start:{line:292,column:7},end:{line:292,column:16}},{start:{line:292,column:20},end:{line:292,column:46}}],line:292},"15":{loc:{start:{line:295,column:4},end:{line:312,column:5}},type:"if",locations:[{start:{line:295,column:4},end:{line:312,column:5}},{start:{line:295,column:4},end:{line:312,column:5}}],line:295},"16":{loc:{start:{line:295,column:8},end:{line:295,column:39}},type:"binary-expr",locations:[{start:{line:295,column:8},end:{line:295,column:17}},{start:{line:295,column:21},end:{line:295,column:39}}],line:295},"17":{loc:{start:{line:375,column:8},end:{line:379,column:9}},type:"if",locations:[{start:{line:375,column:8},end:{line:379,column:9}},{start:{line:375,column:8},end:{line:379,column:9}}],line:375},"18":{loc:{start:{line:377,column:14},end:{line:379,column:9}},type:"if",locations:[{start:{line:377,column:14},end:{line:379,column:9}},{start:{line:377,column:14},end:{line:379,column:9}}],line:377},"19":{loc:{start:{line:422,column:8},end:{line:424,column:9}},type:"if",locations:[{start:{line:422,column:8},end:{line:424,column:9}},{start:{line:422,column:8},end:{line:424,column:9}}],line:422},"20":{loc:{start:{line:422,column:12},end:{line:422,column:66}},type:"binary-expr",locations:[{start:{line:422,column:12},end:{line:422,column:39}},{start:{line:422,column:43},end:{line:422,column:66}}],line:422},"21":{loc:{start:{line:427,column:8},end:{line:429,column:9}},type:"if",locations:[{start:{line:427,column:8},end:{line:429,column:9}},{start:{line:427,column:8},end:{line:429,column:9}}],line:427},"22":{loc:{start:{line:437,column:12},end:{line:439,column:13}},type:"if",locations:[{start:{line:437,column:12},end:{line:439,column:13}},{start:{line:437,column:12},end:{line:439,column:13}}],line:437},"23":{loc:{start:{line:442,column:8},end:{line:488,column:9}},type:"switch",locations:[{start:{line:443,column:12},end:{line:449,column:17}},{start:{line:450,column:12},end:{line:455,column:17}},{start:{line:456,column:12},end:{line:461,column:17}},{start:{line:462,column:12},end:{line:467,column:17}},{start:{line:468,column:12},end:{line:473,column:17}},{start:{line:474,column:12},end:{line:479,column:17}},{start:{line:480,column:12},end:{line:485,column:17}}],line:442},"24":{loc:{start:{line:444,column:16},end:{line:449,column:17}},type:"if",locations:[{start:{line:444,column:16},end:{line:449,column:17}},{start:{line:444,column:16},end:{line:449,column:17}}],line:444},"25":{loc:{start:{line:451,column:16},end:{line:455,column:17}},type:"if",locations:[{start:{line:451,column:16},end:{line:455,column:17}},{start:{line:451,column:16},end:{line:455,column:17}}],line:451},"26":{loc:{start:{line:457,column:16},end:{line:461,column:17}},type:"if",locations:[{start:{line:457,column:16},end:{line:461,column:17}},{start:{line:457,column:16},end:{line:461,column:17}}],line:457},"27":{loc:{start:{line:463,column:16},end:{line:467,column:17}},type:"if",locations:[{start:{line:463,column:16},end:{line:467,column:17}},{start:{line:463,column:16},end:{line:467,column:17}}],line:463},"28":{loc:{start:{line:469,column:16},end:{line:473,column:17}},type:"if",locations:[{start:{line:469,column:16},end:{line:473,column:17}},{start:{line:469,column:16},end:{line:473,column:17}}],line:469},"29":{loc:{start:{line:475,column:16},end:{line:479,column:17}},type:"if",locations:[{start:{line:475,column:16},end:{line:479,column:17}},{start:{line:475,column:16},end:{line:479,column:17}}],line:475},"30":{loc:{start:{line:481,column:16},end:{line:485,column:17}},type:"if",locations:[{start:{line:481,column:16},end:{line:485,column:17}},{start:{line:481,column:16},end:{line:485,column:17}}],line:481},"31":{loc:{start:{line:509,column:8},end:{line:515,column:9}},type:"if",locations:[{start:{line:509,column:8},end:{line:515,column:9}},{start:{line:509,column:8},end:{line:515,column:9}}],line:509},"32":{loc:{start:{line:511,column:14},end:{line:515,column:9}},type:"if",locations:[{start:{line:511,column:14},end:{line:515,column:9}},{start:{line:511,column:14},end:{line:515,column:9}}],line:511},"33":{loc:{start:{line:526,column:8},end:{line:530,column:9}},type:"if",locations:[{start:{line:526,column:8},end:{line:530,column:9}},{start:{line:526,column:8},end:{line:530,column:9}}],line:526},"34":{loc:{start:{line:526,column:12},end:{line:526,column:46}},type:"binary-expr",locations:[{start:{line:526,column:12},end:{line:526,column:21}},{start:{line:526,column:25},end:{line:526,column:46}}],line:526},"35":{loc:{start:{line:548,column:8},end:{line:552,column:9}},type:"if",locations:[{start:{line:548,column:8},end:{line:552,column:9}},{start:{line:548,column:8},end:{line:552,column:9}}],line:548},"36":{loc:{start:{line:550,column:14},end:{line:552,column:9}},type:"if",locations:[{start:{line:550,column:14},end:{line:552,column:9}},{start:{line:550,column:14},end:{line:552,column:9}}],line:550},"37":{loc:{start:{line:575,column:8},end:{line:579,column:9}},type:"if",locations:[{start:{line:575,column:8},end:{line:579,column:9}},{start:{line:575,column:8},end:{line:579,column:9}}],line:575},"38":{loc:{start:{line:577,column:14},end:{line:579,column:9}},type:"if",locations:[{start:{line:577,column:14},end:{line:579,column:9}},{start:{line:577,column:14},end:{line:579,column:9}}],line:577},"39":{loc:{start:{line:598,column:8},end:{line:601,column:9}},type:"if",locations:[{start:{line:598,column:8},end:{line:601,column:9}},{start:{line:598,column:8},end:{line:601,column:9}}],line:598},"40":{loc:{start:{line:598,column:12},end:{line:598,column:38}},type:"binary-expr",locations:[{start:{line:598,column:12},end:{line:598,column:17}},{start:{line:598,column:21},end:{line:598,column:38}}],line:598},"41":{loc:{start:{line:616,column:8},end:{line:618,column:9}},type:"if",locations:[{start:{line:616,column:8},end:{line:618,column:9}},{start:{line:616,column:8},end:{line:618,column:9}}],line:616},"42":{loc:{start:{line:619,column:8},end:{line:621,column:9}},type:"if",locations:[{start:{line:619,column:8},end:{line:621,column:9}},{start:{line:619,column:8},end:{line:621,column:9}}],line:619},"43":{loc:{start:{line:632,column:8},end:{line:634,column:9}},type:"if",locations:[{start:{line:632,column:8},end:{line:634,column:9}},{start:{line:632,column:8},end:{line:634,column:9}}],line:632},"44":{loc:{start:{line:829,column:8},end:{line:831,column:9}},type:"if",locations:[{start:{line:829,column:8},end:{line:831,column:9}},{start:{line:829,column:8},end:{line:831,column:9}}],line:829},"45":{loc:{start:{line:829,column:12},end:{line:829,column:46}},type:"binary-expr",locations:[{start:{line:829,column:12},end:{line:829,column:21}},{start:{line:829,column:25},end:{line:829,column:46}}],line:829},"46":{loc:{start:{line:834,column:8},end:{line:836,column:9}},type:"if",locations:[{start:{line:834,column:8},end:{line:836,column:9}},{start:{line:834,column:8},end:{line:836,column:9}}],line:834},"47":{loc:{start:{line:847,column:8},end:{line:849,column:9}},type:"if",locations:[{start:{line:847,column:8},end:{line:849,column:9}},{start:{line:847,column:8},end:{line:849,column:9}}],line:847},"48":{loc:{start:{line:847,column:11},end:{line:847,column:45}},type:"binary-expr",locations:[{start:{line:847,column:11},end:{line:847,column:20}},{start:{line:847,column:24},end:{line:847,column:45}}],line:847},"49":{loc:{start:{line:855,column:8},end:{line:857,column:9}},type:"if",locations:[{start:{line:855,column:8},end:{line:857,column:9}},{start:{line:855,column:8},end:{line:857,column:9}}],line:855},"50":{loc:{start:{line:860,column:8},end:{line:862,column:9}},type:"if",locations:[{start:{line:860,column:8},end:{line:862,column:9}},{start:{line:860,column:8},end:{line:862,column:9}}],line:860},"51":{loc:{start:{line:887,column:8},end:{line:889,column:9}},type:"if",locations:[{start:{line:887,column:8},end:{line:889,column:9}},{start:{line:887,column:8},end:{line:889,column:9}}],line:887},"52":{loc:{start:{line:887,column:12},end:{line:887,column:46}},type:"binary-expr",locations:[{start:{line:887,column:12},end:{line:887,column:21}},{start:{line:887,column:25},end:{line:887,column:46}}],line:887},"53":{loc:{start:{line:892,column:8},end:{line:894,column:9}},type:"if",locations:[{start:{line:892,column:8},end:{line:894,column:9}},{start:{line:892,column:8},end:{line:894,column:9}}],line:892},"54":{loc:{start:{line:895,column:8},end:{line:897,column:9}},type:"if",locations:[{start:{line:895,column:8},end:{line:897,column:9}},{start:{line:895,column:8},end:{line:897,column:9}}],line:895},"55":{loc:{start:{line:898,column:8},end:{line:900,column:9}},type:"if",locations:[{start:{line:898,column:8},end:{line:900,column:9}},{start:{line:898,column:8},end:{line:900,column:9}}],line:898},"56":{loc:{start:{line:906,column:8},end:{line:928,column:9}},type:"if",locations:[{start:{line:906,column:8},end:{line:928,column:9}},{start:{line:906,column:8},end:{line:928,column:9}}],line:906},"57":{loc:{start:{line:978,column:8},end:{line:980,column:9}},type:"if",locations:[{start:{line:978,column:8},end:{line:980,column:9}},{start:{line:978,column:8},end:{line:980,column:9}}],line:978},"58":{loc:{start:{line:978,column:12},end:{line:978,column:46}},type:"binary-expr",locations:[{start:{line:978,column:12},end:{line:978,column:21}},{start:{line:978,column:25},end:{line:978,column:46}}],line:978},"59":{loc:{start:{line:983,column:8},end:{line:985,column:9}},type:"if",locations:[{start:{line:983,column:8},end:{line:985,column:9}},{start:{line:983,column:8},end:{line:985,column:9}}],line:983},"60":{loc:{start:{line:988,column:8},end:{line:990,column:9}},type:"if",locations:[{start:{line:988,column:8},end:{line:990,column:9}},{start:{line:988,column:8},end:{line:990,column:9}}],line:988},"61":{loc:{start:{line:992,column:8},end:{line:994,column:9}},type:"if",locations:[{start:{line:992,column:8},end:{line:994,column:9}},{start:{line:992,column:8},end:{line:994,column:9}}],line:992},"62":{loc:{start:{line:997,column:8},end:{line:1004,column:9}},type:"if",locations:[{start:{line:997,column:8},end:{line:1004,column:9}},{start:{line:997,column:8},end:{line:1004,column:9}}],line:997},"63":{loc:{start:{line:1067,column:8},end:{line:1069,column:9}},type:"if",locations:[{start:{line:1067,column:8},end:{line:1069,column:9}},{start:{line:1067,column:8},end:{line:1069,column:9}}],line:1067},"64":{loc:{start:{line:1067,column:11},end:{line:1067,column:45}},type:"binary-expr",locations:[{start:{line:1067,column:11},end:{line:1067,column:20}},{start:{line:1067,column:24},end:{line:1067,column:45}}],line:1067},"65":{loc:{start:{line:1072,column:8},end:{line:1074,column:9}},type:"if",locations:[{start:{line:1072,column:8},end:{line:1074,column:9}},{start:{line:1072,column:8},end:{line:1074,column:9}}],line:1072},"66":{loc:{start:{line:1075,column:8},end:{line:1077,column:9}},type:"if",locations:[{start:{line:1075,column:8},end:{line:1077,column:9}},{start:{line:1075,column:8},end:{line:1077,column:9}}],line:1075},"67":{loc:{start:{line:1085,column:8},end:{line:1087,column:9}},type:"if",locations:[{start:{line:1085,column:8},end:{line:1087,column:9}},{start:{line:1085,column:8},end:{line:1087,column:9}}],line:1085},"68":{loc:{start:{line:1089,column:8},end:{line:1093,column:9}},type:"if",locations:[{start:{line:1089,column:8},end:{line:1093,column:9}},{start:{line:1089,column:8},end:{line:1093,column:9}}],line:1089},"69":{loc:{start:{line:1118,column:56},end:{line:1118,column:97}},type:"binary-expr",locations:[{start:{line:1118,column:56},end:{line:1118,column:77}},{start:{line:1118,column:81},end:{line:1118,column:97}}],line:1118},"70":{loc:{start:{line:1131,column:8},end:{line:1133,column:9}},type:"if",locations:[{start:{line:1131,column:8},end:{line:1133,column:9}},{start:{line:1131,column:8},end:{line:1133,column:9}}],line:1131},"71":{loc:{start:{line:1131,column:12},end:{line:1131,column:50}},type:"binary-expr",locations:[{start:{line:1131,column:12},end:{line:1131,column:23}},{start:{line:1131,column:27},end:{line:1131,column:50}}],line:1131},"72":{loc:{start:{line:1136,column:8},end:{line:1138,column:9}},type:"if",locations:[{start:{line:1136,column:8},end:{line:1138,column:9}},{start:{line:1136,column:8},end:{line:1138,column:9}}],line:1136},"73":{loc:{start:{line:1143,column:8},end:{line:1145,column:9}},type:"if",locations:[{start:{line:1143,column:8},end:{line:1145,column:9}},{start:{line:1143,column:8},end:{line:1145,column:9}}],line:1143},"74":{loc:{start:{line:1143,column:12},end:{line:1143,column:50}},type:"binary-expr",locations:[{start:{line:1143,column:12},end:{line:1143,column:23}},{start:{line:1143,column:27},end:{line:1143,column:50}}],line:1143},"75":{loc:{start:{line:1150,column:8},end:{line:1152,column:9}},type:"if",locations:[{start:{line:1150,column:8},end:{line:1152,column:9}},{start:{line:1150,column:8},end:{line:1152,column:9}}],line:1150},"76":{loc:{start:{line:1153,column:8},end:{line:1155,column:9}},type:"if",locations:[{start:{line:1153,column:8},end:{line:1155,column:9}},{start:{line:1153,column:8},end:{line:1155,column:9}}],line:1153},"77":{loc:{start:{line:1168,column:8},end:{line:1170,column:9}},type:"if",locations:[{start:{line:1168,column:8},end:{line:1170,column:9}},{start:{line:1168,column:8},end:{line:1170,column:9}}],line:1168},"78":{loc:{start:{line:1189,column:8},end:{line:1191,column:9}},type:"if",locations:[{start:{line:1189,column:8},end:{line:1191,column:9}},{start:{line:1189,column:8},end:{line:1191,column:9}}],line:1189},"79":{loc:{start:{line:1197,column:8},end:{line:1202,column:9}},type:"if",locations:[{start:{line:1197,column:8},end:{line:1202,column:9}},{start:{line:1197,column:8},end:{line:1202,column:9}}],line:1197},"80":{loc:{start:{line:1208,column:8},end:{line:1210,column:9}},type:"if",locations:[{start:{line:1208,column:8},end:{line:1210,column:9}},{start:{line:1208,column:8},end:{line:1210,column:9}}],line:1208},"81":{loc:{start:{line:1223,column:8},end:{line:1226,column:9}},type:"if",locations:[{start:{line:1223,column:8},end:{line:1226,column:9}},{start:{line:1223,column:8},end:{line:1226,column:9}}],line:1223},"82":{loc:{start:{line:1223,column:12},end:{line:1223,column:31}},type:"binary-expr",locations:[{start:{line:1223,column:12},end:{line:1223,column:18}},{start:{line:1223,column:22},end:{line:1223,column:31}}],line:1223},"83":{loc:{start:{line:1238,column:8},end:{line:1244,column:9}},type:"if",locations:[{start:{line:1238,column:8},end:{line:1244,column:9}},{start:{line:1238,column:8},end:{line:1244,column:9}}],line:1238},"84":{loc:{start:{line:1270,column:8},end:{line:1272,column:9}},type:"if",locations:[{start:{line:1270,column:8},end:{line:1272,column:9}},{start:{line:1270,column:8},end:{line:1272,column:9}}],line:1270},"85":{loc:{start:{line:1270,column:12},end:{line:1270,column:50}},type:"binary-expr",locations:[{start:{line:1270,column:12},end:{line:1270,column:23}},{start:{line:1270,column:27},end:{line:1270,column:50}}],line:1270},"86":{loc:{start:{line:1310,column:8},end:{line:1317,column:9}},type:"if",locations:[{start:{line:1310,column:8},end:{line:1317,column:9}},{start:{line:1310,column:8},end:{line:1317,column:9}}],line:1310},"87":{loc:{start:{line:1324,column:8},end:{line:1326,column:9}},type:"if",locations:[{start:{line:1324,column:8},end:{line:1326,column:9}},{start:{line:1324,column:8},end:{line:1326,column:9}}],line:1324},"88":{loc:{start:{line:1324,column:12},end:{line:1324,column:50}},type:"binary-expr",locations:[{start:{line:1324,column:12},end:{line:1324,column:23}},{start:{line:1324,column:27},end:{line:1324,column:50}}],line:1324},"89":{loc:{start:{line:1380,column:8},end:{line:1387,column:9}},type:"if",locations:[{start:{line:1380,column:8},end:{line:1387,column:9}},{start:{line:1380,column:8},end:{line:1387,column:9}}],line:1380},"90":{loc:{start:{line:1455,column:8},end:{line:1459,column:9}},type:"if",locations:[{start:{line:1455,column:8},end:{line:1459,column:9}},{start:{line:1455,column:8},end:{line:1459,column:9}}],line:1455},"91":{loc:{start:{line:1457,column:14},end:{line:1459,column:9}},type:"if",locations:[{start:{line:1457,column:14},end:{line:1459,column:9}},{start:{line:1457,column:14},end:{line:1459,column:9}}],line:1457},"92":{loc:{start:{line:1466,column:8},end:{line:1468,column:9}},type:"if",locations:[{start:{line:1466,column:8},end:{line:1468,column:9}},{start:{line:1466,column:8},end:{line:1468,column:9}}],line:1466},"93":{loc:{start:{line:1466,column:12},end:{line:1466,column:96}},type:"binary-expr",locations:[{start:{line:1466,column:12},end:{line:1466,column:39}},{start:{line:1466,column:43},end:{line:1466,column:63}},{start:{line:1466,column:67},end:{line:1466,column:96}}],line:1466},"94":{loc:{start:{line:1470,column:8},end:{line:1472,column:9}},type:"if",locations:[{start:{line:1470,column:8},end:{line:1472,column:9}},{start:{line:1470,column:8},end:{line:1472,column:9}}],line:1470},"95":{loc:{start:{line:1478,column:12},end:{line:1480,column:13}},type:"if",locations:[{start:{line:1478,column:12},end:{line:1480,column:13}},{start:{line:1478,column:12},end:{line:1480,column:13}}],line:1478},"96":{loc:{start:{line:1482,column:8},end:{line:1537,column:9}},type:"switch",locations:[{start:{line:1483,column:12},end:{line:1488,column:17}},{start:{line:1489,column:12},end:{line:1494,column:17}},{start:{line:1495,column:12},end:{line:1500,column:17}},{start:{line:1501,column:12},end:{line:1506,column:17}},{start:{line:1507,column:12},end:{line:1512,column:17}},{start:{line:1513,column:12},end:{line:1518,column:17}},{start:{line:1519,column:12},end:{line:1524,column:17}},{start:{line:1525,column:12},end:{line:1530,column:17}},{start:{line:1531,column:12},end:{line:1536,column:17}}],line:1482},"97":{loc:{start:{line:1484,column:16},end:{line:1488,column:17}},type:"if",locations:[{start:{line:1484,column:16},end:{line:1488,column:17}},{start:{line:1484,column:16},end:{line:1488,column:17}}],line:1484},"98":{loc:{start:{line:1490,column:16},end:{line:1494,column:17}},type:"if",locations:[{start:{line:1490,column:16},end:{line:1494,column:17}},{start:{line:1490,column:16},end:{line:1494,column:17}}],line:1490},"99":{loc:{start:{line:1496,column:16},end:{line:1500,column:17}},type:"if",locations:[{start:{line:1496,column:16},end:{line:1500,column:17}},{start:{line:1496,column:16},end:{line:1500,column:17}}],line:1496},"100":{loc:{start:{line:1502,column:16},end:{line:1506,column:17}},type:"if",locations:[{start:{line:1502,column:16},end:{line:1506,column:17}},{start:{line:1502,column:16},end:{line:1506,column:17}}],line:1502},"101":{loc:{start:{line:1508,column:16},end:{line:1512,column:17}},type:"if",locations:[{start:{line:1508,column:16},end:{line:1512,column:17}},{start:{line:1508,column:16},end:{line:1512,column:17}}],line:1508},"102":{loc:{start:{line:1514,column:16},end:{line:1518,column:17}},type:"if",locations:[{start:{line:1514,column:16},end:{line:1518,column:17}},{start:{line:1514,column:16},end:{line:1518,column:17}}],line:1514},"103":{loc:{start:{line:1520,column:16},end:{line:1524,column:17}},type:"if",locations:[{start:{line:1520,column:16},end:{line:1524,column:17}},{start:{line:1520,column:16},end:{line:1524,column:17}}],line:1520},"104":{loc:{start:{line:1526,column:16},end:{line:1530,column:17}},type:"if",locations:[{start:{line:1526,column:16},end:{line:1530,column:17}},{start:{line:1526,column:16},end:{line:1530,column:17}}],line:1526},"105":{loc:{start:{line:1532,column:16},end:{line:1536,column:17}},type:"if",locations:[{start:{line:1532,column:16},end:{line:1536,column:17}},{start:{line:1532,column:16},end:{line:1536,column:17}}],line:1532},"106":{loc:{start:{line:1557,column:8},end:{line:1563,column:9}},type:"if",locations:[{start:{line:1557,column:8},end:{line:1563,column:9}},{start:{line:1557,column:8},end:{line:1563,column:9}}],line:1557},"107":{loc:{start:{line:1559,column:14},end:{line:1563,column:9}},type:"if",locations:[{start:{line:1559,column:14},end:{line:1563,column:9}},{start:{line:1559,column:14},end:{line:1563,column:9}}],line:1559},"108":{loc:{start:{line:1584,column:8},end:{line:1595,column:9}},type:"if",locations:[{start:{line:1584,column:8},end:{line:1595,column:9}},{start:{line:1584,column:8},end:{line:1595,column:9}}],line:1584},"109":{loc:{start:{line:1589,column:14},end:{line:1595,column:9}},type:"if",locations:[{start:{line:1589,column:14},end:{line:1595,column:9}},{start:{line:1589,column:14},end:{line:1595,column:9}}],line:1589},"110":{loc:{start:{line:1600,column:8},end:{line:1602,column:9}},type:"if",locations:[{start:{line:1600,column:8},end:{line:1602,column:9}},{start:{line:1600,column:8},end:{line:1602,column:9}}],line:1600},"111":{loc:{start:{line:1600,column:12},end:{line:1600,column:39}},type:"binary-expr",locations:[{start:{line:1600,column:12},end:{line:1600,column:20}},{start:{line:1600,column:24},end:{line:1600,column:39}}],line:1600},"112":{loc:{start:{line:1717,column:8},end:{line:1719,column:9}},type:"if",locations:[{start:{line:1717,column:8},end:{line:1719,column:9}},{start:{line:1717,column:8},end:{line:1719,column:9}}],line:1717},"113":{loc:{start:{line:1717,column:12},end:{line:1717,column:60}},type:"binary-expr",locations:[{start:{line:1717,column:12},end:{line:1717,column:28}},{start:{line:1717,column:32},end:{line:1717,column:60}}],line:1717},"114":{loc:{start:{line:1722,column:8},end:{line:1724,column:9}},type:"if",locations:[{start:{line:1722,column:8},end:{line:1724,column:9}},{start:{line:1722,column:8},end:{line:1724,column:9}}],line:1722},"115":{loc:{start:{line:1734,column:8},end:{line:1736,column:9}},type:"if",locations:[{start:{line:1734,column:8},end:{line:1736,column:9}},{start:{line:1734,column:8},end:{line:1736,column:9}}],line:1734},"116":{loc:{start:{line:1734,column:12},end:{line:1734,column:50}},type:"binary-expr",locations:[{start:{line:1734,column:12},end:{line:1734,column:23}},{start:{line:1734,column:27},end:{line:1734,column:50}}],line:1734},"117":{loc:{start:{line:1739,column:8},end:{line:1741,column:9}},type:"if",locations:[{start:{line:1739,column:8},end:{line:1741,column:9}},{start:{line:1739,column:8},end:{line:1741,column:9}}],line:1739},"118":{loc:{start:{line:1744,column:8},end:{line:1746,column:9}},type:"if",locations:[{start:{line:1744,column:8},end:{line:1746,column:9}},{start:{line:1744,column:8},end:{line:1746,column:9}}],line:1744},"119":{loc:{start:{line:1753,column:8},end:{line:1755,column:9}},type:"if",locations:[{start:{line:1753,column:8},end:{line:1755,column:9}},{start:{line:1753,column:8},end:{line:1755,column:9}}],line:1753},"120":{loc:{start:{line:1753,column:12},end:{line:1753,column:62}},type:"binary-expr",locations:[{start:{line:1753,column:12},end:{line:1753,column:29}},{start:{line:1753,column:33},end:{line:1753,column:62}}],line:1753},"121":{loc:{start:{line:1757,column:8},end:{line:1759,column:9}},type:"if",locations:[{start:{line:1757,column:8},end:{line:1759,column:9}},{start:{line:1757,column:8},end:{line:1759,column:9}}],line:1757},"122":{loc:{start:{line:1757,column:13},end:{line:1757,column:145}},type:"binary-expr",locations:[{start:{line:1757,column:13},end:{line:1757,column:59}},{start:{line:1757,column:63},end:{line:1757,column:105}},{start:{line:1757,column:109},end:{line:1757,column:145}}],line:1757},"123":{loc:{start:{line:1784,column:8},end:{line:1786,column:9}},type:"if",locations:[{start:{line:1784,column:8},end:{line:1786,column:9}},{start:{line:1784,column:8},end:{line:1786,column:9}}],line:1784},"124":{loc:{start:{line:1784,column:12},end:{line:1784,column:50}},type:"binary-expr",locations:[{start:{line:1784,column:12},end:{line:1784,column:23}},{start:{line:1784,column:27},end:{line:1784,column:50}}],line:1784},"125":{loc:{start:{line:1790,column:8},end:{line:1792,column:9}},type:"if",locations:[{start:{line:1790,column:8},end:{line:1792,column:9}},{start:{line:1790,column:8},end:{line:1792,column:9}}],line:1790},"126":{loc:{start:{line:1790,column:12},end:{line:1790,column:56}},type:"binary-expr",locations:[{start:{line:1790,column:12},end:{line:1790,column:26}},{start:{line:1790,column:30},end:{line:1790,column:56}}],line:1790},"127":{loc:{start:{line:1795,column:8},end:{line:1797,column:9}},type:"if",locations:[{start:{line:1795,column:8},end:{line:1797,column:9}},{start:{line:1795,column:8},end:{line:1797,column:9}}],line:1795},"128":{loc:{start:{line:1795,column:11},end:{line:1795,column:50}},type:"binary-expr",locations:[{start:{line:1795,column:11},end:{line:1795,column:30}},{start:{line:1795,column:34},end:{line:1795,column:50}}],line:1795},"129":{loc:{start:{line:1843,column:8},end:{line:1845,column:9}},type:"if",locations:[{start:{line:1843,column:8},end:{line:1845,column:9}},{start:{line:1843,column:8},end:{line:1845,column:9}}],line:1843},"130":{loc:{start:{line:1860,column:8},end:{line:1862,column:9}},type:"if",locations:[{start:{line:1860,column:8},end:{line:1862,column:9}},{start:{line:1860,column:8},end:{line:1862,column:9}}],line:1860},"131":{loc:{start:{line:1860,column:11},end:{line:1860,column:49}},type:"binary-expr",locations:[{start:{line:1860,column:11},end:{line:1860,column:22}},{start:{line:1860,column:26},end:{line:1860,column:49}}],line:1860},"132":{loc:{start:{line:1868,column:8},end:{line:1870,column:9}},type:"if",locations:[{start:{line:1868,column:8},end:{line:1870,column:9}},{start:{line:1868,column:8},end:{line:1870,column:9}}],line:1868},"133":{loc:{start:{line:1868,column:12},end:{line:1868,column:48}},type:"binary-expr",locations:[{start:{line:1868,column:12},end:{line:1868,column:22}},{start:{line:1868,column:26},end:{line:1868,column:48}}],line:1868},"134":{loc:{start:{line:1872,column:8},end:{line:1875,column:9}},type:"if",locations:[{start:{line:1872,column:8},end:{line:1875,column:9}},{start:{line:1872,column:8},end:{line:1875,column:9}}],line:1872},"135":{loc:{start:{line:1877,column:8},end:{line:1880,column:9}},type:"if",locations:[{start:{line:1877,column:8},end:{line:1880,column:9}},{start:{line:1877,column:8},end:{line:1880,column:9}}],line:1877},"136":{loc:{start:{line:1881,column:8},end:{line:1883,column:9}},type:"if",locations:[{start:{line:1881,column:8},end:{line:1883,column:9}},{start:{line:1881,column:8},end:{line:1883,column:9}}],line:1881},"137":{loc:{start:{line:1886,column:8},end:{line:1888,column:9}},type:"if",locations:[{start:{line:1886,column:8},end:{line:1888,column:9}},{start:{line:1886,column:8},end:{line:1888,column:9}}],line:1886},"138":{loc:{start:{line:1886,column:12},end:{line:1886,column:165}},type:"binary-expr",locations:[{start:{line:1886,column:12},end:{line:1886,column:62}},{start:{line:1886,column:66},end:{line:1886,column:118}},{start:{line:1886,column:122},end:{line:1886,column:165}}],line:1886},"139":{loc:{start:{line:1902,column:8},end:{line:1904,column:9}},type:"if",locations:[{start:{line:1902,column:8},end:{line:1904,column:9}},{start:{line:1902,column:8},end:{line:1904,column:9}}],line:1902},"140":{loc:{start:{line:1902,column:12},end:{line:1902,column:48}},type:"binary-expr",locations:[{start:{line:1902,column:12},end:{line:1902,column:22}},{start:{line:1902,column:26},end:{line:1902,column:48}}],line:1902},"141":{loc:{start:{line:1923,column:8},end:{line:1925,column:9}},type:"if",locations:[{start:{line:1923,column:8},end:{line:1925,column:9}},{start:{line:1923,column:8},end:{line:1925,column:9}}],line:1923},"142":{loc:{start:{line:1923,column:12},end:{line:1923,column:52}},type:"binary-expr",locations:[{start:{line:1923,column:12},end:{line:1923,column:24}},{start:{line:1923,column:28},end:{line:1923,column:52}}],line:1923},"143":{loc:{start:{line:1929,column:8},end:{line:1931,column:9}},type:"if",locations:[{start:{line:1929,column:8},end:{line:1931,column:9}},{start:{line:1929,column:8},end:{line:1931,column:9}}],line:1929},"144":{loc:{start:{line:1929,column:12},end:{line:1929,column:48}},type:"binary-expr",locations:[{start:{line:1929,column:12},end:{line:1929,column:22}},{start:{line:1929,column:26},end:{line:1929,column:48}}],line:1929},"145":{loc:{start:{line:1933,column:8},end:{line:1935,column:9}},type:"if",locations:[{start:{line:1933,column:8},end:{line:1935,column:9}},{start:{line:1933,column:8},end:{line:1935,column:9}}],line:1933},"146":{loc:{start:{line:2002,column:8},end:{line:2004,column:9}},type:"if",locations:[{start:{line:2002,column:8},end:{line:2004,column:9}},{start:{line:2002,column:8},end:{line:2004,column:9}}],line:2002},"147":{loc:{start:{line:2002,column:12},end:{line:2002,column:94}},type:"binary-expr",locations:[{start:{line:2002,column:12},end:{line:2002,column:37}},{start:{line:2002,column:41},end:{line:2002,column:61}},{start:{line:2002,column:65},end:{line:2002,column:94}}],line:2002},"148":{loc:{start:{line:2007,column:8},end:{line:2009,column:9}},type:"if",locations:[{start:{line:2007,column:8},end:{line:2009,column:9}},{start:{line:2007,column:8},end:{line:2009,column:9}}],line:2007},"149":{loc:{start:{line:2015,column:12},end:{line:2017,column:13}},type:"if",locations:[{start:{line:2015,column:12},end:{line:2017,column:13}},{start:{line:2015,column:12},end:{line:2017,column:13}}],line:2015},"150":{loc:{start:{line:2020,column:8},end:{line:2077,column:9}},type:"switch",locations:[{start:{line:2021,column:12},end:{line:2026,column:17}},{start:{line:2027,column:12},end:{line:2032,column:17}},{start:{line:2033,column:12},end:{line:2038,column:17}},{start:{line:2039,column:12},end:{line:2044,column:17}},{start:{line:2051,column:12},end:{line:2056,column:17}},{start:{line:2069,column:12},end:{line:2074,column:17}}],line:2020},"151":{loc:{start:{line:2022,column:16},end:{line:2026,column:17}},type:"if",locations:[{start:{line:2022,column:16},end:{line:2026,column:17}},{start:{line:2022,column:16},end:{line:2026,column:17}}],line:2022},"152":{loc:{start:{line:2028,column:16},end:{line:2032,column:17}},type:"if",locations:[{start:{line:2028,column:16},end:{line:2032,column:17}},{start:{line:2028,column:16},end:{line:2032,column:17}}],line:2028},"153":{loc:{start:{line:2034,column:16},end:{line:2038,column:17}},type:"if",locations:[{start:{line:2034,column:16},end:{line:2038,column:17}},{start:{line:2034,column:16},end:{line:2038,column:17}}],line:2034},"154":{loc:{start:{line:2040,column:16},end:{line:2044,column:17}},type:"if",locations:[{start:{line:2040,column:16},end:{line:2044,column:17}},{start:{line:2040,column:16},end:{line:2044,column:17}}],line:2040},"155":{loc:{start:{line:2052,column:16},end:{line:2056,column:17}},type:"if",locations:[{start:{line:2052,column:16},end:{line:2056,column:17}},{start:{line:2052,column:16},end:{line:2056,column:17}}],line:2052},"156":{loc:{start:{line:2052,column:20},end:{line:2052,column:69}},type:"binary-expr",locations:[{start:{line:2052,column:20},end:{line:2052,column:45}},{start:{line:2052,column:49},end:{line:2052,column:69}}],line:2052},"157":{loc:{start:{line:2070,column:16},end:{line:2074,column:17}},type:"if",locations:[{start:{line:2070,column:16},end:{line:2074,column:17}},{start:{line:2070,column:16},end:{line:2074,column:17}}],line:2070},"158":{loc:{start:{line:2070,column:20},end:{line:2070,column:69}},type:"binary-expr",locations:[{start:{line:2070,column:20},end:{line:2070,column:45}},{start:{line:2070,column:49},end:{line:2070,column:69}}],line:2070},"159":{loc:{start:{line:2096,column:8},end:{line:2100,column:9}},type:"if",locations:[{start:{line:2096,column:8},end:{line:2100,column:9}},{start:{line:2096,column:8},end:{line:2100,column:9}}],line:2096},"160":{loc:{start:{line:2098,column:14},end:{line:2100,column:9}},type:"if",locations:[{start:{line:2098,column:14},end:{line:2100,column:9}},{start:{line:2098,column:14},end:{line:2100,column:9}}],line:2098},"161":{loc:{start:{line:2150,column:12},end:{line:2153,column:13}},type:"if",locations:[{start:{line:2150,column:12},end:{line:2153,column:13}},{start:{line:2150,column:12},end:{line:2153,column:13}}],line:2150},"162":{loc:{start:{line:2154,column:12},end:{line:2156,column:13}},type:"if",locations:[{start:{line:2154,column:12},end:{line:2156,column:13}},{start:{line:2154,column:12},end:{line:2156,column:13}}],line:2154},"163":{loc:{start:{line:2159,column:8},end:{line:2162,column:9}},type:"if",locations:[{start:{line:2159,column:8},end:{line:2162,column:9}},{start:{line:2159,column:8},end:{line:2162,column:9}}],line:2159},"164":{loc:{start:{line:2159,column:12},end:{line:2159,column:60}},type:"binary-expr",locations:[{start:{line:2159,column:12},end:{line:2159,column:35}},{start:{line:2159,column:39},end:{line:2159,column:60}}],line:2159},"165":{loc:{start:{line:2186,column:12},end:{line:2189,column:13}},type:"if",locations:[{start:{line:2186,column:12},end:{line:2189,column:13}},{start:{line:2186,column:12},end:{line:2189,column:13}}],line:2186},"166":{loc:{start:{line:2190,column:12},end:{line:2192,column:13}},type:"if",locations:[{start:{line:2190,column:12},end:{line:2192,column:13}},{start:{line:2190,column:12},end:{line:2192,column:13}}],line:2190},"167":{loc:{start:{line:2195,column:8},end:{line:2197,column:9}},type:"if",locations:[{start:{line:2195,column:8},end:{line:2197,column:9}},{start:{line:2195,column:8},end:{line:2197,column:9}}],line:2195},"168":{loc:{start:{line:2195,column:12},end:{line:2195,column:54}},type:"binary-expr",locations:[{start:{line:2195,column:12},end:{line:2195,column:43}},{start:{line:2195,column:47},end:{line:2195,column:54}}],line:2195},"169":{loc:{start:{line:2200,column:8},end:{line:2202,column:9}},type:"if",locations:[{start:{line:2200,column:8},end:{line:2202,column:9}},{start:{line:2200,column:8},end:{line:2202,column:9}}],line:2200},"170":{loc:{start:{line:2217,column:8},end:{line:2219,column:9}},type:"if",locations:[{start:{line:2217,column:8},end:{line:2219,column:9}},{start:{line:2217,column:8},end:{line:2219,column:9}}],line:2217},"171":{loc:{start:{line:2217,column:12},end:{line:2217,column:50}},type:"binary-expr",locations:[{start:{line:2217,column:12},end:{line:2217,column:23}},{start:{line:2217,column:27},end:{line:2217,column:50}}],line:2217},"172":{loc:{start:{line:2222,column:8},end:{line:2224,column:9}},type:"if",locations:[{start:{line:2222,column:8},end:{line:2224,column:9}},{start:{line:2222,column:8},end:{line:2224,column:9}}],line:2222},"173":{loc:{start:{line:2229,column:8},end:{line:2231,column:9}},type:"if",locations:[{start:{line:2229,column:8},end:{line:2231,column:9}},{start:{line:2229,column:8},end:{line:2231,column:9}}],line:2229},"174":{loc:{start:{line:2263,column:8},end:{line:2265,column:9}},type:"if",locations:[{start:{line:2263,column:8},end:{line:2265,column:9}},{start:{line:2263,column:8},end:{line:2265,column:9}}],line:2263},"175":{loc:{start:{line:2274,column:8},end:{line:2276,column:9}},type:"if",locations:[{start:{line:2274,column:8},end:{line:2276,column:9}},{start:{line:2274,column:8},end:{line:2276,column:9}}],line:2274},"176":{loc:{start:{line:2274,column:12},end:{line:2274,column:48}},type:"binary-expr",locations:[{start:{line:2274,column:12},end:{line:2274,column:22}},{start:{line:2274,column:26},end:{line:2274,column:48}}],line:2274},"177":{loc:{start:{line:2279,column:8},end:{line:2281,column:9}},type:"if",locations:[{start:{line:2279,column:8},end:{line:2281,column:9}},{start:{line:2279,column:8},end:{line:2281,column:9}}],line:2279},"178":{loc:{start:{line:2282,column:8},end:{line:2284,column:9}},type:"if",locations:[{start:{line:2282,column:8},end:{line:2284,column:9}},{start:{line:2282,column:8},end:{line:2284,column:9}}],line:2282},"179":{loc:{start:{line:2312,column:8},end:{line:2339,column:9}},type:"if",locations:[{start:{line:2312,column:8},end:{line:2339,column:9}},{start:{line:2312,column:8},end:{line:2339,column:9}}],line:2312},"180":{loc:{start:{line:2346,column:39},end:{line:2346,column:215}},type:"cond-expr",locations:[{start:{line:2346,column:123},end:{line:2346,column:124}},{start:{line:2346,column:127},end:{line:2346,column:215}}],line:2346},"181":{loc:{start:{line:2346,column:40},end:{line:2346,column:119}},type:"binary-expr",locations:[{start:{line:2346,column:40},end:{line:2346,column:53}},{start:{line:2346,column:57},end:{line:2346,column:69}},{start:{line:2346,column:73},end:{line:2346,column:85}},{start:{line:2346,column:89},end:{line:2346,column:102}},{start:{line:2346,column:106},end:{line:2346,column:119}}],line:2346},"182":{loc:{start:{line:2346,column:127},end:{line:2346,column:215}},type:"cond-expr",locations:[{start:{line:2346,column:210},end:{line:2346,column:212}},{start:{line:2346,column:214},end:{line:2346,column:215}}],line:2346},"183":{loc:{start:{line:2346,column:128},end:{line:2346,column:207}},type:"binary-expr",locations:[{start:{line:2346,column:128},end:{line:2346,column:141}},{start:{line:2346,column:145},end:{line:2346,column:157}},{start:{line:2346,column:161},end:{line:2346,column:173}},{start:{line:2346,column:177},end:{line:2346,column:190}},{start:{line:2346,column:194},end:{line:2346,column:207}}],line:2346},"184":{loc:{start:{line:2347,column:39},end:{line:2347,column:118}},type:"cond-expr",locations:[{start:{line:2347,column:61},end:{line:2347,column:62}},{start:{line:2347,column:66},end:{line:2347,column:117}}],line:2347},"185":{loc:{start:{line:2347,column:66},end:{line:2347,column:117}},type:"cond-expr",locations:[{start:{line:2347,column:88},end:{line:2347,column:90}},{start:{line:2347,column:93},end:{line:2347,column:117}}],line:2347},"186":{loc:{start:{line:2347,column:93},end:{line:2347,column:117}},type:"cond-expr",locations:[{start:{line:2347,column:111},end:{line:2347,column:112}},{start:{line:2347,column:115},end:{line:2347,column:117}}],line:2347},"187":{loc:{start:{line:2348,column:39},end:{line:2348,column:113}},type:"cond-expr",locations:[{start:{line:2348,column:71},end:{line:2348,column:73}},{start:{line:2348,column:76},end:{line:2348,column:112}}],line:2348},"188":{loc:{start:{line:2348,column:40},end:{line:2348,column:67}},type:"binary-expr",locations:[{start:{line:2348,column:40},end:{line:2348,column:52}},{start:{line:2348,column:56},end:{line:2348,column:67}}],line:2348},"189":{loc:{start:{line:2348,column:76},end:{line:2348,column:112}},type:"cond-expr",locations:[{start:{line:2348,column:106},end:{line:2348,column:108}},{start:{line:2348,column:111},end:{line:2348,column:112}}],line:2348},"190":{loc:{start:{line:2348,column:76},end:{line:2348,column:103}},type:"binary-expr",locations:[{start:{line:2348,column:76},end:{line:2348,column:88}},{start:{line:2348,column:92},end:{line:2348,column:103}}],line:2348},"191":{loc:{start:{line:2355,column:39},end:{line:2355,column:215}},type:"cond-expr",locations:[{start:{line:2355,column:123},end:{line:2355,column:124}},{start:{line:2355,column:127},end:{line:2355,column:215}}],line:2355},"192":{loc:{start:{line:2355,column:40},end:{line:2355,column:119}},type:"binary-expr",locations:[{start:{line:2355,column:40},end:{line:2355,column:53}},{start:{line:2355,column:57},end:{line:2355,column:69}},{start:{line:2355,column:73},end:{line:2355,column:85}},{start:{line:2355,column:89},end:{line:2355,column:102}},{start:{line:2355,column:106},end:{line:2355,column:119}}],line:2355},"193":{loc:{start:{line:2355,column:127},end:{line:2355,column:215}},type:"cond-expr",locations:[{start:{line:2355,column:210},end:{line:2355,column:212}},{start:{line:2355,column:214},end:{line:2355,column:215}}],line:2355},"194":{loc:{start:{line:2355,column:128},end:{line:2355,column:207}},type:"binary-expr",locations:[{start:{line:2355,column:128},end:{line:2355,column:141}},{start:{line:2355,column:145},end:{line:2355,column:157}},{start:{line:2355,column:161},end:{line:2355,column:173}},{start:{line:2355,column:177},end:{line:2355,column:190}},{start:{line:2355,column:194},end:{line:2355,column:207}}],line:2355},"195":{loc:{start:{line:2356,column:39},end:{line:2356,column:118}},type:"cond-expr",locations:[{start:{line:2356,column:61},end:{line:2356,column:63}},{start:{line:2356,column:67},end:{line:2356,column:117}}],line:2356},"196":{loc:{start:{line:2356,column:67},end:{line:2356,column:117}},type:"cond-expr",locations:[{start:{line:2356,column:89},end:{line:2356,column:90}},{start:{line:2356,column:93},end:{line:2356,column:117}}],line:2356},"197":{loc:{start:{line:2356,column:93},end:{line:2356,column:117}},type:"cond-expr",locations:[{start:{line:2356,column:111},end:{line:2356,column:112}},{start:{line:2356,column:115},end:{line:2356,column:117}}],line:2356},"198":{loc:{start:{line:2357,column:39},end:{line:2357,column:113}},type:"cond-expr",locations:[{start:{line:2357,column:71},end:{line:2357,column:73}},{start:{line:2357,column:76},end:{line:2357,column:112}}],line:2357},"199":{loc:{start:{line:2357,column:40},end:{line:2357,column:67}},type:"binary-expr",locations:[{start:{line:2357,column:40},end:{line:2357,column:52}},{start:{line:2357,column:56},end:{line:2357,column:67}}],line:2357},"200":{loc:{start:{line:2357,column:76},end:{line:2357,column:112}},type:"cond-expr",locations:[{start:{line:2357,column:106},end:{line:2357,column:108}},{start:{line:2357,column:111},end:{line:2357,column:112}}],line:2357},"201":{loc:{start:{line:2357,column:76},end:{line:2357,column:103}},type:"binary-expr",locations:[{start:{line:2357,column:76},end:{line:2357,column:88}},{start:{line:2357,column:92},end:{line:2357,column:103}}],line:2357},"202":{loc:{start:{line:2372,column:8},end:{line:2374,column:9}},type:"if",locations:[{start:{line:2372,column:8},end:{line:2374,column:9}},{start:{line:2372,column:8},end:{line:2374,column:9}}],line:2372},"203":{loc:{start:{line:2372,column:11},end:{line:2372,column:57}},type:"binary-expr",locations:[{start:{line:2372,column:11},end:{line:2372,column:26}},{start:{line:2372,column:30},end:{line:2372,column:57}}],line:2372},"204":{loc:{start:{line:2417,column:12},end:{line:2420,column:13}},type:"if",locations:[{start:{line:2417,column:12},end:{line:2420,column:13}},{start:{line:2417,column:12},end:{line:2420,column:13}}],line:2417},"205":{loc:{start:{line:2436,column:12},end:{line:2451,column:13}},type:"if",locations:[{start:{line:2436,column:12},end:{line:2451,column:13}},{start:{line:2436,column:12},end:{line:2451,column:13}}],line:2436},"206":{loc:{start:{line:2456,column:12},end:{line:2458,column:13}},type:"if",locations:[{start:{line:2456,column:12},end:{line:2458,column:13}},{start:{line:2456,column:12},end:{line:2458,column:13}}],line:2456},"207":{loc:{start:{line:2459,column:12},end:{line:2475,column:13}},type:"if",locations:[{start:{line:2459,column:12},end:{line:2475,column:13}},{start:{line:2459,column:12},end:{line:2475,column:13}}],line:2459},"208":{loc:{start:{line:2489,column:12},end:{line:2501,column:13}},type:"if",locations:[{start:{line:2489,column:12},end:{line:2501,column:13}},{start:{line:2489,column:12},end:{line:2501,column:13}}],line:2489},"209":{loc:{start:{line:2504,column:8},end:{line:2507,column:9}},type:"if",locations:[{start:{line:2504,column:8},end:{line:2507,column:9}},{start:{line:2504,column:8},end:{line:2507,column:9}}],line:2504},"210":{loc:{start:{line:2524,column:8},end:{line:2542,column:9}},type:"if",locations:[{start:{line:2524,column:8},end:{line:2542,column:9}},{start:{line:2524,column:8},end:{line:2542,column:9}}],line:2524},"211":{loc:{start:{line:2551,column:8},end:{line:2553,column:9}},type:"if",locations:[{start:{line:2551,column:8},end:{line:2553,column:9}},{start:{line:2551,column:8},end:{line:2553,column:9}}],line:2551},"212":{loc:{start:{line:2551,column:12},end:{line:2551,column:58}},type:"binary-expr",locations:[{start:{line:2551,column:12},end:{line:2551,column:27}},{start:{line:2551,column:31},end:{line:2551,column:58}}],line:2551},"213":{loc:{start:{line:2557,column:8},end:{line:2559,column:9}},type:"if",locations:[{start:{line:2557,column:8},end:{line:2559,column:9}},{start:{line:2557,column:8},end:{line:2559,column:9}}],line:2557},"214":{loc:{start:{line:2560,column:8},end:{line:2562,column:9}},type:"if",locations:[{start:{line:2560,column:8},end:{line:2562,column:9}},{start:{line:2560,column:8},end:{line:2562,column:9}}],line:2560},"215":{loc:{start:{line:2581,column:12},end:{line:2584,column:13}},type:"if",locations:[{start:{line:2581,column:12},end:{line:2584,column:13}},{start:{line:2581,column:12},end:{line:2584,column:13}}],line:2581},"216":{loc:{start:{line:2581,column:16},end:{line:2581,column:54}},type:"binary-expr",locations:[{start:{line:2581,column:16},end:{line:2581,column:31}},{start:{line:2581,column:35},end:{line:2581,column:54}}],line:2581},"217":{loc:{start:{line:2585,column:12},end:{line:2592,column:13}},type:"if",locations:[{start:{line:2585,column:12},end:{line:2592,column:13}},{start:{line:2585,column:12},end:{line:2592,column:13}}],line:2585},"218":{loc:{start:{line:2595,column:8},end:{line:2597,column:9}},type:"if",locations:[{start:{line:2595,column:8},end:{line:2597,column:9}},{start:{line:2595,column:8},end:{line:2597,column:9}}],line:2595},"219":{loc:{start:{line:2605,column:8},end:{line:2620,column:9}},type:"if",locations:[{start:{line:2605,column:8},end:{line:2620,column:9}},{start:{line:2605,column:8},end:{line:2620,column:9}}],line:2605},"220":{loc:{start:{line:2642,column:8},end:{line:2644,column:9}},type:"if",locations:[{start:{line:2642,column:8},end:{line:2644,column:9}},{start:{line:2642,column:8},end:{line:2644,column:9}}],line:2642},"221":{loc:{start:{line:2642,column:11},end:{line:2642,column:75}},type:"binary-expr",locations:[{start:{line:2642,column:11},end:{line:2642,column:35}},{start:{line:2642,column:39},end:{line:2642,column:75}}],line:2642},"222":{loc:{start:{line:2679,column:12},end:{line:2681,column:13}},type:"if",locations:[{start:{line:2679,column:12},end:{line:2681,column:13}},{start:{line:2679,column:12},end:{line:2681,column:13}}],line:2679},"223":{loc:{start:{line:2696,column:12},end:{line:2709,column:13}},type:"if",locations:[{start:{line:2696,column:12},end:{line:2709,column:13}},{start:{line:2696,column:12},end:{line:2709,column:13}}],line:2696},"224":{loc:{start:{line:2715,column:12},end:{line:2717,column:13}},type:"if",locations:[{start:{line:2715,column:12},end:{line:2717,column:13}},{start:{line:2715,column:12},end:{line:2717,column:13}}],line:2715},"225":{loc:{start:{line:2718,column:12},end:{line:2730,column:13}},type:"if",locations:[{start:{line:2718,column:12},end:{line:2730,column:13}},{start:{line:2718,column:12},end:{line:2730,column:13}}],line:2718},"226":{loc:{start:{line:2748,column:12},end:{line:2760,column:13}},type:"if",locations:[{start:{line:2748,column:12},end:{line:2760,column:13}},{start:{line:2748,column:12},end:{line:2760,column:13}}],line:2748},"227":{loc:{start:{line:2787,column:8},end:{line:2813,column:9}},type:"if",locations:[{start:{line:2787,column:8},end:{line:2813,column:9}},{start:{line:2787,column:8},end:{line:2813,column:9}}],line:2787},"228":{loc:{start:{line:2835,column:8},end:{line:2839,column:9}},type:"if",locations:[{start:{line:2835,column:8},end:{line:2839,column:9}},{start:{line:2835,column:8},end:{line:2839,column:9}}],line:2835},"229":{loc:{start:{line:2835,column:12},end:{line:2835,column:58}},type:"binary-expr",locations:[{start:{line:2835,column:12},end:{line:2835,column:27}},{start:{line:2835,column:31},end:{line:2835,column:58}}],line:2835},"230":{loc:{start:{line:2848,column:8},end:{line:2850,column:9}},type:"if",locations:[{start:{line:2848,column:8},end:{line:2850,column:9}},{start:{line:2848,column:8},end:{line:2850,column:9}}],line:2848},"231":{loc:{start:{line:2848,column:12},end:{line:2848,column:50}},type:"binary-expr",locations:[{start:{line:2848,column:12},end:{line:2848,column:23}},{start:{line:2848,column:27},end:{line:2848,column:50}}],line:2848},"232":{loc:{start:{line:2852,column:8},end:{line:2854,column:9}},type:"if",locations:[{start:{line:2852,column:8},end:{line:2854,column:9}},{start:{line:2852,column:8},end:{line:2854,column:9}}],line:2852},"233":{loc:{start:{line:2884,column:8},end:{line:2907,column:9}},type:"if",locations:[{start:{line:2884,column:8},end:{line:2907,column:9}},{start:{line:2884,column:8},end:{line:2907,column:9}}],line:2884},"234":{loc:{start:{line:2926,column:12},end:{line:2992,column:13}},type:"if",locations:[{start:{line:2926,column:12},end:{line:2992,column:13}},{start:{line:2926,column:12},end:{line:2992,column:13}}],line:2926},"235":{loc:{start:{line:2926,column:16},end:{line:2926,column:63}},type:"binary-expr",locations:[{start:{line:2926,column:16},end:{line:2926,column:45}},{start:{line:2926,column:49},end:{line:2926,column:63}}],line:2926},"236":{loc:{start:{line:2934,column:16},end:{line:2989,column:17}},type:"if",locations:[{start:{line:2934,column:16},end:{line:2989,column:17}},{start:{line:2934,column:16},end:{line:2989,column:17}}],line:2934},"237":{loc:{start:{line:2959,column:20},end:{line:2988,column:21}},type:"if",locations:[{start:{line:2959,column:20},end:{line:2988,column:21}},{start:{line:2959,column:20},end:{line:2988,column:21}}],line:2959},"238":{loc:{start:{line:3002,column:8},end:{line:3028,column:9}},type:"if",locations:[{start:{line:3002,column:8},end:{line:3028,column:9}},{start:{line:3002,column:8},end:{line:3028,column:9}}],line:3002},"239":{loc:{start:{line:3011,column:14},end:{line:3028,column:9}},type:"if",locations:[{start:{line:3011,column:14},end:{line:3028,column:9}},{start:{line:3011,column:14},end:{line:3028,column:9}}],line:3011},"240":{loc:{start:{line:3011,column:17},end:{line:3011,column:63}},type:"binary-expr",locations:[{start:{line:3011,column:17},end:{line:3011,column:28}},{start:{line:3011,column:32},end:{line:3011,column:63}}],line:3011},"241":{loc:{start:{line:3040,column:8},end:{line:3059,column:9}},type:"if",locations:[{start:{line:3040,column:8},end:{line:3059,column:9}},{start:{line:3040,column:8},end:{line:3059,column:9}}],line:3040},"242":{loc:{start:{line:3079,column:8},end:{line:3081,column:9}},type:"if",locations:[{start:{line:3079,column:8},end:{line:3081,column:9}},{start:{line:3079,column:8},end:{line:3081,column:9}}],line:3079},"243":{loc:{start:{line:3079,column:12},end:{line:3079,column:48}},type:"binary-expr",locations:[{start:{line:3079,column:12},end:{line:3079,column:22}},{start:{line:3079,column:26},end:{line:3079,column:48}}],line:3079},"244":{loc:{start:{line:3083,column:8},end:{line:3085,column:9}},type:"if",locations:[{start:{line:3083,column:8},end:{line:3085,column:9}},{start:{line:3083,column:8},end:{line:3085,column:9}}],line:3083},"245":{loc:{start:{line:3086,column:8},end:{line:3088,column:9}},type:"if",locations:[{start:{line:3086,column:8},end:{line:3088,column:9}},{start:{line:3086,column:8},end:{line:3088,column:9}}],line:3086},"246":{loc:{start:{line:3091,column:8},end:{line:3095,column:9}},type:"if",locations:[{start:{line:3091,column:8},end:{line:3095,column:9}},{start:{line:3091,column:8},end:{line:3095,column:9}}],line:3091},"247":{loc:{start:{line:3091,column:12},end:{line:3091,column:58}},type:"binary-expr",locations:[{start:{line:3091,column:12},end:{line:3091,column:27}},{start:{line:3091,column:31},end:{line:3091,column:58}}],line:3091},"248":{loc:{start:{line:3118,column:8},end:{line:3144,column:9}},type:"if",locations:[{start:{line:3118,column:8},end:{line:3144,column:9}},{start:{line:3118,column:8},end:{line:3144,column:9}}],line:3118},"249":{loc:{start:{line:3155,column:12},end:{line:3186,column:13}},type:"if",locations:[{start:{line:3155,column:12},end:{line:3186,column:13}},{start:{line:3155,column:12},end:{line:3186,column:13}}],line:3155},"250":{loc:{start:{line:3155,column:16},end:{line:3155,column:63}},type:"binary-expr",locations:[{start:{line:3155,column:16},end:{line:3155,column:45}},{start:{line:3155,column:49},end:{line:3155,column:63}}],line:3155},"251":{loc:{start:{line:3158,column:16},end:{line:3182,column:17}},type:"if",locations:[{start:{line:3158,column:16},end:{line:3182,column:17}},{start:{line:3158,column:16},end:{line:3182,column:17}}],line:3158},"252":{loc:{start:{line:3193,column:8},end:{line:3216,column:9}},type:"if",locations:[{start:{line:3193,column:8},end:{line:3216,column:9}},{start:{line:3193,column:8},end:{line:3216,column:9}}],line:3193},"253":{loc:{start:{line:3201,column:14},end:{line:3216,column:9}},type:"if",locations:[{start:{line:3201,column:14},end:{line:3216,column:9}},{start:{line:3201,column:14},end:{line:3216,column:9}}],line:3201},"254":{loc:{start:{line:3201,column:17},end:{line:3201,column:63}},type:"binary-expr",locations:[{start:{line:3201,column:17},end:{line:3201,column:28}},{start:{line:3201,column:32},end:{line:3201,column:63}}],line:3201},"255":{loc:{start:{line:3226,column:8},end:{line:3242,column:9}},type:"if",locations:[{start:{line:3226,column:8},end:{line:3242,column:9}},{start:{line:3226,column:8},end:{line:3242,column:9}}],line:3226},"256":{loc:{start:{line:3251,column:8},end:{line:3253,column:9}},type:"if",locations:[{start:{line:3251,column:8},end:{line:3253,column:9}},{start:{line:3251,column:8},end:{line:3253,column:9}}],line:3251},"257":{loc:{start:{line:3259,column:8},end:{line:3261,column:9}},type:"if",locations:[{start:{line:3259,column:8},end:{line:3261,column:9}},{start:{line:3259,column:8},end:{line:3261,column:9}}],line:3259},"258":{loc:{start:{line:3259,column:12},end:{line:3259,column:48}},type:"binary-expr",locations:[{start:{line:3259,column:12},end:{line:3259,column:22}},{start:{line:3259,column:26},end:{line:3259,column:48}}],line:3259},"259":{loc:{start:{line:3265,column:8},end:{line:3267,column:9}},type:"if",locations:[{start:{line:3265,column:8},end:{line:3267,column:9}},{start:{line:3265,column:8},end:{line:3267,column:9}}],line:3265},"260":{loc:{start:{line:3268,column:8},end:{line:3270,column:9}},type:"if",locations:[{start:{line:3268,column:8},end:{line:3270,column:9}},{start:{line:3268,column:8},end:{line:3270,column:9}}],line:3268},"261":{loc:{start:{line:3274,column:8},end:{line:3278,column:9}},type:"if",locations:[{start:{line:3274,column:8},end:{line:3278,column:9}},{start:{line:3274,column:8},end:{line:3278,column:9}}],line:3274},"262":{loc:{start:{line:3274,column:12},end:{line:3274,column:58}},type:"binary-expr",locations:[{start:{line:3274,column:12},end:{line:3274,column:27}},{start:{line:3274,column:31},end:{line:3274,column:58}}],line:3274},"263":{loc:{start:{line:3320,column:12},end:{line:3368,column:13}},type:"if",locations:[{start:{line:3320,column:12},end:{line:3368,column:13}},{start:{line:3320,column:12},end:{line:3368,column:13}}],line:3320},"264":{loc:{start:{line:3324,column:16},end:{line:3352,column:17}},type:"if",locations:[{start:{line:3324,column:16},end:{line:3352,column:17}},{start:{line:3324,column:16},end:{line:3352,column:17}}],line:3324},"265":{loc:{start:{line:3335,column:23},end:{line:3352,column:17}},type:"if",locations:[{start:{line:3335,column:23},end:{line:3352,column:17}},{start:{line:3335,column:23},end:{line:3352,column:17}}],line:3335},"266":{loc:{start:{line:3335,column:26},end:{line:3335,column:48}},type:"binary-expr",locations:[{start:{line:3335,column:26},end:{line:3335,column:35}},{start:{line:3335,column:39},end:{line:3335,column:48}}],line:3335},"267":{loc:{start:{line:3428,column:8},end:{line:3430,column:9}},type:"if",locations:[{start:{line:3428,column:8},end:{line:3430,column:9}},{start:{line:3428,column:8},end:{line:3430,column:9}}],line:3428},"268":{loc:{start:{line:3437,column:8},end:{line:3439,column:9}},type:"if",locations:[{start:{line:3437,column:8},end:{line:3439,column:9}},{start:{line:3437,column:8},end:{line:3439,column:9}}],line:3437},"269":{loc:{start:{line:3437,column:12},end:{line:3437,column:50}},type:"binary-expr",locations:[{start:{line:3437,column:12},end:{line:3437,column:23}},{start:{line:3437,column:27},end:{line:3437,column:50}}],line:3437},"270":{loc:{start:{line:3441,column:8},end:{line:3443,column:9}},type:"if",locations:[{start:{line:3441,column:8},end:{line:3443,column:9}},{start:{line:3441,column:8},end:{line:3443,column:9}}],line:3441},"271":{loc:{start:{line:3448,column:8},end:{line:3453,column:9}},type:"if",locations:[{start:{line:3448,column:8},end:{line:3453,column:9}},{start:{line:3448,column:8},end:{line:3453,column:9}}],line:3448},"272":{loc:{start:{line:3448,column:12},end:{line:3448,column:58}},type:"binary-expr",locations:[{start:{line:3448,column:12},end:{line:3448,column:27}},{start:{line:3448,column:31},end:{line:3448,column:58}}],line:3448},"273":{loc:{start:{line:3497,column:12},end:{line:3553,column:13}},type:"if",locations:[{start:{line:3497,column:12},end:{line:3553,column:13}},{start:{line:3497,column:12},end:{line:3553,column:13}}],line:3497},"274":{loc:{start:{line:3503,column:16},end:{line:3550,column:17}},type:"if",locations:[{start:{line:3503,column:16},end:{line:3550,column:17}},{start:{line:3503,column:16},end:{line:3550,column:17}}],line:3503},"275":{loc:{start:{line:3523,column:20},end:{line:3549,column:21}},type:"if",locations:[{start:{line:3523,column:20},end:{line:3549,column:21}},{start:{line:3523,column:20},end:{line:3549,column:21}}],line:3523},"276":{loc:{start:{line:3876,column:8},end:{line:3878,column:9}},type:"if",locations:[{start:{line:3876,column:8},end:{line:3878,column:9}},{start:{line:3876,column:8},end:{line:3878,column:9}}],line:3876},"277":{loc:{start:{line:3876,column:12},end:{line:3876,column:58}},type:"binary-expr",locations:[{start:{line:3876,column:12},end:{line:3876,column:27}},{start:{line:3876,column:31},end:{line:3876,column:58}}],line:3876}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0],"95":[0,0],"96":[0,0,0,0,0,0,0,0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0,0],"148":[0,0],"149":[0,0],"150":[0,0,0,0,0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0,0,0,0],"182":[0,0],"183":[0,0,0,0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0,0,0,0],"193":[0,0],"194":[0,0,0,0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"a6b30dfdfcdc771ff5f76c96a53a8301572e8381"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{Contract,Context}=(cov_1pebg41whg.s[0]++,require('fabric-contract-api'));//const { Buffer } = require('safe-buffer');
class securitizationContext extends Context{constructor(){cov_1pebg41whg.f[0]++;cov_1pebg41whg.s[1]++;super();}GetMSPID(){cov_1pebg41whg.f[1]++;cov_1pebg41whg.s[2]++;return this.clientIdentity.getMSPID();}GetUserIdentity(value){cov_1pebg41whg.f[2]++;cov_1pebg41whg.s[3]++;return this.clientIdentity.getAttributeValue(value);}// SetUserIdentity(userIdentity){
//     this.userIdentity=userIdentity
//     // return this.clientIdentity.getAttributeValue('userIdentity')
// }
GetTxTimestamp(){cov_1pebg41whg.f[3]++;cov_1pebg41whg.s[4]++;return this.stub.getTxTimestamp();}GetTxDateTimestamp(){cov_1pebg41whg.f[4]++;cov_1pebg41whg.s[5]++;return this.stub.getTxDateTimestamp();}GetRole(){cov_1pebg41whg.f[5]++;cov_1pebg41whg.s[6]++;return this.clientIdentity.assertAttributeValue('hf.role','client');}// SetMSPID provides a value for MSP ID
SetMSPID(mspid){cov_1pebg41whg.f[6]++;cov_1pebg41whg.s[7]++;this.mspid=mspid;}// // GetTransient returns set MSP ID
// GetTransient(){
//     return this.stub.getTransient()
// }
// // SetTransient provides a value for MSP ID
// SetTransient(transient){
//     this.transient=transient
// }
// CheckFormat(number,numberCase){
//     let index;
//     let count;
//     // Check if it is a 2decimal-number
//     switch ((numberCase==='float') ? 0 : ((numberCase==='int') ? 1 : 2)){
//         // Numero con decimales
//         case 0:
//             //console.log('Case 0');
//             count=0;
//             for(let i=0;i<number.length;i++){
//                 if (numberString[i]==='.'){
//                     index=i;
//                     count=count+1;
//                 }else if (numberString[i]===','){
//                     throw new Error('Wrong format. Try using dot instead of comma')
//                 }
//             }
//             if ((number.length-1-index)>2 || count>1){
//                 throw new Error('Wrong decimals');
//             }
//             // Check if it is strictly positive
//             number=parseFloat(number);
//             if (number<=0){
//                 throw new Error('Number must be strictly positive');
//             }
//             return true
//         case 1:
//             //console.log('Case 1');
//             count=0;
//             for(let i=0;i<number.length;i++){
//                 if (numberString[i]==='.'){
//                     throw new Error('Wrong format. This number is supposed to be integer');
//                 }else if(numberString[i]===','){
//                     throw new Error('Wrong format. This number is supposed to be integer');
//                 }
//             }
//             // Check if it is strictly positive
//             number=parseInt(number);
//             if (number<=0){
//                 throw new Error('Number must be strictly positive');
//             }
//             return true
//         case 2:
//             throw new Error(`Check what format do you want`);
//         default:
//             throw new Error('Error');
//     }
// }
GetEventPayload(){cov_1pebg41whg.f[7]++;cov_1pebg41whg.s[8]++;return this.stub.setEvent(this.eventName,this.eventPayload);}SetEventPayload(eventPayload){cov_1pebg41whg.f[8]++;cov_1pebg41whg.s[9]++;this.eventPayload=eventPayload;}SetEventName(eventName){cov_1pebg41whg.f[9]++;cov_1pebg41whg.s[10]++;this.eventName=eventName;}}class commonSecuritizationContract extends Contract{constructor(){cov_1pebg41whg.f[10]++;cov_1pebg41whg.s[11]++;// Unique namespace when multiple contracts per chaincode file
super('common.securitization.com');}/**
     * Define a custom context for securitization
    */createContext(){cov_1pebg41whg.f[11]++;cov_1pebg41whg.s[12]++;return new securitizationContext();}async beforeTransaction(ctx){cov_1pebg41whg.f[12]++;// let getTxTimestamp=await ctx.GetTxTimestamp();
// //console.log(`txTimeStamp: ${getTxTimestamp}`);
// let getTxDateTimestamp=await ctx.GetTxDateTimestamp();
// //console.log(`txDateTimeStamp: ${txDateTimeStamp}`);
let isClient=(cov_1pebg41whg.s[13]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
let role=(cov_1pebg41whg.s[14]++,await ctx.clientIdentity.getAttributeValue('role'));//console.log(`role: ${role}`)
cov_1pebg41whg.s[15]++;if(!isClient){cov_1pebg41whg.b[0][0]++;cov_1pebg41whg.s[16]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[0][1]++;}let par=(cov_1pebg41whg.s[17]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[18]++,par.fcn);let params=(cov_1pebg41whg.s[19]++,par.params);//console.log(func);
//console.log(params);
cov_1pebg41whg.s[20]++;for(let i=(cov_1pebg41whg.s[21]++,0);i<params.length;i++){cov_1pebg41whg.s[22]++;if(params[i]===''){cov_1pebg41whg.b[1][0]++;cov_1pebg41whg.s[23]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[1][1]++;}}}// Here auxiliary functions
// Our token will have 2 decimals, like fiat currencies
async _checkDecimals(number){cov_1pebg41whg.f[13]++;// In nodejs every atribute is passed as a string
// First check if it is a number
// number.stringify()
// if(typeof number !=='number'){
//     throw new Error('Wrong notation');
// }
// Not necessary, we are working with 2decimal-numbers
// Integer between -2^53-1 and 2^53-1
// if (!Number.isSafeInteger(number)){
//     throw new Error('Wrong number');
// }
// Check if it is a 2decimal-number
const numberString=(cov_1pebg41whg.s[24]++,number.toString());let index;let count=(cov_1pebg41whg.s[25]++,0);cov_1pebg41whg.s[26]++;for(let i=(cov_1pebg41whg.s[27]++,0);i<numberString.length;i++){cov_1pebg41whg.s[28]++;if(numberString[i]==='.'){cov_1pebg41whg.b[2][0]++;cov_1pebg41whg.s[29]++;index=i;cov_1pebg41whg.s[30]++;count=count+1;}else{cov_1pebg41whg.b[2][1]++;}cov_1pebg41whg.s[31]++;if(numberString[i]===','){cov_1pebg41whg.b[3][0]++;cov_1pebg41whg.s[32]++;throw new Error('Wrong format. Try using dot instead of comma');}else{cov_1pebg41whg.b[3][1]++;}}//console.log(`numero de puntos ${count}`);
cov_1pebg41whg.s[33]++;if((cov_1pebg41whg.b[5][0]++,numberString.length-1-index>2)||(cov_1pebg41whg.b[5][1]++,count>1)){cov_1pebg41whg.b[4][0]++;cov_1pebg41whg.s[34]++;throw new Error('Wrong decimals');}else{cov_1pebg41whg.b[4][1]++;}// Check if it is strictly positive
cov_1pebg41whg.s[35]++;number=parseFloat(number);cov_1pebg41whg.s[36]++;if(number<=0){cov_1pebg41whg.b[6][0]++;cov_1pebg41whg.s[37]++;throw new Error('Number must be strictly positive');}else{cov_1pebg41whg.b[6][1]++;}cov_1pebg41whg.s[38]++;return true;}//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//---------------------------------------IMPORTANTE----------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
// Diferenciar 2 casos:
// En cuanto al dinero si es dinero que va destinado al pago de cupones o de principal
// En cuanto a bonos si son del mismo tramo o no (esto de momento nada)
// Funcionan
// Transfer money
async _transferMoney(ctx,userID,amount,keyFrom){cov_1pebg41whg.f[14]++;const genericID=(cov_1pebg41whg.s[39]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[40]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));cov_1pebg41whg.s[41]++;for(const key of keyFrom){cov_1pebg41whg.s[42]++;await ctx.stub.deleteState(key);}let typeID=(cov_1pebg41whg.s[43]++,':0');const utxo=(cov_1pebg41whg.s[44]++,{ID:key1+typeID,GenericID:genericID,Owner:userID,Issuer:await ctx.clientIdentity.getID(),Amount:amount,Factor:100,CanBeUsed:true,TypeID:typeID});cov_1pebg41whg.s[45]++;await ctx.stub.putState(key1,Buffer.from(JSON.stringify(utxo)));cov_1pebg41whg.s[46]++;return utxo;}async PoolMoney(ctx){cov_1pebg41whg.f[15]++;const userID=(cov_1pebg41whg.s[47]++,await ctx.GetUserIdentity('cif'));let iterator=(cov_1pebg41whg.s[48]++,await ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]));let amount;let resultKeys=(cov_1pebg41whg.s[49]++,[]);let counter=(cov_1pebg41whg.s[50]++,0);let value;cov_1pebg41whg.s[51]++;for await(const res of iterator){cov_1pebg41whg.s[52]++;value=JSON.parse(res.value.toString());// //console.log(`value: ${value.Amount}`)
cov_1pebg41whg.s[53]++;amount=value.Amount;cov_1pebg41whg.s[54]++;if((cov_1pebg41whg.b[8][0]++,value.CanBeUsed)&&(cov_1pebg41whg.b[8][1]++,value.Owner===userID)){cov_1pebg41whg.b[7][0]++;cov_1pebg41whg.s[55]++;resultKeys.push(value.ID);cov_1pebg41whg.s[56]++;counter=counter+amount;}else{cov_1pebg41whg.b[7][1]++;}cov_1pebg41whg.s[57]++;if(resultKeys.length===2){cov_1pebg41whg.b[9][0]++;cov_1pebg41whg.s[58]++;break;}else{cov_1pebg41whg.b[9][1]++;}}cov_1pebg41whg.s[59]++;if((cov_1pebg41whg.b[11][0]++,resultKeys.length===0)||(cov_1pebg41whg.b[11][1]++,resultKeys.length===1)){cov_1pebg41whg.b[10][0]++;cov_1pebg41whg.s[60]++;throw new Error('There is nothing left to do');}else{cov_1pebg41whg.b[10][1]++;}let ret=(cov_1pebg41whg.s[61]++,await this._transferMoney(ctx,userID,counter,resultKeys));cov_1pebg41whg.s[62]++;return ret;}// In this scenario, Originator will initiate the securitization lifecycle. This org will propose a PPA to a
// farmer/irrigator. To achieve that it is important for the originator to know (listen to enrollments) which farmers
// have been registered as participants of the network, in order to propose a PPA to a particular irrigator, not to a
// generic farmer
// If we know the User ID, then we can query the PPA asociated with that ID
async QueryPPA(ctx,userID){cov_1pebg41whg.f[16]++;// Prior verificatios deactivated in testing (because of test-network)
// Who can query this data?
const ppa=(cov_1pebg41whg.s[63]++,await this._mygetStateByPartialCompositeKey(ctx,'PPA',userID));cov_1pebg41whg.s[64]++;if(ppa===true){cov_1pebg41whg.b[12][0]++;cov_1pebg41whg.s[65]++;throw new Error('PPA does not exist');}else{cov_1pebg41whg.b[12][1]++;}cov_1pebg41whg.s[66]++;return ppa;}async _getAllResults(iterator,isHistory){cov_1pebg41whg.f[17]++;let allResults=(cov_1pebg41whg.s[67]++,[]);let res=(cov_1pebg41whg.s[68]++,await iterator.next());cov_1pebg41whg.s[69]++;while(!res.done){cov_1pebg41whg.s[70]++;if((cov_1pebg41whg.b[14][0]++,res.value)&&(cov_1pebg41whg.b[14][1]++,res.value.value.toString())){cov_1pebg41whg.b[13][0]++;let jsonRes=(cov_1pebg41whg.s[71]++,{});//console.log(res.value.value.toString('utf8'));
cov_1pebg41whg.s[72]++;if((cov_1pebg41whg.b[16][0]++,isHistory)&&(cov_1pebg41whg.b[16][1]++,isHistory===true)){cov_1pebg41whg.b[15][0]++;cov_1pebg41whg.s[73]++;jsonRes.TxId=res.value.tx_id;cov_1pebg41whg.s[74]++;jsonRes.Timestamp=res.value.timestamp;cov_1pebg41whg.s[75]++;try{cov_1pebg41whg.s[76]++;jsonRes.Value=JSON.parse(res.value.value.toString('utf8'));}catch(err){cov_1pebg41whg.s[77]++;//console.log(err);
jsonRes.Value=res.value.value.toString('utf8');}}else{cov_1pebg41whg.b[15][1]++;cov_1pebg41whg.s[78]++;jsonRes.Key=res.value.key;cov_1pebg41whg.s[79]++;try{cov_1pebg41whg.s[80]++;jsonRes.Record=JSON.parse(res.value.value.toString('utf8'));}catch(err){cov_1pebg41whg.s[81]++;//console.log(err);
jsonRes.Record=res.value.value.toString('utf8');}}cov_1pebg41whg.s[82]++;allResults.push(jsonRes);}else{cov_1pebg41whg.b[13][1]++;}cov_1pebg41whg.s[83]++;res=await iterator.next();}cov_1pebg41whg.s[84]++;iterator.close();cov_1pebg41whg.s[85]++;return allResults;}async QueryPPAHistory(ctx,userID,ppaID){cov_1pebg41whg.f[18]++;const key=(cov_1pebg41whg.s[86]++,await ctx.stub.createCompositeKey('PPA',[userID,ppaID]));let resultsIterator=(cov_1pebg41whg.s[87]++,await ctx.stub.getHistoryForKey(key));let results=(cov_1pebg41whg.s[88]++,await this._getAllResults(resultsIterator,true));cov_1pebg41whg.s[89]++;return results;}// Igual esto tiene que ir en un canal donde esté el/los bancos.
// Esta funcion la tengo que activar para "crear dinero"
// Minting money
async Mint(ctx,amount){cov_1pebg41whg.f[19]++;cov_1pebg41whg.s[90]++;// if (amount==='' || amount==='0'){
//     throw new Error('Please, choose a valid value for this field')
// }
// Checking format
await this._checkDecimals(amount);// Each UTXO will have a unique, free-collision key
const genericID=(cov_1pebg41whg.s[91]++,await ctx.stub.getTxID());const userID=(cov_1pebg41whg.s[92]++,await ctx.GetUserIdentity('cif'));const key=(cov_1pebg41whg.s[93]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));let typeID;cov_1pebg41whg.s[94]++;typeID=':0';//mirar si añadiendo ':0' sigue haciendo bien el query
const securitizationCoin=(cov_1pebg41whg.s[95]++,{ID:key+typeID,GenericID:genericID,TypeID:typeID,Issuer:await ctx.clientIdentity.getID(),Owner:userID,Amount:parseInt(parseFloat(amount)*100),Factor:100,CanBeUsed:true});cov_1pebg41whg.s[96]++;await ctx.stub.putState(securitizationCoin.ID,Buffer.from(JSON.stringify(securitizationCoin)));cov_1pebg41whg.s[97]++;return securitizationCoin;}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[20]++;const iterator=(cov_1pebg41whg.s[98]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[99]++,0);let results;cov_1pebg41whg.s[100]++;for await(const res of iterator){cov_1pebg41whg.s[101]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[102]++;counter=counter+1;}cov_1pebg41whg.s[103]++;if(counter>1){cov_1pebg41whg.b[17][0]++;cov_1pebg41whg.s[104]++;throw new Error('Check this...');}else{cov_1pebg41whg.b[17][1]++;cov_1pebg41whg.s[105]++;if(counter===0){cov_1pebg41whg.b[18][0]++;cov_1pebg41whg.s[106]++;return true;}else{cov_1pebg41whg.b[18][1]++;}}cov_1pebg41whg.s[107]++;return results;}// funciona
async QueryMyCoins(ctx){cov_1pebg41whg.f[21]++;const userID=(cov_1pebg41whg.s[108]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[109]++,await ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]));let results=(cov_1pebg41whg.s[110]++,[]);let valor;cov_1pebg41whg.s[111]++;for await(const res of iterator){cov_1pebg41whg.s[112]++;valor=JSON.parse(res.value.toString());cov_1pebg41whg.s[113]++;results.push(valor);}cov_1pebg41whg.s[114]++;return results;}// funciona
async QueryMyBond(ctx){cov_1pebg41whg.f[22]++;const userID=(cov_1pebg41whg.s[115]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[116]++,await ctx.stub.getStateByPartialCompositeKey('BondToken',[userID]));let results=(cov_1pebg41whg.s[117]++,[]);let valor;cov_1pebg41whg.s[118]++;for await(const res of iterator){cov_1pebg41whg.s[119]++;valor=JSON.parse(res.value.toString());cov_1pebg41whg.s[120]++;results.push(valor);}cov_1pebg41whg.s[121]++;return results;}}class ppaContract extends Contract{constructor(){cov_1pebg41whg.f[23]++;cov_1pebg41whg.s[122]++;// Unique namespace when multiple contracts per chaincode file
super('ppa.securitization.com');}createContext(){cov_1pebg41whg.f[24]++;cov_1pebg41whg.s[123]++;return new securitizationContext();}async beforeTransaction(ctx){cov_1pebg41whg.f[25]++;let userMSPID=(cov_1pebg41whg.s[124]++,await ctx.GetMSPID());cov_1pebg41whg.s[125]++;if((cov_1pebg41whg.b[20][0]++,userMSPID!=='originatorMSP')&&(cov_1pebg41whg.b[20][1]++,userMSPID!=='farmerMSP')){cov_1pebg41whg.b[19][0]++;cov_1pebg41whg.s[126]++;throw new Error('You are not allowed to perform this action');}else{cov_1pebg41whg.b[19][1]++;}let isClient=(cov_1pebg41whg.s[127]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
cov_1pebg41whg.s[128]++;if(!isClient){cov_1pebg41whg.b[21][0]++;cov_1pebg41whg.s[129]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[21][1]++;}cov_1pebg41whg.s[130]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[131]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[132]++,par.fcn);let params=(cov_1pebg41whg.s[133]++,par.params);//console.log(func);
//console.log(params);
cov_1pebg41whg.s[134]++;for(let i=(cov_1pebg41whg.s[135]++,0);i<params.length;i++){cov_1pebg41whg.s[136]++;if(params[i]===''){cov_1pebg41whg.b[22][0]++;cov_1pebg41whg.s[137]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[22][1]++;}}const mspid=(cov_1pebg41whg.s[138]++,await ctx.mspid);cov_1pebg41whg.s[139]++;switch(func){case'PPAProposal':cov_1pebg41whg.b[23][0]++;cov_1pebg41whg.s[140]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[24][0]++;cov_1pebg41whg.s[141]++;//console.log('es este caso');
throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[24][1]++;cov_1pebg41whg.s[142]++;return;}case'AcceptPPA':cov_1pebg41whg.b[23][1]++;cov_1pebg41whg.s[143]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[25][0]++;cov_1pebg41whg.s[144]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[25][1]++;cov_1pebg41whg.s[145]++;return;}case'MintPPA':cov_1pebg41whg.b[23][2]++;cov_1pebg41whg.s[146]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[26][0]++;cov_1pebg41whg.s[147]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[26][1]++;cov_1pebg41whg.s[148]++;return;}case'MaintenanceServiceRequest':cov_1pebg41whg.b[23][3]++;cov_1pebg41whg.s[149]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[27][0]++;cov_1pebg41whg.s[150]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[27][1]++;cov_1pebg41whg.s[151]++;return;}case'EnergyConsumptionPerPPA':cov_1pebg41whg.b[23][4]++;cov_1pebg41whg.s[152]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[28][0]++;cov_1pebg41whg.s[153]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[28][1]++;cov_1pebg41whg.s[154]++;return;}case'MonthlyBillPayout':cov_1pebg41whg.b[23][5]++;cov_1pebg41whg.s[155]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[29][0]++;cov_1pebg41whg.s[156]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[29][1]++;cov_1pebg41whg.s[157]++;return;}case'QueryMyPPA':cov_1pebg41whg.b[23][6]++;cov_1pebg41whg.s[158]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[30][0]++;cov_1pebg41whg.s[159]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[30][1]++;cov_1pebg41whg.s[160]++;return;}// case 'WriteCommonRealTimeParameters':
}}//afterTransaction will return the event of the transaction
async afterTransaction(ctx){cov_1pebg41whg.f[26]++;let event=(cov_1pebg41whg.s[161]++,await ctx.GetEventPayload());cov_1pebg41whg.s[162]++;return event;}/**
     *
     * @param {*} ctx
     * @returns the size of the pool
     */async _isPoolCreated(ctx,poolName){cov_1pebg41whg.f[27]++;const iterator=(cov_1pebg41whg.s[163]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let results=(cov_1pebg41whg.s[164]++,[]);cov_1pebg41whg.s[165]++;for await(const res of iterator){cov_1pebg41whg.s[166]++;// push key instead of value json
results.push(res.key);}cov_1pebg41whg.s[167]++;if(results.length===0){cov_1pebg41whg.b[31][0]++;cov_1pebg41whg.s[168]++;return false;}else{cov_1pebg41whg.b[31][1]++;cov_1pebg41whg.s[169]++;if(results.length===1){cov_1pebg41whg.b[32][0]++;cov_1pebg41whg.s[170]++;return true;}else{cov_1pebg41whg.b[32][1]++;cov_1pebg41whg.s[171]++;throw new Error(`State not unique`);}}}/**
     *
     * @param {*} ctx
     * @param {*} userID is the ID linked to user (DNI, CIF,...) which is inside his/her ecert
     * @returns the number of PPAs with that partial composite key
     */ // Auxiliary function to query if PPA contract for this userID has already been proposed
async _isPPAProposed(ctx,ppaID){cov_1pebg41whg.f[28]++;const ppaBytes=(cov_1pebg41whg.s[172]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[173]++;if((cov_1pebg41whg.b[34][0]++,!ppaBytes)||(cov_1pebg41whg.b[34][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[33][0]++;cov_1pebg41whg.s[174]++;return false;}else{cov_1pebg41whg.b[33][1]++;cov_1pebg41whg.s[175]++;return true;}}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @returns the state associated with that partial key
     */ // This auxiliary function will only work with those states expected to be unique (POOL, REALTIMEPARAMETERS, RATING...)
async _getPoolStateByPartialCompositeKey(ctx,docTypeName){cov_1pebg41whg.f[29]++;const iterator=(cov_1pebg41whg.s[176]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[]));let counter=(cov_1pebg41whg.s[177]++,0);let results;cov_1pebg41whg.s[178]++;for await(const res of iterator){cov_1pebg41whg.s[179]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[180]++;counter=counter+1;}cov_1pebg41whg.s[181]++;if(counter>1){cov_1pebg41whg.b[35][0]++;cov_1pebg41whg.s[182]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[35][1]++;cov_1pebg41whg.s[183]++;if(counter===0){cov_1pebg41whg.b[36][0]++;cov_1pebg41whg.s[184]++;return false;}else{cov_1pebg41whg.b[36][1]++;}}cov_1pebg41whg.s[185]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @param {*} userID
     * @returns
     */ // Auxiliary function to retrieve a value associated with a partial key. It is expected that
// this value is unique. One partial key may have multiple values associated to itself.
async _mygetStateByPartialCompositeKey(ctx,docTypeName,userID){cov_1pebg41whg.f[30]++;const iterator=(cov_1pebg41whg.s[186]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[userID]));let counter=(cov_1pebg41whg.s[187]++,0);let results;cov_1pebg41whg.s[188]++;for await(const res of iterator){cov_1pebg41whg.s[189]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[190]++;counter=counter+1;}cov_1pebg41whg.s[191]++;if(counter>1){cov_1pebg41whg.b[37][0]++;cov_1pebg41whg.s[192]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[37][1]++;cov_1pebg41whg.s[193]++;if(counter===0){cov_1pebg41whg.b[38][0]++;cov_1pebg41whg.s[194]++;return true;}else{cov_1pebg41whg.b[38][1]++;}}cov_1pebg41whg.s[195]++;return results;}// returns which proportion is allocated to coupon and which to principal
async _getCouponProportion(ctx,poolName){cov_1pebg41whg.f[31]++;let iterator=(cov_1pebg41whg.s[196]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let result;cov_1pebg41whg.s[197]++;for await(const res of iterator){cov_1pebg41whg.s[198]++;result=JSON.parse(res.value.toString());}cov_1pebg41whg.s[199]++;return result.CouponPortion;}// This auxiliary function will allow us to determine to which identity are we going to pay the bills
async _isPPAinPool(ctx,ppaID){cov_1pebg41whg.f[32]++;let pool=(cov_1pebg41whg.s[200]++,await this._getPoolStateByPartialCompositeKey(ctx,'POOL'));let res=(cov_1pebg41whg.s[201]++,[]);cov_1pebg41whg.s[202]++;if((cov_1pebg41whg.b[40][0]++,!pool)||(cov_1pebg41whg.b[40][1]++,pool.length===0)){cov_1pebg41whg.b[39][0]++;cov_1pebg41whg.s[203]++;res.push(false);cov_1pebg41whg.s[204]++;return res;}else{cov_1pebg41whg.b[39][1]++;}const containsppaID=(cov_1pebg41whg.s[205]++,await pool.ppaIDs.includes(ppaID));cov_1pebg41whg.s[206]++;res.push(containsppaID);cov_1pebg41whg.s[207]++;res.push(pool.Owner);cov_1pebg41whg.s[208]++;return res;}// This function will contain the contractual terms of the physical PPA
// This function will be run by Originator, who will propose a PPA to a particular user, by means
// of his/her user ID. This function will need a myriad of input arguments.
async PPAProposal(ctx,ownerID,customerID,date){cov_1pebg41whg.f[33]++;// Prior verifications
const userID=(cov_1pebg41whg.s[209]++,await ctx.GetUserIdentity('cif'));//console.log(userID);
cov_1pebg41whg.s[210]++;if(userID!==ownerID){cov_1pebg41whg.b[41][0]++;cov_1pebg41whg.s[211]++;throw new Error(`Field ownerID ${ownerID} does not match your user identity of the ecert`);}else{cov_1pebg41whg.b[41][1]++;}cov_1pebg41whg.s[212]++;if(ownerID===customerID){cov_1pebg41whg.b[42][0]++;cov_1pebg41whg.s[213]++;throw new Error(`Check owner and customer identities`);}else{cov_1pebg41whg.b[42][1]++;}// PPA ID will be a "sum" of multiple keys, one of them is a free-collision key, the txID
// This is not necessary, because each user will be subscribed to just one PPA
const genericID=(cov_1pebg41whg.s[214]++,await ctx.stub.getTxID());// Create this composite Key
const ppaID=(cov_1pebg41whg.s[215]++,await ctx.stub.createCompositeKey('PPA',[customerID,genericID]));// We also verify if a farmer/irrigator has already been offered a PPA
const ppaHasBeenProposed=(cov_1pebg41whg.s[216]++,await this._isPPAProposed(ctx,ppaID));cov_1pebg41whg.s[217]++;if(ppaHasBeenProposed){cov_1pebg41whg.b[43][0]++;cov_1pebg41whg.s[218]++;throw new Error(`Error: PPA for user ${customerID} has already been offered`);}else{cov_1pebg41whg.b[43][1]++;}// //console.log('aqui2')
// TODO
// We define parameters of the PPA, just in case these parameters are common parameters.
const day=(cov_1pebg41whg.s[219]++,1);const month=(cov_1pebg41whg.s[220]++,10);const year=(cov_1pebg41whg.s[221]++,2032);const ordinaryTerminationDate=(cov_1pebg41whg.s[222]++,new Date(year,month-1,day).setHours(0,0,0,0));const firstExtension=(cov_1pebg41whg.s[223]++,Date(year,month-2,day));const customer=(cov_1pebg41whg.s[224]++,'');// const customerID='';
const customerEmail=(cov_1pebg41whg.s[225]++,ctx.GetUserIdentity('email'));// Owner is the ecert whose identity has proposed this PPA
// const owner= ctx.clientIdentity.getID();
const system=(cov_1pebg41whg.s[226]++,'');const land=(cov_1pebg41whg.s[227]++,'');const landID=(cov_1pebg41whg.s[228]++,'');const lastingPeriod=(cov_1pebg41whg.s[229]++,'');// const ordinaryTerminationDate= '';
const advancedTerminated=(cov_1pebg41whg.s[230]++,'');const startDate=(cov_1pebg41whg.s[231]++,'');const extendedAgreement=(cov_1pebg41whg.s[232]++,'');const initialExtensions=(cov_1pebg41whg.s[233]++,'');// const firstExtension= '';
const secondExtension=(cov_1pebg41whg.s[234]++,'');const extensionTimePriorToOrdinaryTerminationDate=(cov_1pebg41whg.s[235]++,'');const isExtensionMandatory=(cov_1pebg41whg.s[236]++,'');const additionalExtensions=(cov_1pebg41whg.s[237]++,'');const additionalExtensionTimePriorToLastAdditionalExtension=(cov_1pebg41whg.s[238]++,'');const additionalExtensionContractPrice=(cov_1pebg41whg.s[239]++,'');const isAdditionalExtension=(cov_1pebg41whg.s[240]++,'');const purchaseOption=(cov_1pebg41whg.s[241]++,'');const contractPrice=(cov_1pebg41whg.s[242]++,'');const paymentsFrequency=(cov_1pebg41whg.s[243]++,12);const unitPrice=(cov_1pebg41whg.s[244]++,'');const minimumMonthlyFee=(cov_1pebg41whg.s[245]++,100);// const firstMonthlyPayment= '';
// const succesiveMonthlyPayments= '';
const dismantlingSystemIncluded=(cov_1pebg41whg.s[246]++,'');const settlementBillingBussinesDays=(cov_1pebg41whg.s[247]++,'');const dueAmountsDays=(cov_1pebg41whg.s[248]++,'');const isInterestTriggered=(cov_1pebg41whg.s[249]++,'');const sellToThirdParties=(cov_1pebg41whg.s[250]++,'');const amountPayableToCustomer=(cov_1pebg41whg.s[251]++,'');const settlementAmountPayableDays=(cov_1pebg41whg.s[252]++,'');const amountPayableType=(cov_1pebg41whg.s[253]++,'');const highestEnergyDemandConexion=(cov_1pebg41whg.s[254]++,'');const grantFinancialAidBeneficiary=(cov_1pebg41whg.s[255]++,'');const netAmountSubsidy=(cov_1pebg41whg.s[256]++,'');const reductionContractPriceFees=(cov_1pebg41whg.s[257]++,'');const grantCollectionTime=(cov_1pebg41whg.s[258]++,'');const customerGoodFaith=(cov_1pebg41whg.s[259]++,'');const systemLandMaintenance=(cov_1pebg41whg.s[260]++,'');const maintenanceHistory=(cov_1pebg41whg.s[261]++,'');const powerSupplyInterruption=(cov_1pebg41whg.s[262]++,'');const powerSupplyInterruptionAdvancedTime=(cov_1pebg41whg.s[263]++,'');const anomalyCircumstance=(cov_1pebg41whg.s[264]++,'');const isCustomerAuthorized=(cov_1pebg41whg.s[265]++,'');const additionalPowerSupplyInterruption=(cov_1pebg41whg.s[266]++,'');const powerSupplyInterruptionCause=(cov_1pebg41whg.s[267]++,'');const extraordinaryExpenses=(cov_1pebg41whg.s[268]++,'');const isMaintenanceNecessary=(cov_1pebg41whg.s[269]++,'');const legalObligationSystemLand=(cov_1pebg41whg.s[270]++,'');const measurementEquipementResponsibility=(cov_1pebg41whg.s[271]++,'');const annualAccountsTime=(cov_1pebg41whg.s[272]++,'');const annualAccounts=(cov_1pebg41whg.s[273]++,'');const informationChangedTime=(cov_1pebg41whg.s[274]++,'');const highSpeedInternetConection=(cov_1pebg41whg.s[275]++,'');const lastModificationOn=(cov_1pebg41whg.s[276]++,new Date(date));const lastModificationUserID=(cov_1pebg41whg.s[277]++,'');const isSigned=(cov_1pebg41whg.s[278]++,false);const energyConsumption=(cov_1pebg41whg.s[279]++,[]);const facturacionMensual=(cov_1pebg41whg.s[280]++,[]);const lastEnergyConsumption=(cov_1pebg41whg.s[281]++,'');const lastFacturacionMensual=(cov_1pebg41whg.s[282]++,'');// Defining attributes of the object PPA
const PPA=(cov_1pebg41whg.s[283]++,{docType:'PPA',ppaID:ppaID,Customer:customer,CustomerID:customerID// CustomerEmail: customerEmail,
// OwnerID: ownerID,
// Owner: await ctx.clientIdentity.getID(),
// System: system,
// Land: land,
// LandID: landID,
// LastingPeriod: lastingPeriod,
// OrdinaryTerminationDate: ordinaryTerminationDate,
// AdvancedTerminated: advancedTerminated,
// StartDate: startDate,
// EnergyConsumption: energyConsumption,
// ExtendedAgreement: extendedAgreement,
// InitialExtensions: initialExtensions,
// FirstExtension: firstExtension,
// SecondExtension: secondExtension,
// BillDate: '',
// ExtensionTimePriorToOrdinaryTerminationDate: extensionTimePriorToOrdinaryTerminationDate,
// IsExtensionMandatory: isExtensionMandatory,
// AdditionalExtensions: additionalExtensions,
// AdditionalExtensionTimePriorToLastAdditionalExtension: additionalExtensionTimePriorToLastAdditionalExtension,
// AdditionalExtensionContractPrice: additionalExtensionContractPrice,
// IsAdditionalExtension: isAdditionalExtension,
// PurchaseOption: purchaseOption,
// ContractPrice: contractPrice,
// PaymentsFrequency: paymentsFrequency,
// FacturacionMensual: facturacionMensual,
// LastFacturacionMensual: lastFacturacionMensual,
// LastEnergyConsumption: lastEnergyConsumption,
// EnergyConsumption: energyConsumption,
// UnitPrice: unitPrice,
// MinimumMonthlyFee: minimumMonthlyFee,
// DismantlingSystemIncluded: dismantlingSystemIncluded,
// SettlementBillingBussinesDays: settlementBillingBussinesDays,
// DueAmountsDays: dueAmountsDays,
// IsInterestTriggered: isInterestTriggered,
// SellToThirdParties: sellToThirdParties,
// AmountPayableToCustomer: {
//     myMethod: () => {
//         if (!PPA.SellToThirdParties){
//             return 0
//         }
//         return 100
//     }
// },
// SettlementAmountPayableDays: settlementAmountPayableDays,
// AmountPayableType: amountPayableType,
// HighestEnergyDemandConexion: highestEnergyDemandConexion,
// GrantFinancialAidBeneficiary: grantFinancialAidBeneficiary,
// NetAmountSubsidy: netAmountSubsidy,
// ReductionContractPriceFees: reductionContractPriceFees,
// GrantCollectionTime: grantCollectionTime,
// CustomerGoodFaith: customerGoodFaith,
// SystemLandMaintenance: systemLandMaintenance,
// MaintenanceHistory: maintenanceHistory,
// PowerSupplyInterruption: powerSupplyInterruption,
// PowerSupplyInterruptionAdvancedTime: powerSupplyInterruptionAdvancedTime,
// AnomalyCircumstance: anomalyCircumstance,
// IsCustomerAuthorized: isCustomerAuthorized,
// AdditionalPowerSupplyInterruption: additionalPowerSupplyInterruption,
// PowerSupplyInterruptionCause: powerSupplyInterruptionCause,
// ExtraordinaryExpenses: extraordinaryExpenses,
// IsMaintenanceNecessary: isMaintenanceNecessary,
// LegalObligationSystemLand: legalObligationSystemLand,
// MeasurementEquipementResponsibility: measurementEquipementResponsibility,
// AnnualAccountsTime: annualAccountsTime,
// AnnualAccounts: annualAccounts,
// InformationChangedTime: informationChangedTime,
// HighSpeedInternetConection: highSpeedInternetConection,
// LastModificationOn: lastModificationOn,
// LastModificationUserID: lastModificationUserID,
// IsSigned: isSigned,
// IsServiceMaintenanceOn: false,
// IsLastBillPaid: false,
});const valueBuffer=(cov_1pebg41whg.s[284]++,Buffer.from(JSON.stringify(PPA)));// set event must be inside after transaction
cov_1pebg41whg.s[285]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[286]++;await ctx.SetEventName('PPAproposed');// await ctx.stub.putState('ppa',valueBuffer);
cov_1pebg41whg.s[287]++;await ctx.stub.putState(ppaID,valueBuffer);cov_1pebg41whg.s[288]++;return PPA;}async RequestPPA(ctx,landID,crops){cov_1pebg41whg.f[34]++;const userID=(cov_1pebg41whg.s[289]++,await ctx.GetUserIdentity('cif'));let requestID=(cov_1pebg41whg.s[290]++,await ctx.stub.getTxID());let PPARequest=(cov_1pebg41whg.s[291]++,{ID:requestID,UserID:userID,LandID:landID,Crops:crops});const valueBuffer=(cov_1pebg41whg.s[292]++,Buffer.from(JSON.stringify(PPARequest)));// set event must be inside after transaction
cov_1pebg41whg.s[293]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[294]++;await ctx.SetEventName('PPARequested');cov_1pebg41whg.s[295]++;await ctx.stub.putState(PPARequest.ID,valueBuffer);cov_1pebg41whg.s[296]++;return PPARequest;}async QueryMyPPA(ctx,ppaID){cov_1pebg41whg.f[35]++;const userID=(cov_1pebg41whg.s[297]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[298]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[299]++;if((cov_1pebg41whg.b[45][0]++,!ppaBytes)||(cov_1pebg41whg.b[45][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[44][0]++;cov_1pebg41whg.s[300]++;throw new Error(`PPA state with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[44][1]++;}const ppa=(cov_1pebg41whg.s[301]++,JSON.parse(ppaBytes.toString()));cov_1pebg41whg.s[302]++;if(userID!==ppa.CustomerID){cov_1pebg41whg.b[46][0]++;cov_1pebg41whg.s[303]++;throw new Error(`Field CustomerID does not match your user identity of the eCert`);}else{cov_1pebg41whg.b[46][1]++;}cov_1pebg41whg.s[304]++;return ppa;}// Farmer/Irrigator will execute this function and by doing that, he/she accepts/signs the PPA
// proposal
async AcceptPPA(ctx,ppaID,date){cov_1pebg41whg.f[36]++;// we retrieve the value associated with this partial key
const userID=(cov_1pebg41whg.s[305]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[306]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[307]++;if((cov_1pebg41whg.b[48][0]++,!ppaBytes)||(cov_1pebg41whg.b[48][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[47][0]++;cov_1pebg41whg.s[308]++;throw new Error(`Error PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[47][1]++;}const ppa=(cov_1pebg41whg.s[309]++,JSON.parse(ppaBytes.toString()));// ppa returns true if no PPA Contract for that userID has been issued.
// ppa returns error if something is wrong with PPA Contract
// Otherwise, ppa returns ppa value for that partial key
cov_1pebg41whg.s[310]++;if(ppa.CustomerID!==userID){cov_1pebg41whg.b[49][0]++;cov_1pebg41whg.s[311]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[49][1]++;}// Check if attribute IsSigned is true
cov_1pebg41whg.s[312]++;if(ppa.IsSigned){cov_1pebg41whg.b[50][0]++;cov_1pebg41whg.s[313]++;throw new Error(`Your PPA has been already signed`);}else{cov_1pebg41whg.b[50][1]++;}// Otherwise, change the IsSigned state.
cov_1pebg41whg.s[314]++;ppa.IsSigned=true;// ppa.Customer=await ctx.clientIdentity.getID();
// Attach current date
cov_1pebg41whg.s[315]++;ppa.LastModificationOn=new Date(date);const valueBuffer=(cov_1pebg41whg.s[316]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[317]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[318]++;await ctx.SetEventName('PPAaccepted');cov_1pebg41whg.s[319]++;await ctx.stub.putState(ppa.ppaID,valueBuffer);cov_1pebg41whg.s[320]++;return ppa;}// If a farmer signs a PPAproposal, originator will receive its event and according to it, will issue a POOL token that
// will record every ppaID. The owner of this Token will receive the payments farmers will do.
// This will be the pool of PPAs
async MintPPA(ctx,ppaID,date){cov_1pebg41whg.f[37]++;const genericID=(cov_1pebg41whg.s[321]++,await ctx.stub.getTxID());const ppaBytes=(cov_1pebg41whg.s[322]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[323]++;if((cov_1pebg41whg.b[52][0]++,!ppaBytes)||(cov_1pebg41whg.b[52][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[51][0]++;cov_1pebg41whg.s[324]++;throw new Error(`Error: no State related to key ${ppaID}`);}else{cov_1pebg41whg.b[51][1]++;}const ppa=(cov_1pebg41whg.s[325]++,JSON.parse(ppaBytes.toString()));const userID=(cov_1pebg41whg.s[326]++,await ctx.GetUserIdentity('cif'));cov_1pebg41whg.s[327]++;if(userID!==ppa.OwnerID){cov_1pebg41whg.b[53][0]++;cov_1pebg41whg.s[328]++;throw new Error(`Field ownerID does not match your user identity of the ecert`);}else{cov_1pebg41whg.b[53][1]++;}cov_1pebg41whg.s[329]++;if(!ppa.IsSigned){cov_1pebg41whg.b[54][0]++;cov_1pebg41whg.s[330]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[54][1]++;}cov_1pebg41whg.s[331]++;if(ppa.IsIssued){cov_1pebg41whg.b[55][0]++;cov_1pebg41whg.s[332]++;throw new Error(`This PPA is already inside the POOL`);}else{cov_1pebg41whg.b[55][1]++;}// Include PPA Key inside Pool of assets
let pool;let hasBeenCreated=(cov_1pebg41whg.s[333]++,await this._isPoolCreated(ctx));cov_1pebg41whg.s[334]++;if(hasBeenCreated===0){cov_1pebg41whg.b[56][0]++;cov_1pebg41whg.s[335]++;pool={poolID:'',ppaIDs:[],OwnerID:'',LastModificationOn:new Date(date),CouponPortion:1};cov_1pebg41whg.s[336]++;pool.OwnerID=ppa.OwnerID;cov_1pebg41whg.s[337]++;pool.ppaIDs.push(ppa.ppaID);cov_1pebg41whg.s[338]++;pool.poolID=await ctx.stub.createCompositeKey('POOL',[genericID]);//console.log(pool);
cov_1pebg41whg.s[339]++;await ctx.stub.putState(pool.poolID,Buffer.from(JSON.stringify(pool)));}else{cov_1pebg41whg.b[56][1]++;cov_1pebg41whg.s[340]++;pool=await this._getPoolStateByPartialCompositeKey(ctx,'POOL');//console.log(pool)
cov_1pebg41whg.s[341]++;pool.OwnerID=ppa.OwnerID;cov_1pebg41whg.s[342]++;pool.ppaIDs.push(ppa.ppaID);cov_1pebg41whg.s[343]++;ppa.LastModificationOn=new Date(date);cov_1pebg41whg.s[344]++;await ctx.stub.deleteState(pool.poolID);cov_1pebg41whg.s[345]++;pool.poolID=await ctx.stub.createCompositeKey('POOL',[genericID]);cov_1pebg41whg.s[346]++;await ctx.stub.putState(pool.poolID,Buffer.from(JSON.stringify(pool)));}let valueBuffer=(cov_1pebg41whg.s[347]++,Buffer.from(JSON.stringify(pool)));cov_1pebg41whg.s[348]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[349]++;await ctx.SetEventName('PPAtokenMinted');cov_1pebg41whg.s[350]++;return pool;}// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ---------------------------------------TODO-----------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
/**
     *
     * @param {Context} ctx
     * @param {string} argtype is the default types of maintenance services originator is
     *  able to provide
     */ // Farmer will execute this function in order to request one of the default maintenance services
// offered by Originator. She/He will record the date request was made, so originator must be listening
// to events of this type if no overexpenses are considered
async MaintenanceServiceRequest(ctx,ppaID,serviceMaintenanceType,date){cov_1pebg41whg.f[38]++;const maintenanceType=(cov_1pebg41whg.s[351]++,[{name:'service1',price:12},{name:'service2',price:12},{name:'service3',price:12}]);const userID=(cov_1pebg41whg.s[352]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[353]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[354]++;if((cov_1pebg41whg.b[58][0]++,!ppaBytes)||(cov_1pebg41whg.b[58][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[57][0]++;cov_1pebg41whg.s[355]++;throw new Error(`PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[57][1]++;}const ppa=(cov_1pebg41whg.s[356]++,JSON.parse(ppaBytes.toString()));// check ID of eCert and ID of PPA customer
cov_1pebg41whg.s[357]++;if(userID!==ppa.CustomerID){cov_1pebg41whg.b[59][0]++;cov_1pebg41whg.s[358]++;throw new Error(`Customer ID and User ID do not match`);}else{cov_1pebg41whg.b[59][1]++;}// We check if it has been signed
cov_1pebg41whg.s[359]++;if(!ppa.IsSigned){cov_1pebg41whg.b[60][0]++;cov_1pebg41whg.s[360]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[60][1]++;}cov_1pebg41whg.s[361]++;if(ppa.IsInDefault){cov_1pebg41whg.b[61][0]++;cov_1pebg41whg.s[362]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[61][1]++;}const solution=(cov_1pebg41whg.s[363]++,maintenanceType.find(service=>{cov_1pebg41whg.f[39]++;cov_1pebg41whg.s[364]++;return service.name===serviceMaintenanceType;}));// Prior input parameters verifications
cov_1pebg41whg.s[365]++;if(solution===undefined){cov_1pebg41whg.b[62][0]++;cov_1pebg41whg.s[366]++;throw new Error(`The ${serviceMaintenanceType} service is not available`);}else{cov_1pebg41whg.b[62][1]++;cov_1pebg41whg.s[367]++;ppa.MaintenanceServiceRequest=solution.name;cov_1pebg41whg.s[368]++;ppa.LastMaintenanceServiceOn=new Date(date);cov_1pebg41whg.s[369]++;ppa.ServiceRequestDate=new Date(date);}cov_1pebg41whg.s[370]++;ppa.LastModificationOn=new Date(date);cov_1pebg41whg.s[371]++;ppa.IsServiceMaintenanceOn=true;cov_1pebg41whg.s[372]++;ppa.LastModificationUserID=userID;// En golang los Bytes de la ID funcionan bien
const valueBuffer=(cov_1pebg41whg.s[373]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[374]++;await ctx.stub.putState(ppa.ppaID,valueBuffer);cov_1pebg41whg.s[375]++;await ctx.SetEventName('MaintenanceRequired');cov_1pebg41whg.s[376]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[377]++;return ppa;}// for simplicity we are not considering a symbiosys between oracles and blockchain
// networks (in this version), so we will introduce that real time parameters as a function
// which will be called beforeTransaction (or not). That parameters state will include current
// electricity price, current payment proportion between principal and coupon...
// async WriteCommonRealTimeParameters(ctx,currentElectricityPrice, paymentProportionAllocated,date){
//     // At the moment no identity verifications
//     // Who can commit this function????
//     // We are going to assign an easy-to-query key
//     const key='RealTimeParameters';
//     // Check if this doc already exists
//     const oldvalueBytes=await ctx.stub.getState(key);
//     let value;
//     if (!oldvalueBytes || oldvalueBytes.length === 0) {
//         value={
//             ID: key,
//             ElectricityPrice: currentElectricityPrice,
//             ProportionAllocated: paymentProportionAllocated,
//             LastModificationOn: new Date(date)
//         };
//         const valueBuffer = Buffer.from(JSON.stringify(value));
//         await ctx.stub.putState(key, valueBuffer);
//     }
//     value= JSON.parse(oldvalueBytes.toString());
//     value.key=key;
//     value.ElectricityPrice=currentElectricityPrice;
//     value.ProportionAllocated=paymentProportionAllocated;
//     value.LastModificationOn= new Date(date);
//     const valueBuffer= Buffer.from(JSON.stringify(value));
//     await ctx.stub.putState(key,valueBuffer);
// }
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// could this function be executed from .job file?
// Originator will execute this function monthly to update the PPA with data about energy
// consumption
async EnergyConsumptionPerPPA(ctx,ppaID,energyConsumption,date){cov_1pebg41whg.f[40]++;let ownerID=(cov_1pebg41whg.s[378]++,await ctx.GetUserIdentity('cif'));// retrieve PPA state
const ppaBytes=(cov_1pebg41whg.s[379]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[380]++;if((cov_1pebg41whg.b[64][0]++,!ppaBytes)||(cov_1pebg41whg.b[64][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[63][0]++;cov_1pebg41whg.s[381]++;throw new Error(`State with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[63][1]++;}let ppa=(cov_1pebg41whg.s[382]++,JSON.parse(ppaBytes.toString()));// check if owner of the PPA (originator) matches the client who executes this function
cov_1pebg41whg.s[383]++;if(ownerID!==ppa.OwnerID){cov_1pebg41whg.b[65][0]++;cov_1pebg41whg.s[384]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[65][1]++;}cov_1pebg41whg.s[385]++;if(!ppa.IsSigned){cov_1pebg41whg.b[66][0]++;cov_1pebg41whg.s[386]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[66][1]++;}const energy=(cov_1pebg41whg.s[387]++,parseFloat(energyConsumption));// update the date
cov_1pebg41whg.s[388]++;ppa.LastModificationOn=new Date(date);// these data will be reset once a year (once its size is equal to 12)
cov_1pebg41whg.s[389]++;if(ppa.EnergyConsumption.length===ppa.PaymentsFrequency){cov_1pebg41whg.b[67][0]++;cov_1pebg41whg.s[390]++;ppa.EnergyConsumption=[];}else{cov_1pebg41whg.b[67][1]++;}cov_1pebg41whg.s[391]++;if(!ppa.IsLastBillPaid){cov_1pebg41whg.b[68][0]++;cov_1pebg41whg.s[392]++;ppa.IsInDefault=true;}else{cov_1pebg41whg.b[68][1]++;cov_1pebg41whg.s[393]++;ppa.IsInDefault=false;}// append data
cov_1pebg41whg.s[394]++;ppa.EnergyConsumption.push(energy);cov_1pebg41whg.s[395]++;ppa.LastEnergyConsumption=energy;cov_1pebg41whg.s[396]++;ppa.LastModificationUserID=ownerID;cov_1pebg41whg.s[397]++;ppa.BillDate=ppa.LastModificationOn;cov_1pebg41whg.s[398]++;ppa.IsLastBillPaid=false;const ppaBuffer=(cov_1pebg41whg.s[399]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[400]++;await ctx.stub.putState(ppa.ppaID,ppaBuffer);cov_1pebg41whg.s[401]++;await ctx.SetEventName('BillDelivered');cov_1pebg41whg.s[402]++;await ctx.SetEventPayload(ppaBuffer);cov_1pebg41whg.s[403]++;return ppa;}// TODO: add non working days
// This auxiliary function serves to compute the time between two dates, including if there are
// non working days in between. It serves to pay bills, to maintenance service request and every function
// which involves a fixed period of time to be executed.
async _checkNonWorkingDays(currentDate,notificationDate){cov_1pebg41whg.f[41]++;const nonWorkingDay1=(cov_1pebg41whg.s[404]++,new Date(2022,0,1));const nonWorkingDay2=(cov_1pebg41whg.s[405]++,new Date(2021,11,25));const nonWorkingDay3=(cov_1pebg41whg.s[406]++,new Date(2022,4,1));const nonWorkingDays=(cov_1pebg41whg.s[407]++,[nonWorkingDay1,nonWorkingDay2,nonWorkingDay3]);const new_resultados=(cov_1pebg41whg.s[408]++,nonWorkingDays.filter(day=>{cov_1pebg41whg.f[42]++;cov_1pebg41whg.s[409]++;return(cov_1pebg41whg.b[69][0]++,day>=notificationDate)&&(cov_1pebg41whg.b[69][1]++,day<=currentDate);}));cov_1pebg41whg.s[410]++;return new_resultados.length;}// Once originator has issued a bill, farmer/irrigator must pay for the consumed energy in a
// certain period of time, otherwise farmer will be considered a defaulter
async MonthlyBillPayout(ctx,ppaID,tokenID,typeID,date){cov_1pebg41whg.f[43]++;// TODO: Igual es necerario que algun dato salga de algun oracle
// retrieve the state of the token
const userID=(cov_1pebg41whg.s[411]++,await ctx.GetUserIdentity('cif'));const compositeKey=(cov_1pebg41whg.s[412]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID,typeID]));const tokenBytes=(cov_1pebg41whg.s[413]++,await ctx.stub.getState(compositeKey));cov_1pebg41whg.s[414]++;if((cov_1pebg41whg.b[71][0]++,!tokenBytes)||(cov_1pebg41whg.b[71][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[70][0]++;cov_1pebg41whg.s[415]++;throw new Error(`Error token with ID ${compositeKey} does not exist`);}else{cov_1pebg41whg.b[70][1]++;}const token=(cov_1pebg41whg.s[416]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[417]++;if(!token.CanBeUsed){cov_1pebg41whg.b[72][0]++;cov_1pebg41whg.s[418]++;throw new Error(`Error, token with ID ${tokenID} is allocated to other services. Try to use another key or cancel whatever your token is allocated to`);}else{cov_1pebg41whg.b[72][1]++;}// Now we retrieve the PPA associated with userDNI
const valueBytes=(cov_1pebg41whg.s[419]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[420]++;if((cov_1pebg41whg.b[74][0]++,!valueBytes)||(cov_1pebg41whg.b[74][1]++,valueBytes.length===0)){cov_1pebg41whg.b[73][0]++;cov_1pebg41whg.s[421]++;throw new Error(`PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[73][1]++;}let value=(cov_1pebg41whg.s[422]++,JSON.parse(valueBytes.toString()));// Check if customer and user who send transaction proposal match
// Not compulsory, we have already checked this with the ppa proposal
cov_1pebg41whg.s[423]++;if(value.CustomerID!==userID){cov_1pebg41whg.b[75][0]++;cov_1pebg41whg.s[424]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[75][1]++;}cov_1pebg41whg.s[425]++;if(!value.IsSigned){cov_1pebg41whg.b[76][0]++;cov_1pebg41whg.s[426]++;throw new Error(`PPA with ID ${ppaID} has not been signed`);}else{cov_1pebg41whg.b[76][1]++;}// Check if there are non working days between these dates
const currentDate=(cov_1pebg41whg.s[427]++,new Date(date));const billDate=(cov_1pebg41whg.s[428]++,new Date(value.BillDate));const numberNonworkingDays=(cov_1pebg41whg.s[429]++,await this._checkNonWorkingDays(currentDate,billDate));const diff_days=(cov_1pebg41whg.s[430]++,(currentDate.getTime()-billDate.getTime())/(1000*3600*24));// TODO: not sure about this. If user wish to pay, should we accept later payments? better than nothing...
// check if current day is inside boudary dates
const limitDate=(cov_1pebg41whg.s[431]++,value.LimitDate+numberNonworkingDays);cov_1pebg41whg.s[432]++;if(diff_days>limitDate){cov_1pebg41whg.b[77][0]++;cov_1pebg41whg.s[433]++;throw new Error(`Try to pay on time`);}else{cov_1pebg41whg.b[77][1]++;}// These functions should be included in the PPA object
// Define functions to determine the price to pay for
const myFunctions=(cov_1pebg41whg.s[434]++,{firstMonthlyPayment:(par_UnitPrice,par_EnergyConsumption,par_MinimumMonthlyFee)=>{cov_1pebg41whg.f[44]++;const values=(cov_1pebg41whg.s[435]++,[par_UnitPrice*par_EnergyConsumption,par_MinimumMonthlyFee]);// const values=[PPA.UnitPrice*PPA.LastEnergyConsumption,PPA.MinimumMonthlyFee];
const resultado=(cov_1pebg41whg.s[436]++,Math.max(...values));cov_1pebg41whg.s[437]++;return resultado;},succesiveMonthlyPayments:(par_LastEnergyConsumption,par_UnitPrice,par_MinimumMonthlyFee,par_EnergyConsumption,par_FacturacionMensual)=>{cov_1pebg41whg.f[45]++;let total=(cov_1pebg41whg.s[438]++,par_FacturacionMensual.reduce(function(a,b){cov_1pebg41whg.f[46]++;cov_1pebg41whg.s[439]++;return a+b;}));const values=(cov_1pebg41whg.s[440]++,[par_LastEnergyConsumption*par_UnitPrice,Math.abs(par_MinimumMonthlyFee*par_EnergyConsumption.length-total)]);const resultado=(cov_1pebg41whg.s[441]++,Math.max(...values));cov_1pebg41whg.s[442]++;return resultado;}});cov_1pebg41whg.s[443]++;if(value.IsLastBillPaid){cov_1pebg41whg.b[78][0]++;cov_1pebg41whg.s[444]++;throw new Error(`You have already paid this bill`);}else{cov_1pebg41whg.b[78][1]++;}// depending on which period we stay, i.e depending on which size energyconsumption has, which
// is our History per year
let bill;cov_1pebg41whg.s[445]++;if(value.EnergyConsumption.length===1){cov_1pebg41whg.b[79][0]++;cov_1pebg41whg.s[446]++;bill=myFunctions.firstMonthlyPayment(value.UnitPrice,value.LastEnergyConsumption,value.MinimumMonthlyFee);}else{cov_1pebg41whg.b[79][1]++;cov_1pebg41whg.s[447]++;// }else if (value.EnergyConsumption.length!==0){
bill=myFunctions.succesiveMonthlyPayments(value.LastEnergyConsumption,value.UnitPrice,value.MinimumMonthlyFee,value.EnergyConsumption,value.FacturacionMensual);}let new_bill=(cov_1pebg41whg.s[448]++,bill.toFixed(2));// Now it is clear how much has the farmer to pay for, it is time to pay (send his/her tokens)
const myMoney=(cov_1pebg41whg.s[449]++,token.Amount);const balance=(cov_1pebg41whg.s[450]++,myMoney-parseInt(new_bill*100));cov_1pebg41whg.s[451]++;if(balance<0){cov_1pebg41whg.b[80][0]++;cov_1pebg41whg.s[452]++;throw new Error(`Please add more coins to your wallet, or pool them. Bill amounts to ${new_bill}`);}else{cov_1pebg41whg.b[80][1]++;}cov_1pebg41whg.s[453]++;value.FacturacionMensual.push(new_bill);cov_1pebg41whg.s[454]++;value.LastFacturacionMensual=new_bill;cov_1pebg41whg.s[455]++;value.LastModificationOn=currentDate;cov_1pebg41whg.s[456]++;value.LastModificationUserID=userID;cov_1pebg41whg.s[457]++;value.IsLastBillPaid=true;// retrieve PPA Pool state in order to allocate tokens to pool owner or to ppa Owner if ppa
// is not inside pool
let[isInside,owner]=(cov_1pebg41whg.s[458]++,await this._isPPAinPool(ctx,value.ppaID));cov_1pebg41whg.s[459]++;if((cov_1pebg41whg.b[82][0]++,!owner)||(cov_1pebg41whg.b[82][1]++,!isInside)){cov_1pebg41whg.b[81][0]++;cov_1pebg41whg.s[460]++;// bill paid to PPA Owner
owner=value.OwnerID;}else{cov_1pebg41whg.b[81][1]++;}let ret;let couponPortion=(cov_1pebg41whg.s[461]++,await this._getCouponProportion(ctx,'POOL'));// Igual asi es mejor 
// if(isInside){
// }else{
// }
// el caso de que no este dentro de la Pool no existiria usando este statement
cov_1pebg41whg.s[462]++;if(couponPortion===1){cov_1pebg41whg.b[83][0]++;cov_1pebg41whg.s[463]++;ret=await this._TransferMoney(ctx,token.ID,new_bill,owner,userID);}else{cov_1pebg41whg.b[83][1]++;cov_1pebg41whg.s[464]++;// else we must allocate p*Bill tokens to Coupon Payments which will be CanBeUsed=true Tokens
// and 1-p tokens to Principal payment which will be CanBeUsed=false Tokens
ret=await this._TransferMoneyToCouponAndPrincipal(ctx,token.ID,new_bill,couponPortion,owner,userID);}// let CouponPortion=await this._isCouponPortion
// if()
// TODO
// tranfer to tokens' owner
// let ret=await this._TransferMoney(ctx,token.ID,new_bill,owner,userID)
cov_1pebg41whg.s[465]++;await ctx.stub.putState(value.ppaID,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[466]++;return ret;}// As a simplicity we will assume that each user will use just one token ID to pay the bill. If a
// user has some IDs that putting together reach the desirable value, the user will
// pool his tokens, otherwise he/she will not commit the tx
/**
     *
     * @param {*} ctx
     * @param {*} tokenID
     * @param {*} amount
     * @param {*} receiverID
     */ // Auxiliary function to transfer the money farmers pay.
async _TransferMoney(ctx,tokenID,amount,receiverID,userID){cov_1pebg41whg.f[47]++;// No prior verifications needed, because they have been checked in main function, which is
// MonthlyPayout
const tokenBytes=(cov_1pebg41whg.s[467]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[468]++;if((cov_1pebg41whg.b[85][0]++,!tokenBytes)||(cov_1pebg41whg.b[85][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[84][0]++;cov_1pebg41whg.s[469]++;throw new Error(`Error: no token associated with ID ${tokenID}`);}else{cov_1pebg41whg.b[84][1]++;}const token=(cov_1pebg41whg.s[470]++,JSON.parse(tokenBytes.toString()));const balance=(cov_1pebg41whg.s[471]++,token.Amount-amount);const issuer=(cov_1pebg41whg.s[472]++,ctx.clientIdentity.getID());const genericID=(cov_1pebg41whg.s[473]++,await ctx.stub.getTxID());let typeID;const key1=(cov_1pebg41whg.s[474]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[475]++,await ctx.stub.createCompositeKey('securitizationCoin',[receiverID,genericID]));cov_1pebg41whg.s[476]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[477]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:issuer,Amount:balance,Factor:100,CanBeUsed:true});cov_1pebg41whg.s[478]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[479]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:amount,CanBeUsed:true});let utxos=(cov_1pebg41whg.s[480]++,[]);cov_1pebg41whg.s[481]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[482]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[483]++;if(balance!==0){cov_1pebg41whg.b[86][0]++;cov_1pebg41whg.s[484]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));cov_1pebg41whg.s[485]++;utxos=[utxo1,utxo2];cov_1pebg41whg.s[486]++;return utxos;}else{cov_1pebg41whg.b[86][1]++;cov_1pebg41whg.s[487]++;utxos=[utxo2];cov_1pebg41whg.s[488]++;return utxos;}}async _TransferMoneyToCouponAndPrincipal(ctx,tokenID,amount,couponPortion,receiverID,userID){cov_1pebg41whg.f[48]++;// No prior verifications needed, because they have been checked in main function, which is
// MonthlyPayout
const tokenBytes=(cov_1pebg41whg.s[489]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[490]++;if((cov_1pebg41whg.b[88][0]++,!tokenBytes)||(cov_1pebg41whg.b[88][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[87][0]++;cov_1pebg41whg.s[491]++;throw new Error(`Error: no token associated with ID ${tokenID}`);}else{cov_1pebg41whg.b[87][1]++;}const token=(cov_1pebg41whg.s[492]++,JSON.parse(tokenBytes.toString()));const balance=(cov_1pebg41whg.s[493]++,token.Amount-amount);//console.log('balance')
//console.log(balance)
const issuer=(cov_1pebg41whg.s[494]++,ctx.clientIdentity.getID());const genericID=(cov_1pebg41whg.s[495]++,await ctx.stub.getTxID());let typeID;const key1=(cov_1pebg41whg.s[496]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[497]++,await ctx.stub.createCompositeKey('securitizationCoin',[receiverID,genericID]));cov_1pebg41whg.s[498]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[499]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:issuer,Amount:balance,Factor:100,CanBeUsed:true});// this utxo2 will be allocated to Coupon
cov_1pebg41whg.s[500]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[501]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:couponPortion*amount,CanBeUsed:true});cov_1pebg41whg.s[502]++;typeID=':2';const utxo3=(cov_1pebg41whg.s[503]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:(1-couponPortion)*amount,CanBeUsed:false});let utxos=(cov_1pebg41whg.s[504]++,[]);cov_1pebg41whg.s[505]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[506]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[507]++;await ctx.stub.putState(utxo3.ID,Buffer.from(JSON.stringify(utxo3)));cov_1pebg41whg.s[508]++;if(balance!==0){cov_1pebg41whg.b[89][0]++;cov_1pebg41whg.s[509]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));cov_1pebg41whg.s[510]++;utxos=[utxo1,utxo2,utxo3];cov_1pebg41whg.s[511]++;return utxos;}else{cov_1pebg41whg.b[89][1]++;cov_1pebg41whg.s[512]++;utxos=[utxo2,utxo3];cov_1pebg41whg.s[513]++;return utxos;}}// // TODO: Who can execute this function??
// /**
//  *
//  * @param {*} ctx
//  * @param {*} userID
//  * @param {*} date
//  */
// // Each period, originator will check how are performing the PPAs he has offered. This will update
// // if some irrigator is a defaulter or not.
// async MonthlyPerformance(ctx, ppaID,date){
//     const ppaBytes=await ctx.stub.getState(ppaID);
//     if (!ppaBytes || ppaBytes.length === 0){
//         throw new Error(`This PPA ID ${ppaID} does not exist`);
//     }
//     let ppa=JSON.parse(ppaBytes.toString())
//     // Now we check its performance and update PPA according to elapsed time between current date
//     // and payment date or other dates
//     const currentlyDate=new Date(DATE)
//     // Were bills paid on time?
//     // Check difference between dates
//     // TODO: the rest of verifications
//     // ppa.LastModificationOn=date;
//     // ppa.LastModificationUserID=userID;
//     const ppaBuffer= Buffer.from(JSON.stringify(ppa));
//     await ctx.stub.putState(ppa.ppaID,ppaBuffer)
// }
// TODO:
// change userID -> ppaID
}// This is another contract which defines a new bussiness: the acquisition of PPA Tokens,
// valuation of the pool on-chain and  transference of the bonds
class bondIssuanceContract extends Contract{constructor(){cov_1pebg41whg.f[49]++;cov_1pebg41whg.s[514]++;super('bonds.securitization.com');}createContext(){cov_1pebg41whg.f[50]++;cov_1pebg41whg.s[515]++;return new securitizationContext();}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[51]++;const iterator=(cov_1pebg41whg.s[516]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[517]++,0);let results;cov_1pebg41whg.s[518]++;for await(const res of iterator){cov_1pebg41whg.s[519]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[520]++;counter=counter+1;}cov_1pebg41whg.s[521]++;if(counter>1){cov_1pebg41whg.b[90][0]++;cov_1pebg41whg.s[522]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[90][1]++;cov_1pebg41whg.s[523]++;if(counter===0){cov_1pebg41whg.b[91][0]++;cov_1pebg41whg.s[524]++;return true;}else{cov_1pebg41whg.b[91][1]++;}}cov_1pebg41whg.s[525]++;return results;}// Prior verifications included in beforeTransaction logic
async beforeTransaction(ctx){cov_1pebg41whg.f[52]++;let userMSPID=(cov_1pebg41whg.s[526]++,ctx.GetMSPID());cov_1pebg41whg.s[527]++;if((cov_1pebg41whg.b[93][0]++,userMSPID!=='originatorMSP')&&(cov_1pebg41whg.b[93][1]++,userMSPID!=='spvMSP')&&(cov_1pebg41whg.b[93][2]++,userMSPID!=='ratingagencyMSP')){cov_1pebg41whg.b[92][0]++;cov_1pebg41whg.s[528]++;throw new Error(`Your organization ${userMSPID} is not allowed to perform this action`);}else{cov_1pebg41whg.b[92][1]++;}let isClient=(cov_1pebg41whg.s[529]++,await ctx.GetRole());cov_1pebg41whg.s[530]++;if(!isClient){cov_1pebg41whg.b[94][0]++;cov_1pebg41whg.s[531]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[94][1]++;}cov_1pebg41whg.s[532]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[533]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[534]++,par.fcn);let params=(cov_1pebg41whg.s[535]++,par.params);cov_1pebg41whg.s[536]++;for(let i=(cov_1pebg41whg.s[537]++,0);i<params.length;i++){cov_1pebg41whg.s[538]++;if(params[i]===''){cov_1pebg41whg.b[95][0]++;cov_1pebg41whg.s[539]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[95][1]++;}}cov_1pebg41whg.s[540]++;switch(func){case'BuyRequest':cov_1pebg41whg.b[96][0]++;cov_1pebg41whg.s[541]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[97][0]++;cov_1pebg41whg.s[542]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[97][1]++;cov_1pebg41whg.s[543]++;return;}case'SellRequest':cov_1pebg41whg.b[96][1]++;cov_1pebg41whg.s[544]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[98][0]++;cov_1pebg41whg.s[545]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[98][1]++;cov_1pebg41whg.s[546]++;return;}case'SignRequestOriginator':cov_1pebg41whg.b[96][2]++;cov_1pebg41whg.s[547]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[99][0]++;cov_1pebg41whg.s[548]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[99][1]++;cov_1pebg41whg.s[549]++;return;}case'SignRequestSPV':cov_1pebg41whg.b[96][3]++;cov_1pebg41whg.s[550]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[100][0]++;cov_1pebg41whg.s[551]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[100][1]++;cov_1pebg41whg.s[552]++;return;}case'Rating':cov_1pebg41whg.b[96][4]++;cov_1pebg41whg.s[553]++;if(ctx.mspid!=='ratingagencyMSP'){cov_1pebg41whg.b[101][0]++;cov_1pebg41whg.s[554]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[101][1]++;cov_1pebg41whg.s[555]++;return;}case'IssueBond':cov_1pebg41whg.b[96][5]++;cov_1pebg41whg.s[556]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[102][0]++;cov_1pebg41whg.s[557]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[102][1]++;cov_1pebg41whg.s[558]++;return;}case'QueryPool':cov_1pebg41whg.b[96][6]++;cov_1pebg41whg.s[559]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[103][0]++;cov_1pebg41whg.s[560]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[103][1]++;cov_1pebg41whg.s[561]++;return;}case'QuerySellRequest':cov_1pebg41whg.b[96][7]++;cov_1pebg41whg.s[562]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[104][0]++;cov_1pebg41whg.s[563]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[104][1]++;cov_1pebg41whg.s[564]++;return;}case'QueryBuyRequest':cov_1pebg41whg.b[96][8]++;cov_1pebg41whg.s[565]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[105][0]++;cov_1pebg41whg.s[566]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[105][1]++;cov_1pebg41whg.s[567]++;return;}}}async afterTransaction(ctx){cov_1pebg41whg.f[53]++;let event=(cov_1pebg41whg.s[568]++,await ctx.GetEventPayload());cov_1pebg41whg.s[569]++;return event;}/**
     *
     * @param {*} ctx
     * @returns the size of the pool
     */async _isPoolCreated(ctx,poolName){cov_1pebg41whg.f[54]++;const iterator=(cov_1pebg41whg.s[570]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let results=(cov_1pebg41whg.s[571]++,[]);cov_1pebg41whg.s[572]++;for await(const res of iterator){cov_1pebg41whg.s[573]++;// push key instead of value json
results.push(res.key);}cov_1pebg41whg.s[574]++;if(results.length===0){cov_1pebg41whg.b[106][0]++;cov_1pebg41whg.s[575]++;return false;}else{cov_1pebg41whg.b[106][1]++;cov_1pebg41whg.s[576]++;if(results.length===1){cov_1pebg41whg.b[107][0]++;cov_1pebg41whg.s[577]++;return true;}else{cov_1pebg41whg.b[107][1]++;cov_1pebg41whg.s[578]++;throw new Error(`State not unique`);}}}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @returns the state associated with that partial key
     */ // This auxiliary function will only work with those states expected to be unique (POOL, REALTIMEPARAMETERS, RATING...)
async _getPoolStateByPartialCompositeKey(ctx,docTypeName){cov_1pebg41whg.f[55]++;const iterator=(cov_1pebg41whg.s[579]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[]));let counter=(cov_1pebg41whg.s[580]++,0);let results;let isCreated;let res=(cov_1pebg41whg.s[581]++,[]);cov_1pebg41whg.s[582]++;for await(const res of iterator){cov_1pebg41whg.s[583]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[584]++;counter=counter+1;}//console.log(`counter: ${counter}`)
cov_1pebg41whg.s[585]++;if(counter===1){cov_1pebg41whg.b[108][0]++;cov_1pebg41whg.s[586]++;isCreated=true;cov_1pebg41whg.s[587]++;res.push(isCreated);cov_1pebg41whg.s[588]++;res.push(results);cov_1pebg41whg.s[589]++;return res;}else{cov_1pebg41whg.b[108][1]++;cov_1pebg41whg.s[590]++;if(counter===0){cov_1pebg41whg.b[109][0]++;cov_1pebg41whg.s[591]++;isCreated=false;cov_1pebg41whg.s[592]++;res.push(isCreated);cov_1pebg41whg.s[593]++;return res;}else{cov_1pebg41whg.b[109][1]++;cov_1pebg41whg.s[594]++;throw new Error('This state-value pair is not unique');}}}async QueryPool(ctx,poolName){cov_1pebg41whg.f[56]++;let pool=(cov_1pebg41whg.s[595]++,await this._getPoolStateByPartialCompositeKey(ctx,poolName));cov_1pebg41whg.s[596]++;if((cov_1pebg41whg.b[111][0]++,!pool[0])&&(cov_1pebg41whg.b[111][1]++,pool.length===1)){cov_1pebg41whg.b[110][0]++;cov_1pebg41whg.s[597]++;throw new Error(`There is no Pool linked to name ${poolName}`);}else{cov_1pebg41whg.b[110][1]++;}cov_1pebg41whg.s[598]++;return pool[1];}/**
     *
     * @param {*} ctx
     * @param {*} amount
     * @param {*} price
     * @param {*} toIdentity
     */ // SPV will want to buy the pool of assets that originator owns, but firstly she/he needs
// to submit a request to buy it.
async BuyRequest(ctx,amount,price){cov_1pebg41whg.f[57]++;// TODO: originator must achieve a certain pool size to sell??
//       what if actual pool size is greater than spv wants
// if (await this._isPoolCreated(ctx,poolName)===false){
//     throw new Error(`Pool still not created`)
// }
const userID=(cov_1pebg41whg.s[599]++,await ctx.GetUserIdentity('cif'));const genericID=(cov_1pebg41whg.s[600]++,await ctx.stub.getTxID());const requestID=(cov_1pebg41whg.s[601]++,await ctx.stub.createCompositeKey('BuyRequest',[userID,genericID]));let value=(cov_1pebg41whg.s[602]++,{ID:requestID,Owner:userID,Receiver:'',Amount:parseInt(amount),Price:parseInt(parseFloat(price)*100),IsSigned:false,Factor:100});const valueBuffer=(cov_1pebg41whg.s[603]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[604]++;await ctx.stub.putState(requestID,valueBuffer);cov_1pebg41whg.s[605]++;await ctx.SetEventName('BuyRequestIssued');cov_1pebg41whg.s[606]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[607]++;return value;}async QueryBuyRequest(ctx){cov_1pebg41whg.f[58]++;let iterator=(cov_1pebg41whg.s[608]++,await ctx.stub.getStateByPartialCompositeKey('BuyRequest'));let results=(cov_1pebg41whg.s[609]++,[]);cov_1pebg41whg.s[610]++;for await(const res of iterator){cov_1pebg41whg.s[611]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[612]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} price
     * @param {*} toIdentity
     */ // Originator submits a sell request to SPV
async SellRequest(ctx,price,poolID){cov_1pebg41whg.f[59]++;const userID=(cov_1pebg41whg.s[613]++,await ctx.GetUserIdentity('cif'));const genericID=(cov_1pebg41whg.s[614]++,await ctx.stub.getTxID());const requestID=(cov_1pebg41whg.s[615]++,await ctx.stub.createCompositeKey('SellRequest',[userID,genericID]));let value=(cov_1pebg41whg.s[616]++,{ID:requestID,Owner:userID,Receiver:'',Price:parseInt(parseFloat(price)*100),Factor:100,IsSigned:false,BackedBy:poolID});const valueBuffer=(cov_1pebg41whg.s[617]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[618]++;await ctx.stub.putState(requestID,valueBuffer);cov_1pebg41whg.s[619]++;await ctx.SetEventName('SellRequestIssued');cov_1pebg41whg.s[620]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[621]++;return value;}async QuerySellRequest(ctx){cov_1pebg41whg.f[60]++;let iterator=(cov_1pebg41whg.s[622]++,await ctx.stub.getStateByPartialCompositeKey('SellRequest'));let results=(cov_1pebg41whg.s[623]++,[]);cov_1pebg41whg.s[624]++;for await(const res of iterator){cov_1pebg41whg.s[625]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[626]++;return results;}async QueryFullRequest(ctx){cov_1pebg41whg.f[61]++;let iterator=(cov_1pebg41whg.s[627]++,await ctx.stub.getStateByPartialCompositeKey('FullRequest'));let results=(cov_1pebg41whg.s[628]++,[]);cov_1pebg41whg.s[629]++;for await(const res of iterator){cov_1pebg41whg.s[630]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[631]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} type
     * @param {*} toIdentity  in real case toIdentity is an attribute linked to certificate
     */ // cash owner must sign first
// SPV accepts request. Check if she/he has enough funds
async SignRequestSPV(ctx,tokenID,typeID,buyRequestID,sellRequestID,sellRequestPrice,sellRequestBackedBy,sellRequestOwner){cov_1pebg41whg.f[62]++;const userID=(cov_1pebg41whg.s[632]++,await ctx.GetUserIdentity('cif'));const buyRequestBytes=(cov_1pebg41whg.s[633]++,await ctx.stub.getState(buyRequestID));cov_1pebg41whg.s[634]++;if((cov_1pebg41whg.b[113][0]++,!buyRequestBytes)||(cov_1pebg41whg.b[113][1]++,buyRequestBytes.length===0)){cov_1pebg41whg.b[112][0]++;cov_1pebg41whg.s[635]++;throw new Error(`Buy request linked to ID ${buyRequestID} does not exist`);}else{cov_1pebg41whg.b[112][1]++;}const buyRequest=(cov_1pebg41whg.s[636]++,JSON.parse(buyRequestBytes.toString()));// Check if this request has been already signed
cov_1pebg41whg.s[637]++;if(buyRequest.IsSigned){cov_1pebg41whg.b[114][0]++;cov_1pebg41whg.s[638]++;throw new Error(`Request has been already signed. Not allowed to perform this action`);}else{cov_1pebg41whg.b[114][1]++;}// As cash owner will signs the request, we must be sure that he is the owner of that amount
// and maybe we should block his/her funds
// I dont think this could be necessary because in the DvP we will execute both actions, and
// if one of them does not succeed, noone will succeed.
// In order to not create false requests we are going to freeze tokens
const token_ID=(cov_1pebg41whg.s[639]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));const tokenBytes=(cov_1pebg41whg.s[640]++,await ctx.stub.getState(token_ID+typeID));cov_1pebg41whg.s[641]++;if((cov_1pebg41whg.b[116][0]++,!tokenBytes)||(cov_1pebg41whg.b[116][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[115][0]++;cov_1pebg41whg.s[642]++;throw new Error(`Error, Token with ID ${tokenID+typeID} does not exist`);}else{cov_1pebg41whg.b[115][1]++;}const myFunds=(cov_1pebg41whg.s[643]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[644]++;if(!myFunds.CanBeUsed){cov_1pebg41whg.b[117][0]++;cov_1pebg41whg.s[645]++;throw new Error(`Your token has been already used`);}else{cov_1pebg41whg.b[117][1]++;}// Check our funds
cov_1pebg41whg.s[646]++;if(buyRequest.Price>myFunds.Amount){cov_1pebg41whg.b[118][0]++;cov_1pebg41whg.s[647]++;throw new Error(`Your token has not enough funds. Try to pool your token or ask for mint`);}else{cov_1pebg41whg.b[118][1]++;}// If we have enough funds, then we can sign the request
cov_1pebg41whg.s[648]++;buyRequest.IsSigned=true;// Retrieve sell request
const sellRequestBytes=(cov_1pebg41whg.s[649]++,await ctx.stub.getState(sellRequestID));cov_1pebg41whg.s[650]++;if((cov_1pebg41whg.b[120][0]++,!sellRequestBytes)||(cov_1pebg41whg.b[120][1]++,sellRequestBytes.length===0)){cov_1pebg41whg.b[119][0]++;cov_1pebg41whg.s[651]++;throw new Error(`Sell Request does not exist or have been removed`);}else{cov_1pebg41whg.b[119][1]++;}let sellRequest=(cov_1pebg41whg.s[652]++,JSON.parse(sellRequestBytes.toString()));cov_1pebg41whg.s[653]++;if((cov_1pebg41whg.b[122][0]++,sellRequest.Price!==parseInt(sellRequestPrice))||(cov_1pebg41whg.b[122][1]++,sellRequest.BackedBy!==sellRequestBackedBy)||(cov_1pebg41whg.b[122][2]++,sellRequest.Owner!==sellRequestOwner)){cov_1pebg41whg.b[121][0]++;cov_1pebg41whg.s[654]++;throw new Error(`Sell Request has been modified`);}else{cov_1pebg41whg.b[121][1]++;}cov_1pebg41whg.s[655]++;buyRequest.Receiver=sellRequestOwner;let txid=(cov_1pebg41whg.s[656]++,await ctx.stub.getTxID());const n_value=(cov_1pebg41whg.s[657]++,{ID:'Request'+txid,buyRequest:buyRequest,sellRequest:sellRequest,TokenID:token_ID+typeID});const n_valueID=(cov_1pebg41whg.s[658]++,'Request'+txid);const valueBuffer=(cov_1pebg41whg.s[659]++,Buffer.from(JSON.stringify(n_value)));cov_1pebg41whg.s[660]++;await ctx.stub.putState(n_valueID,valueBuffer);cov_1pebg41whg.s[661]++;await ctx.stub.deleteState(sellRequest.ID);cov_1pebg41whg.s[662]++;await ctx.stub.deleteState(buyRequest.ID);cov_1pebg41whg.s[663]++;await ctx.SetEventName('SignSellRequest');cov_1pebg41whg.s[664]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[665]++;return n_valueID;}async _dvp(ctx,tokenID,securityID,tokensToTransfer){cov_1pebg41whg.f[63]++;const tokenBytes=(cov_1pebg41whg.s[666]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[667]++;if((cov_1pebg41whg.b[124][0]++,!tokenBytes)||(cov_1pebg41whg.b[124][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[123][0]++;cov_1pebg41whg.s[668]++;throw new Error(`Error, Token state according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[123][1]++;}const token=(cov_1pebg41whg.s[669]++,JSON.parse(tokenBytes.toString()));const securityBytes=(cov_1pebg41whg.s[670]++,await ctx.stub.getState(securityID));cov_1pebg41whg.s[671]++;if((cov_1pebg41whg.b[126][0]++,!securityBytes)||(cov_1pebg41whg.b[126][1]++,securityBytes.length===0)){cov_1pebg41whg.b[125][0]++;cov_1pebg41whg.s[672]++;throw new Error(`Error, Pool state according to key ${securityID} does not exist`);}else{cov_1pebg41whg.b[125][1]++;}const security=(cov_1pebg41whg.s[673]++,JSON.parse(securityBytes.toString()));cov_1pebg41whg.s[674]++;if((cov_1pebg41whg.b[128][0]++,!security.CanBeUsed)||(cov_1pebg41whg.b[128][1]++,!token.CanBeUsed)){cov_1pebg41whg.b[127][0]++;cov_1pebg41whg.s[675]++;throw new Error(`Token and/or security have been already used`);}else{cov_1pebg41whg.b[127][1]++;}const genericID=(cov_1pebg41whg.s[676]++,await ctx.stub.getTxID());// 'user' seria el que recibe el token/bono
const key1=(cov_1pebg41whg.s[677]++,await ctx.stub.createCompositeKey('securitizationCoin',[token.Owner,genericID]));const key2=(cov_1pebg41whg.s[678]++,await ctx.stub.createCompositeKey('securitizationCoin',[security.Owner,genericID]));const securityKey1=(cov_1pebg41whg.s[679]++,await ctx.stub.createCompositeKey('POOL',[token.Owner,genericID]));const balanceTokens=(cov_1pebg41whg.s[680]++,token.Amount-tokensToTransfer);let utxo1;let utxo2;let typeID;cov_1pebg41whg.s[681]++;typeID=':1';cov_1pebg41whg.s[682]++;utxo1={ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balanceTokens,Factor:100,CanBeUsed:true};cov_1pebg41whg.s[683]++;typeID=':0';cov_1pebg41whg.s[684]++;utxo2={ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:security.Owner,Issuer:token.Issuer,Amount:tokensToTransfer,CanBeUsed:true};cov_1pebg41whg.s[685]++;security.poolID=securityKey1;cov_1pebg41whg.s[686]++;security.Owner=token.Owner;cov_1pebg41whg.s[687]++;await ctx.stub.deleteState(tokenID);cov_1pebg41whg.s[688]++;await ctx.stub.deleteState(securityID);cov_1pebg41whg.s[689]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[690]++;await ctx.stub.putState(security.poolID,Buffer.from(JSON.stringify(security)));cov_1pebg41whg.s[691]++;if(balanceTokens!=0){cov_1pebg41whg.b[129][0]++;cov_1pebg41whg.s[692]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_1pebg41whg.b[129][1]++;}}/**
     *
     * @param {*} ctx
     * @param {*} tokenid
     */ // securities owner must sign afterwards
// originator accepts request: enough securities
async SignRequestOriginator(ctx,poolName,poolID,fullRequestID,buyRequestIdentity,buyRequestAmount,buyRequestPrice){cov_1pebg41whg.f[64]++;const userID=(cov_1pebg41whg.s[693]++,await ctx.GetUserIdentity('cif'));const valueBytes=(cov_1pebg41whg.s[694]++,await ctx.stub.getState(fullRequestID));cov_1pebg41whg.s[695]++;if((cov_1pebg41whg.b[131][0]++,!valueBytes)||(cov_1pebg41whg.b[131][1]++,valueBytes.length===0)){cov_1pebg41whg.b[130][0]++;cov_1pebg41whg.s[696]++;throw new Error(`Request State does not exist`);}else{cov_1pebg41whg.b[130][1]++;}const value=(cov_1pebg41whg.s[697]++,JSON.parse(valueBytes.toString()));// Originator in order to sign this request must provide an own PPA pool
const tokenID=(cov_1pebg41whg.s[698]++,await ctx.stub.createCompositeKey(poolName,[poolID]));const poolBytes=(cov_1pebg41whg.s[699]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[700]++;if((cov_1pebg41whg.b[133][0]++,!poolBytes)||(cov_1pebg41whg.b[133][1]++,poolBytes.length===0)){cov_1pebg41whg.b[132][0]++;cov_1pebg41whg.s[701]++;throw new Error(`Error, Pool State does not exist according to the key provided`);}else{cov_1pebg41whg.b[132][1]++;}//console.log(value.buyRequest.Receiver);
cov_1pebg41whg.s[702]++;if(userID!==value.buyRequest.Receiver){cov_1pebg41whg.b[134][0]++;cov_1pebg41whg.s[703]++;//console.log('dentro if1')
throw new Error('You are not allowed to perform this action');}else{cov_1pebg41whg.b[134][1]++;}const pool=(cov_1pebg41whg.s[704]++,JSON.parse(poolBytes.toString()));cov_1pebg41whg.s[705]++;if(pool.Owner!==userID){cov_1pebg41whg.b[135][0]++;cov_1pebg41whg.s[706]++;//console.log('dentro if2')
throw new Error(`User ID ${userID} does not match Pool Owner`);}else{cov_1pebg41whg.b[135][1]++;}cov_1pebg41whg.s[707]++;if(pool.ppaIDs.length!==value.buyRequest.Amount){cov_1pebg41whg.b[136][0]++;cov_1pebg41whg.s[708]++;throw new Error(`Size of Pool and size of Buy Request do not match`);}else{cov_1pebg41whg.b[136][1]++;}cov_1pebg41whg.s[709]++;value.sellRequest.IsSigned=true;cov_1pebg41whg.s[710]++;if((cov_1pebg41whg.b[138][0]++,parseInt(buyRequestPrice)!==value.buyRequest.Price)||(cov_1pebg41whg.b[138][1]++,parseInt(buyRequestAmount)!==value.buyRequest.Amount)||(cov_1pebg41whg.b[138][2]++,buyRequestIdentity!==value.buyRequest.Owner)){cov_1pebg41whg.b[137][0]++;cov_1pebg41whg.s[711]++;throw new Error('Some args of Full Request have been modified');}else{cov_1pebg41whg.b[137][1]++;}// DvP is triggered
cov_1pebg41whg.s[712]++;await this._dvp(ctx,value.TokenID,pool.poolID,value.buyRequest.Price);//console.log('hasta aqui')
cov_1pebg41whg.s[713]++;await ctx.stub.deleteState(fullRequestID);}// TODO
// Once SPV has acquired the Pool of PPAs, rating agency will assess PPA assets in order to
// issue securities backed by the Pool.
async Rating(ctx,poolID){cov_1pebg41whg.f[65]++;const userID=(cov_1pebg41whg.s[714]++,await ctx.GetUserIdentity('cif'));const poolBytes=(cov_1pebg41whg.s[715]++,await ctx.stub.getState(poolID));cov_1pebg41whg.s[716]++;if((cov_1pebg41whg.b[140][0]++,!poolBytes)||(cov_1pebg41whg.b[140][1]++,poolBytes.length===0)){cov_1pebg41whg.b[139][0]++;cov_1pebg41whg.s[717]++;throw new Error(`Pool does not exist, not possible to attach a rating`);}else{cov_1pebg41whg.b[139][1]++;}const key=(cov_1pebg41whg.s[718]++,await ctx.stub.createCompositeKey('Rating',[poolID]));const value=(cov_1pebg41whg.s[719]++,{ID:key,BackedBy:poolID,Owner:userID,RatingArgs:""});const valueBuffer=(cov_1pebg41whg.s[720]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[721]++;await ctx.stub.putState(key,valueBuffer);cov_1pebg41whg.s[722]++;return value;}//check if spv owns every ppa
async IssueBond(ctx,ratingID,p){cov_1pebg41whg.f[66]++;const userID=(cov_1pebg41whg.s[723]++,await ctx.GetUserIdentity('cif'));// We retrieve data from rating
const ratingBytes=(cov_1pebg41whg.s[724]++,await ctx.stub.getState(ratingID));cov_1pebg41whg.s[725]++;if((cov_1pebg41whg.b[142][0]++,!ratingBytes)||(cov_1pebg41whg.b[142][1]++,ratingBytes.length===0)){cov_1pebg41whg.b[141][0]++;cov_1pebg41whg.s[726]++;throw new Error(`Rating still not delivered`);}else{cov_1pebg41whg.b[141][1]++;}const rating=(cov_1pebg41whg.s[727]++,JSON.parse(ratingBytes.toString()));const poolID=(cov_1pebg41whg.s[728]++,rating.BackedBy);const poolBytes=(cov_1pebg41whg.s[729]++,await ctx.stub.getState(poolID));cov_1pebg41whg.s[730]++;if((cov_1pebg41whg.b[144][0]++,!poolBytes)||(cov_1pebg41whg.b[144][1]++,poolBytes.length===0)){cov_1pebg41whg.b[143][0]++;cov_1pebg41whg.s[731]++;throw new Error(`Error, Pool State does not match Pool ID provided`);}else{cov_1pebg41whg.b[143][1]++;}const pool=(cov_1pebg41whg.s[732]++,JSON.parse(poolBytes.toString()));cov_1pebg41whg.s[733]++;if(pool.Owner!==userID){cov_1pebg41whg.b[145][0]++;cov_1pebg41whg.s[734]++;throw new Error(`User ID ${userID} does not own Pool`);}else{cov_1pebg41whg.b[145][1]++;}// Rating State will provide some attributes bons must have.
const genericID=(cov_1pebg41whg.s[735]++,await ctx.stub.getTxID());const key=(cov_1pebg41whg.s[736]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));const new_pool=(cov_1pebg41whg.s[737]++,{ppaIDs:pool.ppaIDs,Owner:pool.Owner,ID:pool.Name+genericID,Name:pool.Name,CouponPortion:p});const typeID=(cov_1pebg41whg.s[738]++,':0');const bondID=(cov_1pebg41whg.s[739]++,key+typeID);// TODO: every time there is an attribute namely Issuer, should it be
// ctx.clientIdentity.getID() or ctx.clientIdentity.getIDBytes();
const bondToken=(cov_1pebg41whg.s[740]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:"",CouponRate:"",MaturityDate:"",Issuer:userID,Owner:userID,Pool:"",AmountPaid:"",OriginalValue:"",MonthlyPayout:"",RemainingPayments:"",Amount:100000,CanBeUsed:true});let valueBuffer=(cov_1pebg41whg.s[741]++,Buffer.from(JSON.stringify(bondToken)));cov_1pebg41whg.s[742]++;await ctx.stub.putState(bondID,valueBuffer);cov_1pebg41whg.s[743]++;await ctx.stub.deleteState(pool.ID);cov_1pebg41whg.s[744]++;await ctx.stub.putState(new_pool.ID,Buffer.from(JSON.stringify(new_pool)));cov_1pebg41whg.s[745]++;await ctx.SetEventName('BondsIssuance');cov_1pebg41whg.s[746]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[747]++;return bondToken.ID;}}class servicingContract extends Contract{constructor(){cov_1pebg41whg.f[67]++;cov_1pebg41whg.s[748]++;// Unique namespace when multiple contracts per chaincode file
super('servicing.securitization.com');}createContext(){cov_1pebg41whg.f[68]++;cov_1pebg41whg.s[749]++;return new securitizationContext();}// TODO: change which orgs can execute this contract
async beforeTransaction(ctx){cov_1pebg41whg.f[69]++;let userMSPID=(cov_1pebg41whg.s[750]++,ctx.GetMSPID());cov_1pebg41whg.s[751]++;if((cov_1pebg41whg.b[147][0]++,userMSPID!=='investorMSP')&&(cov_1pebg41whg.b[147][1]++,userMSPID!=='spvMSP')&&(cov_1pebg41whg.b[147][2]++,userMSPID!=='ratingagencyMSP')){cov_1pebg41whg.b[146][0]++;cov_1pebg41whg.s[752]++;throw new Error(`Your organization ${userMSPID} is not allowed to perform this action`);}else{cov_1pebg41whg.b[146][1]++;}let isClient=(cov_1pebg41whg.s[753]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
cov_1pebg41whg.s[754]++;if(!isClient){cov_1pebg41whg.b[148][0]++;cov_1pebg41whg.s[755]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[148][1]++;}cov_1pebg41whg.s[756]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[757]++,ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[758]++,par.fcn);let params=(cov_1pebg41whg.s[759]++,par.params);cov_1pebg41whg.s[760]++;for(let i=(cov_1pebg41whg.s[761]++,0);i<params.length;i++){cov_1pebg41whg.s[762]++;if(params[i]===''){cov_1pebg41whg.b[149][0]++;cov_1pebg41whg.s[763]++;throw new Error('There is at least one empty parameter that should not be');}else{cov_1pebg41whg.b[149][1]++;}}cov_1pebg41whg.s[764]++;switch(func){case'AskOrder':cov_1pebg41whg.b[150][0]++;cov_1pebg41whg.s[765]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[151][0]++;cov_1pebg41whg.s[766]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[151][1]++;cov_1pebg41whg.s[767]++;return;}case'AskMarketOrder':cov_1pebg41whg.b[150][1]++;cov_1pebg41whg.s[768]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[152][0]++;cov_1pebg41whg.s[769]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[152][1]++;cov_1pebg41whg.s[770]++;return;}case'BidOrder':cov_1pebg41whg.b[150][2]++;cov_1pebg41whg.s[771]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[153][0]++;cov_1pebg41whg.s[772]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[153][1]++;cov_1pebg41whg.s[773]++;return;}case'BidMarketOrder':cov_1pebg41whg.b[150][3]++;cov_1pebg41whg.s[774]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[154][0]++;cov_1pebg41whg.s[775]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[154][1]++;cov_1pebg41whg.s[776]++;return;}// case 'Matching':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
case'PoolBond':cov_1pebg41whg.b[150][4]++;cov_1pebg41whg.s[777]++;if((cov_1pebg41whg.b[156][0]++,ctx.mspid!=='investorMSP')&&(cov_1pebg41whg.b[156][1]++,ctx.mspid!=='spvMSP')){cov_1pebg41whg.b[155][0]++;cov_1pebg41whg.s[778]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[155][1]++;cov_1pebg41whg.s[779]++;return;}// case 'MatchingBid':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
// case 'MatchingAsk':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
case'TransferCoupons':cov_1pebg41whg.b[150][5]++;cov_1pebg41whg.s[780]++;if((cov_1pebg41whg.b[158][0]++,ctx.mspid!=='investorMSP')&&(cov_1pebg41whg.b[158][1]++,ctx.mspid!=='spvMSP')){cov_1pebg41whg.b[157][0]++;cov_1pebg41whg.s[781]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[157][1]++;cov_1pebg41whg.s[782]++;return;}}}async afterTransaction(ctx){cov_1pebg41whg.f[70]++;let event=(cov_1pebg41whg.s[783]++,await ctx.GetEventPayload());cov_1pebg41whg.s[784]++;return event;}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[71]++;const iterator=(cov_1pebg41whg.s[785]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[786]++,0);let results;cov_1pebg41whg.s[787]++;for await(const res of iterator){cov_1pebg41whg.s[788]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[789]++;counter=counter+1;}cov_1pebg41whg.s[790]++;if(counter>1){cov_1pebg41whg.b[159][0]++;cov_1pebg41whg.s[791]++;throw new Error('Partial Key Uniqueness not provided. Something went wrong');}else{cov_1pebg41whg.b[159][1]++;cov_1pebg41whg.s[792]++;if(counter===0){cov_1pebg41whg.b[160][0]++;cov_1pebg41whg.s[793]++;return true;}else{cov_1pebg41whg.b[160][1]++;}}cov_1pebg41whg.s[794]++;return results;}async _transferBond(ctx,userID,amount,keyFrom){cov_1pebg41whg.f[72]++;const genericID=(cov_1pebg41whg.s[795]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[796]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));cov_1pebg41whg.s[797]++;for(const key of keyFrom){cov_1pebg41whg.s[798]++;await ctx.stub.deleteState(key);}let typeID=(cov_1pebg41whg.s[799]++,':0');const bondToken=(cov_1pebg41whg.s[800]++,{ID:key1+typeID,GenericID:genericID,Rating:"",CouponRate:"",MaturityDate:"",Issuer:"",Owner:userID,Pool:"",AmountPaid:"",OriginalValue:"",MonthlyPayout:"",RemainingPayments:"",Amount:amount,TypeID:typeID,CanBeUsed:true});const bondTokenBuffer=(cov_1pebg41whg.s[801]++,Buffer.from(JSON.stringify(bondToken)));cov_1pebg41whg.s[802]++;await ctx.stub.putState(key1,bondTokenBuffer);cov_1pebg41whg.s[803]++;return bondToken;}async PoolBond(ctx){cov_1pebg41whg.f[73]++;const userID=(cov_1pebg41whg.s[804]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[805]++,await ctx.stub.getStateByPartialCompositeKey('BondToken',[userID]));let amount;let resultKeys=(cov_1pebg41whg.s[806]++,[]);let counter=(cov_1pebg41whg.s[807]++,0);let value;//console.log('before for await')
cov_1pebg41whg.s[808]++;for await(const res of iterator){cov_1pebg41whg.s[809]++;value=JSON.parse(res.value.toString());cov_1pebg41whg.s[810]++;amount=value.Amount;cov_1pebg41whg.s[811]++;if(value.CanBeUsed){cov_1pebg41whg.b[161][0]++;cov_1pebg41whg.s[812]++;resultKeys.push(value.ID);cov_1pebg41whg.s[813]++;counter=counter+amount;}else{cov_1pebg41whg.b[161][1]++;}cov_1pebg41whg.s[814]++;if(resultKeys.length===2){cov_1pebg41whg.b[162][0]++;cov_1pebg41whg.s[815]++;break;}else{cov_1pebg41whg.b[162][1]++;}}//console.log('after for await')
cov_1pebg41whg.s[816]++;if((cov_1pebg41whg.b[164][0]++,resultKeys.length===0)||(cov_1pebg41whg.b[164][1]++,resultKeys.length===1)){cov_1pebg41whg.b[163][0]++;cov_1pebg41whg.s[817]++;throw new Error('There is nothing left to do');// return
}else{cov_1pebg41whg.b[163][1]++;}let ret=(cov_1pebg41whg.s[818]++,await this._transferBond(ctx,userID,counter,resultKeys));cov_1pebg41whg.s[819]++;return ret;}// Our token will have 2 decimals, like fiat currencies
async _checkDecimals(number){cov_1pebg41whg.f[74]++;// In nodejs every atribute is passed as a string
// First check if it is a number
// number.stringify()
// if(typeof number !=='number'){
//     throw new Error('Wrong notation');
// }
// Not necessary, we are working with 2decimal-numbers
// Integer between -2^53-1 and 2^53-1
// if (!Number.isSafeInteger(number)){
//     throw new Error('Wrong number');
// }
// Check if it is a 2decimal-number
const numberString=(cov_1pebg41whg.s[820]++,number.toString());let index;let count=(cov_1pebg41whg.s[821]++,0);cov_1pebg41whg.s[822]++;for(let i=(cov_1pebg41whg.s[823]++,0);i<numberString.length;i++){cov_1pebg41whg.s[824]++;if(numberString[i]==='.'){cov_1pebg41whg.b[165][0]++;cov_1pebg41whg.s[825]++;index=i;cov_1pebg41whg.s[826]++;count=count+1;}else{cov_1pebg41whg.b[165][1]++;}cov_1pebg41whg.s[827]++;if(numberString[i]===','){cov_1pebg41whg.b[166][0]++;cov_1pebg41whg.s[828]++;throw new Error('Wrong format. Try using dot instead of comma');}else{cov_1pebg41whg.b[166][1]++;}}//console.log(`numero de puntos ${count}`);
cov_1pebg41whg.s[829]++;if((cov_1pebg41whg.b[168][0]++,numberString.length-1-index>2)||(cov_1pebg41whg.b[168][1]++,count>1)){cov_1pebg41whg.b[167][0]++;cov_1pebg41whg.s[830]++;throw new Error('Wrong decimals');}else{cov_1pebg41whg.b[167][1]++;}// Check if it is strictly positive
cov_1pebg41whg.s[831]++;number=parseFloat(number);cov_1pebg41whg.s[832]++;if(number<=0){cov_1pebg41whg.b[169][0]++;cov_1pebg41whg.s[833]++;throw new Error('Number must be strictly positive');}else{cov_1pebg41whg.b[169][1]++;}cov_1pebg41whg.s[834]++;return true;}// Bid order will be executed by someone able to buy assets (bonds)
// Auxiliary function to allocate certain amount of money every time a bid order is submitted
async _splitMoney(ctx,tokenID,amount){cov_1pebg41whg.f[75]++;const userID=(cov_1pebg41whg.s[835]++,await ctx.GetUserIdentity('cif'));const tokenBytes=(cov_1pebg41whg.s[836]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[837]++;if((cov_1pebg41whg.b[171][0]++,!tokenBytes)||(cov_1pebg41whg.b[171][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[170][0]++;cov_1pebg41whg.s[838]++;throw new Error(`Error, Token state according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[170][1]++;}const token=(cov_1pebg41whg.s[839]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[840]++;if(token.CanBeUsed===false){cov_1pebg41whg.b[172][0]++;cov_1pebg41whg.s[841]++;throw new Error(`This token ID ${tokenID} has already been used. Try another Token ID`);}else{cov_1pebg41whg.b[172][1]++;}//console.log(`amount: ${amount}`);
//console.log(`token.Amount: ${token.Amount}`);
//console.log(token.Amount-amount);
cov_1pebg41whg.s[842]++;if(token.Amount<amount){cov_1pebg41whg.b[173][0]++;cov_1pebg41whg.s[843]++;throw new Error('Error, token State has not enough funds');}else{cov_1pebg41whg.b[173][1]++;}const balance=(cov_1pebg41whg.s[844]++,token.Amount-amount);const genericID=(cov_1pebg41whg.s[845]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[846]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[847]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));let typeID;cov_1pebg41whg.s[848]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[849]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balance,CanBeUsed:true});cov_1pebg41whg.s[850]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[851]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:amount,CanBeUsed:false});cov_1pebg41whg.s[852]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[853]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[854]++;if(balance>0){cov_1pebg41whg.b[174][0]++;cov_1pebg41whg.s[855]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_1pebg41whg.b[174][1]++;}//console.log(utxo2.ID)
cov_1pebg41whg.s[856]++;return utxo2.ID;}// Auxiliary function to allocate certain amount of bonds every time an ask order is submitted
async _splitBonds(ctx,bondID,amount){cov_1pebg41whg.f[76]++;const userID=(cov_1pebg41whg.s[857]++,await ctx.GetUserIdentity('cif'));const bondBytes=(cov_1pebg41whg.s[858]++,await ctx.stub.getState(bondID));cov_1pebg41whg.s[859]++;if((cov_1pebg41whg.b[176][0]++,!bondBytes)||(cov_1pebg41whg.b[176][1]++,bondBytes.length===0)){cov_1pebg41whg.b[175][0]++;cov_1pebg41whg.s[860]++;throw new Error(`Error, Bond State according to key ${bondID} does not exist`);}else{cov_1pebg41whg.b[175][1]++;}const bond=(cov_1pebg41whg.s[861]++,await JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[862]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[177][0]++;cov_1pebg41whg.s[863]++;throw new Error(`This Bond State with ID ${bondID} has already been used in a prior order`);}else{cov_1pebg41whg.b[177][1]++;}cov_1pebg41whg.s[864]++;if(amount>bond.Amount){cov_1pebg41whg.b[178][0]++;cov_1pebg41whg.s[865]++;throw new Error(`This Bond State has not enough bonds to transfer`);}else{cov_1pebg41whg.b[178][1]++;}const balance=(cov_1pebg41whg.s[866]++,bond.Amount-amount);const genericID=(cov_1pebg41whg.s[867]++,ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[868]++,await ctx.stub.createCompositeKey('BondToken',[bond.Owner,genericID]));let typeID;cov_1pebg41whg.s[869]++;typeID=':0';cov_1pebg41whg.s[870]++;bondID=key1+typeID;const bond1=(cov_1pebg41whg.s[871]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:bond.Rating,CouponRate:bond.CouponRate,MaturityDate:bond.MaturityDate,Issuer:bond.Issuer,Owner:bond.Owner,Pool:bond.Pool,AmountPaid:bond.AmountPaid,OriginalValue:bond.OriginalValue,MonthlyPayout:bond.MonthlyPayout,RemainingPayments:bond.RemainingPayments,Amount:amount,CanBeUsed:false});cov_1pebg41whg.s[872]++;if(balance!==0){cov_1pebg41whg.b[179][0]++;const key2=(cov_1pebg41whg.s[873]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));cov_1pebg41whg.s[874]++;typeID=':1';cov_1pebg41whg.s[875]++;bondID=key2+typeID;const bond2=(cov_1pebg41whg.s[876]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:bond.Rating,CouponRate:bond.CouponRate,MaturityDate:bond.MaturityDate,Issuer:bond.Issuer,Owner:userID,Pool:bond.Pool,AmountPaid:bond.AmountPaid,OriginalValue:bond.OriginalValue,MonthlyPayout:bond.MonthlyPayout,RemainingPayments:bond.RemainingPayments,Amount:balance,CanBeUsed:true});cov_1pebg41whg.s[877]++;await ctx.stub.deleteState(bond.ID);cov_1pebg41whg.s[878]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond1)));cov_1pebg41whg.s[879]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond2)));}else{cov_1pebg41whg.b[179][1]++;cov_1pebg41whg.s[880]++;await ctx.stub.deleteState(bond.ID);cov_1pebg41whg.s[881]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond1)));}cov_1pebg41whg.s[882]++;return bond1.ID;}// Auxiliary function to sort bid orders according to price, if they are limit or market orders and time they were
// submitted
async _sortingBidOrders(ctx,orderArray){cov_1pebg41whg.f[77]++;cov_1pebg41whg.s[883]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[78]++;cov_1pebg41whg.s[884]++;return(cov_1pebg41whg.b[181][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[181][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[181][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[181][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[181][4]++,a.Time<b.Time)?(cov_1pebg41whg.b[180][0]++,1):(cov_1pebg41whg.b[180][1]++,(cov_1pebg41whg.b[183][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[183][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[183][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[183][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[183][4]++,a.Time>b.Time)?(cov_1pebg41whg.b[182][0]++,-1):(cov_1pebg41whg.b[182][1]++,0));});cov_1pebg41whg.s[885]++;await orderArray.sort((b,a)=>{cov_1pebg41whg.f[79]++;cov_1pebg41whg.s[886]++;return a.Price>b.Price?(cov_1pebg41whg.b[184][0]++,1):(cov_1pebg41whg.b[184][1]++,b.Price>a.Price?(cov_1pebg41whg.b[185][0]++,-1):(cov_1pebg41whg.b[185][1]++,a.Time<b.Time?(cov_1pebg41whg.b[186][0]++,1):(cov_1pebg41whg.b[186][1]++,-1)));});cov_1pebg41whg.s[887]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[80]++;cov_1pebg41whg.s[888]++;return(cov_1pebg41whg.b[188][0]++,!a.FullMatch)&&(cov_1pebg41whg.b[188][1]++,b.FullMatch)?(cov_1pebg41whg.b[187][0]++,-1):(cov_1pebg41whg.b[187][1]++,(cov_1pebg41whg.b[190][0]++,!b.FullMatch)&&(cov_1pebg41whg.b[190][1]++,a.FullMatch)?(cov_1pebg41whg.b[189][0]++,-1):(cov_1pebg41whg.b[189][1]++,1));});cov_1pebg41whg.s[889]++;return orderArray;}// Auxiliary function to sort ask orders according to price, if they are limit or market orders and time they were
// submitted
async _sortingAskOrders(ctx,orderArray){cov_1pebg41whg.f[81]++;cov_1pebg41whg.s[890]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[82]++;cov_1pebg41whg.s[891]++;return(cov_1pebg41whg.b[192][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[192][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[192][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[192][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[192][4]++,a.Time<b.Time)?(cov_1pebg41whg.b[191][0]++,1):(cov_1pebg41whg.b[191][1]++,(cov_1pebg41whg.b[194][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[194][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[194][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[194][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[194][4]++,a.Time>b.Time)?(cov_1pebg41whg.b[193][0]++,-1):(cov_1pebg41whg.b[193][1]++,0));});cov_1pebg41whg.s[892]++;await orderArray.sort((b,a)=>{cov_1pebg41whg.f[83]++;cov_1pebg41whg.s[893]++;return a.Price>b.Price?(cov_1pebg41whg.b[195][0]++,-1):(cov_1pebg41whg.b[195][1]++,b.Price>a.Price?(cov_1pebg41whg.b[196][0]++,1):(cov_1pebg41whg.b[196][1]++,b.Time>a.Time?(cov_1pebg41whg.b[197][0]++,1):(cov_1pebg41whg.b[197][1]++,-1)));});cov_1pebg41whg.s[894]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[84]++;cov_1pebg41whg.s[895]++;return(cov_1pebg41whg.b[199][0]++,!a.FullMatch)&&(cov_1pebg41whg.b[199][1]++,b.FullMatch)?(cov_1pebg41whg.b[198][0]++,-1):(cov_1pebg41whg.b[198][1]++,(cov_1pebg41whg.b[201][0]++,!b.FullMatch)&&(cov_1pebg41whg.b[201][1]++,a.FullMatch)?(cov_1pebg41whg.b[200][0]++,-1):(cov_1pebg41whg.b[200][1]++,1));});cov_1pebg41whg.s[896]++;return orderArray;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// 
// Transference triggered due to an Ask Order
async _transferCashTokens(ctx,bidInputs,askInput,orderBook){cov_1pebg41whg.f[85]++;//translate into nodejs utxo sample code 
//console.log(`Inside _transferBondTokens`)
let userID=(cov_1pebg41whg.s[897]++,await ctx.clientIdentity.getID());//console.log('step 1')
let bondTokenBytes=(cov_1pebg41whg.s[898]++,await ctx.stub.getState(askInput.TokenID));cov_1pebg41whg.s[899]++;if((cov_1pebg41whg.b[203][0]++,!bondTokenBytes)||(cov_1pebg41whg.b[203][1]++,bondTokenBytes.length===0)){cov_1pebg41whg.b[202][0]++;cov_1pebg41whg.s[900]++;throw new Error('Error');}else{cov_1pebg41whg.b[202][1]++;}//console.log('step 2')
let bondToken=(cov_1pebg41whg.s[901]++,JSON.parse(bondTokenBytes.toString()));let myFunds=(cov_1pebg41whg.s[902]++,bondToken.Amount);//console.log(`myFunds: ${myFunds}`);
//console.log('step 3')
let usedKeys=(cov_1pebg41whg.s[903]++,[]);let usedOwners=(cov_1pebg41whg.s[904]++,[]);let usedAmounts=(cov_1pebg41whg.s[905]++,[]);let notUsedTokensAmounts=(cov_1pebg41whg.s[906]++,[]);let cashTokensToTransfer=(cov_1pebg41whg.s[907]++,[]);let bondTokensToTransfer=(cov_1pebg41whg.s[908]++,[]);let total=(cov_1pebg41whg.s[909]++,0);let bondsToTransfer=(cov_1pebg41whg.s[910]++,[]);let amount=(cov_1pebg41whg.s[911]++,0);let token;let transactionID=(cov_1pebg41whg.s[912]++,await ctx.stub.getTxID());//console.log('step 4')
let outputBondToken=(cov_1pebg41whg.s[913]++,{ID:'',GenericID:transactionID,TypeID:':0',Rating:bondToken.Rating,CouponRate:bondToken.CouponRate,MaturityDate:bondToken.MaturityDate,Issuer:bondToken.Issuer,Owner:bondToken.Owner,Pool:bondToken.Pool,AmountPaid:bondToken.AmountPaid,OriginalValue:bondToken.OriginalValue,MonthlyPayout:bondToken.MonthlyPayout,RemainingPayments:bondToken.RemainingPayments,Amount:bondToken.Amount,CanBeUsed:true});let asks=(cov_1pebg41whg.s[914]++,orderBook[1]);let bids=(cov_1pebg41whg.s[915]++,orderBook[0]);//console.log('step 5')
cov_1pebg41whg.s[916]++;for(let i=(cov_1pebg41whg.s[917]++,0);i<bidInputs.length;i++){let cashTokenID=(cov_1pebg41whg.s[918]++,bidInputs[i].TokenID);let quantityToTransfer=(cov_1pebg41whg.s[919]++,bidInputs[i].QuantityMatch);cov_1pebg41whg.s[920]++;if(usedKeys.indexOf(cashTokenID)!==-1){cov_1pebg41whg.b[204][0]++;cov_1pebg41whg.s[921]++;//console.log('step 5.1')
throw new Error('Error');}else{cov_1pebg41whg.b[204][1]++;}// let utxoInputCompositeKey=await ctx.stub.createCompositeKey('securitizationCoin', [userID, utxoInputKeys[i]]);
//TODO
//check errors
let valueBytes=(cov_1pebg41whg.s[922]++,await ctx.stub.getState(cashTokenID));//TODO
//check errors
// Error handling not needed since Itoa() was used when setting the utxo amount, guaranteeing it was an integer.
cov_1pebg41whg.s[923]++;token=JSON.parse(valueBytes.toString());let cashTokenOwner=(cov_1pebg41whg.s[924]++,token.Owner);cov_1pebg41whg.s[925]++;if(usedOwners.indexOf(cashTokenOwner)===-1){cov_1pebg41whg.b[205][0]++;cov_1pebg41whg.s[926]++;//console.log('dentro del primer if')
usedOwners.append(cashTokenOwner);cov_1pebg41whg.s[927]++;usedAmounts.append(quantityToTransfer);cov_1pebg41whg.s[928]++;notUsedTokensAmounts.append(token.Amount);cov_1pebg41whg.s[929]++;cashTokensToTransfer.append(quantityToTransfer*askInput.Price);cov_1pebg41whg.s[930]++;bondTokensToTransfer.append(quantityToTransfer);//console.log(`quantityToTransfer: ${quantityToTransfer}`)
// bondsToTransfer.append(qu)
}else{cov_1pebg41whg.b[205][1]++;cov_1pebg41whg.s[931]++;//console.log('dentro del primer else')
usedAmounts[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer;cov_1pebg41whg.s[932]++;notUsedTokensAmounts[usedOwners.indexOf(cashTokenOwner)]+=token.Amount;cov_1pebg41whg.s[933]++;cashTokensToTransfer[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer*askInput.Price;cov_1pebg41whg.s[934]++;bondTokensToTransfer[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer;}cov_1pebg41whg.s[935]++;amount+=quantityToTransfer;cov_1pebg41whg.s[936]++;total+=token.Amount;//revisar
cov_1pebg41whg.s[937]++;if(token.Amount<quantityToTransfer){cov_1pebg41whg.b[206][0]++;cov_1pebg41whg.s[938]++;throw new Error('Error');}else{cov_1pebg41whg.b[206][1]++;}cov_1pebg41whg.s[939]++;if(bidInputs[i].FullMatch){cov_1pebg41whg.b[207][0]++;cov_1pebg41whg.s[940]++;//console.log('step 5.2')
await ctx.stub.deleteState(token.ID);let myBid=(cov_1pebg41whg.s[941]++,await bids.filter(item=>{cov_1pebg41whg.f[86]++;cov_1pebg41whg.s[942]++;return item.ID!==bidInputs[i].ID;}));cov_1pebg41whg.s[943]++;orderBook=[myBid,asks];//console.log(`orderBook: ${orderBook}`)
}else{cov_1pebg41whg.b[207][1]++;//console.log('step 5.3')
let myBid=(cov_1pebg41whg.s[944]++,await bids.filter(item=>{cov_1pebg41whg.f[87]++;cov_1pebg41whg.s[945]++;return item.ID;}));cov_1pebg41whg.s[946]++;index=bids.indexOf(myBid[0]);// New token ID
cov_1pebg41whg.s[947]++;myBid[0].TokenID=token.ID;cov_1pebg41whg.s[948]++;myBid[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;cov_1pebg41whg.s[949]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[950]++;orderBook=[myBid,asks];//console.log(`orderBook: ${orderBook}`)
}cov_1pebg41whg.s[951]++;usedKeys.append(token.ID);}cov_1pebg41whg.s[952]++;for(let j=(cov_1pebg41whg.s[953]++,0);j<usedOwners.length;j++){cov_1pebg41whg.s[954]++;//console.log(`creamos estados tipo bond tokens`)
//TODO
// check coupons received
outputBondToken.ID=await ctx.stub.createCompositeKey('BondToken',[usedOwners[j],outputBondToken.GenericID]);cov_1pebg41whg.s[955]++;outputBondToken.Amount=bondTokensToTransfer[j];// cashperBond[i]*amountperBond[i];
cov_1pebg41whg.s[956]++;outputBondToken.Owner=usedOwners[j];cov_1pebg41whg.s[957]++;if(usedAmounts[j]!==notUsedTokensAmounts[j]){cov_1pebg41whg.b[208][0]++;cov_1pebg41whg.s[958]++;//console.log(`dentro del segundo if`)
outputBondToken.Amount=bondTokensToTransfer[j];let outputBondTokenBuffer=(cov_1pebg41whg.s[959]++,Buffer.from(JSON.stringify(outputBondToken)));cov_1pebg41whg.s[960]++;await ctx.stub.putState(outputBondToken.ID,outputBondTokenBuffer);}else{cov_1pebg41whg.b[208][1]++;cov_1pebg41whg.s[961]++;//console.log(`dentro del segundo else`)
outputBondToken.Amount=bondTokensToTransfer[j];let outputBondTokenBuffer=(cov_1pebg41whg.s[962]++,Buffer.from(JSON.stringify(outputBondToken)));cov_1pebg41whg.s[963]++;await ctx.stub.putState(outputBondToken.ID,outputBondTokenBuffer);}}cov_1pebg41whg.s[964]++;if(amount<total){cov_1pebg41whg.b[209][0]++;cov_1pebg41whg.s[965]++;//console.log('step 6: wrong amount')
throw new Error('Error');}else{cov_1pebg41whg.b[209][1]++;}let securitizationCoin1=(cov_1pebg41whg.s[966]++,{ID:await ctx.stub.createCompositeKey('securitizationCoin',[]),GenericID:transactionID,TypeID:':0',Issuer:await ctx.clientIdentity.getID(),Owner:userID,Amount:total,Factor:100,CanBeUsed:true});let valueBuffer1=(cov_1pebg41whg.s[967]++,Buffer.from(JSON.stringify(securitizationCoin1)));let restingQuantity=(cov_1pebg41whg.s[968]++,amount-total);//console.log('resting quantity')
//console.log(restingQuantity)
//console.log('step 7')
cov_1pebg41whg.s[969]++;if(restingQuantity!==0){cov_1pebg41whg.b[210][0]++;//console.log('step 8')
let securitizationCoin2=(cov_1pebg41whg.s[970]++,{ID:await ctx.stub.createCompositeKey('securitizationCoin',[]),GenericID:transactionID,TypeID:':1',Issuer:await ctx.clientIdentity.getID(),Owner:lastOwner,Amount:restingQuantity,Factor:100,CanBeUsed:true});let valueBuffer2=(cov_1pebg41whg.s[971]++,Buffer.from(JSON.stringify(secutizationCoin2)));cov_1pebg41whg.s[972]++;await ctx.stub.putState(securitizationCoin2.ID,valueBuffer2);cov_1pebg41whg.s[973]++;await ctx.stub.putState(securitizationCoin1.ID,valueBuffer1);}else{cov_1pebg41whg.b[210][1]++;cov_1pebg41whg.s[974]++;// create just one state
await ctx.stub.putState(securitizationCoin1.ID,valueBuffer1);}let orderBuffer=(cov_1pebg41whg.s[975]++,Buffer.from(JSON.stringify(orderBook)));cov_1pebg41whg.s[976]++;await ctx.stub.putState('OrderBook',orderBuffer);cov_1pebg41whg.s[977]++;return;}async TransferCoupons(ctx,bondTokenID,spvID){cov_1pebg41whg.f[88]++;cov_1pebg41whg.s[978]++;console.log('inside TransferCoupons');let bondTokenBytes=(cov_1pebg41whg.s[979]++,await ctx.stub.getState(bondTokenID));cov_1pebg41whg.s[980]++;if((cov_1pebg41whg.b[212][0]++,!bondTokenBytes)||(cov_1pebg41whg.b[212][1]++,bondTokenBytes.length===0)){cov_1pebg41whg.b[211][0]++;cov_1pebg41whg.s[981]++;throw new Error('There is no state associated to that key');}else{cov_1pebg41whg.b[211][1]++;}let bondToken=(cov_1pebg41whg.s[982]++,JSON.parse(bondTokenBytes.toString()));let thisDate=(cov_1pebg41whg.s[983]++,await ctx.stub.getTxTimestamp());cov_1pebg41whg.s[984]++;if(thisDate<bondToken.NextCouponPaymentNotBefore){cov_1pebg41whg.b[213][0]++;cov_1pebg41whg.s[985]++;throw new Error('Error, you cannot still withdraw any coupons');}else{cov_1pebg41whg.b[213][1]++;}cov_1pebg41whg.s[986]++;if(!bondToken.CanBeUsed){cov_1pebg41whg.b[214][0]++;cov_1pebg41whg.s[987]++;throw new Error(`Bond token cannot be used`);}else{cov_1pebg41whg.b[214][1]++;}let bondsAmount=(cov_1pebg41whg.s[988]++,bondToken.Amount);//or .Quantity
//These are attributes within bondToken state
let couponsReceived=(cov_1pebg41whg.s[989]++,'');let couponsRemaining=(cov_1pebg41whg.s[990]++,'');let totalCoupons=(cov_1pebg41whg.s[991]++,'');let resultKeys=(cov_1pebg41whg.s[992]++,[]);let total=(cov_1pebg41whg.s[993]++,0);let amount;let lastCashAmount;let cashDifference;let myCoupons=(cov_1pebg41whg.s[994]++,bondToken.Amount*bondToken.CouponRate*bondToken.FaceValue);let iterator=(cov_1pebg41whg.s[995]++,await ctx.stub.getStateByPartialCompositeKey("securitizationCoin",[spvID]));cov_1pebg41whg.s[996]++;for await(const res of iterator){cov_1pebg41whg.s[997]++;value=JSON.parse(res.value.toString());cov_1pebg41whg.s[998]++;console.log(`value: ${value.Amount}`);cov_1pebg41whg.s[999]++;amount=value.Amount;cov_1pebg41whg.s[1000]++;if((cov_1pebg41whg.b[216][0]++,value.CanBeUsed)&&(cov_1pebg41whg.b[216][1]++,value.Owner===spvID)){cov_1pebg41whg.b[215][0]++;cov_1pebg41whg.s[1001]++;resultKeys.push(value.ID);cov_1pebg41whg.s[1002]++;total+=amount;}else{cov_1pebg41whg.b[215][1]++;}cov_1pebg41whg.s[1003]++;if(amount<myCoupons){cov_1pebg41whg.b[217][0]++;cov_1pebg41whg.s[1004]++;await ctx.stub.deleteState(res.key);cov_1pebg41whg.s[1005]++;continue;}else{cov_1pebg41whg.b[217][1]++;cov_1pebg41whg.s[1006]++;lastCashAmount=value.Amount;cov_1pebg41whg.s[1007]++;cashDifference=myCoupons-total;cov_1pebg41whg.s[1008]++;break;}}cov_1pebg41whg.s[1009]++;if(amount<myCoupons){cov_1pebg41whg.b[218][0]++;cov_1pebg41whg.s[1010]++;throw new Error('There are not enough funds');}else{cov_1pebg41whg.b[218][1]++;}cov_1pebg41whg.s[1011]++;console.log('lastCashAmount');cov_1pebg41whg.s[1012]++;console.log(lastCashAmount);cov_1pebg41whg.s[1013]++;console.log('cashDifference');cov_1pebg41whg.s[1014]++;console.log(cashDifference);let genericID=(cov_1pebg41whg.s[1015]++,await ctx.stub.getTxID());let typeID=(cov_1pebg41whg.s[1016]++,':1');cov_1pebg41whg.s[1017]++;if(cashDifference!==0){cov_1pebg41whg.b[219][0]++;cov_1pebg41whg.s[1018]++;//create 
value.Amount=cashDifference;cov_1pebg41whg.s[1019]++;value.ID=await ctx.stub.createCompositeKey('securitizationCoin',[value.Owner,genericID,typeID]);cov_1pebg41whg.s[1020]++;value.TypeID=typeID;cov_1pebg41whg.s[1021]++;value.GenericID=genericID;cov_1pebg41whg.s[1022]++;await ctx.stub.deleteState(value.ID);}else{cov_1pebg41whg.b[219][1]++;cov_1pebg41whg.s[1023]++;value.Amount=total;cov_1pebg41whg.s[1024]++;value.TypeID=':0';cov_1pebg41whg.s[1025]++;value.GenericID=genericID;cov_1pebg41whg.s[1026]++;value.Owner=await ctx.clientIdentity.getIDBytes();cov_1pebg41whg.s[1027]++;value.ID=await ctx.stub.createCompositeKey('securitizationCoin',[value.Owner,genericID,value.TypeID]);let valueBuffer=(cov_1pebg41whg.s[1028]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[1029]++;await ctx.stub.putState(value.ID,valueBuffer);}cov_1pebg41whg.s[1030]++;await ctx.stub.deleteState(bondTokenID);let newBondToken=(cov_1pebg41whg.s[1031]++,bondToken);cov_1pebg41whg.s[1032]++;newBondToken.GenericID=genericID;cov_1pebg41whg.s[1033]++;newBondToken.CouponsReceived=newBondToken.CouponsReceived+1;cov_1pebg41whg.s[1034]++;newBondToken.CouponsRemaining=newBondToken.CouponsRemaining-1;cov_1pebg41whg.s[1035]++;newBondToken.NextCouponPaymentNotBefore=newBondToken.CouponDatesNotBefore[newBondToken.CouponsReceived];let newBondTokenBuffer=(cov_1pebg41whg.s[1036]++,Buffer.from(JSON.stringify(newBondToken)));cov_1pebg41whg.s[1037]++;await ctx.stub.putState(newBondToken.ID,newBondTokenBuffer);cov_1pebg41whg.s[1038]++;return newBondToken;}//Transference triggered due to a Bid Order
async _transferBondTokens(ctx,askInputs,bidInput,orderBook){cov_1pebg41whg.f[89]++;// console
//console.log('Inside _transferBondTokens')
// I retrieve cash token
let securitizationCoinBytes=(cov_1pebg41whg.s[1039]++,await ctx.stub.getState(bidInput.TokenID));cov_1pebg41whg.s[1040]++;if((cov_1pebg41whg.b[221][0]++,!securitizationCoinBytes)||(cov_1pebg41whg.b[221][1]++,securitizationCoinBytes.length===0)){cov_1pebg41whg.b[220][0]++;cov_1pebg41whg.s[1041]++;throw new Error('Error');}else{cov_1pebg41whg.b[220][1]++;}let securitizationCoin=(cov_1pebg41whg.s[1042]++,JSON.parse(securitizationCoinBytes.toString()));let myFunds=(cov_1pebg41whg.s[1043]++,securitizationCoin.Quantity);//console.log(`myFunds: ${myFunds}`)
//translate into nodejs utxo sample code 
let userID=(cov_1pebg41whg.s[1044]++,await ctx.clientIdentity.getID());let usedKeys=(cov_1pebg41whg.s[1045]++,[]);let usedOwners=(cov_1pebg41whg.s[1046]++,[]);let usedAmounts=(cov_1pebg41whg.s[1047]++,[]);let notUsedTokensAmounts=(cov_1pebg41whg.s[1048]++,[]);let cashTokensToTransfer=(cov_1pebg41whg.s[1049]++,[]);let total=(cov_1pebg41whg.s[1050]++,0);let bondsToTransfer=(cov_1pebg41whg.s[1051]++,[]);let amount=(cov_1pebg41whg.s[1052]++,0);let token;// let coupons;
// check all bonds are equal (same coupons)
let transactionID=(cov_1pebg41whg.s[1053]++,await ctx.stub.getTxID());let outputSecuritizationCoin=(cov_1pebg41whg.s[1054]++,{ID:'',GenericID:transactionID,TypeID:':0',Issuer:await ctx.clientIdentity.getID(),Owner:'',Amount:'',Factor:100,CanBeUsed:true});let asks=(cov_1pebg41whg.s[1055]++,orderBook[1]);let bids=(cov_1pebg41whg.s[1056]++,orderBook[0]);cov_1pebg41whg.s[1057]++;for(let i=(cov_1pebg41whg.s[1058]++,0);i<askInputs.length;i++){let bondID=(cov_1pebg41whg.s[1059]++,askInputs[i].TokenID);let quantityToTransfer=(cov_1pebg41whg.s[1060]++,askInputs[i].QuantityMatch);cov_1pebg41whg.s[1061]++;if(usedKeys.indexOf(bondID)!==-1){cov_1pebg41whg.b[222][0]++;cov_1pebg41whg.s[1062]++;throw new Error('Error');}else{cov_1pebg41whg.b[222][1]++;}// let utxoInputCompositeKey=await ctx.stub.createCompositeKey('securitizationCoin', [userID, utxoInputKeys[i]]);
//TODO
//check errors
let valueBytes=(cov_1pebg41whg.s[1063]++,await ctx.stub.getState(bondID));//TODO
//check errors
// Error handling not needed since Itoa() was used when setting the utxo amount, guaranteeing it was an integer.
cov_1pebg41whg.s[1064]++;token=JSON.parse(valueBytes.toString());let bondOwner=(cov_1pebg41whg.s[1065]++,token.Owner);cov_1pebg41whg.s[1066]++;if(usedOwners.indexOf(bondOwner)===-1){cov_1pebg41whg.b[223][0]++;cov_1pebg41whg.s[1067]++;//console.log('dentro del primer if')
usedOwners.append(bondOwner);cov_1pebg41whg.s[1068]++;usedAmounts.append(quantityToTransfer);cov_1pebg41whg.s[1069]++;notUsedTokensAmounts.append(token.Amount);cov_1pebg41whg.s[1070]++;cashTokensToTransfer.append(quantityToTransfer*askInputs[i].Price);//console.log(`quantityToTransfer: ${quantityToTransfer}`)
// bondsToTransfer.append(qu)
}else{cov_1pebg41whg.b[223][1]++;cov_1pebg41whg.s[1071]++;//console.log('dentro del primer else')
usedAmounts[usedOwners.indexOf(bondOwner)]+=quantityToTransfer;cov_1pebg41whg.s[1072]++;notUsedTokensAmounts[usedOwners.indexOf(bondOwner)]+=token.Amount;cov_1pebg41whg.s[1073]++;cashTokensToTransfer[usedOwners.indexOf(bondOwner)]+=quantityToTransfer*askInputs[i].Price;}cov_1pebg41whg.s[1074]++;amount+=quantityToTransfer;cov_1pebg41whg.s[1075]++;total+=token.Amount;//revisar
cov_1pebg41whg.s[1076]++;if(token.Amount<quantityToTransfer){cov_1pebg41whg.b[224][0]++;cov_1pebg41whg.s[1077]++;throw new Error('Error');}else{cov_1pebg41whg.b[224][1]++;}cov_1pebg41whg.s[1078]++;if(askInputs[i].FullMatch){cov_1pebg41whg.b[225][0]++;cov_1pebg41whg.s[1079]++;await ctx.stub.deleteState(token.ID);let myAsk=(cov_1pebg41whg.s[1080]++,await asks.filter(item=>{cov_1pebg41whg.f[90]++;cov_1pebg41whg.s[1081]++;return item.ID!==askInputs[i].ID;}));cov_1pebg41whg.s[1082]++;orderBook=[bids,myAsk];//console.log(`orderBook: ${orderBook}`)
}else{cov_1pebg41whg.b[225][1]++;let myAsk=(cov_1pebg41whg.s[1083]++,await asks.filter(item=>{cov_1pebg41whg.f[91]++;cov_1pebg41whg.s[1084]++;return item.ID;}));cov_1pebg41whg.s[1085]++;index=asks.indexOf(myAsk[0]);cov_1pebg41whg.s[1086]++;myAsk[0].TokenID=token.ID;cov_1pebg41whg.s[1087]++;myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;cov_1pebg41whg.s[1088]++;await ctx.stub.deleteState(token.ID);//console.log(`orderBook: ${orderBook}`)
}cov_1pebg41whg.s[1089]++;usedKeys.append(token.ID);}cov_1pebg41whg.s[1090]++;for(let j=(cov_1pebg41whg.s[1091]++,0);j<usedOwners.length;j++){cov_1pebg41whg.s[1092]++;//console.log(`creamos estados tipo cash tokens`)
//TODO
// check coupons received
outputSecuritizationCoin.ID=await ctx.stub.createCompositeKey('securitizationCoin',[usedOwners[j],outputSecuritizationCoin.GenericID]);cov_1pebg41whg.s[1093]++;outputSecuritizationCoin.Quantity=cashTokensToTransfer[j];// cashperBond[i]*amountperBond[i];
cov_1pebg41whg.s[1094]++;outputSecuritizationCoin.Owner=usedOwners[j];// let lastOwner=token.Owner;
// let lastQuantity=token.Quantity;
// let lastBalance=
cov_1pebg41whg.s[1095]++;if(usedAmounts[j]!==notUsedTokensAmounts[j]){cov_1pebg41whg.b[226][0]++;cov_1pebg41whg.s[1096]++;//console.log(`dentro del segundo if`)
outputSecuritizationCoin.Amount=cashTokensToTransfer[j];let outputSecuritizationCoinBuffer=(cov_1pebg41whg.s[1097]++,Buffer.from(JSON.stringify(outputSecuritizationCoin)));cov_1pebg41whg.s[1098]++;await ctx.stub.putState(outputSecuritizationCoin.ID,outputSecuritizationCoinBuffer);}else{cov_1pebg41whg.b[226][1]++;cov_1pebg41whg.s[1099]++;//console.log(`dentro del segundo else`)
outputSecuritizationCoin.Amount=cashTokensToTransfer[j];let outputSecuritizationCoinBuffer=(cov_1pebg41whg.s[1100]++,Buffer.from(JSON.stringify(outputSecuritizationCoin)));cov_1pebg41whg.s[1101]++;await ctx.stub.putState(outputSecuritizationCoin.ID,outputSecuritizationCoinBuffer);}}// await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// if(amount<total){
//     throw new Error('Error')
// }
let bondToken1=(cov_1pebg41whg.s[1102]++,{ID:await ctx.stub.createCompositeKey('BondToken',[]),GenericID:transactionID,TypeID:':0',Rating:token.Rating,CouponRate:token.CouponRate,MaturityDate:token.MaturityDate,Issuer:securitizationCoin.Owner,Owner:securitizationCoin.Owner,Pool:token.Pool,AmountPaid:token.AmountPaid,OriginalValue:token.OriginalValue,MonthlyPayout:token.MonthlyPayout,RemainingPayments:token.RemainingPayments,Amount:amount,CanBeUsed:true});let valueBuffer1=(cov_1pebg41whg.s[1103]++,Buffer.from(JSON.stringify(bondToken1)));let restingQuantity=(cov_1pebg41whg.s[1104]++,amount-total);cov_1pebg41whg.s[1105]++;if(restingQuantity!==0){cov_1pebg41whg.b[227][0]++;//console.log(`dentro del tercer if`)
let bondToken2=(cov_1pebg41whg.s[1106]++,{ID:'',GenericID:transactionID,TypeID:':1',Rating:token.Rating,CouponRate:token.CouponRate,MaturityDate:token.MaturityDate,Issuer:securitizationCoin.Issuer,Owner:securitizationCoin.Owner,Pool:token.Pool,AmountPaid:token.AmountPaid,OriginalValue:token.OriginalValue,MonthlyPayout:token.MonthlyPayout,RemainingPayments:token.RemainingPayments,Amount:restingQuantity,CanBeUsed:true});let valueBuffer2=(cov_1pebg41whg.s[1107]++,Buffer.from(JSON.stringify(bondToken2)));cov_1pebg41whg.s[1108]++;await ctx.stub.putState(bondToken2.ID,valueBuffer2);cov_1pebg41whg.s[1109]++;await ctx.stub.putState(bondToken1.ID,valueBuffer1);}else{cov_1pebg41whg.b[227][1]++;cov_1pebg41whg.s[1110]++;//console.log(`dentro del tercer else`)
// create just one state
await ctx.stub.putState(bondToken1.ID,valueBuffer1);}let orderBuffer=(cov_1pebg41whg.s[1111]++,Buffer.from(JSON.stringify(orderBook)));cov_1pebg41whg.s[1112]++;await ctx.stub.putState('OrderBook',orderBuffer);}// Bid order will be executed by someone whose desire is buying bonds.
async BidOrder(ctx,amount,price,tokenID,identificativo,date){cov_1pebg41whg.f[92]++;cov_1pebg41whg.s[1113]++;//console.log('paso 1')
// first we check the format of price
await this._checkDecimals(price);cov_1pebg41whg.s[1114]++;price=parseFloat(price);cov_1pebg41whg.s[1115]++;price=parseInt(price*100);// if (amount<=0 || price<=0){
//     throw new Error(`Both Amount and Price arguments must be positive`);
// }
const userID=(cov_1pebg41whg.s[1116]++,await ctx.GetUserIdentity('cif'));// retrieve order book if it exists
const bookOrderBytes=(cov_1pebg41whg.s[1117]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1118]++;if((cov_1pebg41whg.b[229][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[229][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[228][0]++;cov_1pebg41whg.s[1119]++;bookOrder=[[],[]];}else{cov_1pebg41whg.b[228][1]++;cov_1pebg41whg.s[1120]++;bookOrder=JSON.parse(bookOrderBytes.toString());}// retrieve token we are going to use to pay for
let myKey=(cov_1pebg41whg.s[1121]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));cov_1pebg41whg.s[1122]++;myKey=myKey+identificativo;const tokenBytes=(cov_1pebg41whg.s[1123]++,await ctx.stub.getState(myKey));//console.log('paso 2')
// prior verifications are also inside auxiliary function
cov_1pebg41whg.s[1124]++;if((cov_1pebg41whg.b[231][0]++,!tokenBytes)||(cov_1pebg41whg.b[231][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[230][0]++;cov_1pebg41whg.s[1125]++;throw new Error(`Error, Token State according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[230][1]++;}const token=(cov_1pebg41whg.s[1126]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[1127]++;if(!token.CanBeUsed){cov_1pebg41whg.b[232][0]++;cov_1pebg41whg.s[1128]++;throw new Error(`This Token State with ID ${tokenID} has already been used. Try another Token ID`);}else{cov_1pebg41whg.b[232][1]++;}const genericID=(cov_1pebg41whg.s[1129]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1130]++,await ctx.stub.createCompositeKey('BidOrder',[genericID]));// compute how many tokens we will withdraw from our Token State
const total=(cov_1pebg41whg.s[1131]++,amount*price);let currentOrder=(cov_1pebg41whg.s[1132]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:token.ID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Bid',Time:new Date(date).getTime()});//console.log('tiempo dentro del sc')
//console.log(currentOrder.Time)
let asks=(cov_1pebg41whg.s[1133]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1134]++,bookOrder[0]);//console.log(asks)
//console.log('paso 3')
// If there  is no asks it means we cannot match our bid order
cov_1pebg41whg.s[1135]++;if(asks.length===0){cov_1pebg41whg.b[233][0]++;//console.log('paso 3.1')
let newID=(cov_1pebg41whg.s[1136]++,await this._splitMoney(ctx,token.ID,total));const order=(cov_1pebg41whg.s[1137]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:newID,Name:'Bid',FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Time:new Date(date).getTime()});cov_1pebg41whg.s[1138]++;bookOrder[0].push(order);const book=(cov_1pebg41whg.s[1139]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1140]++;bookOrder=[book,bookOrder[1]];cov_1pebg41whg.s[1141]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1142]++;return bookOrder;}else{cov_1pebg41whg.b[233][1]++;}//console.log('paso 4')
let bidReference=(cov_1pebg41whg.s[1143]++,currentOrder);let bondKeyAcumulator=(cov_1pebg41whg.s[1144]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1145]++,[]);let counter=(cov_1pebg41whg.s[1146]++,bidReference.Quantity);let balance=(cov_1pebg41whg.s[1147]++,0);let totalTokens=(cov_1pebg41whg.s[1148]++,0);let tokensCounter=(cov_1pebg41whg.s[1149]++,token.Amount);let balanceTokens=(cov_1pebg41whg.s[1150]++,0);//console.log('paso 5')
//console.log(bidReference.Price)
// check if there is matching
cov_1pebg41whg.s[1151]++;for await(const ask of asks){cov_1pebg41whg.s[1152]++;//console.log('controlando el break')
//console.log(ask.Price);
if((cov_1pebg41whg.b[235][0]++,ask.Price<=bidReference.Price)&&(cov_1pebg41whg.b[235][1]++,!ask.FullMatch)){cov_1pebg41whg.b[234][0]++;cov_1pebg41whg.s[1153]++;//console.log('paso 5.1')
counter=counter-ask.Quantity;cov_1pebg41whg.s[1154]++;balance=ask.Quantity+counter;cov_1pebg41whg.s[1155]++;tokensCounter=tokensCounter-ask.Quantity*ask.Price;cov_1pebg41whg.s[1156]++;balanceTokens=ask.Quantity*ask.Price+tokensCounter;//console.log('tokensCounter')
//console.log(tokensCounter)
cov_1pebg41whg.s[1157]++;if(tokensCounter<=0){cov_1pebg41whg.b[236][0]++;//console.log('paso 5.1.1')
//console.log(balanceTokens)
//console.log(ask.Price)
let amountSol=(cov_1pebg41whg.s[1158]++,balance);//console.log(amountSol)
cov_1pebg41whg.s[1159]++;ask.QuantityMatch=amountSol;cov_1pebg41whg.s[1160]++;ask.Quantity=ask.Quantity-amountSol;cov_1pebg41whg.s[1161]++;ask.FullMatch=true;cov_1pebg41whg.s[1162]++;ask.PartialMatch=false;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1163]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1164]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1165]++;totalTokens=totalTokens+ask.Price*amountSol;// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1166]++;bondKeyAcumulator.push(ask.TokenID);// tokenAcumulator.push(ask);
cov_1pebg41whg.s[1167]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1168]++;counter=0;cov_1pebg41whg.s[1169]++;break;}else{cov_1pebg41whg.b[236][1]++;cov_1pebg41whg.s[1170]++;//console.log('paso 5.1.2')
// FULL MATCH means that our submitted order with that size has been completed
if(counter>=0){cov_1pebg41whg.b[237][0]++;cov_1pebg41whg.s[1171]++;//console.log('paso 5.1.2.1')
// FULL MATCH
ask.QuantityMatch=ask.Quantity;cov_1pebg41whg.s[1172]++;ask.FullMatch=true;cov_1pebg41whg.s[1173]++;ask.PartialMatch=false;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1174]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1175]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1176]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;}else{cov_1pebg41whg.b[237][1]++;cov_1pebg41whg.s[1177]++;// else if(counter<0 && balance>0){
//console.log('paso 5.1.2.2')
// PARTIAL MATCH means that our submitted order with that size has been completed partially
// PARTIAL MATCH
ask.FullMatch=false;cov_1pebg41whg.s[1178]++;ask.PartialMatch=true;cov_1pebg41whg.s[1179]++;ask.QuantityMatch=balance;cov_1pebg41whg.s[1180]++;ask.Quantity=ask.Quantity-balance;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1181]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1182]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1183]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1184]++;counter=0;// And finally break, because we read following a prestablished order
//console.log('antes del break')
cov_1pebg41whg.s[1185]++;break;}}}else{cov_1pebg41whg.b[234][1]++;cov_1pebg41whg.s[1186]++;continue;}}//console.log('paso 6')
// if (totalTokens>token.Amount){
//     throw new Error(`Your Token State with ID ${tokenID} do not have enough funds`);
// }
//console.log('paso 7')
// now we upload our order and the matching state
let newID=(cov_1pebg41whg.s[1187]++,await this._splitMoney(ctx,token.ID,total));cov_1pebg41whg.s[1188]++;if(counter===0){cov_1pebg41whg.b[238][0]++;cov_1pebg41whg.s[1189]++;//console.log('paso 7.1')
// Full Match
currentOrder.ID=orderID;cov_1pebg41whg.s[1190]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1191]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1192]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1193]++;currentOrder.QuantityMatch=currentOrder.Quantity;// currentOrder.MatchID=bidReference.MatchID;
}else{cov_1pebg41whg.b[238][1]++;cov_1pebg41whg.s[1194]++;if((cov_1pebg41whg.b[240][0]++,counter!==0)&&(cov_1pebg41whg.b[240][1]++,counter!==bidReference.Quantity)){cov_1pebg41whg.b[239][0]++;cov_1pebg41whg.s[1195]++;//console.log('paso 7.2')
// Partial Match
currentOrder.ID=orderID;cov_1pebg41whg.s[1196]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1197]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1198]++;currentOrder.PartialMatch=true;cov_1pebg41whg.s[1199]++;currentOrder.QuantityMatch=bidReference.Quantity-counter;cov_1pebg41whg.s[1200]++;currentOrder.Quantity=counter;// currentOrder.MatchID=bidReference.MatchID;
}else{cov_1pebg41whg.b[239][1]++;cov_1pebg41whg.s[1201]++;//console.log('paso 7.3')
// No match
currentOrder.ID=orderID;cov_1pebg41whg.s[1202]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1203]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1204]++;currentOrder.PartialMatch=false;}}cov_1pebg41whg.s[1205]++;bookOrder[0].push(currentOrder);//console.log(bookOrder);
const bookBid=(cov_1pebg41whg.s[1206]++,await this._sortingBidOrders(ctx,bookOrder[0]));const bookAsk=(cov_1pebg41whg.s[1207]++,await this._sortingAskOrders(ctx,bookOrder[1]));cov_1pebg41whg.s[1208]++;bookOrder=[bookBid,bookAsk];//console.log('paso 8')
//console.log(bookOrder)
// Finally we submit order book and matching state
cov_1pebg41whg.s[1209]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1210]++;if(bondKeyAcumulator.length>0){cov_1pebg41whg.b[241][0]++;//console.log('paso 8.1')
const orderMatch=(cov_1pebg41whg.s[1211]++,{Orders:tokenAcumulator,Order:currentOrder});let orderBuffer=(cov_1pebg41whg.s[1212]++,Buffer.from(JSON.stringify(orderMatch)));cov_1pebg41whg.s[1213]++;await ctx.stub.putState('OrderMatch'+genericID,orderBuffer);cov_1pebg41whg.s[1214]++;await ctx.SetEventName('BidMatched');cov_1pebg41whg.s[1215]++;await ctx.SetEventPayload(orderBuffer);// transference triggered
// cash tokens goes from bid uploader to bond owners and bonds
// goes to bid order uploader
// let ITransferCashTokenID=currentOrder.TokenID;
cov_1pebg41whg.s[1216]++;await this._transferBondTokens(ctx,tokenAcumulator,currentOrder,orderBook);//console.log(orderMatch)
//console.log(orderMatch.Orders)
//console.log(orderMatch.Order)
}else{cov_1pebg41whg.b[241][1]++;}//console.log('paso 9')
cov_1pebg41whg.s[1217]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// AskOrder  will be executed by someone able to sell assets at a limit price
async AskOrder(ctx,amount,price,bondID,identificativo,date){cov_1pebg41whg.f[93]++;cov_1pebg41whg.s[1218]++;await this._checkDecimals(price);const userID=(cov_1pebg41whg.s[1219]++,await ctx.GetUserIdentity('cif'));cov_1pebg41whg.s[1220]++;amount=parseInt(amount);cov_1pebg41whg.s[1221]++;price=parseFloat(price);cov_1pebg41whg.s[1222]++;price=parseInt(price*100);let myKey=(cov_1pebg41whg.s[1223]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondID]));cov_1pebg41whg.s[1224]++;myKey=myKey+identificativo;const bondBytes=(cov_1pebg41whg.s[1225]++,await ctx.stub.getState(myKey));// These prior verifications are also inside auxiliary function
cov_1pebg41whg.s[1226]++;if((cov_1pebg41whg.b[243][0]++,!bondBytes)||(cov_1pebg41whg.b[243][1]++,bondBytes.length===0)){cov_1pebg41whg.b[242][0]++;cov_1pebg41whg.s[1227]++;throw new Error(`Error, Bond State with ID ${bondID} does not exist`);}else{cov_1pebg41whg.b[242][1]++;}const bond=(cov_1pebg41whg.s[1228]++,JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[1229]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[244][0]++;cov_1pebg41whg.s[1230]++;throw new Error(`This Bond State with ID ${bondID} has already been used. Try another Bond ID`);}else{cov_1pebg41whg.b[244][1]++;}cov_1pebg41whg.s[1231]++;if(bond.Amount<amount){cov_1pebg41whg.b[245][0]++;cov_1pebg41whg.s[1232]++;throw new Error(`You are not supposed to do that.`);}else{cov_1pebg41whg.b[245][1]++;}const bookOrderBytes=(cov_1pebg41whg.s[1233]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1234]++;if((cov_1pebg41whg.b[247][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[247][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[246][0]++;cov_1pebg41whg.s[1235]++;bookOrder=[[],[]];}else{cov_1pebg41whg.b[246][1]++;cov_1pebg41whg.s[1236]++;bookOrder=JSON.parse(bookOrderBytes.toString());}const genericID=(cov_1pebg41whg.s[1237]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1238]++,await ctx.stub.createCompositeKey('AskOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1239]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:bond.ID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1240]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1241]++,bookOrder[0]);// If there is no bids it means we cannot match our ask order so we just submit it
cov_1pebg41whg.s[1242]++;if(bids.length===0){cov_1pebg41whg.b[248][0]++;let newID=(cov_1pebg41whg.s[1243]++,await this._splitBonds(ctx,bond.ID,amount));//console.log(newID)
const order=(cov_1pebg41whg.s[1244]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:newID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});//console.log(order);
cov_1pebg41whg.s[1245]++;bookOrder[1].push(order);let book=(cov_1pebg41whg.s[1246]++,await this._sortingAskOrders(ctx,bookOrder[1]));//console.log(book)
cov_1pebg41whg.s[1247]++;bookOrder=[bookOrder[0],book];cov_1pebg41whg.s[1248]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));// //console.log(ret)
cov_1pebg41whg.s[1249]++;return bookOrder;}else{cov_1pebg41whg.b[248][1]++;}const askReference=(cov_1pebg41whg.s[1250]++,currentOrder);let tokenKeyAcumulator=(cov_1pebg41whg.s[1251]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1252]++,[]);let tokenQuantitiesAcumulator=(cov_1pebg41whg.s[1253]++,[]);let counter=(cov_1pebg41whg.s[1254]++,askReference.Quantity);let totalTokens=(cov_1pebg41whg.s[1255]++,0);let balance=(cov_1pebg41whg.s[1256]++,0);// Check if our order can be matched
cov_1pebg41whg.s[1257]++;for await(const bid of bids){cov_1pebg41whg.s[1258]++;if((cov_1pebg41whg.b[250][0]++,bid.Price>=askReference.Price)&&(cov_1pebg41whg.b[250][1]++,!bid.FullMatch)){cov_1pebg41whg.b[249][0]++;cov_1pebg41whg.s[1259]++;counter=counter-bid.Quantity;cov_1pebg41whg.s[1260]++;balance=bid.Quantity+counter;cov_1pebg41whg.s[1261]++;if(counter>=0){cov_1pebg41whg.b[251][0]++;cov_1pebg41whg.s[1262]++;bid.FullMatch=true;cov_1pebg41whg.s[1263]++;bid.PartialMatch=false;cov_1pebg41whg.s[1264]++;bid.QuantityMatch=bid.Quantity;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1265]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1266]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1267]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_1pebg41whg.s[1268]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;// } else if(counter<0 && balance>0){
}else{cov_1pebg41whg.b[251][1]++;cov_1pebg41whg.s[1269]++;bid.FullMatch=false;cov_1pebg41whg.s[1270]++;bid.PartialMatch=true;cov_1pebg41whg.s[1271]++;bid.QuantityMatch=balance;cov_1pebg41whg.s[1272]++;bid.Quantity=bid.Quantity-balance;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1273]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1274]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1275]++;tokenQuantitiesAcumulator.push(counter+bid.Quantity);cov_1pebg41whg.s[1276]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1277]++;counter=0;cov_1pebg41whg.s[1278]++;break;}// else{
//     continue
// }
}else{cov_1pebg41whg.b[249][1]++;}}let newID=(cov_1pebg41whg.s[1279]++,await this._splitBonds(ctx,bond.ID,amount));//console.log(newID)
//console.log(counter)
// According to what matching situation we are, differents orders will be submitted
cov_1pebg41whg.s[1280]++;if(counter===0){cov_1pebg41whg.b[252][0]++;cov_1pebg41whg.s[1281]++;// Full Match
//console.log('case FULLMATCH')
currentOrder.TokenID=newID;cov_1pebg41whg.s[1282]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1283]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1284]++;currentOrder.QuantityMatch=currentOrder.Quantity;// currentOrder.MatchID=askReference.MatchID;
}else{cov_1pebg41whg.b[252][1]++;cov_1pebg41whg.s[1285]++;if((cov_1pebg41whg.b[254][0]++,counter!==0)&&(cov_1pebg41whg.b[254][1]++,counter!==askReference.Quantity)){cov_1pebg41whg.b[253][0]++;cov_1pebg41whg.s[1286]++;// Partial Match
//console.log('PARTIALMATCH')
currentOrder.TokenID=newID;cov_1pebg41whg.s[1287]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1288]++;currentOrder.PartialMatch=true;cov_1pebg41whg.s[1289]++;currentOrder.QuantityMatch=askReference.Quantity-counter;cov_1pebg41whg.s[1290]++;currentOrder.Quantity=counter;// currentOrder.MatchID=askReference.MatchID;
}else{cov_1pebg41whg.b[253][1]++;cov_1pebg41whg.s[1291]++;// No match
//console.log('NOMATCH')
currentOrder.TokenID=newID;cov_1pebg41whg.s[1292]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1293]++;currentOrder.PartialMatch=false;}}cov_1pebg41whg.s[1294]++;bookOrder[1].push(currentOrder);//console.log(bookOrder)
// Sort order book according to prior rules
let bookAsk=(cov_1pebg41whg.s[1295]++,await this._sortingAskOrders(ctx,bookOrder[1]));let bookBid=(cov_1pebg41whg.s[1296]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1297]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1298]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));//console.log(tokenKeyAcumulator)
cov_1pebg41whg.s[1299]++;if(tokenKeyAcumulator.length>0){cov_1pebg41whg.b[255][0]++;//console.log('Hay match')
const orderMatch=(cov_1pebg41whg.s[1300]++,{Orders:tokenAcumulator,Order:currentOrder});let orderBuffer=(cov_1pebg41whg.s[1301]++,Buffer.from(JSON.stringify(orderMatch)));cov_1pebg41whg.s[1302]++;await ctx.stub.putState('OrderMatch'+genericID,orderBuffer);// finally we set an event saying that our order has been matched and with which orders
cov_1pebg41whg.s[1303]++;await ctx.SetEventName('AskMatched');cov_1pebg41whg.s[1304]++;await ctx.SetEventPayload(orderBuffer);cov_1pebg41whg.s[1305]++;await this._transferCashTokens(ctx,tokenAcumulator,currentOrder,orderBook);//console.log(orderMatch)
//console.log(orderMatch.Orders)
//console.log(orderMatch.Order)
}else{cov_1pebg41whg.b[255][1]++;}cov_1pebg41whg.s[1306]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// AskMarketOrder will be executed by someone whose desire is selling bonds at market price.
async AskMarketOrder(ctx,amount,bondID,identificativo,date){cov_1pebg41whg.f[94]++;cov_1pebg41whg.s[1307]++;amount=parseInt(amount);cov_1pebg41whg.s[1308]++;if(amount<=0){cov_1pebg41whg.b[256][0]++;cov_1pebg41whg.s[1309]++;throw new Error(`Amount argument must be positive`);}else{cov_1pebg41whg.b[256][1]++;}const userID=(cov_1pebg41whg.s[1310]++,await ctx.GetUserIdentity('cif'));let myKey=(cov_1pebg41whg.s[1311]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondID]));cov_1pebg41whg.s[1312]++;myKey=myKey+identificativo;const bondBytes=(cov_1pebg41whg.s[1313]++,await ctx.stub.getState(myKey));cov_1pebg41whg.s[1314]++;if((cov_1pebg41whg.b[258][0]++,!bondBytes)||(cov_1pebg41whg.b[258][1]++,bondBytes.length===0)){cov_1pebg41whg.b[257][0]++;cov_1pebg41whg.s[1315]++;throw new Error(`Error, Bond State with key ${bondID} does not exist`);}else{cov_1pebg41whg.b[257][1]++;}// These prior verifications are also inside auxiliary function.
const bond=(cov_1pebg41whg.s[1316]++,JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[1317]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[259][0]++;cov_1pebg41whg.s[1318]++;throw new Error(`This Bond State with ID ${bondID} has already been used. Try another bond ID`);}else{cov_1pebg41whg.b[259][1]++;}cov_1pebg41whg.s[1319]++;if(bond.Amount<amount){cov_1pebg41whg.b[260][0]++;cov_1pebg41whg.s[1320]++;throw new Error(`Your token has not enough funds`);}else{cov_1pebg41whg.b[260][1]++;}// retrieve order book if it exists
const bookOrderBytes=(cov_1pebg41whg.s[1321]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1322]++;if((cov_1pebg41whg.b[262][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[262][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[261][0]++;cov_1pebg41whg.s[1323]++;throw new Error(`Order Book still not submitted`);}else{cov_1pebg41whg.b[261][1]++;cov_1pebg41whg.s[1324]++;bookOrder=JSON.parse(bookOrderBytes.toString());}// //console.log('Order book')
// //console.log(bookOrder)
const genericID=(cov_1pebg41whg.s[1325]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1326]++,await ctx.stub.createCompositeKey('AskOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1327]++,{ID:orderID,Quantity:amount,Price:'',MarketPrice:true,TokenID:bond.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:amount,// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1328]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1329]++,bookOrder[0]);// If there is no bids it means we cannot match our ask order
// if (bids.length===0){
//     // For sake of simplicity if there are no asks you cannot submit
//     // a market order
//     throw new Error(`There are no asks submitted.`)
// }
const askReference=(cov_1pebg41whg.s[1330]++,currentOrder);let tokenKeyAcumulator=(cov_1pebg41whg.s[1331]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1332]++,[]);let tokenQuantitiesAcumulator=(cov_1pebg41whg.s[1333]++,[]);let counter=(cov_1pebg41whg.s[1334]++,askReference.Quantity);let totalTokens=(cov_1pebg41whg.s[1335]++,0);let balance=(cov_1pebg41whg.s[1336]++,0);//console.log('askReference.Quantity')
//console.log(askReference.Quantity)
// Check if there is matching
cov_1pebg41whg.s[1337]++;for await(const bid of bids){cov_1pebg41whg.s[1338]++;if(!bid.FullMatch){cov_1pebg41whg.b[263][0]++;cov_1pebg41whg.s[1339]++;//console.log('Paso 1')
counter=counter-bid.Quantity;cov_1pebg41whg.s[1340]++;balance=bid.Quantity+counter;cov_1pebg41whg.s[1341]++;if(counter>=0){cov_1pebg41whg.b[264][0]++;cov_1pebg41whg.s[1342]++;//console.log('Paso 2')
bid.FullMatch=true;cov_1pebg41whg.s[1343]++;bid.PartialMatch=false;cov_1pebg41whg.s[1344]++;bid.QuantityMatch=bid.Quantity;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1345]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1346]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1347]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_1pebg41whg.s[1348]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;}else{cov_1pebg41whg.b[264][1]++;cov_1pebg41whg.s[1349]++;if((cov_1pebg41whg.b[266][0]++,counter<0)&&(cov_1pebg41whg.b[266][1]++,balance>0)){cov_1pebg41whg.b[265][0]++;cov_1pebg41whg.s[1350]++;//console.log('Paso 3')
bid.FullMatch=false;cov_1pebg41whg.s[1351]++;bid.PartialMatch=true;cov_1pebg41whg.s[1352]++;bid.QuantityMatch=balance;cov_1pebg41whg.s[1353]++;bid.Quantity=bid.Quantity-balance;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1354]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1355]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1356]++;tokenQuantitiesAcumulator.push(counter+bid.Quantity);cov_1pebg41whg.s[1357]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1358]++;counter=0;cov_1pebg41whg.s[1359]++;break;}else{cov_1pebg41whg.b[265][1]++;cov_1pebg41whg.s[1360]++;counter=0;cov_1pebg41whg.s[1361]++;break;}}// else{
//     //console.log('Paso 4')
//     bid.FullMatch=true;
//     bid.PartialMatch=false;
//     bid.QuantityMatch=bid.Quantity;
//     // bid.MatchID.push(askReference.ID);
//     // askReference.MatchID.push(bid.ID);
//     tokenKeyAcumulator.push(bid.ID);
//     tokenAcumulator.push(bid);
//     tokenQuantitiesAcumulator.push(bid.Quantity);
//     totalTokens=totalTokens+(bid.Price*bid.QuantityMatch);
//     break
// }
}else{cov_1pebg41whg.b[263][1]++;cov_1pebg41whg.s[1362]++;continue;}}let newID=(cov_1pebg41whg.s[1363]++,await this._splitBonds(ctx,bond.ID,amount));// if (counter===0){
//     // Full Match
cov_1pebg41whg.s[1364]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1365]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1366]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1367]++;currentOrder.QuantityMatch=askReference.Quantity-counter;//     // currentOrder.MatchID=askReference.MatchID;
// }else if(counter!==0 && counter!==askReference.Quantity ){
//    // Partial Match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch= true;
//     currentOrder.QuantityMatch=askReference.Quantity-counter;
//     currentOrder.Quantity=counter;
//     // currentOrder.MatchID=askReference.MatchID;
// }
// else{
//     // No match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch= false;
// }
cov_1pebg41whg.s[1368]++;bookOrder[1].push(currentOrder);let bookAsk=(cov_1pebg41whg.s[1369]++,await this._sortingAskOrders(ctx,bookOrder[1]));let bookBid=(cov_1pebg41whg.s[1370]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1371]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1372]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));// if (tokenKeyAcumulator.length>0){
const orderMatch=(cov_1pebg41whg.s[1373]++,{Orders:tokenAcumulator,Order:currentOrder});let orderBuffer=(cov_1pebg41whg.s[1374]++,Buffer.from(JSON.stringify(orderMatch)));cov_1pebg41whg.s[1375]++;await ctx.stub.putState('OrderMatch'+genericID,orderBuffer);// finally we set an event saying that our order has been matched and with which orders
cov_1pebg41whg.s[1376]++;await ctx.SetEventName('AskMatched');cov_1pebg41whg.s[1377]++;await ctx.SetEventPayload(orderBuffer);//     return bookOrder
//     // //console.log(orderMatch)
// }
// else{
//     return bookOrder
// }
cov_1pebg41whg.s[1378]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// BidMarketOrder will be executed by someone whose desire is buying bonds at market price.
async BidMarketOrder(ctx,amount,tokenID,identificativo,date){cov_1pebg41whg.f[95]++;cov_1pebg41whg.s[1379]++;if(amount<=0){cov_1pebg41whg.b[267][0]++;cov_1pebg41whg.s[1380]++;throw new Error(`Amount argument must be positive`);}else{cov_1pebg41whg.b[267][1]++;}const userID=(cov_1pebg41whg.s[1381]++,await ctx.GetUserIdentity('cif'));// These prior verifications are also inside auxiliary function
let myKey=(cov_1pebg41whg.s[1382]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));cov_1pebg41whg.s[1383]++;myKey=myKey+identificativo;const tokenBytes=(cov_1pebg41whg.s[1384]++,await ctx.stub.getState(myKey));cov_1pebg41whg.s[1385]++;if((cov_1pebg41whg.b[269][0]++,!tokenBytes)||(cov_1pebg41whg.b[269][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[268][0]++;cov_1pebg41whg.s[1386]++;throw new Error(`Error, Token State with ID ${tokenID} does not exist`);}else{cov_1pebg41whg.b[268][1]++;}const token=(cov_1pebg41whg.s[1387]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[1388]++;if(!token.CanBeUsed){cov_1pebg41whg.b[270][0]++;cov_1pebg41whg.s[1389]++;throw new Error(`This Token State with ID ${tokenID} has already been used. Try another token ID`);}else{cov_1pebg41whg.b[270][1]++;}const bookOrderBytes=(cov_1pebg41whg.s[1390]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1391]++;if((cov_1pebg41whg.b[272][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[272][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[271][0]++;cov_1pebg41whg.s[1392]++;throw new Error(`There are no asks submitted.`);// bookOrder=[[],[]];
}else{cov_1pebg41whg.b[271][1]++;cov_1pebg41whg.s[1393]++;bookOrder=JSON.parse(bookOrderBytes.toString());}const genericID=(cov_1pebg41whg.s[1394]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1395]++,await ctx.stub.createCompositeKey('BidOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1396]++,{ID:orderID,Quantity:parseInt(amount),Price:'',MarketPrice:true,TokenID:token.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Bid',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1397]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1398]++,bookOrder[0]);// If there  is no asks it means we cannot match our bid order, so it has no sense to commit a bid order
// at market price
// if ( asks.length===0){
//     // For sake of simplicity if there are no asks you cannot submit
//     // a market order
//     throw new Error(`There are no asks submitted.`)
// }
let bidReference=(cov_1pebg41whg.s[1399]++,currentOrder);let bondKeyAcumulator=(cov_1pebg41whg.s[1400]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1401]++,[]);let counter=(cov_1pebg41whg.s[1402]++,bidReference.Quantity);let balance=(cov_1pebg41whg.s[1403]++,0);let totalTokens=(cov_1pebg41whg.s[1404]++,0);let tokensCounter=(cov_1pebg41whg.s[1405]++,token.Amount);let balanceTokens=(cov_1pebg41whg.s[1406]++,0);//console.log('tokensCounter')
//console.log(tokensCounter)
//console.log(token)
//console.log('paso 1')
cov_1pebg41whg.s[1407]++;for await(const ask of asks){cov_1pebg41whg.s[1408]++;if(!ask.FullMatch){cov_1pebg41whg.b[273][0]++;cov_1pebg41whg.s[1409]++;//console.log('paso 2')
counter=counter-ask.Quantity;cov_1pebg41whg.s[1410]++;balance=ask.Quantity+counter;cov_1pebg41whg.s[1411]++;tokensCounter=tokensCounter-ask.Quantity*ask.Price;cov_1pebg41whg.s[1412]++;balanceTokens=ask.Quantity*ask.Price+tokensCounter;cov_1pebg41whg.s[1413]++;if(tokensCounter<=0){cov_1pebg41whg.b[274][0]++;//console.log('paso 3')
let amountSol=(cov_1pebg41whg.s[1414]++,Math.floor(balanceTokens/ask.Price));cov_1pebg41whg.s[1415]++;ask.QuantityMatch=amountSol;cov_1pebg41whg.s[1416]++;ask.Quantity=ask.Quantity-amountSol;cov_1pebg41whg.s[1417]++;ask.FullMatch=false;cov_1pebg41whg.s[1418]++;ask.PartialMatch=true;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1419]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1420]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1421]++;totalTokens=totalTokens+ask.Price*amountSol;// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1422]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1423]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1424]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1425]++;counter=0;cov_1pebg41whg.s[1426]++;break;}else{cov_1pebg41whg.b[274][1]++;cov_1pebg41whg.s[1427]++;//console.log('paso 4')
if(counter>=0){cov_1pebg41whg.b[275][0]++;cov_1pebg41whg.s[1428]++;//console.log('paso 4.1')
// FULL MATCH
ask.QuantityMatch=ask.Quantity;cov_1pebg41whg.s[1429]++;ask.FullMatch=true;cov_1pebg41whg.s[1430]++;ask.PartialMatch=false;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1431]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1432]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1433]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;}else{cov_1pebg41whg.b[275][1]++;cov_1pebg41whg.s[1434]++;// else if(counter<0 && balance>0){
//console.log('paso 4.2')
// Partial Match
ask.FullMatch=false;cov_1pebg41whg.s[1435]++;ask.PartialMatch=true;cov_1pebg41whg.s[1436]++;ask.QuantityMatch=balance;cov_1pebg41whg.s[1437]++;ask.Quantity=ask.Quantity-balance;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1438]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1439]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1440]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1441]++;counter=0;cov_1pebg41whg.s[1442]++;break;}}}else{cov_1pebg41whg.b[273][1]++;cov_1pebg41whg.s[1443]++;continue;}}//console.log('tokenAcumulator');
//console.log(tokenAcumulator);
let newID=(cov_1pebg41whg.s[1444]++,await this._splitMoney(ctx,token.ID,totalTokens));// if (counter===0){
//console.log('Full Match')
// Full Match
cov_1pebg41whg.s[1445]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1446]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1447]++;currentOrder.PartialMatch=false;// currentOrder.QuantityMatch=currentOrder.Quantity;
cov_1pebg41whg.s[1448]++;currentOrder.QuantityMatch=bidReference.Quantity-counter;// currentOrder.MatchID=bidReference.MatchID;
// }
// else{ 
// // if(counter!==0 && counter!==bidReference.Quantity){
//     //console.log('Partial Match')
//    // Partial Match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch= true;
//     currentOrder.QuantityMatch=bidReference.Quantity-counter;
//     currentOrder.Quantity=counter;
//     // currentOrder.MatchID=bidReference.MatchID;
// }
// else{
//     //console.log('No Match')
//     // No match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch=false;
// }
cov_1pebg41whg.s[1449]++;bookOrder[0].push(currentOrder);const bookBid=(cov_1pebg41whg.s[1450]++,await this._sortingBidOrders(ctx,bookOrder[0]));const bookAsk=(cov_1pebg41whg.s[1451]++,await this._sortingAskOrders(ctx,bookOrder[1]));cov_1pebg41whg.s[1452]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1453]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));// if (bondKeyAcumulator.length>0){
//console.log('There was match')
const orderMatch=(cov_1pebg41whg.s[1454]++,{Orders:tokenAcumulator,Order:currentOrder});let orderBuffer=(cov_1pebg41whg.s[1455]++,Buffer.from(JSON.stringify(orderMatch)));cov_1pebg41whg.s[1456]++;await ctx.stub.putState('OrderMatch'+genericID,orderBuffer);cov_1pebg41whg.s[1457]++;await ctx.SetEventName('BidMatched');cov_1pebg41whg.s[1458]++;await ctx.SetEventPayload(orderBuffer);// }
cov_1pebg41whg.s[1459]++;return bookOrder;}// // This function will do a delivery versus payment when a Bid Order achieves a match
// // This function will be executed until no state according to that key exists in world state
// async MatchingBid(ctx,orderID){
//     const orderBookBytes=await ctx.stub.getState('OrderBook');
//     if (!orderBookBytes || orderBookBytes.length === 0){
//         throw new Error(`Error, Order Book State does not exist`);
//     }
//     let orderBook=JSON.parse(orderBookBytes.toString());
//     let asks=orderBook[1];
//     let bids=orderBook[0];
//     const orderMatchBytes= await ctx.stub.getState(orderID);
//     if (!orderMatchBytes || orderMatchBytes.length === 0){
//         throw new Error(`Error, Matching Order with ID ${orderID} does not exist`);
//     }
//     let orderMatch=JSON.parse(orderMatchBytes.toString());
//     let order=orderMatch.Order;
//     let orders=orderMatch.Orders[0];
//     let bond=asks.filter(item => item.ID===orders.ID);
//     let token=bids.filter(item=>item.ID===order.ID);
//     let tokenID;
//     let bondID;
//     // delivery vs payment will change the IDs of both token and bond and will be included in order book
//     [tokenID,bondID]=await this._dvp(ctx,bond[0].TokenID,token[0].TokenID, orders.QuantityMatch*order.Price,orders.QuantityMatch);
//     let newCounter=order.QuantityMatch-orders.QuantityMatch;
//     order.TokenID=tokenID;
//     order.QuantityMatch=newCounter;
//     let new_orders=orderMatch.Orders.filter(item => item.ID!==orders.ID);
//     // lo que pasa con el documento de matching: si se han transferido todos, se elimina, en caso contrario solo
//     // se elimina el order del ask
//     // If we have transfered all tokens/bonds we can delete Order Match document from world state
//     if (newCounter===0){
//         await ctx.stub.deleteState(orderID)
//     }else{
//         let match={
//             Orders: new_orders,
//             Order: order,
//         }
//         await ctx.stub.putState(orderID, Buffer.from(JSON.stringify(match)));
//     }
//     // We have to modify order book because orders partially matched have changed their tokens ID
//     // For Ask Orders
//     let myAsk=await asks.filter(item=> item.ID===orders.ID);
//     let index = asks.indexOf(myAsk[0]);
//     myAsk[0].TokenID=bondID;
//     myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
//     if (myAsk[0].RestingQuantity!==0){
//         asks[index]=myAsk[0];
//         orderBook=[bids,asks];
//     }else if (myAsk[0].RestingQuantity===0){
//         myAsk=await asks.filter(item=> item.ID!==orders.ID);
//         orderBook=[bids,myAsk];
//     }
//     asks=orderBook[1];
//     bids=orderBook[0];
//     // For Bid Order
//     let myBid=await bids.filter(item=> item.ID===order.ID);
//     index = bids.indexOf(myBid[0]);
//     myBid[0].TokenID=tokenID;
//     myBid[0].RestingQuantity=myBid[0].RestingQuantity-orders.QuantityMatch;
//     if (myBid[0].RestingQuantity!==0){
//         bids[index]=myBid[0];
//         orderBook=[bids,asks];
//     }else if (myBid[0].RestingQuantity===0){
//         myBid=await bids.filter(item=> item.ID!==order.ID);
//         orderBook=[myBid,asks];
//     }
//     await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// }
// // This function will do a delivery versus payment when an Ask Order achieves a match
// // This function will be executed until no state according to that key exists in world state
// async MatchingAsk(ctx,orderID){
//     const orderBookBytes=await ctx.stub.getState('OrderBook');
//     if (!orderBookBytes || orderBookBytes.length === 0){
//         throw new Error(`Error, Order Book State associated to key ${'OrderBook'} does not exist`);
//     }
//     let orderBook=JSON.parse(orderBookBytes.toString());
//     let asks=orderBook[1];
//     let bids=orderBook[0];
//     // Retrieve order Match State
//     const orderMatchBytes= await ctx.stub.getState(orderID);
//     if (!orderMatchBytes || orderMatchBytes.length === 0){
//         throw new Error(`Error, Matched Order State with ID ${orderID} does not exist`);
//     }
//     const orderMatch=JSON.parse(orderMatchBytes.toString());
//     let order=orderMatch.Order;
//     let orders=orderMatch.Orders[0];
//     let bond=await asks.filter(item => item.ID===order.ID);
//     let token=await bids.filter(item => item.ID===orders.ID);
//     let tokenID;
//     let bondID;
//     // delivery vs payment
//     [tokenID,bondID]=await this._dvp(ctx,bond[0].TokenID,token[0].TokenID, orders.QuantityMatch*orders.Price,orders.QuantityMatch);
//     let newCounter=order.QuantityMatch-orders.QuantityMatch;
//     order.TokenID=tokenID;
//     order.QuantityMatch=newCounter;
//     let new_orders=await orderMatch.Orders.filter(item => item.ID!==orders.ID);
//     // If every Token/Bond have been transfered, we will delete Match Order State
//     if (newCounter===0){
//         await ctx.stub.deleteState(orderID)
//     }else{
//         const match={
//             Orders: new_orders,
//             Order: order,
//         }
//         await ctx.stub.putState(orderID, Buffer.from(JSON.stringify(match)))
//     }
//     let myBid=await bids.filter(item=> item.ID===orders.ID);
//     let index = bids.indexOf(myBid[0]);
//     myBid[0].TokenID=tokenID;
//     myBid[0].RestingQuantity=myBid[0].RestingQuantity-orders.QuantityMatch;
//     if (myBid[0].RestingQuantity!==0){
//         bids[index]=myBid[0];
//         orderBook=[bids,asks];
//     }else if (myBid[0].RestingQuantity===0){
//         myBid=await bids.filter(item=> item.ID!==orders.ID);
//         orderBook=[myBid,asks];
//     }
//     asks=orderBook[1];
//     bids=orderBook[0];
//     let myAsk=await asks.filter(item=> item.ID===order.ID);
//     index = asks.indexOf(myAsk[0]);
//     myAsk[0].TokenID=bondID;
//     myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
//     if (myAsk[0].RestingQuantity!==0){
//         asks[index]=myAsk[0];
//         orderBook=[bids,asks];
//     }else if (myAsk[0].RestingQuantity===0){
//         myAsk=await asks.filter(item=> item.ID!==order.ID);
//         orderBook=[bids,myAsk];
//     }
//     await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// }
// async _dvp(ctx,bondID,tokenID, tokensToTransfer, bondsToTransfer){
//     //console.log('Paso 1')
//     const tokenBytes=await ctx.stub.getState(tokenID);
//     if (!tokenBytes || tokenBytes.length === 0) {
//         throw new Error(`Error, Token State with key ${tokenID} does not exist`);
//     }
//     //console.log('Paso 2')
//     const token=JSON.parse(tokenBytes.toString());
//     const bondBytes=await ctx.stub.getState(bondID);
//     if (!bondBytes || bondBytes.length === 0) {
//         throw new Error(`Error, Bond State with ID ${bondID} does not exist`);
//     }
//     const bond=JSON.parse(bondBytes.toString());
//     const genericID=await ctx.stub.getTxID();
//     const key1=await ctx.stub.createCompositeKey('securitizationCoin',[bond.Owner,genericID]);
//     const key2=await ctx.stub.createCompositeKey('securitizationCoin',[token.Owner,genericID]);
//     const bondKey1=await ctx.stub.createCompositeKey('BondToken',[token.Owner,genericID]);
//     const bondKey2=await ctx.stub.createCompositeKey('BondToken',[bond.Owner,genericID]);
//     const balanceTokens=token.Amount-tokensToTransfer;
//     let utxo1;
//     let utxo2;
//     let typeID;
//     typeID=':1';
//     utxo1={
//         ID: key1+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: token.Owner,
//         Issuer: token.Issuer,
//         Amount: balanceTokens,
//         CanBeUsed: false,
//     };
//     typeID=':0';
//     utxo2={
//         ID: key2+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: bond.Owner,
//         Issuer: token.Issuer,
//         Amount: tokensToTransfer,
//         CanBeUsed: true
//     };
//     const balanceBonds=bond.Amount-bondsToTransfer;
//     let bond1;
//     let bond2;
//     typeID=':1'
//     // TODO:
//     // Bond Arguments.
//     bond1={
//         ID: bondKey1+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: token.Owner,
//         Issuer: token.Issuer,
//         Amount: balanceBonds,
//         CanBeUsed: false,
//     };
//     typeID=':0'
//     bond2={
//         ID: bondKey2+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: bond.Owner,
//         Issuer: token.Issuer,
//         Amount: bondsToTransfer,
//         CanBeUsed: true
//     };
//     await ctx.stub.deleteState(tokenID);
//     await ctx.stub.deleteState(bondID);
//     //console.log(balanceTokens)
//     //console.log(balanceBonds)
//     if (balanceTokens!==0){
//         //console.log('balanceTokens!==0')
//         await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));
//         await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));
//     }else{
//         await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));  
//     }
//     if (balanceBonds!==0){
//         //console.log('balanceBonds!==0')
//         await ctx.stub.putState(bond1.ID,Buffer.from(JSON.stringify(bond1)));
//         await ctx.stub.putState(bond2.ID,Buffer.from(JSON.stringify(bond2)));
//     }else{
//         await ctx.stub.putState(bond2.ID,Buffer.from(JSON.stringify(bond2)));
//     }
//     return [utxo1.ID, bond1.ID]
// }
async QueryOrderBook(ctx){cov_1pebg41whg.f[96]++;const bookOrderBytes=(cov_1pebg41whg.s[1460]++,await ctx.stub.getState('OrderBook'));cov_1pebg41whg.s[1461]++;if((cov_1pebg41whg.b[277][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[277][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[276][0]++;cov_1pebg41whg.s[1462]++;throw new Error(`Order Book does not exist`);}else{cov_1pebg41whg.b[276][1]++;}const bookOrder=(cov_1pebg41whg.s[1463]++,JSON.parse(bookOrderBytes.toString()));cov_1pebg41whg.s[1464]++;return bookOrder;}// // We must change this function
// // Order book implementation URL http://web.archive.org/web/20110205154238/http://howtohft.blogspot.com/2011/02/how-to-build-fast-limit-order-book.html
}// module.exports.originationContract=originationContract;
cov_1pebg41whg.s[1465]++;module.exports.securitizationContext=securitizationContext;cov_1pebg41whg.s[1466]++;module.exports.servicingContract=servicingContract;cov_1pebg41whg.s[1467]++;module.exports.ppaContract=ppaContract;cov_1pebg41whg.s[1468]++;module.exports.commonSecuritizationContract=commonSecuritizationContract;cov_1pebg41whg.s[1469]++;module.exports.bondIssuanceContract=bondIssuanceContract;