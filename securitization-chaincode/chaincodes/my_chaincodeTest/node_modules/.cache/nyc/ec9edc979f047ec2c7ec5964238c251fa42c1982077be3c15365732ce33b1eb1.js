'use strict';var cov_7ffl2vh04=function(){var path="/home/oliver/go/src/github.com/hyperledger/fabric-samples/securitization-chaincode/chaincodes/my_chaincode/lib/securitizationContract.js";var hash="bd174a32108d3681a68ebf653dd303d99306a75f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/oliver/go/src/github.com/hyperledger/fabric-samples/securitization-chaincode/chaincodes/my_chaincode/lib/securitizationContract.js",statementMap:{"0":{start:{line:3,column:26},end:{line:3,column:56}},"1":{start:{line:4,column:19},end:{line:4,column:41}},"2":{start:{line:9,column:8},end:{line:9,column:16}},"3":{start:{line:13,column:8},end:{line:13,column:46}},"4":{start:{line:18,column:8},end:{line:18,column:59}},"5":{start:{line:22,column:8},end:{line:22,column:38}},"6":{start:{line:28,column:8},end:{line:28,column:76}},"7":{start:{line:33,column:8},end:{line:33,column:24}},"8":{start:{line:38,column:8},end:{line:38,column:39}},"9":{start:{line:43,column:8},end:{line:43,column:32}},"10":{start:{line:63,column:8},end:{line:105,column:9}},"11":{start:{line:66,column:16},end:{line:66,column:38}},"12":{start:{line:67,column:16},end:{line:67,column:24}},"13":{start:{line:68,column:16},end:{line:75,column:17}},"14":{start:{line:68,column:26},end:{line:68,column:27}},"15":{start:{line:69,column:20},end:{line:74,column:21}},"16":{start:{line:70,column:24},end:{line:70,column:32}},"17":{start:{line:71,column:24},end:{line:71,column:38}},"18":{start:{line:72,column:26},end:{line:74,column:21}},"19":{start:{line:73,column:24},end:{line:73,column:87}},"20":{start:{line:76,column:16},end:{line:78,column:17}},"21":{start:{line:77,column:20},end:{line:77,column:54}},"22":{start:{line:80,column:16},end:{line:80,column:42}},"23":{start:{line:81,column:16},end:{line:83,column:17}},"24":{start:{line:82,column:20},end:{line:82,column:72}},"25":{start:{line:84,column:16},end:{line:84,column:27}},"26":{start:{line:86,column:16},end:{line:86,column:38}},"27":{start:{line:87,column:16},end:{line:87,column:24}},"28":{start:{line:88,column:16},end:{line:94,column:17}},"29":{start:{line:88,column:26},end:{line:88,column:27}},"30":{start:{line:89,column:20},end:{line:93,column:21}},"31":{start:{line:90,column:24},end:{line:90,column:95}},"32":{start:{line:91,column:26},end:{line:93,column:21}},"33":{start:{line:92,column:24},end:{line:92,column:95}},"34":{start:{line:96,column:16},end:{line:96,column:40}},"35":{start:{line:97,column:16},end:{line:99,column:17}},"36":{start:{line:98,column:20},end:{line:98,column:72}},"37":{start:{line:100,column:16},end:{line:100,column:27}},"38":{start:{line:102,column:16},end:{line:102,column:65}},"39":{start:{line:104,column:16},end:{line:104,column:41}},"40":{start:{line:110,column:8},end:{line:110,column:67}},"41":{start:{line:115,column:8},end:{line:115,column:38}},"42":{start:{line:120,column:8},end:{line:120,column:32}},"43":{start:{line:134,column:8},end:{line:134,column:43}},"44":{start:{line:141,column:8},end:{line:141,column:43}},"45":{start:{line:160,column:27},end:{line:160,column:44}},"46":{start:{line:162,column:18},end:{line:162,column:19}},"47":{start:{line:163,column:8},end:{line:171,column:9}},"48":{start:{line:163,column:18},end:{line:163,column:19}},"49":{start:{line:164,column:12},end:{line:167,column:13}},"50":{start:{line:165,column:16},end:{line:165,column:24}},"51":{start:{line:166,column:16},end:{line:166,column:30}},"52":{start:{line:168,column:12},end:{line:170,column:13}},"53":{start:{line:169,column:16},end:{line:169,column:79}},"54":{start:{line:172,column:8},end:{line:172,column:49}},"55":{start:{line:173,column:8},end:{line:175,column:9}},"56":{start:{line:174,column:12},end:{line:174,column:45}},"57":{start:{line:177,column:8},end:{line:177,column:34}},"58":{start:{line:178,column:8},end:{line:180,column:9}},"59":{start:{line:179,column:12},end:{line:179,column:64}},"60":{start:{line:182,column:8},end:{line:182,column:19}},"61":{start:{line:244,column:24},end:{line:244,column:48}},"62":{start:{line:246,column:19},end:{line:246,column:93}},"63":{start:{line:248,column:8},end:{line:250,column:9}},"64":{start:{line:249,column:12},end:{line:249,column:44}},"65":{start:{line:252,column:19},end:{line:252,column:23}},"66":{start:{line:253,column:19},end:{line:262,column:9}},"67":{start:{line:264,column:8},end:{line:264,column:72}},"68":{start:{line:268,column:21},end:{line:268,column:53}},"69":{start:{line:269,column:23},end:{line:269,column:98}},"70":{start:{line:271,column:23},end:{line:271,column:25}},"71":{start:{line:272,column:20},end:{line:272,column:21}},"72":{start:{line:274,column:8},end:{line:284,column:9}},"73":{start:{line:275,column:12},end:{line:275,column:53}},"74":{start:{line:276,column:12},end:{line:276,column:44}},"75":{start:{line:277,column:12},end:{line:280,column:13}},"76":{start:{line:278,column:16},end:{line:278,column:52}},"77":{start:{line:279,column:16},end:{line:279,column:39}},"78":{start:{line:281,column:12},end:{line:283,column:13}},"79":{start:{line:282,column:16},end:{line:282,column:21}},"80":{start:{line:285,column:8},end:{line:288,column:9}},"81":{start:{line:286,column:12},end:{line:286,column:55}},"82":{start:{line:287,column:12},end:{line:287,column:18}},"83":{start:{line:289,column:8},end:{line:289,column:66}},"84":{start:{line:307,column:18},end:{line:307,column:79}},"85":{start:{line:308,column:8},end:{line:308,column:19}},"86":{start:{line:312,column:19},end:{line:312,column:21}},"87":{start:{line:313,column:12},end:{line:313,column:33}},"88":{start:{line:314,column:2},end:{line:339,column:3}},"89":{start:{line:315,column:3},end:{line:337,column:4}},"90":{start:{line:316,column:18},end:{line:316,column:20}},"91":{start:{line:317,column:4},end:{line:317,column:50}},"92":{start:{line:318,column:4},end:{line:335,column:5}},"93":{start:{line:319,column:5},end:{line:319,column:36}},"94":{start:{line:320,column:5},end:{line:320,column:45}},"95":{start:{line:321,column:5},end:{line:326,column:6}},"96":{start:{line:322,column:6},end:{line:322,column:67}},"97":{start:{line:324,column:6},end:{line:324,column:23}},"98":{start:{line:325,column:6},end:{line:325,column:55}},"99":{start:{line:328,column:5},end:{line:328,column:33}},"100":{start:{line:329,column:5},end:{line:334,column:6}},"101":{start:{line:330,column:6},end:{line:330,column:68}},"102":{start:{line:332,column:6},end:{line:332,column:23}},"103":{start:{line:333,column:6},end:{line:333,column:56}},"104":{start:{line:336,column:4},end:{line:336,column:29}},"105":{start:{line:338,column:3},end:{line:338,column:31}},"106":{start:{line:340,column:2},end:{line:340,column:19}},"107":{start:{line:341,column:2},end:{line:341,column:20}},"108":{start:{line:346,column:18},end:{line:346,column:73}},"109":{start:{line:347,column:30},end:{line:347,column:66}},"110":{start:{line:348,column:16},end:{line:348,column:64}},"111":{start:{line:349,column:2},end:{line:349,column:17}},"112":{start:{line:359,column:8},end:{line:361,column:9}},"113":{start:{line:360,column:12},end:{line:360,column:74}},"114":{start:{line:363,column:8},end:{line:363,column:42}},"115":{start:{line:365,column:24},end:{line:365,column:48}},"116":{start:{line:366,column:22},end:{line:366,column:54}},"117":{start:{line:368,column:18},end:{line:368,column:92}},"118":{start:{line:371,column:8},end:{line:371,column:19}},"119":{start:{line:373,column:34},end:{line:382,column:9}},"120":{start:{line:383,column:8},end:{line:383,column:103}},"121":{start:{line:417,column:23},end:{line:417,column:76}},"122":{start:{line:418,column:20},end:{line:418,column:21}},"123":{start:{line:421,column:8},end:{line:424,column:13}},"124":{start:{line:422,column:12},end:{line:422,column:52}},"125":{start:{line:423,column:12},end:{line:423,column:30}},"126":{start:{line:425,column:8},end:{line:429,column:9}},"127":{start:{line:426,column:12},end:{line:426,column:45}},"128":{start:{line:427,column:14},end:{line:429,column:9}},"129":{start:{line:428,column:12},end:{line:428,column:24}},"130":{start:{line:430,column:8},end:{line:430,column:23}},"131":{start:{line:435,column:21},end:{line:435,column:53}},"132":{start:{line:437,column:23},end:{line:437,column:92}},"133":{start:{line:438,column:22},end:{line:438,column:24}},"134":{start:{line:439,column:8},end:{line:442,column:9}},"135":{start:{line:440,column:25},end:{line:440,column:57}},"136":{start:{line:441,column:12},end:{line:441,column:32}},"137":{start:{line:443,column:8},end:{line:443,column:23}},"138":{start:{line:448,column:21},end:{line:448,column:53}},"139":{start:{line:449,column:23},end:{line:449,column:83}},"140":{start:{line:450,column:22},end:{line:450,column:24}},"141":{start:{line:451,column:8},end:{line:454,column:9}},"142":{start:{line:452,column:25},end:{line:452,column:57}},"143":{start:{line:453,column:12},end:{line:453,column:32}},"144":{start:{line:455,column:8},end:{line:455,column:23}},"145":{start:{line:543,column:8},end:{line:543,column:40}},"146":{start:{line:546,column:8},end:{line:546,column:43}},"147":{start:{line:549,column:22},end:{line:549,column:42}},"148":{start:{line:550,column:8},end:{line:552,column:9}},"149":{start:{line:551,column:12},end:{line:551,column:74}},"150":{start:{line:553,column:8},end:{line:553,column:38}},"151":{start:{line:554,column:16},end:{line:554,column:51}},"152":{start:{line:555,column:19},end:{line:555,column:26}},"153":{start:{line:556,column:19},end:{line:556,column:29}},"154":{start:{line:557,column:8},end:{line:561,column:9}},"155":{start:{line:557,column:19},end:{line:557,column:20}},"156":{start:{line:558,column:12},end:{line:560,column:13}},"157":{start:{line:559,column:16},end:{line:559,column:73}},"158":{start:{line:562,column:8},end:{line:589,column:9}},"159":{start:{line:564,column:16},end:{line:566,column:17}},"160":{start:{line:565,column:20},end:{line:565,column:82}},"161":{start:{line:568,column:16},end:{line:570,column:17}},"162":{start:{line:569,column:20},end:{line:569,column:82}},"163":{start:{line:572,column:16},end:{line:574,column:17}},"164":{start:{line:573,column:20},end:{line:573,column:82}},"165":{start:{line:576,column:16},end:{line:578,column:17}},"166":{start:{line:577,column:20},end:{line:577,column:82}},"167":{start:{line:580,column:16},end:{line:582,column:17}},"168":{start:{line:581,column:20},end:{line:581,column:82}},"169":{start:{line:584,column:16},end:{line:586,column:17}},"170":{start:{line:585,column:20},end:{line:585,column:82}},"171":{start:{line:594,column:15},end:{line:594,column:42}},"172":{start:{line:595,column:8},end:{line:595,column:20}},"173":{start:{line:599,column:20},end:{line:612,column:5}},"174":{start:{line:620,column:23},end:{line:620,column:72}},"175":{start:{line:621,column:20},end:{line:621,column:22}},"176":{start:{line:622,column:8},end:{line:625,column:13}},"177":{start:{line:624,column:12},end:{line:624,column:34}},"178":{start:{line:626,column:8},end:{line:626,column:30}},"179":{start:{line:638,column:23},end:{line:638,column:83}},"180":{start:{line:641,column:8},end:{line:645,column:9}},"181":{start:{line:642,column:12},end:{line:642,column:20}},"182":{start:{line:644,column:12},end:{line:644,column:20}},"183":{start:{line:661,column:23},end:{line:661,column:77}},"184":{start:{line:662,column:20},end:{line:662,column:21}},"185":{start:{line:664,column:8},end:{line:667,column:13}},"186":{start:{line:665,column:12},end:{line:665,column:52}},"187":{start:{line:666,column:12},end:{line:666,column:30}},"188":{start:{line:668,column:8},end:{line:672,column:9}},"189":{start:{line:669,column:12},end:{line:669,column:67}},"190":{start:{line:670,column:14},end:{line:672,column:9}},"191":{start:{line:671,column:12},end:{line:671,column:24}},"192":{start:{line:673,column:8},end:{line:673,column:23}},"193":{start:{line:687,column:23},end:{line:687,column:83}},"194":{start:{line:688,column:20},end:{line:688,column:21}},"195":{start:{line:691,column:8},end:{line:694,column:13}},"196":{start:{line:692,column:12},end:{line:692,column:52}},"197":{start:{line:693,column:12},end:{line:693,column:30}},"198":{start:{line:695,column:8},end:{line:699,column:9}},"199":{start:{line:696,column:12},end:{line:696,column:67}},"200":{start:{line:697,column:14},end:{line:699,column:9}},"201":{start:{line:698,column:12},end:{line:698,column:24}},"202":{start:{line:700,column:8},end:{line:700,column:23}},"203":{start:{line:706,column:19},end:{line:706,column:76}},"204":{start:{line:707,column:8},end:{line:709,column:9}},"205":{start:{line:708,column:12},end:{line:708,column:24}},"206":{start:{line:710,column:29},end:{line:710,column:62}},"207":{start:{line:711,column:8},end:{line:711,column:42}},"208":{start:{line:720,column:8},end:{line:722,column:9}},"209":{start:{line:721,column:12},end:{line:721,column:103}},"210":{start:{line:723,column:8},end:{line:725,column:9}},"211":{start:{line:724,column:12},end:{line:724,column:67}},"212":{start:{line:729,column:24},end:{line:729,column:48}},"213":{start:{line:732,column:20},end:{line:732,column:83}},"214":{start:{line:735,column:34},end:{line:735,column:75}},"215":{start:{line:736,column:8},end:{line:736,column:65}},"216":{start:{line:737,column:8},end:{line:739,column:9}},"217":{start:{line:738,column:12},end:{line:738,column:90}},"218":{start:{line:744,column:18},end:{line:744,column:19}},"219":{start:{line:745,column:20},end:{line:745,column:22}},"220":{start:{line:746,column:20},end:{line:746,column:24}},"221":{start:{line:748,column:38},end:{line:748,column:82}},"222":{start:{line:749,column:29},end:{line:749,column:51}},"223":{start:{line:751,column:23},end:{line:751,column:25}},"224":{start:{line:753,column:28},end:{line:753,column:56}},"225":{start:{line:756,column:22},end:{line:756,column:24}},"226":{start:{line:757,column:20},end:{line:757,column:22}},"227":{start:{line:758,column:22},end:{line:758,column:24}},"228":{start:{line:759,column:29},end:{line:759,column:31}},"229":{start:{line:761,column:34},end:{line:761,column:36}},"230":{start:{line:762,column:25},end:{line:762,column:27}},"231":{start:{line:763,column:33},end:{line:763,column:35}},"232":{start:{line:764,column:33},end:{line:764,column:35}},"233":{start:{line:766,column:31},end:{line:766,column:33}},"234":{start:{line:767,column:59},end:{line:767,column:61}},"235":{start:{line:768,column:36},end:{line:768,column:38}},"236":{start:{line:769,column:36},end:{line:769,column:38}},"237":{start:{line:770,column:69},end:{line:770,column:71}},"238":{start:{line:771,column:48},end:{line:771,column:50}},"239":{start:{line:772,column:37},end:{line:772,column:39}},"240":{start:{line:773,column:30},end:{line:773,column:32}},"241":{start:{line:774,column:29},end:{line:774,column:31}},"242":{start:{line:775,column:33},end:{line:775,column:35}},"243":{start:{line:776,column:25},end:{line:776,column:27}},"244":{start:{line:777,column:33},end:{line:777,column:36}},"245":{start:{line:780,column:41},end:{line:780,column:43}},"246":{start:{line:781,column:45},end:{line:781,column:47}},"247":{start:{line:782,column:30},end:{line:782,column:32}},"248":{start:{line:783,column:35},end:{line:783,column:37}},"249":{start:{line:784,column:34},end:{line:784,column:36}},"250":{start:{line:785,column:39},end:{line:785,column:41}},"251":{start:{line:786,column:43},end:{line:786,column:45}},"252":{start:{line:787,column:33},end:{line:787,column:35}},"253":{start:{line:788,column:43},end:{line:788,column:45}},"254":{start:{line:789,column:44},end:{line:789,column:46}},"255":{start:{line:790,column:32},end:{line:790,column:34}},"256":{start:{line:791,column:42},end:{line:791,column:44}},"257":{start:{line:792,column:35},end:{line:792,column:37}},"258":{start:{line:793,column:33},end:{line:793,column:35}},"259":{start:{line:794,column:37},end:{line:794,column:39}},"260":{start:{line:795,column:34},end:{line:795,column:36}},"261":{start:{line:796,column:39},end:{line:796,column:41}},"262":{start:{line:797,column:51},end:{line:797,column:53}},"263":{start:{line:798,column:35},end:{line:798,column:37}},"264":{start:{line:799,column:36},end:{line:799,column:38}},"265":{start:{line:800,column:49},end:{line:800,column:51}},"266":{start:{line:801,column:44},end:{line:801,column:46}},"267":{start:{line:802,column:37},end:{line:802,column:39}},"268":{start:{line:803,column:38},end:{line:803,column:40}},"269":{start:{line:804,column:41},end:{line:804,column:43}},"270":{start:{line:805,column:51},end:{line:805,column:53}},"271":{start:{line:806,column:34},end:{line:806,column:36}},"272":{start:{line:807,column:30},end:{line:807,column:32}},"273":{start:{line:808,column:38},end:{line:808,column:40}},"274":{start:{line:809,column:42},end:{line:809,column:44}},"275":{start:{line:810,column:34},end:{line:810,column:48}},"276":{start:{line:811,column:38},end:{line:811,column:40}},"277":{start:{line:812,column:24},end:{line:812,column:29}},"278":{start:{line:813,column:33},end:{line:813,column:35}},"279":{start:{line:814,column:34},end:{line:814,column:36}},"280":{start:{line:815,column:36},end:{line:815,column:38}},"281":{start:{line:816,column:37},end:{line:816,column:39}},"282":{start:{line:819,column:18},end:{line:897,column:9}},"283":{start:{line:862,column:20},end:{line:864,column:21}},"284":{start:{line:863,column:24},end:{line:863,column:32}},"285":{start:{line:865,column:20},end:{line:865,column:30}},"286":{start:{line:899,column:28},end:{line:899,column:60}},"287":{start:{line:902,column:8},end:{line:902,column:47}},"288":{start:{line:903,column:8},end:{line:903,column:46}},"289":{start:{line:908,column:8},end:{line:908,column:51}},"290":{start:{line:909,column:8},end:{line:909,column:18}},"291":{start:{line:917,column:8},end:{line:919,column:9}},"292":{start:{line:918,column:12},end:{line:918,column:102}},"293":{start:{line:922,column:18},end:{line:922,column:79}},"294":{start:{line:928,column:8},end:{line:930,column:9}},"295":{start:{line:929,column:12},end:{line:929,column:125}},"296":{start:{line:932,column:8},end:{line:934,column:9}},"297":{start:{line:933,column:12},end:{line:933,column:74}},"298":{start:{line:937,column:8},end:{line:939,column:9}},"299":{start:{line:938,column:12},end:{line:938,column:64}},"300":{start:{line:942,column:8},end:{line:942,column:26}},"301":{start:{line:943,column:8},end:{line:943,column:54}},"302":{start:{line:946,column:8},end:{line:946,column:46}},"303":{start:{line:948,column:28},end:{line:948,column:60}},"304":{start:{line:951,column:8},end:{line:951,column:47}},"305":{start:{line:952,column:8},end:{line:952,column:45}},"306":{start:{line:953,column:8},end:{line:953,column:55}},"307":{start:{line:960,column:24},end:{line:960,column:48}},"308":{start:{line:961,column:23},end:{line:961,column:53}},"309":{start:{line:963,column:8},end:{line:965,column:9}},"310":{start:{line:964,column:12},end:{line:964,column:71}},"311":{start:{line:966,column:18},end:{line:966,column:49}},"312":{start:{line:967,column:8},end:{line:969,column:9}},"313":{start:{line:968,column:9},end:{line:968,column:89}},"314":{start:{line:973,column:8},end:{line:990,column:9}},"315":{start:{line:974,column:12},end:{line:978,column:13}},"316":{start:{line:979,column:12},end:{line:979,column:33}},"317":{start:{line:980,column:12},end:{line:980,column:40}},"318":{start:{line:981,column:12},end:{line:981,column:78}},"319":{start:{line:982,column:12},end:{line:982,column:83}},"320":{start:{line:984,column:12},end:{line:984,column:75}},"321":{start:{line:985,column:12},end:{line:985,column:33}},"322":{start:{line:986,column:12},end:{line:986,column:40}},"323":{start:{line:987,column:12},end:{line:987,column:52}},"324":{start:{line:988,column:12},end:{line:988,column:77}},"325":{start:{line:989,column:12},end:{line:989,column:83}},"326":{start:{line:991,column:24},end:{line:991,column:57}},"327":{start:{line:992,column:8},end:{line:992,column:47}},"328":{start:{line:993,column:8},end:{line:993,column:49}},"329":{start:{line:1021,column:8},end:{line:1023,column:9}},"330":{start:{line:1022,column:12},end:{line:1022,column:102}},"331":{start:{line:1026,column:18},end:{line:1026,column:79}},"332":{start:{line:1028,column:8},end:{line:1030,column:9}},"333":{start:{line:1029,column:12},end:{line:1029,column:60}},"334":{start:{line:1032,column:8},end:{line:1038,column:9}},"335":{start:{line:1033,column:12},end:{line:1033,column:58}},"336":{start:{line:1034,column:14},end:{line:1038,column:9}},"337":{start:{line:1034,column:81},end:{line:1034,column:120}},"338":{start:{line:1035,column:12},end:{line:1035,column:86}},"339":{start:{line:1037,column:12},end:{line:1037,column:65}},"340":{start:{line:1039,column:8},end:{line:1039,column:46}},"341":{start:{line:1040,column:8},end:{line:1040,column:40}},"342":{start:{line:1041,column:8},end:{line:1041,column:42}},"343":{start:{line:1042,column:8},end:{line:1042,column:54}},"344":{start:{line:1044,column:28},end:{line:1044,column:60}},"345":{start:{line:1045,column:8},end:{line:1045,column:61}},"346":{start:{line:1046,column:8},end:{line:1046,column:54}},"347":{start:{line:1047,column:8},end:{line:1047,column:47}},"348":{start:{line:1061,column:18},end:{line:1061,column:38}},"349":{start:{line:1063,column:28},end:{line:1063,column:56}},"350":{start:{line:1065,column:8},end:{line:1074,column:9}},"351":{start:{line:1066,column:12},end:{line:1071,column:14}},"352":{start:{line:1072,column:32},end:{line:1072,column:66}},"353":{start:{line:1073,column:12},end:{line:1073,column:54}},"354":{start:{line:1075,column:8},end:{line:1075,column:52}},"355":{start:{line:1076,column:8},end:{line:1076,column:22}},"356":{start:{line:1077,column:8},end:{line:1077,column:55}},"357":{start:{line:1078,column:8},end:{line:1078,column:61}},"358":{start:{line:1079,column:8},end:{line:1079,column:49}},"359":{start:{line:1080,column:27},end:{line:1080,column:61}},"360":{start:{line:1081,column:8},end:{line:1081,column:49}},"361":{start:{line:1097,column:20},end:{line:1097,column:52}},"362":{start:{line:1099,column:18},end:{line:1099,column:79}},"363":{start:{line:1100,column:8},end:{line:1102,column:9}},"364":{start:{line:1101,column:12},end:{line:1101,column:84}},"365":{start:{line:1103,column:21},end:{line:1103,column:50}},"366":{start:{line:1105,column:8},end:{line:1105,column:46}},"367":{start:{line:1106,column:8},end:{line:1108,column:9}},"368":{start:{line:1107,column:12},end:{line:1107,column:60}},"369":{start:{line:1110,column:8},end:{line:1112,column:9}},"370":{start:{line:1111,column:12},end:{line:1111,column:74}},"371":{start:{line:1115,column:8},end:{line:1117,column:9}},"372":{start:{line:1116,column:12},end:{line:1116,column:37}},"373":{start:{line:1119,column:8},end:{line:1119,column:43}},"374":{start:{line:1120,column:8},end:{line:1120,column:41}},"375":{start:{line:1121,column:8},end:{line:1121,column:43}},"376":{start:{line:1122,column:8},end:{line:1122,column:44}},"377":{start:{line:1123,column:8},end:{line:1123,column:33}},"378":{start:{line:1124,column:25},end:{line:1124,column:57}},"379":{start:{line:1125,column:8},end:{line:1125,column:53}},"380":{start:{line:1126,column:8},end:{line:1126,column:47}},"381":{start:{line:1127,column:8},end:{line:1127,column:45}},"382":{start:{line:1136,column:29},end:{line:1136,column:47}},"383":{start:{line:1137,column:29},end:{line:1137,column:49}},"384":{start:{line:1138,column:29},end:{line:1138,column:47}},"385":{start:{line:1140,column:29},end:{line:1140,column:75}},"386":{start:{line:1142,column:29},end:{line:1142,column:98}},"387":{start:{line:1142,column:56},end:{line:1142,column:97}},"388":{start:{line:1143,column:8},end:{line:1143,column:36}},"389":{start:{line:1149,column:8},end:{line:1151,column:9}},"390":{start:{line:1150,column:12},end:{line:1150,column:74}},"391":{start:{line:1156,column:22},end:{line:1156,column:54}},"392":{start:{line:1157,column:27},end:{line:1157,column:106}},"393":{start:{line:1158,column:25},end:{line:1158,column:62}},"394":{start:{line:1159,column:20},end:{line:1159,column:53}},"395":{start:{line:1161,column:8},end:{line:1163,column:9}},"396":{start:{line:1162,column:12},end:{line:1162,column:164}},"397":{start:{line:1166,column:20},end:{line:1166,column:82}},"398":{start:{line:1168,column:8},end:{line:1170,column:9}},"399":{start:{line:1169,column:12},end:{line:1169,column:79}},"400":{start:{line:1174,column:8},end:{line:1176,column:9}},"401":{start:{line:1175,column:12},end:{line:1175,column:74}},"402":{start:{line:1179,column:26},end:{line:1179,column:40}},"403":{start:{line:1180,column:23},end:{line:1180,column:37}},"404":{start:{line:1181,column:35},end:{line:1181,column:88}},"405":{start:{line:1183,column:25},end:{line:1184,column:9}},"406":{start:{line:1183,column:52},end:{line:1183,column:112}},"407":{start:{line:1188,column:24},end:{line:1188,column:60}},"408":{start:{line:1189,column:8},end:{line:1191,column:9}},"409":{start:{line:1190,column:12},end:{line:1190,column:50}},"410":{start:{line:1195,column:26},end:{line:1207,column:9}},"411":{start:{line:1197,column:29},end:{line:1197,column:88}},"412":{start:{line:1199,column:32},end:{line:1199,column:51}},"413":{start:{line:1200,column:16},end:{line:1200,column:32}},"414":{start:{line:1203,column:29},end:{line:1203,column:164}},"415":{start:{line:1204,column:32},end:{line:1204,column:51}},"416":{start:{line:1205,column:16},end:{line:1205,column:32}},"417":{start:{line:1209,column:8},end:{line:1211,column:9}},"418":{start:{line:1210,column:12},end:{line:1210,column:63}},"419":{start:{line:1216,column:8},end:{line:1222,column:9}},"420":{start:{line:1217,column:12},end:{line:1217,column:124}},"421":{start:{line:1218,column:14},end:{line:1222,column:9}},"422":{start:{line:1219,column:12},end:{line:1219,column:187}},"423":{start:{line:1221,column:12},end:{line:1221,column:76}},"424":{start:{line:1225,column:22},end:{line:1225,column:46}},"425":{start:{line:1226,column:22},end:{line:1226,column:34}},"426":{start:{line:1227,column:8},end:{line:1229,column:9}},"427":{start:{line:1228,column:12},end:{line:1228,column:82}},"428":{start:{line:1231,column:8},end:{line:1231,column:44}},"429":{start:{line:1232,column:8},end:{line:1232,column:42}},"430":{start:{line:1233,column:8},end:{line:1233,column:45}},"431":{start:{line:1234,column:8},end:{line:1234,column:45}},"432":{start:{line:1235,column:8},end:{line:1235,column:34}},"433":{start:{line:1240,column:32},end:{line:1240,column:72}},"434":{start:{line:1241,column:8},end:{line:1243,column:9}},"435":{start:{line:1242,column:12},end:{line:1242,column:31}},"436":{start:{line:1246,column:8},end:{line:1246,column:65}},"437":{start:{line:1247,column:8},end:{line:1247,column:79}},"438":{start:{line:1265,column:25},end:{line:1265,column:57}},"439":{start:{line:1266,column:8},end:{line:1268,column:9}},"440":{start:{line:1267,column:12},end:{line:1267,column:78}},"441":{start:{line:1269,column:20},end:{line:1269,column:53}},"442":{start:{line:1271,column:22},end:{line:1271,column:41}},"443":{start:{line:1273,column:24},end:{line:1273,column:48}},"444":{start:{line:1275,column:19},end:{line:1275,column:93}},"445":{start:{line:1276,column:19},end:{line:1276,column:97}},"446":{start:{line:1278,column:8},end:{line:1278,column:19}},"447":{start:{line:1279,column:20},end:{line:1287,column:9}},"448":{start:{line:1288,column:8},end:{line:1288,column:20}},"449":{start:{line:1289,column:20},end:{line:1297,column:9}},"450":{start:{line:1299,column:8},end:{line:1299,column:77}},"451":{start:{line:1300,column:8},end:{line:1302,column:9}},"452":{start:{line:1301,column:12},end:{line:1301,column:81}},"453":{start:{line:1303,column:8},end:{line:1303,column:45}},"454":{start:{line:1353,column:8},end:{line:1353,column:41}},"455":{start:{line:1357,column:8},end:{line:1357,column:43}},"456":{start:{line:1362,column:23},end:{line:1362,column:76}},"457":{start:{line:1363,column:20},end:{line:1363,column:21}},"458":{start:{line:1366,column:8},end:{line:1369,column:13}},"459":{start:{line:1367,column:12},end:{line:1367,column:52}},"460":{start:{line:1368,column:12},end:{line:1368,column:30}},"461":{start:{line:1370,column:8},end:{line:1374,column:9}},"462":{start:{line:1371,column:12},end:{line:1371,column:45}},"463":{start:{line:1372,column:14},end:{line:1374,column:9}},"464":{start:{line:1373,column:12},end:{line:1373,column:24}},"465":{start:{line:1375,column:8},end:{line:1375,column:23}},"466":{start:{line:1380,column:22},end:{line:1380,column:36}},"467":{start:{line:1381,column:8},end:{line:1383,column:9}},"468":{start:{line:1382,column:12},end:{line:1382,column:100}},"469":{start:{line:1384,column:8},end:{line:1384,column:38}},"470":{start:{line:1385,column:16},end:{line:1385,column:57}},"471":{start:{line:1386,column:19},end:{line:1386,column:26}},"472":{start:{line:1387,column:19},end:{line:1387,column:29}},"473":{start:{line:1388,column:8},end:{line:1392,column:9}},"474":{start:{line:1388,column:19},end:{line:1388,column:20}},"475":{start:{line:1389,column:12},end:{line:1391,column:13}},"476":{start:{line:1390,column:16},end:{line:1390,column:92}},"477":{start:{line:1393,column:8},end:{line:1418,column:9}},"478":{start:{line:1395,column:16},end:{line:1397,column:17}},"479":{start:{line:1396,column:20},end:{line:1396,column:108}},"480":{start:{line:1399,column:16},end:{line:1401,column:17}},"481":{start:{line:1400,column:20},end:{line:1400,column:108}},"482":{start:{line:1403,column:16},end:{line:1405,column:17}},"483":{start:{line:1404,column:20},end:{line:1404,column:108}},"484":{start:{line:1407,column:16},end:{line:1409,column:17}},"485":{start:{line:1408,column:20},end:{line:1408,column:108}},"486":{start:{line:1411,column:16},end:{line:1413,column:17}},"487":{start:{line:1412,column:20},end:{line:1412,column:108}},"488":{start:{line:1415,column:16},end:{line:1417,column:17}},"489":{start:{line:1416,column:20},end:{line:1416,column:108}},"490":{start:{line:1422,column:18},end:{line:1422,column:45}},"491":{start:{line:1423,column:8},end:{line:1423,column:20}},"492":{start:{line:1432,column:23},end:{line:1432,column:72}},"493":{start:{line:1433,column:20},end:{line:1433,column:22}},"494":{start:{line:1434,column:8},end:{line:1437,column:13}},"495":{start:{line:1436,column:12},end:{line:1436,column:34}},"496":{start:{line:1438,column:8},end:{line:1438,column:30}},"497":{start:{line:1449,column:23},end:{line:1449,column:77}},"498":{start:{line:1450,column:20},end:{line:1450,column:21}},"499":{start:{line:1452,column:8},end:{line:1455,column:13}},"500":{start:{line:1453,column:12},end:{line:1453,column:52}},"501":{start:{line:1454,column:12},end:{line:1454,column:30}},"502":{start:{line:1456,column:8},end:{line:1460,column:9}},"503":{start:{line:1457,column:12},end:{line:1457,column:67}},"504":{start:{line:1458,column:14},end:{line:1460,column:9}},"505":{start:{line:1459,column:12},end:{line:1459,column:24}},"506":{start:{line:1461,column:8},end:{line:1461,column:23}},"507":{start:{line:1479,column:8},end:{line:1481,column:9}},"508":{start:{line:1480,column:12},end:{line:1480,column:53}},"509":{start:{line:1482,column:21},end:{line:1482,column:53}},"510":{start:{line:1484,column:24},end:{line:1484,column:48}},"511":{start:{line:1485,column:24},end:{line:1485,column:90}},"512":{start:{line:1487,column:18},end:{line:1494,column:9}},"513":{start:{line:1496,column:28},end:{line:1496,column:62}},"514":{start:{line:1497,column:8},end:{line:1497,column:55}},"515":{start:{line:1498,column:8},end:{line:1498,column:51}},"516":{start:{line:1499,column:8},end:{line:1499,column:47}},"517":{start:{line:1511,column:21},end:{line:1511,column:53}},"518":{start:{line:1513,column:24},end:{line:1513,column:48}},"519":{start:{line:1514,column:24},end:{line:1514,column:91}},"520":{start:{line:1516,column:18},end:{line:1522,column:9}},"521":{start:{line:1524,column:28},end:{line:1524,column:62}},"522":{start:{line:1525,column:8},end:{line:1525,column:55}},"523":{start:{line:1526,column:8},end:{line:1526,column:52}},"524":{start:{line:1527,column:8},end:{line:1527,column:47}},"525":{start:{line:1540,column:21},end:{line:1540,column:53}},"526":{start:{line:1542,column:23},end:{line:1542,column:88}},"527":{start:{line:1544,column:8},end:{line:1546,column:9}},"528":{start:{line:1545,column:12},end:{line:1545,column:89}},"529":{start:{line:1549,column:8},end:{line:1551,column:9}},"530":{start:{line:1550,column:12},end:{line:1550,column:51}},"531":{start:{line:1554,column:8},end:{line:1556,column:9}},"532":{start:{line:1555,column:12},end:{line:1555,column:99}},"533":{start:{line:1559,column:8},end:{line:1561,column:9}},"534":{start:{line:1560,column:12},end:{line:1560,column:76}},"535":{start:{line:1569,column:23},end:{line:1569,column:95}},"536":{start:{line:1570,column:25},end:{line:1570,column:65}},"537":{start:{line:1571,column:8},end:{line:1573,column:9}},"538":{start:{line:1572,column:12},end:{line:1572,column:85}},"539":{start:{line:1574,column:22},end:{line:1574,column:55}},"540":{start:{line:1577,column:8},end:{line:1579,column:9}},"541":{start:{line:1578,column:12},end:{line:1578,column:103}},"542":{start:{line:1582,column:8},end:{line:1582,column:28}},"543":{start:{line:1585,column:27},end:{line:1585,column:89}},"544":{start:{line:1588,column:8},end:{line:1590,column:9}},"545":{start:{line:1589,column:12},end:{line:1589,column:55}},"546":{start:{line:1592,column:8},end:{line:1594,column:9}},"547":{start:{line:1593,column:12},end:{line:1593,column:88}},"548":{start:{line:1595,column:8},end:{line:1597,column:9}},"549":{start:{line:1596,column:12},end:{line:1596,column:72}},"550":{start:{line:1600,column:22},end:{line:1604,column:9}},"551":{start:{line:1605,column:25},end:{line:1605,column:34}},"552":{start:{line:1606,column:27},end:{line:1606,column:63}},"553":{start:{line:1607,column:8},end:{line:1607,column:55}},"554":{start:{line:1608,column:8},end:{line:1608,column:45}},"555":{start:{line:1609,column:8},end:{line:1609,column:49}},"556":{start:{line:1610,column:8},end:{line:1610,column:50}},"557":{start:{line:1611,column:8},end:{line:1611,column:47}},"558":{start:{line:1616,column:25},end:{line:1616,column:57}},"559":{start:{line:1617,column:8},end:{line:1619,column:9}},"560":{start:{line:1618,column:12},end:{line:1618,column:93}},"561":{start:{line:1620,column:20},end:{line:1620,column:53}},"562":{start:{line:1622,column:28},end:{line:1622,column:63}},"563":{start:{line:1623,column:8},end:{line:1625,column:9}},"564":{start:{line:1624,column:12},end:{line:1624,column:95}},"565":{start:{line:1626,column:23},end:{line:1626,column:59}},"566":{start:{line:1628,column:24},end:{line:1628,column:48}},"567":{start:{line:1631,column:19},end:{line:1631,column:98}},"568":{start:{line:1632,column:19},end:{line:1632,column:101}},"569":{start:{line:1633,column:27},end:{line:1633,column:92}},"570":{start:{line:1636,column:28},end:{line:1636,column:57}},"571":{start:{line:1642,column:8},end:{line:1642,column:20}},"572":{start:{line:1643,column:8},end:{line:1652,column:10}},"573":{start:{line:1653,column:8},end:{line:1653,column:20}},"574":{start:{line:1654,column:8},end:{line:1662,column:10}},"575":{start:{line:1664,column:8},end:{line:1664,column:37}},"576":{start:{line:1665,column:8},end:{line:1665,column:35}},"577":{start:{line:1668,column:8},end:{line:1668,column:77}},"578":{start:{line:1669,column:8},end:{line:1669,column:87}},"579":{start:{line:1670,column:8},end:{line:1672,column:9}},"580":{start:{line:1671,column:12},end:{line:1671,column:81}},"581":{start:{line:1673,column:8},end:{line:1673,column:44}},"582":{start:{line:1674,column:8},end:{line:1674,column:47}},"583":{start:{line:1688,column:22},end:{line:1688,column:54}},"584":{start:{line:1689,column:25},end:{line:1689,column:59}},"585":{start:{line:1690,column:8},end:{line:1692,column:9}},"586":{start:{line:1691,column:12},end:{line:1691,column:59}},"587":{start:{line:1693,column:20},end:{line:1693,column:53}},"588":{start:{line:1696,column:23},end:{line:1696,column:73}},"589":{start:{line:1697,column:24},end:{line:1697,column:56}},"590":{start:{line:1698,column:8},end:{line:1700,column:9}},"591":{start:{line:1699,column:12},end:{line:1699,column:94}},"592":{start:{line:1701,column:19},end:{line:1701,column:51}},"593":{start:{line:1702,column:8},end:{line:1704,column:9}},"594":{start:{line:1703,column:12},end:{line:1703,column:74}},"595":{start:{line:1705,column:8},end:{line:1707,column:9}},"596":{start:{line:1706,column:12},end:{line:1706,column:81}},"597":{start:{line:1708,column:8},end:{line:1710,column:9}},"598":{start:{line:1709,column:12},end:{line:1709,column:46}},"599":{start:{line:1711,column:8},end:{line:1711,column:38}},"600":{start:{line:1713,column:8},end:{line:1713,column:73}},"601":{start:{line:1714,column:8},end:{line:1714,column:46}},"602":{start:{line:1722,column:22},end:{line:1722,column:54}},"603":{start:{line:1724,column:18},end:{line:1724,column:61}},"604":{start:{line:1725,column:20},end:{line:1730,column:9}},"605":{start:{line:1731,column:28},end:{line:1731,column:62}},"606":{start:{line:1732,column:8},end:{line:1732,column:50}},"607":{start:{line:1738,column:22},end:{line:1738,column:54}},"608":{start:{line:1741,column:27},end:{line:1741,column:60}},"609":{start:{line:1742,column:8},end:{line:1744,column:9}},"610":{start:{line:1743,column:12},end:{line:1743,column:58}},"611":{start:{line:1745,column:21},end:{line:1745,column:55}},"612":{start:{line:1746,column:21},end:{line:1746,column:36}},"613":{start:{line:1747,column:24},end:{line:1747,column:55}},"614":{start:{line:1748,column:8},end:{line:1750,column:9}},"615":{start:{line:1749,column:12},end:{line:1749,column:81}},"616":{start:{line:1751,column:19},end:{line:1751,column:51}},"617":{start:{line:1752,column:8},end:{line:1754,column:9}},"618":{start:{line:1753,column:12},end:{line:1753,column:67}},"619":{start:{line:1757,column:24},end:{line:1757,column:48}},"620":{start:{line:1758,column:18},end:{line:1758,column:83}},"621":{start:{line:1760,column:21},end:{line:1760,column:25}},"622":{start:{line:1761,column:21},end:{line:1761,column:31}},"623":{start:{line:1766,column:24},end:{line:1782,column:9}},"624":{start:{line:1783,column:8},end:{line:1783,column:59}},"625":{start:{line:1784,column:8},end:{line:1784,column:53}},"626":{start:{line:1785,column:8},end:{line:1785,column:48}},"627":{start:{line:1786,column:8},end:{line:1786,column:47}},"628":{start:{line:1794,column:8},end:{line:1794,column:46}},"629":{start:{line:1798,column:8},end:{line:1798,column:43}},"630":{start:{line:1803,column:22},end:{line:1803,column:36}},"631":{start:{line:1804,column:8},end:{line:1806,column:9}},"632":{start:{line:1805,column:12},end:{line:1805,column:100}},"633":{start:{line:1807,column:8},end:{line:1807,column:38}},"634":{start:{line:1808,column:16},end:{line:1808,column:51}},"635":{start:{line:1809,column:19},end:{line:1809,column:26}},"636":{start:{line:1810,column:19},end:{line:1810,column:29}},"637":{start:{line:1811,column:8},end:{line:1815,column:9}},"638":{start:{line:1811,column:19},end:{line:1811,column:20}},"639":{start:{line:1812,column:12},end:{line:1814,column:13}},"640":{start:{line:1813,column:16},end:{line:1813,column:92}},"641":{start:{line:1816,column:8},end:{line:1833,column:9}},"642":{start:{line:1818,column:16},end:{line:1820,column:17}},"643":{start:{line:1819,column:20},end:{line:1819,column:108}},"644":{start:{line:1822,column:16},end:{line:1824,column:17}},"645":{start:{line:1823,column:20},end:{line:1823,column:108}},"646":{start:{line:1826,column:16},end:{line:1828,column:17}},"647":{start:{line:1827,column:20},end:{line:1827,column:108}},"648":{start:{line:1830,column:16},end:{line:1832,column:17}},"649":{start:{line:1831,column:20},end:{line:1831,column:108}},"650":{start:{line:1837,column:18},end:{line:1837,column:45}},"651":{start:{line:1838,column:8},end:{line:1838,column:20}},"652":{start:{line:1845,column:23},end:{line:1845,column:76}},"653":{start:{line:1846,column:20},end:{line:1846,column:21}},"654":{start:{line:1849,column:8},end:{line:1852,column:13}},"655":{start:{line:1850,column:12},end:{line:1850,column:52}},"656":{start:{line:1851,column:12},end:{line:1851,column:30}},"657":{start:{line:1853,column:8},end:{line:1857,column:9}},"658":{start:{line:1854,column:12},end:{line:1854,column:89}},"659":{start:{line:1855,column:14},end:{line:1857,column:9}},"660":{start:{line:1856,column:12},end:{line:1856,column:24}},"661":{start:{line:1858,column:8},end:{line:1858,column:23}},"662":{start:{line:1863,column:24},end:{line:1863,column:48}},"663":{start:{line:1865,column:19},end:{line:1865,column:84}},"664":{start:{line:1867,column:8},end:{line:1869,column:9}},"665":{start:{line:1868,column:12},end:{line:1868,column:44}},"666":{start:{line:1871,column:19},end:{line:1871,column:23}},"667":{start:{line:1872,column:24},end:{line:1887,column:9}},"668":{start:{line:1889,column:30},end:{line:1889,column:68}},"669":{start:{line:1890,column:8},end:{line:1890,column:54}},"670":{start:{line:1895,column:22},end:{line:1895,column:54}},"671":{start:{line:1896,column:23},end:{line:1896,column:83}},"672":{start:{line:1898,column:23},end:{line:1898,column:25}},"673":{start:{line:1899,column:20},end:{line:1899,column:21}},"674":{start:{line:1901,column:8},end:{line:1911,column:9}},"675":{start:{line:1902,column:12},end:{line:1902,column:53}},"676":{start:{line:1903,column:12},end:{line:1903,column:42}},"677":{start:{line:1904,column:12},end:{line:1907,column:13}},"678":{start:{line:1905,column:16},end:{line:1905,column:52}},"679":{start:{line:1906,column:16},end:{line:1906,column:39}},"680":{start:{line:1908,column:12},end:{line:1910,column:13}},"681":{start:{line:1909,column:16},end:{line:1909,column:21}},"682":{start:{line:1912,column:8},end:{line:1915,column:9}},"683":{start:{line:1913,column:12},end:{line:1913,column:55}},"684":{start:{line:1914,column:12},end:{line:1914,column:18}},"685":{start:{line:1916,column:8},end:{line:1916,column:65}},"686":{start:{line:1928,column:22},end:{line:1928,column:54}},"687":{start:{line:1929,column:25},end:{line:1929,column:57}},"688":{start:{line:1930,column:8},end:{line:1932,column:9}},"689":{start:{line:1931,column:12},end:{line:1931,column:93}},"690":{start:{line:1933,column:20},end:{line:1933,column:53}},"691":{start:{line:1935,column:8},end:{line:1937,column:9}},"692":{start:{line:1936,column:12},end:{line:1936,column:99}},"693":{start:{line:1939,column:8},end:{line:1941,column:9}},"694":{start:{line:1940,column:12},end:{line:1940,column:71}},"695":{start:{line:1943,column:22},end:{line:1943,column:41}},"696":{start:{line:1945,column:24},end:{line:1945,column:48}},"697":{start:{line:1946,column:19},end:{line:1946,column:93}},"698":{start:{line:1947,column:19},end:{line:1947,column:93}},"699":{start:{line:1950,column:8},end:{line:1950,column:19}},"700":{start:{line:1951,column:20},end:{line:1959,column:9}},"701":{start:{line:1960,column:8},end:{line:1960,column:20}},"702":{start:{line:1961,column:20},end:{line:1969,column:9}},"703":{start:{line:1971,column:8},end:{line:1971,column:45}},"704":{start:{line:1972,column:8},end:{line:1972,column:77}},"705":{start:{line:1973,column:8},end:{line:1975,column:9}},"706":{start:{line:1974,column:12},end:{line:1974,column:81}},"707":{start:{line:1976,column:8},end:{line:1976,column:23}},"708":{start:{line:1981,column:22},end:{line:1981,column:54}},"709":{start:{line:1982,column:24},end:{line:1982,column:55}},"710":{start:{line:1983,column:8},end:{line:1985,column:9}},"711":{start:{line:1984,column:12},end:{line:1984,column:91}},"712":{start:{line:1986,column:19},end:{line:1986,column:57}},"713":{start:{line:1988,column:8},end:{line:1990,column:9}},"714":{start:{line:1989,column:12},end:{line:1989,column:104}},"715":{start:{line:1991,column:8},end:{line:1993,column:9}},"716":{start:{line:1992,column:12},end:{line:1992,column:80}},"717":{start:{line:1995,column:22},end:{line:1995,column:40}},"718":{start:{line:1997,column:24},end:{line:1997,column:42}},"719":{start:{line:1998,column:19},end:{line:1998,column:88}},"720":{start:{line:2000,column:8},end:{line:2000,column:19}},"721":{start:{line:2001,column:8},end:{line:2001,column:27}},"722":{start:{line:2003,column:20},end:{line:2019,column:9}},"723":{start:{line:2021,column:8},end:{line:2021,column:75}},"724":{start:{line:2022,column:8},end:{line:2044,column:9}},"725":{start:{line:2023,column:23},end:{line:2023,column:88}},"726":{start:{line:2024,column:12},end:{line:2024,column:24}},"727":{start:{line:2025,column:12},end:{line:2025,column:31}},"728":{start:{line:2026,column:24},end:{line:2042,column:13}},"729":{start:{line:2043,column:12},end:{line:2043,column:79}},"730":{start:{line:2045,column:8},end:{line:2045,column:44}},"731":{start:{line:2046,column:8},end:{line:2046,column:23}},"732":{start:{line:2052,column:8},end:{line:2052,column:217}},"733":{start:{line:2052,column:39},end:{line:2052,column:215}},"734":{start:{line:2053,column:8},end:{line:2053,column:120}},"735":{start:{line:2053,column:39},end:{line:2053,column:118}},"736":{start:{line:2054,column:8},end:{line:2054,column:115}},"737":{start:{line:2054,column:39},end:{line:2054,column:113}},"738":{start:{line:2055,column:8},end:{line:2055,column:25}},"739":{start:{line:2061,column:8},end:{line:2061,column:217}},"740":{start:{line:2061,column:39},end:{line:2061,column:215}},"741":{start:{line:2062,column:8},end:{line:2062,column:120}},"742":{start:{line:2062,column:39},end:{line:2062,column:118}},"743":{start:{line:2063,column:8},end:{line:2063,column:115}},"744":{start:{line:2063,column:39},end:{line:2063,column:113}},"745":{start:{line:2064,column:8},end:{line:2064,column:25}},"746":{start:{line:2070,column:8},end:{line:2070,column:41}},"747":{start:{line:2071,column:8},end:{line:2071,column:32}},"748":{start:{line:2072,column:8},end:{line:2072,column:34}},"749":{start:{line:2073,column:8},end:{line:2075,column:9}},"750":{start:{line:2074,column:12},end:{line:2074,column:80}},"751":{start:{line:2076,column:22},end:{line:2076,column:54}},"752":{start:{line:2079,column:29},end:{line:2079,column:65}},"753":{start:{line:2081,column:8},end:{line:2085,column:9}},"754":{start:{line:2082,column:12},end:{line:2082,column:30}},"755":{start:{line:2084,column:12},end:{line:2084,column:60}},"756":{start:{line:2088,column:18},end:{line:2088,column:90}},"757":{start:{line:2089,column:8},end:{line:2089,column:35}},"758":{start:{line:2090,column:25},end:{line:2090,column:55}},"759":{start:{line:2093,column:8},end:{line:2095,column:9}},"760":{start:{line:2094,column:12},end:{line:2094,column:93}},"761":{start:{line:2096,column:21},end:{line:2096,column:54}},"762":{start:{line:2097,column:8},end:{line:2099,column:9}},"763":{start:{line:2098,column:12},end:{line:2098,column:111}},"764":{start:{line:2100,column:24},end:{line:2100,column:48}},"765":{start:{line:2101,column:22},end:{line:2101,column:79}},"766":{start:{line:2104,column:20},end:{line:2104,column:32}},"767":{start:{line:2106,column:25},end:{line:2119,column:9}},"768":{start:{line:2121,column:17},end:{line:2121,column:29}},"769":{start:{line:2122,column:17},end:{line:2122,column:29}},"770":{start:{line:2125,column:8},end:{line:2147,column:9}},"771":{start:{line:2126,column:22},end:{line:2126,column:64}},"772":{start:{line:2127,column:24},end:{line:2140,column:13}},"773":{start:{line:2141,column:12},end:{line:2141,column:37}},"774":{start:{line:2143,column:23},end:{line:2143,column:69}},"775":{start:{line:2144,column:12},end:{line:2144,column:42}},"776":{start:{line:2145,column:12},end:{line:2145,column:89}},"777":{start:{line:2146,column:12},end:{line:2146,column:18}},"778":{start:{line:2150,column:25},end:{line:2150,column:37}},"779":{start:{line:2152,column:30},end:{line:2152,column:32}},"780":{start:{line:2153,column:28},end:{line:2153,column:30}},"781":{start:{line:2154,column:20},end:{line:2154,column:41}},"782":{start:{line:2155,column:20},end:{line:2155,column:21}},"783":{start:{line:2156,column:24},end:{line:2156,column:25}},"784":{start:{line:2157,column:26},end:{line:2157,column:38}},"785":{start:{line:2158,column:26},end:{line:2158,column:27}},"786":{start:{line:2160,column:8},end:{line:2213,column:9}},"787":{start:{line:2161,column:12},end:{line:2212,column:13}},"788":{start:{line:2162,column:16},end:{line:2162,column:45}},"789":{start:{line:2163,column:16},end:{line:2163,column:45}},"790":{start:{line:2164,column:16},end:{line:2164,column:69}},"791":{start:{line:2165,column:16},end:{line:2165,column:69}},"792":{start:{line:2166,column:16},end:{line:2211,column:17}},"793":{start:{line:2167,column:35},end:{line:2167,column:70}},"794":{start:{line:2168,column:20},end:{line:2168,column:48}},"795":{start:{line:2169,column:20},end:{line:2169,column:56}},"796":{start:{line:2170,column:20},end:{line:2170,column:40}},"797":{start:{line:2171,column:20},end:{line:2171,column:42}},"798":{start:{line:2172,column:20},end:{line:2172,column:54}},"799":{start:{line:2173,column:20},end:{line:2173,column:59}},"800":{start:{line:2174,column:20},end:{line:2174,column:46}},"801":{start:{line:2175,column:20},end:{line:2175,column:56}},"802":{start:{line:2176,column:20},end:{line:2176,column:66}},"803":{start:{line:2177,column:20},end:{line:2177,column:59}},"804":{start:{line:2178,column:20},end:{line:2178,column:56}},"805":{start:{line:2179,column:20},end:{line:2179,column:46}},"806":{start:{line:2180,column:20},end:{line:2180,column:74}},"807":{start:{line:2181,column:20},end:{line:2181,column:30}},"808":{start:{line:2182,column:20},end:{line:2182,column:25}},"809":{start:{line:2185,column:20},end:{line:2210,column:21}},"810":{start:{line:2187,column:24},end:{line:2187,column:55}},"811":{start:{line:2188,column:24},end:{line:2188,column:43}},"812":{start:{line:2189,column:24},end:{line:2189,column:47}},"813":{start:{line:2190,column:24},end:{line:2190,column:58}},"814":{start:{line:2191,column:24},end:{line:2191,column:63}},"815":{start:{line:2192,column:24},end:{line:2192,column:50}},"816":{start:{line:2193,column:24},end:{line:2193,column:60}},"817":{start:{line:2194,column:24},end:{line:2194,column:78}},"818":{start:{line:2195,column:27},end:{line:2210,column:21}},"819":{start:{line:2198,column:24},end:{line:2198,column:44}},"820":{start:{line:2199,column:24},end:{line:2199,column:46}},"821":{start:{line:2200,column:24},end:{line:2200,column:50}},"822":{start:{line:2201,column:24},end:{line:2201,column:58}},"823":{start:{line:2202,column:24},end:{line:2202,column:58}},"824":{start:{line:2203,column:24},end:{line:2203,column:63}},"825":{start:{line:2204,column:24},end:{line:2204,column:60}},"826":{start:{line:2205,column:24},end:{line:2205,column:50}},"827":{start:{line:2206,column:24},end:{line:2206,column:78}},"828":{start:{line:2207,column:24},end:{line:2207,column:34}},"829":{start:{line:2209,column:24},end:{line:2209,column:29}},"830":{start:{line:2214,column:8},end:{line:2216,column:9}},"831":{start:{line:2215,column:12},end:{line:2215,column:92}},"832":{start:{line:2219,column:18},end:{line:2219,column:60}},"833":{start:{line:2220,column:8},end:{line:2240,column:9}},"834":{start:{line:2222,column:12},end:{line:2222,column:39}},"835":{start:{line:2223,column:12},end:{line:2223,column:40}},"836":{start:{line:2224,column:12},end:{line:2224,column:45}},"837":{start:{line:2225,column:12},end:{line:2225,column:61}},"838":{start:{line:2226,column:12},end:{line:2226,column:54}},"839":{start:{line:2227,column:14},end:{line:2240,column:9}},"840":{start:{line:2229,column:12},end:{line:2229,column:39}},"841":{start:{line:2230,column:12},end:{line:2230,column:41}},"842":{start:{line:2231,column:12},end:{line:2231,column:44}},"843":{start:{line:2232,column:12},end:{line:2232,column:69}},"844":{start:{line:2233,column:12},end:{line:2233,column:42}},"845":{start:{line:2234,column:12},end:{line:2234,column:54}},"846":{start:{line:2237,column:12},end:{line:2237,column:39}},"847":{start:{line:2238,column:12},end:{line:2238,column:41}},"848":{start:{line:2239,column:12},end:{line:2239,column:44}},"849":{start:{line:2241,column:8},end:{line:2241,column:40}},"850":{start:{line:2243,column:22},end:{line:2243,column:68}},"851":{start:{line:2244,column:22},end:{line:2244,column:68}},"852":{start:{line:2245,column:8},end:{line:2245,column:36}},"853":{start:{line:2247,column:8},end:{line:2247,column:85}},"854":{start:{line:2248,column:8},end:{line:2257,column:9}},"855":{start:{line:2249,column:29},end:{line:2252,column:13}},"856":{start:{line:2253,column:28},end:{line:2253,column:67}},"857":{start:{line:2254,column:12},end:{line:2254,column:73}},"858":{start:{line:2255,column:12},end:{line:2255,column:49}},"859":{start:{line:2256,column:12},end:{line:2256,column:51}},"860":{start:{line:2263,column:8},end:{line:2263,column:41}},"861":{start:{line:2264,column:21},end:{line:2264,column:53}},"862":{start:{line:2265,column:8},end:{line:2265,column:32}},"863":{start:{line:2266,column:8},end:{line:2266,column:32}},"864":{start:{line:2267,column:8},end:{line:2267,column:34}},"865":{start:{line:2268,column:8},end:{line:2270,column:9}},"866":{start:{line:2269,column:12},end:{line:2269,column:79}},"867":{start:{line:2272,column:18},end:{line:2272,column:80}},"868":{start:{line:2273,column:8},end:{line:2273,column:34}},"869":{start:{line:2274,column:24},end:{line:2274,column:54}},"870":{start:{line:2277,column:8},end:{line:2279,column:9}},"871":{start:{line:2278,column:12},end:{line:2278,column:82}},"872":{start:{line:2280,column:19},end:{line:2280,column:51}},"873":{start:{line:2281,column:8},end:{line:2283,column:9}},"874":{start:{line:2282,column:12},end:{line:2282,column:108}},"875":{start:{line:2284,column:8},end:{line:2286,column:9}},"876":{start:{line:2285,column:12},end:{line:2285,column:64}},"877":{start:{line:2287,column:29},end:{line:2287,column:65}},"878":{start:{line:2289,column:8},end:{line:2293,column:9}},"879":{start:{line:2290,column:12},end:{line:2290,column:30}},"880":{start:{line:2292,column:12},end:{line:2292,column:60}},"881":{start:{line:2295,column:24},end:{line:2295,column:48}},"882":{start:{line:2296,column:22},end:{line:2296,column:79}},"883":{start:{line:2297,column:25},end:{line:2309,column:9}},"884":{start:{line:2311,column:17},end:{line:2311,column:29}},"885":{start:{line:2312,column:17},end:{line:2312,column:29}},"886":{start:{line:2315,column:8},end:{line:2336,column:9}},"887":{start:{line:2316,column:22},end:{line:2316,column:64}},"888":{start:{line:2317,column:24},end:{line:2329,column:13}},"889":{start:{line:2330,column:12},end:{line:2330,column:37}},"890":{start:{line:2332,column:21},end:{line:2332,column:67}},"891":{start:{line:2333,column:12},end:{line:2333,column:42}},"892":{start:{line:2334,column:12},end:{line:2334,column:88}},"893":{start:{line:2335,column:12},end:{line:2335,column:18}},"894":{start:{line:2338,column:27},end:{line:2338,column:39}},"895":{start:{line:2339,column:31},end:{line:2339,column:33}},"896":{start:{line:2340,column:28},end:{line:2340,column:30}},"897":{start:{line:2341,column:38},end:{line:2341,column:40}},"898":{start:{line:2342,column:20},end:{line:2342,column:41}},"899":{start:{line:2343,column:24},end:{line:2343,column:25}},"900":{start:{line:2344,column:20},end:{line:2344,column:21}},"901":{start:{line:2346,column:8},end:{line:2375,column:9}},"902":{start:{line:2347,column:12},end:{line:2374,column:13}},"903":{start:{line:2348,column:16},end:{line:2348,column:45}},"904":{start:{line:2349,column:16},end:{line:2349,column:45}},"905":{start:{line:2350,column:16},end:{line:2373,column:17}},"906":{start:{line:2351,column:20},end:{line:2351,column:39}},"907":{start:{line:2352,column:20},end:{line:2352,column:43}},"908":{start:{line:2353,column:20},end:{line:2353,column:51}},"909":{start:{line:2354,column:20},end:{line:2354,column:54}},"910":{start:{line:2355,column:20},end:{line:2355,column:54}},"911":{start:{line:2356,column:20},end:{line:2356,column:52}},"912":{start:{line:2357,column:20},end:{line:2357,column:46}},"913":{start:{line:2358,column:20},end:{line:2358,column:65}},"914":{start:{line:2359,column:20},end:{line:2359,column:74}},"915":{start:{line:2360,column:23},end:{line:2373,column:17}},"916":{start:{line:2361,column:20},end:{line:2361,column:40}},"917":{start:{line:2362,column:20},end:{line:2362,column:42}},"918":{start:{line:2363,column:20},end:{line:2363,column:46}},"919":{start:{line:2364,column:20},end:{line:2364,column:54}},"920":{start:{line:2365,column:20},end:{line:2365,column:54}},"921":{start:{line:2366,column:20},end:{line:2366,column:54}},"922":{start:{line:2367,column:20},end:{line:2367,column:52}},"923":{start:{line:2368,column:20},end:{line:2368,column:46}},"924":{start:{line:2369,column:20},end:{line:2369,column:73}},"925":{start:{line:2370,column:20},end:{line:2370,column:74}},"926":{start:{line:2371,column:20},end:{line:2371,column:30}},"927":{start:{line:2372,column:20},end:{line:2372,column:25}},"928":{start:{line:2377,column:18},end:{line:2377,column:60}},"929":{start:{line:2379,column:8},end:{line:2399,column:9}},"930":{start:{line:2381,column:12},end:{line:2381,column:39}},"931":{start:{line:2382,column:12},end:{line:2382,column:40}},"932":{start:{line:2383,column:12},end:{line:2383,column:45}},"933":{start:{line:2384,column:12},end:{line:2384,column:61}},"934":{start:{line:2385,column:12},end:{line:2385,column:54}},"935":{start:{line:2386,column:14},end:{line:2399,column:9}},"936":{start:{line:2388,column:12},end:{line:2388,column:39}},"937":{start:{line:2389,column:12},end:{line:2389,column:41}},"938":{start:{line:2390,column:12},end:{line:2390,column:44}},"939":{start:{line:2391,column:12},end:{line:2391,column:69}},"940":{start:{line:2392,column:12},end:{line:2392,column:42}},"941":{start:{line:2393,column:12},end:{line:2393,column:54}},"942":{start:{line:2396,column:12},end:{line:2396,column:39}},"943":{start:{line:2397,column:12},end:{line:2397,column:41}},"944":{start:{line:2398,column:12},end:{line:2398,column:45}},"945":{start:{line:2402,column:8},end:{line:2402,column:40}},"946":{start:{line:2405,column:20},end:{line:2405,column:66}},"947":{start:{line:2406,column:20},end:{line:2406,column:66}},"948":{start:{line:2407,column:8},end:{line:2407,column:36}},"949":{start:{line:2408,column:8},end:{line:2408,column:84}},"950":{start:{line:2410,column:8},end:{line:2420,column:9}},"951":{start:{line:2411,column:29},end:{line:2414,column:13}},"952":{start:{line:2415,column:28},end:{line:2415,column:67}},"953":{start:{line:2416,column:12},end:{line:2416,column:73}},"954":{start:{line:2418,column:12},end:{line:2418,column:49}},"955":{start:{line:2419,column:12},end:{line:2419,column:51}},"956":{start:{line:2425,column:8},end:{line:2425,column:32}},"957":{start:{line:2426,column:8},end:{line:2428,column:9}},"958":{start:{line:2427,column:12},end:{line:2427,column:64}},"959":{start:{line:2429,column:22},end:{line:2429,column:54}},"960":{start:{line:2431,column:18},end:{line:2431,column:80}},"961":{start:{line:2432,column:8},end:{line:2432,column:34}},"962":{start:{line:2433,column:24},end:{line:2433,column:54}},"963":{start:{line:2434,column:8},end:{line:2436,column:9}},"964":{start:{line:2435,column:12},end:{line:2435,column:83}},"965":{start:{line:2439,column:19},end:{line:2439,column:51}},"966":{start:{line:2440,column:8},end:{line:2442,column:9}},"967":{start:{line:2441,column:12},end:{line:2441,column:108}},"968":{start:{line:2443,column:8},end:{line:2445,column:9}},"969":{start:{line:2444,column:12},end:{line:2444,column:63}},"970":{start:{line:2447,column:29},end:{line:2447,column:65}},"971":{start:{line:2449,column:8},end:{line:2453,column:9}},"972":{start:{line:2450,column:12},end:{line:2450,column:30}},"973":{start:{line:2452,column:12},end:{line:2452,column:60}},"974":{start:{line:2454,column:24},end:{line:2454,column:48}},"975":{start:{line:2456,column:22},end:{line:2456,column:79}},"976":{start:{line:2457,column:25},end:{line:2470,column:9}},"977":{start:{line:2472,column:17},end:{line:2472,column:29}},"978":{start:{line:2473,column:17},end:{line:2473,column:29}},"979":{start:{line:2475,column:8},end:{line:2479,column:9}},"980":{start:{line:2478,column:12},end:{line:2478,column:59}},"981":{start:{line:2481,column:27},end:{line:2481,column:39}},"982":{start:{line:2482,column:31},end:{line:2482,column:33}},"983":{start:{line:2483,column:28},end:{line:2483,column:30}},"984":{start:{line:2484,column:38},end:{line:2484,column:40}},"985":{start:{line:2485,column:20},end:{line:2485,column:41}},"986":{start:{line:2486,column:24},end:{line:2486,column:25}},"987":{start:{line:2487,column:20},end:{line:2487,column:21}},"988":{start:{line:2489,column:8},end:{line:2530,column:9}},"989":{start:{line:2490,column:12},end:{line:2528,column:13}},"990":{start:{line:2491,column:16},end:{line:2491,column:45}},"991":{start:{line:2492,column:16},end:{line:2492,column:45}},"992":{start:{line:2493,column:16},end:{line:2527,column:17}},"993":{start:{line:2494,column:20},end:{line:2494,column:39}},"994":{start:{line:2495,column:20},end:{line:2495,column:43}},"995":{start:{line:2496,column:20},end:{line:2496,column:51}},"996":{start:{line:2497,column:20},end:{line:2497,column:54}},"997":{start:{line:2498,column:20},end:{line:2498,column:54}},"998":{start:{line:2499,column:20},end:{line:2499,column:52}},"999":{start:{line:2500,column:20},end:{line:2500,column:46}},"1000":{start:{line:2501,column:20},end:{line:2501,column:65}},"1001":{start:{line:2502,column:20},end:{line:2502,column:74}},"1002":{start:{line:2503,column:23},end:{line:2527,column:17}},"1003":{start:{line:2504,column:20},end:{line:2504,column:40}},"1004":{start:{line:2505,column:20},end:{line:2505,column:42}},"1005":{start:{line:2506,column:20},end:{line:2506,column:46}},"1006":{start:{line:2507,column:20},end:{line:2507,column:54}},"1007":{start:{line:2508,column:20},end:{line:2508,column:54}},"1008":{start:{line:2509,column:20},end:{line:2509,column:54}},"1009":{start:{line:2510,column:20},end:{line:2510,column:52}},"1010":{start:{line:2511,column:20},end:{line:2511,column:46}},"1011":{start:{line:2512,column:20},end:{line:2512,column:73}},"1012":{start:{line:2513,column:20},end:{line:2513,column:74}},"1013":{start:{line:2514,column:20},end:{line:2514,column:30}},"1014":{start:{line:2515,column:20},end:{line:2515,column:25}},"1015":{start:{line:2517,column:20},end:{line:2517,column:39}},"1016":{start:{line:2518,column:20},end:{line:2518,column:43}},"1017":{start:{line:2519,column:20},end:{line:2519,column:51}},"1018":{start:{line:2520,column:20},end:{line:2520,column:54}},"1019":{start:{line:2521,column:20},end:{line:2521,column:54}},"1020":{start:{line:2522,column:20},end:{line:2522,column:52}},"1021":{start:{line:2523,column:20},end:{line:2523,column:46}},"1022":{start:{line:2524,column:20},end:{line:2524,column:65}},"1023":{start:{line:2525,column:20},end:{line:2525,column:74}},"1024":{start:{line:2526,column:20},end:{line:2526,column:25}},"1025":{start:{line:2532,column:18},end:{line:2532,column:60}},"1026":{start:{line:2534,column:8},end:{line:2554,column:9}},"1027":{start:{line:2536,column:12},end:{line:2536,column:39}},"1028":{start:{line:2537,column:12},end:{line:2537,column:40}},"1029":{start:{line:2538,column:12},end:{line:2538,column:45}},"1030":{start:{line:2539,column:12},end:{line:2539,column:61}},"1031":{start:{line:2540,column:12},end:{line:2540,column:54}},"1032":{start:{line:2541,column:14},end:{line:2554,column:9}},"1033":{start:{line:2543,column:12},end:{line:2543,column:39}},"1034":{start:{line:2544,column:12},end:{line:2544,column:41}},"1035":{start:{line:2545,column:12},end:{line:2545,column:44}},"1036":{start:{line:2546,column:12},end:{line:2546,column:69}},"1037":{start:{line:2547,column:12},end:{line:2547,column:42}},"1038":{start:{line:2548,column:12},end:{line:2548,column:54}},"1039":{start:{line:2551,column:12},end:{line:2551,column:39}},"1040":{start:{line:2552,column:12},end:{line:2552,column:41}},"1041":{start:{line:2553,column:12},end:{line:2553,column:45}},"1042":{start:{line:2557,column:8},end:{line:2557,column:40}},"1043":{start:{line:2559,column:20},end:{line:2559,column:66}},"1044":{start:{line:2560,column:20},end:{line:2560,column:66}},"1045":{start:{line:2561,column:8},end:{line:2561,column:36}},"1046":{start:{line:2562,column:8},end:{line:2562,column:84}},"1047":{start:{line:2564,column:8},end:{line:2574,column:9}},"1048":{start:{line:2565,column:29},end:{line:2568,column:13}},"1049":{start:{line:2569,column:28},end:{line:2569,column:67}},"1050":{start:{line:2570,column:12},end:{line:2570,column:73}},"1051":{start:{line:2572,column:12},end:{line:2572,column:49}},"1052":{start:{line:2573,column:12},end:{line:2573,column:51}},"1053":{start:{line:2580,column:8},end:{line:2582,column:9}},"1054":{start:{line:2581,column:12},end:{line:2581,column:64}},"1055":{start:{line:2583,column:22},end:{line:2583,column:54}},"1056":{start:{line:2585,column:29},end:{line:2585,column:65}},"1057":{start:{line:2587,column:8},end:{line:2591,column:9}},"1058":{start:{line:2588,column:12},end:{line:2588,column:30}},"1059":{start:{line:2590,column:12},end:{line:2590,column:60}},"1060":{start:{line:2594,column:18},end:{line:2594,column:90}},"1061":{start:{line:2595,column:8},end:{line:2595,column:35}},"1062":{start:{line:2596,column:25},end:{line:2596,column:55}},"1063":{start:{line:2597,column:8},end:{line:2599,column:9}},"1064":{start:{line:2598,column:12},end:{line:2598,column:84}},"1065":{start:{line:2600,column:21},end:{line:2600,column:54}},"1066":{start:{line:2601,column:8},end:{line:2603,column:9}},"1067":{start:{line:2602,column:12},end:{line:2602,column:111}},"1068":{start:{line:2605,column:24},end:{line:2605,column:48}},"1069":{start:{line:2606,column:22},end:{line:2606,column:79}},"1070":{start:{line:2607,column:25},end:{line:2620,column:9}},"1071":{start:{line:2622,column:17},end:{line:2622,column:29}},"1072":{start:{line:2623,column:17},end:{line:2623,column:29}},"1073":{start:{line:2626,column:8},end:{line:2630,column:9}},"1074":{start:{line:2629,column:12},end:{line:2629,column:59}},"1075":{start:{line:2632,column:25},end:{line:2632,column:37}},"1076":{start:{line:2634,column:30},end:{line:2634,column:32}},"1077":{start:{line:2635,column:28},end:{line:2635,column:30}},"1078":{start:{line:2636,column:20},end:{line:2636,column:41}},"1079":{start:{line:2637,column:20},end:{line:2637,column:21}},"1080":{start:{line:2638,column:24},end:{line:2638,column:25}},"1081":{start:{line:2639,column:26},end:{line:2639,column:38}},"1082":{start:{line:2640,column:26},end:{line:2640,column:27}},"1083":{start:{line:2641,column:8},end:{line:2691,column:9}},"1084":{start:{line:2642,column:12},end:{line:2690,column:13}},"1085":{start:{line:2643,column:16},end:{line:2643,column:45}},"1086":{start:{line:2644,column:16},end:{line:2644,column:45}},"1087":{start:{line:2645,column:16},end:{line:2645,column:69}},"1088":{start:{line:2646,column:16},end:{line:2646,column:69}},"1089":{start:{line:2647,column:16},end:{line:2689,column:17}},"1090":{start:{line:2648,column:35},end:{line:2648,column:70}},"1091":{start:{line:2649,column:20},end:{line:2649,column:48}},"1092":{start:{line:2650,column:20},end:{line:2650,column:56}},"1093":{start:{line:2651,column:20},end:{line:2651,column:40}},"1094":{start:{line:2652,column:20},end:{line:2652,column:42}},"1095":{start:{line:2653,column:20},end:{line:2653,column:54}},"1096":{start:{line:2654,column:20},end:{line:2654,column:59}},"1097":{start:{line:2655,column:20},end:{line:2655,column:46}},"1098":{start:{line:2656,column:20},end:{line:2656,column:56}},"1099":{start:{line:2657,column:20},end:{line:2657,column:66}},"1100":{start:{line:2658,column:20},end:{line:2658,column:59}},"1101":{start:{line:2659,column:20},end:{line:2659,column:56}},"1102":{start:{line:2660,column:20},end:{line:2660,column:46}},"1103":{start:{line:2661,column:20},end:{line:2661,column:74}},"1104":{start:{line:2662,column:20},end:{line:2662,column:30}},"1105":{start:{line:2663,column:20},end:{line:2663,column:25}},"1106":{start:{line:2665,column:20},end:{line:2688,column:21}},"1107":{start:{line:2667,column:24},end:{line:2667,column:55}},"1108":{start:{line:2668,column:24},end:{line:2668,column:43}},"1109":{start:{line:2669,column:24},end:{line:2669,column:47}},"1110":{start:{line:2670,column:24},end:{line:2670,column:58}},"1111":{start:{line:2671,column:24},end:{line:2671,column:63}},"1112":{start:{line:2672,column:24},end:{line:2672,column:50}},"1113":{start:{line:2673,column:24},end:{line:2673,column:60}},"1114":{start:{line:2674,column:24},end:{line:2674,column:78}},"1115":{start:{line:2675,column:27},end:{line:2688,column:21}},"1116":{start:{line:2677,column:24},end:{line:2677,column:44}},"1117":{start:{line:2678,column:24},end:{line:2678,column:46}},"1118":{start:{line:2679,column:24},end:{line:2679,column:50}},"1119":{start:{line:2680,column:24},end:{line:2680,column:58}},"1120":{start:{line:2681,column:24},end:{line:2681,column:58}},"1121":{start:{line:2682,column:24},end:{line:2682,column:63}},"1122":{start:{line:2683,column:24},end:{line:2683,column:60}},"1123":{start:{line:2684,column:24},end:{line:2684,column:50}},"1124":{start:{line:2685,column:24},end:{line:2685,column:78}},"1125":{start:{line:2686,column:24},end:{line:2686,column:34}},"1126":{start:{line:2687,column:24},end:{line:2687,column:29}},"1127":{start:{line:2693,column:18},end:{line:2693,column:66}},"1128":{start:{line:2694,column:8},end:{line:2714,column:9}},"1129":{start:{line:2696,column:12},end:{line:2696,column:39}},"1130":{start:{line:2697,column:12},end:{line:2697,column:40}},"1131":{start:{line:2698,column:12},end:{line:2698,column:45}},"1132":{start:{line:2699,column:12},end:{line:2699,column:61}},"1133":{start:{line:2700,column:12},end:{line:2700,column:54}},"1134":{start:{line:2701,column:14},end:{line:2714,column:9}},"1135":{start:{line:2703,column:12},end:{line:2703,column:39}},"1136":{start:{line:2704,column:12},end:{line:2704,column:41}},"1137":{start:{line:2705,column:12},end:{line:2705,column:44}},"1138":{start:{line:2706,column:12},end:{line:2706,column:69}},"1139":{start:{line:2707,column:12},end:{line:2707,column:42}},"1140":{start:{line:2708,column:12},end:{line:2708,column:54}},"1141":{start:{line:2711,column:12},end:{line:2711,column:39}},"1142":{start:{line:2712,column:12},end:{line:2712,column:41}},"1143":{start:{line:2713,column:12},end:{line:2713,column:44}},"1144":{start:{line:2715,column:8},end:{line:2715,column:40}},"1145":{start:{line:2717,column:22},end:{line:2717,column:68}},"1146":{start:{line:2718,column:22},end:{line:2718,column:68}},"1147":{start:{line:2719,column:8},end:{line:2719,column:36}},"1148":{start:{line:2720,column:8},end:{line:2720,column:85}},"1149":{start:{line:2721,column:8},end:{line:2730,column:9}},"1150":{start:{line:2722,column:29},end:{line:2725,column:13}},"1151":{start:{line:2726,column:28},end:{line:2726,column:67}},"1152":{start:{line:2727,column:12},end:{line:2727,column:72}},"1153":{start:{line:2728,column:12},end:{line:2728,column:49}},"1154":{start:{line:2729,column:12},end:{line:2729,column:51}},"1155":{start:{line:2736,column:29},end:{line:2736,column:65}},"1156":{start:{line:2737,column:8},end:{line:2739,column:9}},"1157":{start:{line:2738,column:12},end:{line:2738,column:103}},"1158":{start:{line:2740,column:22},end:{line:2740,column:59}},"1159":{start:{line:2741,column:17},end:{line:2741,column:29}},"1160":{start:{line:2742,column:17},end:{line:2742,column:29}},"1161":{start:{line:2744,column:31},end:{line:2744,column:63}},"1162":{start:{line:2745,column:8},end:{line:2747,column:9}},"1163":{start:{line:2746,column:12},end:{line:2746,column:87}},"1164":{start:{line:2748,column:23},end:{line:2748,column:61}},"1165":{start:{line:2749,column:18},end:{line:2749,column:34}},"1166":{start:{line:2750,column:19},end:{line:2750,column:39}},"1167":{start:{line:2752,column:17},end:{line:2752,column:57}},"1168":{start:{line:2752,column:37},end:{line:2752,column:56}},"1169":{start:{line:2753,column:18},end:{line:2753,column:55}},"1170":{start:{line:2753,column:36},end:{line:2753,column:54}},"1171":{start:{line:2759,column:8},end:{line:2759,column:134}},"1172":{start:{line:2761,column:23},end:{line:2761,column:63}},"1173":{start:{line:2763,column:8},end:{line:2763,column:30}},"1174":{start:{line:2764,column:8},end:{line:2764,column:39}},"1175":{start:{line:2766,column:23},end:{line:2766,column:76}},"1176":{start:{line:2766,column:56},end:{line:2766,column:75}},"1177":{start:{line:2771,column:8},end:{line:2779,column:9}},"1178":{start:{line:2772,column:12},end:{line:2772,column:47}},"1179":{start:{line:2774,column:22},end:{line:2777,column:13}},"1180":{start:{line:2778,column:12},end:{line:2778,column:81}},"1181":{start:{line:2784,column:18},end:{line:2784,column:63}},"1182":{start:{line:2784,column:43},end:{line:2784,column:62}},"1183":{start:{line:2786,column:20},end:{line:2786,column:42}},"1184":{start:{line:2787,column:8},end:{line:2787,column:32}},"1185":{start:{line:2788,column:8},end:{line:2788,column:79}},"1186":{start:{line:2790,column:8},end:{line:2796,column:9}},"1187":{start:{line:2791,column:12},end:{line:2791,column:33}},"1188":{start:{line:2792,column:12},end:{line:2792,column:34}},"1189":{start:{line:2793,column:14},end:{line:2796,column:9}},"1190":{start:{line:2794,column:12},end:{line:2794,column:64}},"1191":{start:{line:2794,column:43},end:{line:2794,column:62}},"1192":{start:{line:2795,column:12},end:{line:2795,column:35}},"1193":{start:{line:2798,column:8},end:{line:2798,column:26}},"1194":{start:{line:2799,column:8},end:{line:2799,column:26}},"1195":{start:{line:2802,column:18},end:{line:2802,column:62}},"1196":{start:{line:2802,column:43},end:{line:2802,column:61}},"1197":{start:{line:2803,column:8},end:{line:2803,column:39}},"1198":{start:{line:2804,column:8},end:{line:2804,column:33}},"1199":{start:{line:2805,column:8},end:{line:2805,column:79}},"1200":{start:{line:2806,column:8},end:{line:2812,column:9}},"1201":{start:{line:2807,column:12},end:{line:2807,column:33}},"1202":{start:{line:2808,column:12},end:{line:2808,column:34}},"1203":{start:{line:2809,column:14},end:{line:2812,column:9}},"1204":{start:{line:2810,column:12},end:{line:2810,column:63}},"1205":{start:{line:2810,column:43},end:{line:2810,column:61}},"1206":{start:{line:2811,column:12},end:{line:2811,column:35}},"1207":{start:{line:2813,column:8},end:{line:2813,column:85}},"1208":{start:{line:2820,column:29},end:{line:2820,column:65}},"1209":{start:{line:2821,column:8},end:{line:2823,column:9}},"1210":{start:{line:2822,column:12},end:{line:2822,column:103}},"1211":{start:{line:2824,column:22},end:{line:2824,column:59}},"1212":{start:{line:2826,column:17},end:{line:2826,column:29}},"1213":{start:{line:2827,column:17},end:{line:2827,column:29}},"1214":{start:{line:2830,column:31},end:{line:2830,column:63}},"1215":{start:{line:2831,column:8},end:{line:2833,column:9}},"1216":{start:{line:2832,column:12},end:{line:2832,column:92}},"1217":{start:{line:2834,column:25},end:{line:2834,column:63}},"1218":{start:{line:2835,column:18},end:{line:2835,column:34}},"1219":{start:{line:2836,column:19},end:{line:2836,column:39}},"1220":{start:{line:2838,column:17},end:{line:2838,column:62}},"1221":{start:{line:2838,column:43},end:{line:2838,column:61}},"1222":{start:{line:2839,column:18},end:{line:2839,column:64}},"1223":{start:{line:2839,column:44},end:{line:2839,column:63}},"1224":{start:{line:2845,column:8},end:{line:2845,column:135}},"1225":{start:{line:2847,column:23},end:{line:2847,column:63}},"1226":{start:{line:2849,column:8},end:{line:2849,column:30}},"1227":{start:{line:2850,column:8},end:{line:2850,column:39}},"1228":{start:{line:2853,column:23},end:{line:2853,column:82}},"1229":{start:{line:2853,column:62},end:{line:2853,column:81}},"1230":{start:{line:2855,column:8},end:{line:2863,column:9}},"1231":{start:{line:2856,column:12},end:{line:2856,column:47}},"1232":{start:{line:2858,column:24},end:{line:2861,column:13}},"1233":{start:{line:2862,column:12},end:{line:2862,column:80}},"1234":{start:{line:2865,column:18},end:{line:2865,column:63}},"1235":{start:{line:2865,column:43},end:{line:2865,column:62}},"1236":{start:{line:2866,column:20},end:{line:2866,column:42}},"1237":{start:{line:2867,column:8},end:{line:2867,column:33}},"1238":{start:{line:2868,column:8},end:{line:2868,column:79}},"1239":{start:{line:2871,column:8},end:{line:2877,column:9}},"1240":{start:{line:2872,column:12},end:{line:2872,column:33}},"1241":{start:{line:2873,column:12},end:{line:2873,column:34}},"1242":{start:{line:2874,column:14},end:{line:2877,column:9}},"1243":{start:{line:2875,column:12},end:{line:2875,column:64}},"1244":{start:{line:2875,column:43},end:{line:2875,column:62}},"1245":{start:{line:2876,column:12},end:{line:2876,column:35}},"1246":{start:{line:2879,column:8},end:{line:2879,column:26}},"1247":{start:{line:2880,column:8},end:{line:2880,column:26}},"1248":{start:{line:2882,column:18},end:{line:2882,column:62}},"1249":{start:{line:2882,column:43},end:{line:2882,column:61}},"1250":{start:{line:2883,column:8},end:{line:2883,column:39}},"1251":{start:{line:2884,column:8},end:{line:2884,column:32}},"1252":{start:{line:2885,column:8},end:{line:2885,column:79}},"1253":{start:{line:2887,column:8},end:{line:2893,column:9}},"1254":{start:{line:2888,column:12},end:{line:2888,column:33}},"1255":{start:{line:2889,column:12},end:{line:2889,column:34}},"1256":{start:{line:2890,column:14},end:{line:2893,column:9}},"1257":{start:{line:2891,column:12},end:{line:2891,column:63}},"1258":{start:{line:2891,column:43},end:{line:2891,column:61}},"1259":{start:{line:2892,column:12},end:{line:2892,column:35}},"1260":{start:{line:2895,column:8},end:{line:2895,column:85}},"1261":{start:{line:2903,column:25},end:{line:2903,column:57}},"1262":{start:{line:2904,column:8},end:{line:2906,column:9}},"1263":{start:{line:2905,column:12},end:{line:2905,column:85}},"1264":{start:{line:2907,column:20},end:{line:2907,column:53}},"1265":{start:{line:2909,column:24},end:{line:2909,column:55}},"1266":{start:{line:2910,column:8},end:{line:2912,column:9}},"1267":{start:{line:2911,column:12},end:{line:2911,column:82}},"1268":{start:{line:2914,column:19},end:{line:2914,column:51}},"1269":{start:{line:2915,column:24},end:{line:2915,column:48}},"1270":{start:{line:2916,column:19},end:{line:2916,column:97}},"1271":{start:{line:2917,column:19},end:{line:2917,column:98}},"1272":{start:{line:2918,column:23},end:{line:2918,column:93}},"1273":{start:{line:2919,column:23},end:{line:2919,column:92}},"1274":{start:{line:2921,column:28},end:{line:2921,column:57}},"1275":{start:{line:2927,column:8},end:{line:2927,column:20}},"1276":{start:{line:2928,column:8},end:{line:2936,column:10}},"1277":{start:{line:2937,column:8},end:{line:2937,column:20}},"1278":{start:{line:2938,column:8},end:{line:2946,column:10}},"1279":{start:{line:2948,column:27},end:{line:2948,column:54}},"1280":{start:{line:2951,column:8},end:{line:2951,column:19}},"1281":{start:{line:2954,column:8},end:{line:2962,column:10}},"1282":{start:{line:2963,column:8},end:{line:2963,column:19}},"1283":{start:{line:2964,column:8},end:{line:2972,column:10}},"1284":{start:{line:2974,column:8},end:{line:2974,column:44}},"1285":{start:{line:2975,column:8},end:{line:2975,column:43}},"1286":{start:{line:2977,column:8},end:{line:2977,column:77}},"1287":{start:{line:2978,column:8},end:{line:2978,column:77}},"1288":{start:{line:2979,column:8},end:{line:2981,column:9}},"1289":{start:{line:2980,column:12},end:{line:2980,column:81}},"1290":{start:{line:2982,column:8},end:{line:2984,column:9}},"1291":{start:{line:2983,column:12},end:{line:2983,column:81}},"1292":{start:{line:2985,column:8},end:{line:2985,column:35}},"1293":{start:{line:2989,column:29},end:{line:2989,column:65}},"1294":{start:{line:2990,column:24},end:{line:2990,column:61}},"1295":{start:{line:2991,column:8},end:{line:2991,column:24}},"1296":{start:{line:3169,column:0},end:{line:3169,column:59}},"1297":{start:{line:3170,column:0},end:{line:3170,column:51}},"1298":{start:{line:3171,column:0},end:{line:3171,column:39}},"1299":{start:{line:3172,column:0},end:{line:3172,column:73}},"1300":{start:{line:3173,column:0},end:{line:3173,column:57}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:18},end:{line:10,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:14},end:{line:15,column:5}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:26},end:{line:19,column:5}},line:17},"3":{name:"(anonymous_3)",decl:{start:{line:21,column:4},end:{line:21,column:5}},loc:{start:{line:21,column:33},end:{line:24,column:5}},line:21},"4":{name:"(anonymous_4)",decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:13},end:{line:29,column:5}},line:27},"5":{name:"(anonymous_5)",decl:{start:{line:32,column:4},end:{line:32,column:5}},loc:{start:{line:32,column:19},end:{line:34,column:5}},line:32},"6":{name:"(anonymous_6)",decl:{start:{line:37,column:4},end:{line:37,column:5}},loc:{start:{line:37,column:18},end:{line:39,column:5}},line:37},"7":{name:"(anonymous_7)",decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:27},end:{line:44,column:5}},line:42},"8":{name:"(anonymous_8)",decl:{start:{line:46,column:4},end:{line:46,column:5}},loc:{start:{line:46,column:34},end:{line:108,column:5}},line:46},"9":{name:"(anonymous_9)",decl:{start:{line:109,column:4},end:{line:109,column:5}},loc:{start:{line:109,column:21},end:{line:111,column:5}},line:109},"10":{name:"(anonymous_10)",decl:{start:{line:114,column:4},end:{line:114,column:5}},loc:{start:{line:114,column:33},end:{line:116,column:5}},line:114},"11":{name:"(anonymous_11)",decl:{start:{line:119,column:4},end:{line:119,column:5}},loc:{start:{line:119,column:27},end:{line:121,column:5}},line:119},"12":{name:"(anonymous_12)",decl:{start:{line:132,column:4},end:{line:132,column:5}},loc:{start:{line:132,column:18},end:{line:135,column:5}},line:132},"13":{name:"(anonymous_13)",decl:{start:{line:140,column:4},end:{line:140,column:5}},loc:{start:{line:140,column:20},end:{line:142,column:5}},line:140},"14":{name:"(anonymous_14)",decl:{start:{line:147,column:4},end:{line:147,column:5}},loc:{start:{line:147,column:32},end:{line:183,column:5}},line:147},"15":{name:"(anonymous_15)",decl:{start:{line:243,column:4},end:{line:243,column:5}},loc:{start:{line:243,column:52},end:{line:265,column:5}},line:243},"16":{name:"(anonymous_16)",decl:{start:{line:267,column:4},end:{line:267,column:5}},loc:{start:{line:267,column:24},end:{line:290,column:5}},line:267},"17":{name:"(anonymous_17)",decl:{start:{line:304,column:4},end:{line:304,column:5}},loc:{start:{line:304,column:30},end:{line:309,column:5}},line:304},"18":{name:"(anonymous_18)",decl:{start:{line:311,column:4},end:{line:311,column:5}},loc:{start:{line:311,column:46},end:{line:342,column:2}},line:311},"19":{name:"(anonymous_19)",decl:{start:{line:345,column:4},end:{line:345,column:5}},loc:{start:{line:345,column:44},end:{line:350,column:5}},line:345},"20":{name:"(anonymous_20)",decl:{start:{line:358,column:4},end:{line:358,column:5}},loc:{start:{line:358,column:26},end:{line:384,column:5}},line:358},"21":{name:"(anonymous_21)",decl:{start:{line:416,column:4},end:{line:416,column:5}},loc:{start:{line:416,column:61},end:{line:431,column:5}},line:416},"22":{name:"(anonymous_22)",decl:{start:{line:434,column:4},end:{line:434,column:5}},loc:{start:{line:434,column:27},end:{line:444,column:5}},line:434},"23":{name:"(anonymous_23)",decl:{start:{line:447,column:4},end:{line:447,column:5}},loc:{start:{line:447,column:26},end:{line:456,column:5}},line:447},"24":{name:"(anonymous_24)",decl:{start:{line:541,column:4},end:{line:541,column:5}},loc:{start:{line:541,column:18},end:{line:544,column:5}},line:541},"25":{name:"(anonymous_25)",decl:{start:{line:545,column:4},end:{line:545,column:5}},loc:{start:{line:545,column:20},end:{line:547,column:5}},line:545},"26":{name:"(anonymous_26)",decl:{start:{line:548,column:4},end:{line:548,column:5}},loc:{start:{line:548,column:33},end:{line:590,column:5}},line:548},"27":{name:"(anonymous_27)",decl:{start:{line:593,column:4},end:{line:593,column:5}},loc:{start:{line:593,column:31},end:{line:596,column:5}},line:593},"28":{name:"(anonymous_28)",decl:{start:{line:619,column:4},end:{line:619,column:5}},loc:{start:{line:619,column:29},end:{line:627,column:5}},line:619},"29":{name:"(anonymous_29)",decl:{start:{line:637,column:4},end:{line:637,column:5}},loc:{start:{line:637,column:36},end:{line:651,column:5}},line:637},"30":{name:"(anonymous_30)",decl:{start:{line:660,column:4},end:{line:660,column:5}},loc:{start:{line:660,column:62},end:{line:674,column:5}},line:660},"31":{name:"(anonymous_31)",decl:{start:{line:686,column:4},end:{line:686,column:5}},loc:{start:{line:686,column:68},end:{line:701,column:5}},line:686},"32":{name:"(anonymous_32)",decl:{start:{line:705,column:4},end:{line:705,column:5}},loc:{start:{line:705,column:33},end:{line:712,column:5}},line:705},"33":{name:"(anonymous_33)",decl:{start:{line:718,column:4},end:{line:718,column:5}},loc:{start:{line:718,column:50},end:{line:910,column:5}},line:718},"34":{name:"(anonymous_34)",decl:{start:{line:861,column:26},end:{line:861,column:27}},loc:{start:{line:861,column:32},end:{line:866,column:17}},line:861},"35":{name:"(anonymous_35)",decl:{start:{line:916,column:4},end:{line:916,column:5}},loc:{start:{line:916,column:36},end:{line:954,column:5}},line:916},"36":{name:"(anonymous_36)",decl:{start:{line:959,column:4},end:{line:959,column:5}},loc:{start:{line:959,column:28},end:{line:994,column:5}},line:959},"37":{name:"(anonymous_37)",decl:{start:{line:1020,column:4},end:{line:1020,column:5}},loc:{start:{line:1020,column:77},end:{line:1048,column:5}},line:1020},"38":{name:"(anonymous_38)",decl:{start:{line:1034,column:70},end:{line:1034,column:71}},loc:{start:{line:1034,column:81},end:{line:1034,column:120}},line:1034},"39":{name:"(anonymous_39)",decl:{start:{line:1056,column:4},end:{line:1056,column:5}},loc:{start:{line:1056,column:101},end:{line:1082,column:5}},line:1056},"40":{name:"(anonymous_40)",decl:{start:{line:1096,column:4},end:{line:1096,column:5}},loc:{start:{line:1096,column:69},end:{line:1128,column:5}},line:1096},"41":{name:"(anonymous_41)",decl:{start:{line:1134,column:4},end:{line:1134,column:5}},loc:{start:{line:1134,column:60},end:{line:1144,column:5}},line:1134},"42":{name:"(anonymous_42)",decl:{start:{line:1142,column:51},end:{line:1142,column:52}},loc:{start:{line:1142,column:56},end:{line:1142,column:97}},line:1142},"43":{name:"(anonymous_43)",decl:{start:{line:1148,column:4},end:{line:1148,column:5}},loc:{start:{line:1148,column:63},end:{line:1248,column:5}},line:1148},"44":{name:"(anonymous_44)",decl:{start:{line:1183,column:25},end:{line:1183,column:26}},loc:{start:{line:1183,column:51},end:{line:1184,column:9}},line:1183},"45":{name:"(anonymous_45)",decl:{start:{line:1196,column:34},end:{line:1196,column:35}},loc:{start:{line:1196,column:98},end:{line:1201,column:13}},line:1196},"46":{name:"(anonymous_46)",decl:{start:{line:1202,column:38},end:{line:1202,column:39}},loc:{start:{line:1202,column:150},end:{line:1206,column:13}},line:1202},"47":{name:"(anonymous_47)",decl:{start:{line:1262,column:4},end:{line:1262,column:5}},loc:{start:{line:1262,column:64},end:{line:1304,column:5}},line:1262},"48":{name:"(anonymous_48)",decl:{start:{line:1352,column:4},end:{line:1352,column:5}},loc:{start:{line:1352,column:18},end:{line:1354,column:5}},line:1352},"49":{name:"(anonymous_49)",decl:{start:{line:1356,column:4},end:{line:1356,column:5}},loc:{start:{line:1356,column:20},end:{line:1358,column:5}},line:1356},"50":{name:"(anonymous_50)",decl:{start:{line:1361,column:4},end:{line:1361,column:5}},loc:{start:{line:1361,column:61},end:{line:1376,column:5}},line:1361},"51":{name:"(anonymous_51)",decl:{start:{line:1379,column:4},end:{line:1379,column:5}},loc:{start:{line:1379,column:33},end:{line:1419,column:5}},line:1379},"52":{name:"(anonymous_52)",decl:{start:{line:1421,column:4},end:{line:1421,column:5}},loc:{start:{line:1421,column:31},end:{line:1424,column:5}},line:1421},"53":{name:"(anonymous_53)",decl:{start:{line:1431,column:4},end:{line:1431,column:5}},loc:{start:{line:1431,column:29},end:{line:1439,column:5}},line:1431},"54":{name:"(anonymous_54)",decl:{start:{line:1448,column:4},end:{line:1448,column:5}},loc:{start:{line:1448,column:62},end:{line:1462,column:5}},line:1448},"55":{name:"(anonymous_55)",decl:{start:{line:1476,column:4},end:{line:1476,column:5}},loc:{start:{line:1476,column:49},end:{line:1500,column:5}},line:1476},"56":{name:"(anonymous_56)",decl:{start:{line:1510,column:4},end:{line:1510,column:5}},loc:{start:{line:1510,column:45},end:{line:1528,column:5}},line:1510},"57":{name:"(anonymous_57)",decl:{start:{line:1539,column:4},end:{line:1539,column:5}},loc:{start:{line:1539,column:56},end:{line:1612,column:5}},line:1539},"58":{name:"(anonymous_58)",decl:{start:{line:1615,column:4},end:{line:1615,column:5}},loc:{start:{line:1615,column:56},end:{line:1675,column:5}},line:1615},"59":{name:"(anonymous_59)",decl:{start:{line:1687,column:4},end:{line:1687,column:5}},loc:{start:{line:1687,column:44},end:{line:1715,column:5}},line:1687},"60":{name:"(anonymous_60)",decl:{start:{line:1721,column:4},end:{line:1721,column:5}},loc:{start:{line:1721,column:28},end:{line:1733,column:5}},line:1721},"61":{name:"(anonymous_61)",decl:{start:{line:1737,column:4},end:{line:1737,column:5}},loc:{start:{line:1737,column:24},end:{line:1787,column:5}},line:1737},"62":{name:"(anonymous_62)",decl:{start:{line:1792,column:4},end:{line:1792,column:5}},loc:{start:{line:1792,column:18},end:{line:1795,column:5}},line:1792},"63":{name:"(anonymous_63)",decl:{start:{line:1797,column:4},end:{line:1797,column:5}},loc:{start:{line:1797,column:20},end:{line:1799,column:5}},line:1797},"64":{name:"(anonymous_64)",decl:{start:{line:1802,column:4},end:{line:1802,column:5}},loc:{start:{line:1802,column:33},end:{line:1834,column:5}},line:1802},"65":{name:"(anonymous_65)",decl:{start:{line:1836,column:4},end:{line:1836,column:5}},loc:{start:{line:1836,column:31},end:{line:1839,column:5}},line:1836},"66":{name:"(anonymous_66)",decl:{start:{line:1844,column:4},end:{line:1844,column:5}},loc:{start:{line:1844,column:61},end:{line:1859,column:5}},line:1844},"67":{name:"(anonymous_67)",decl:{start:{line:1862,column:4},end:{line:1862,column:5}},loc:{start:{line:1862,column:51},end:{line:1891,column:5}},line:1862},"68":{name:"(anonymous_68)",decl:{start:{line:1894,column:4},end:{line:1894,column:5}},loc:{start:{line:1894,column:23},end:{line:1917,column:5}},line:1894},"69":{name:"(anonymous_69)",decl:{start:{line:1927,column:4},end:{line:1927,column:5}},loc:{start:{line:1927,column:42},end:{line:1977,column:5}},line:1927},"70":{name:"(anonymous_70)",decl:{start:{line:1980,column:4},end:{line:1980,column:5}},loc:{start:{line:1980,column:42},end:{line:2047,column:5}},line:1980},"71":{name:"(anonymous_71)",decl:{start:{line:2051,column:4},end:{line:2051,column:5}},loc:{start:{line:2051,column:44},end:{line:2056,column:5}},line:2051},"72":{name:"(anonymous_72)",decl:{start:{line:2052,column:30},end:{line:2052,column:31}},loc:{start:{line:2052,column:39},end:{line:2052,column:215}},line:2052},"73":{name:"(anonymous_73)",decl:{start:{line:2053,column:30},end:{line:2053,column:31}},loc:{start:{line:2053,column:39},end:{line:2053,column:118}},line:2053},"74":{name:"(anonymous_74)",decl:{start:{line:2054,column:30},end:{line:2054,column:31}},loc:{start:{line:2054,column:39},end:{line:2054,column:113}},line:2054},"75":{name:"(anonymous_75)",decl:{start:{line:2060,column:4},end:{line:2060,column:5}},loc:{start:{line:2060,column:45},end:{line:2065,column:5}},line:2060},"76":{name:"(anonymous_76)",decl:{start:{line:2061,column:30},end:{line:2061,column:31}},loc:{start:{line:2061,column:39},end:{line:2061,column:215}},line:2061},"77":{name:"(anonymous_77)",decl:{start:{line:2062,column:30},end:{line:2062,column:31}},loc:{start:{line:2062,column:39},end:{line:2062,column:118}},line:2062},"78":{name:"(anonymous_78)",decl:{start:{line:2063,column:30},end:{line:2063,column:31}},loc:{start:{line:2063,column:39},end:{line:2063,column:113}},line:2063},"79":{name:"(anonymous_79)",decl:{start:{line:2068,column:4},end:{line:2068,column:5}},loc:{start:{line:2068,column:66},end:{line:2259,column:5}},line:2068},"80":{name:"(anonymous_80)",decl:{start:{line:2262,column:4},end:{line:2262,column:5}},loc:{start:{line:2262,column:64},end:{line:2421,column:5}},line:2262},"81":{name:"(anonymous_81)",decl:{start:{line:2424,column:4},end:{line:2424,column:5}},loc:{start:{line:2424,column:63},end:{line:2576,column:5}},line:2424},"82":{name:"(anonymous_82)",decl:{start:{line:2579,column:4},end:{line:2579,column:5}},loc:{start:{line:2579,column:65},end:{line:2731,column:5}},line:2579},"83":{name:"(anonymous_83)",decl:{start:{line:2735,column:4},end:{line:2735,column:5}},loc:{start:{line:2735,column:34},end:{line:2814,column:5}},line:2735},"84":{name:"(anonymous_84)",decl:{start:{line:2752,column:29},end:{line:2752,column:30}},loc:{start:{line:2752,column:37},end:{line:2752,column:56}},line:2752},"85":{name:"(anonymous_85)",decl:{start:{line:2753,column:30},end:{line:2753,column:31}},loc:{start:{line:2753,column:36},end:{line:2753,column:54}},line:2753},"86":{name:"(anonymous_86)",decl:{start:{line:2766,column:48},end:{line:2766,column:49}},loc:{start:{line:2766,column:56},end:{line:2766,column:75}},line:2766},"87":{name:"(anonymous_87)",decl:{start:{line:2784,column:36},end:{line:2784,column:37}},loc:{start:{line:2784,column:43},end:{line:2784,column:62}},line:2784},"88":{name:"(anonymous_88)",decl:{start:{line:2794,column:36},end:{line:2794,column:37}},loc:{start:{line:2794,column:43},end:{line:2794,column:62}},line:2794},"89":{name:"(anonymous_89)",decl:{start:{line:2802,column:36},end:{line:2802,column:37}},loc:{start:{line:2802,column:43},end:{line:2802,column:61}},line:2802},"90":{name:"(anonymous_90)",decl:{start:{line:2810,column:36},end:{line:2810,column:37}},loc:{start:{line:2810,column:43},end:{line:2810,column:61}},line:2810},"91":{name:"(anonymous_91)",decl:{start:{line:2819,column:4},end:{line:2819,column:5}},loc:{start:{line:2819,column:34},end:{line:2897,column:5}},line:2819},"92":{name:"(anonymous_92)",decl:{start:{line:2838,column:35},end:{line:2838,column:36}},loc:{start:{line:2838,column:43},end:{line:2838,column:61}},line:2838},"93":{name:"(anonymous_93)",decl:{start:{line:2839,column:36},end:{line:2839,column:37}},loc:{start:{line:2839,column:44},end:{line:2839,column:63}},line:2839},"94":{name:"(anonymous_94)",decl:{start:{line:2853,column:54},end:{line:2853,column:55}},loc:{start:{line:2853,column:62},end:{line:2853,column:81}},line:2853},"95":{name:"(anonymous_95)",decl:{start:{line:2865,column:36},end:{line:2865,column:37}},loc:{start:{line:2865,column:43},end:{line:2865,column:62}},line:2865},"96":{name:"(anonymous_96)",decl:{start:{line:2875,column:36},end:{line:2875,column:37}},loc:{start:{line:2875,column:43},end:{line:2875,column:62}},line:2875},"97":{name:"(anonymous_97)",decl:{start:{line:2882,column:36},end:{line:2882,column:37}},loc:{start:{line:2882,column:43},end:{line:2882,column:61}},line:2882},"98":{name:"(anonymous_98)",decl:{start:{line:2891,column:36},end:{line:2891,column:37}},loc:{start:{line:2891,column:43},end:{line:2891,column:61}},line:2891},"99":{name:"(anonymous_99)",decl:{start:{line:2902,column:4},end:{line:2902,column:5}},loc:{start:{line:2902,column:69},end:{line:2986,column:5}},line:2902},"100":{name:"(anonymous_100)",decl:{start:{line:2988,column:4},end:{line:2988,column:5}},loc:{start:{line:2988,column:29},end:{line:2992,column:5}},line:2988}},branchMap:{"0":{loc:{start:{line:63,column:8},end:{line:105,column:9}},type:"switch",locations:[{start:{line:65,column:12},end:{line:84,column:27}},{start:{line:85,column:12},end:{line:100,column:27}},{start:{line:101,column:12},end:{line:102,column:65}},{start:{line:103,column:12},end:{line:104,column:41}}],line:63},"1":{loc:{start:{line:63,column:16},end:{line:63,column:75}},type:"cond-expr",locations:[{start:{line:63,column:41},end:{line:63,column:42}},{start:{line:63,column:46},end:{line:63,column:74}}],line:63},"2":{loc:{start:{line:63,column:46},end:{line:63,column:74}},type:"cond-expr",locations:[{start:{line:63,column:69},end:{line:63,column:70}},{start:{line:63,column:73},end:{line:63,column:74}}],line:63},"3":{loc:{start:{line:69,column:20},end:{line:74,column:21}},type:"if",locations:[{start:{line:69,column:20},end:{line:74,column:21}},{start:{line:69,column:20},end:{line:74,column:21}}],line:69},"4":{loc:{start:{line:72,column:26},end:{line:74,column:21}},type:"if",locations:[{start:{line:72,column:26},end:{line:74,column:21}},{start:{line:72,column:26},end:{line:74,column:21}}],line:72},"5":{loc:{start:{line:76,column:16},end:{line:78,column:17}},type:"if",locations:[{start:{line:76,column:16},end:{line:78,column:17}},{start:{line:76,column:16},end:{line:78,column:17}}],line:76},"6":{loc:{start:{line:76,column:20},end:{line:76,column:56}},type:"binary-expr",locations:[{start:{line:76,column:20},end:{line:76,column:45}},{start:{line:76,column:49},end:{line:76,column:56}}],line:76},"7":{loc:{start:{line:81,column:16},end:{line:83,column:17}},type:"if",locations:[{start:{line:81,column:16},end:{line:83,column:17}},{start:{line:81,column:16},end:{line:83,column:17}}],line:81},"8":{loc:{start:{line:89,column:20},end:{line:93,column:21}},type:"if",locations:[{start:{line:89,column:20},end:{line:93,column:21}},{start:{line:89,column:20},end:{line:93,column:21}}],line:89},"9":{loc:{start:{line:91,column:26},end:{line:93,column:21}},type:"if",locations:[{start:{line:91,column:26},end:{line:93,column:21}},{start:{line:91,column:26},end:{line:93,column:21}}],line:91},"10":{loc:{start:{line:97,column:16},end:{line:99,column:17}},type:"if",locations:[{start:{line:97,column:16},end:{line:99,column:17}},{start:{line:97,column:16},end:{line:99,column:17}}],line:97},"11":{loc:{start:{line:164,column:12},end:{line:167,column:13}},type:"if",locations:[{start:{line:164,column:12},end:{line:167,column:13}},{start:{line:164,column:12},end:{line:167,column:13}}],line:164},"12":{loc:{start:{line:168,column:12},end:{line:170,column:13}},type:"if",locations:[{start:{line:168,column:12},end:{line:170,column:13}},{start:{line:168,column:12},end:{line:170,column:13}}],line:168},"13":{loc:{start:{line:173,column:8},end:{line:175,column:9}},type:"if",locations:[{start:{line:173,column:8},end:{line:175,column:9}},{start:{line:173,column:8},end:{line:175,column:9}}],line:173},"14":{loc:{start:{line:173,column:12},end:{line:173,column:54}},type:"binary-expr",locations:[{start:{line:173,column:12},end:{line:173,column:43}},{start:{line:173,column:47},end:{line:173,column:54}}],line:173},"15":{loc:{start:{line:178,column:8},end:{line:180,column:9}},type:"if",locations:[{start:{line:178,column:8},end:{line:180,column:9}},{start:{line:178,column:8},end:{line:180,column:9}}],line:178},"16":{loc:{start:{line:277,column:12},end:{line:280,column:13}},type:"if",locations:[{start:{line:277,column:12},end:{line:280,column:13}},{start:{line:277,column:12},end:{line:280,column:13}}],line:277},"17":{loc:{start:{line:277,column:16},end:{line:277,column:55}},type:"binary-expr",locations:[{start:{line:277,column:16},end:{line:277,column:31}},{start:{line:277,column:35},end:{line:277,column:55}}],line:277},"18":{loc:{start:{line:281,column:12},end:{line:283,column:13}},type:"if",locations:[{start:{line:281,column:12},end:{line:283,column:13}},{start:{line:281,column:12},end:{line:283,column:13}}],line:281},"19":{loc:{start:{line:285,column:8},end:{line:288,column:9}},type:"if",locations:[{start:{line:285,column:8},end:{line:288,column:9}},{start:{line:285,column:8},end:{line:288,column:9}}],line:285},"20":{loc:{start:{line:285,column:12},end:{line:285,column:60}},type:"binary-expr",locations:[{start:{line:285,column:12},end:{line:285,column:35}},{start:{line:285,column:39},end:{line:285,column:60}}],line:285},"21":{loc:{start:{line:315,column:3},end:{line:337,column:4}},type:"if",locations:[{start:{line:315,column:3},end:{line:337,column:4}},{start:{line:315,column:3},end:{line:337,column:4}}],line:315},"22":{loc:{start:{line:315,column:7},end:{line:315,column:46}},type:"binary-expr",locations:[{start:{line:315,column:7},end:{line:315,column:16}},{start:{line:315,column:20},end:{line:315,column:46}}],line:315},"23":{loc:{start:{line:318,column:4},end:{line:335,column:5}},type:"if",locations:[{start:{line:318,column:4},end:{line:335,column:5}},{start:{line:318,column:4},end:{line:335,column:5}}],line:318},"24":{loc:{start:{line:318,column:8},end:{line:318,column:39}},type:"binary-expr",locations:[{start:{line:318,column:8},end:{line:318,column:17}},{start:{line:318,column:21},end:{line:318,column:39}}],line:318},"25":{loc:{start:{line:359,column:8},end:{line:361,column:9}},type:"if",locations:[{start:{line:359,column:8},end:{line:361,column:9}},{start:{line:359,column:8},end:{line:361,column:9}}],line:359},"26":{loc:{start:{line:359,column:12},end:{line:359,column:39}},type:"binary-expr",locations:[{start:{line:359,column:12},end:{line:359,column:23}},{start:{line:359,column:27},end:{line:359,column:39}}],line:359},"27":{loc:{start:{line:425,column:8},end:{line:429,column:9}},type:"if",locations:[{start:{line:425,column:8},end:{line:429,column:9}},{start:{line:425,column:8},end:{line:429,column:9}}],line:425},"28":{loc:{start:{line:427,column:14},end:{line:429,column:9}},type:"if",locations:[{start:{line:427,column:14},end:{line:429,column:9}},{start:{line:427,column:14},end:{line:429,column:9}}],line:427},"29":{loc:{start:{line:550,column:8},end:{line:552,column:9}},type:"if",locations:[{start:{line:550,column:8},end:{line:552,column:9}},{start:{line:550,column:8},end:{line:552,column:9}}],line:550},"30":{loc:{start:{line:550,column:12},end:{line:550,column:66}},type:"binary-expr",locations:[{start:{line:550,column:12},end:{line:550,column:39}},{start:{line:550,column:43},end:{line:550,column:66}}],line:550},"31":{loc:{start:{line:558,column:12},end:{line:560,column:13}},type:"if",locations:[{start:{line:558,column:12},end:{line:560,column:13}},{start:{line:558,column:12},end:{line:560,column:13}}],line:558},"32":{loc:{start:{line:562,column:8},end:{line:589,column:9}},type:"switch",locations:[{start:{line:563,column:12},end:{line:566,column:17}},{start:{line:567,column:12},end:{line:570,column:17}},{start:{line:571,column:12},end:{line:574,column:17}},{start:{line:575,column:12},end:{line:578,column:17}},{start:{line:579,column:12},end:{line:582,column:17}},{start:{line:583,column:12},end:{line:586,column:17}}],line:562},"33":{loc:{start:{line:564,column:16},end:{line:566,column:17}},type:"if",locations:[{start:{line:564,column:16},end:{line:566,column:17}},{start:{line:564,column:16},end:{line:566,column:17}}],line:564},"34":{loc:{start:{line:568,column:16},end:{line:570,column:17}},type:"if",locations:[{start:{line:568,column:16},end:{line:570,column:17}},{start:{line:568,column:16},end:{line:570,column:17}}],line:568},"35":{loc:{start:{line:572,column:16},end:{line:574,column:17}},type:"if",locations:[{start:{line:572,column:16},end:{line:574,column:17}},{start:{line:572,column:16},end:{line:574,column:17}}],line:572},"36":{loc:{start:{line:576,column:16},end:{line:578,column:17}},type:"if",locations:[{start:{line:576,column:16},end:{line:578,column:17}},{start:{line:576,column:16},end:{line:578,column:17}}],line:576},"37":{loc:{start:{line:580,column:16},end:{line:582,column:17}},type:"if",locations:[{start:{line:580,column:16},end:{line:582,column:17}},{start:{line:580,column:16},end:{line:582,column:17}}],line:580},"38":{loc:{start:{line:584,column:16},end:{line:586,column:17}},type:"if",locations:[{start:{line:584,column:16},end:{line:586,column:17}},{start:{line:584,column:16},end:{line:586,column:17}}],line:584},"39":{loc:{start:{line:641,column:8},end:{line:645,column:9}},type:"if",locations:[{start:{line:641,column:8},end:{line:645,column:9}},{start:{line:641,column:8},end:{line:645,column:9}}],line:641},"40":{loc:{start:{line:668,column:8},end:{line:672,column:9}},type:"if",locations:[{start:{line:668,column:8},end:{line:672,column:9}},{start:{line:668,column:8},end:{line:672,column:9}}],line:668},"41":{loc:{start:{line:670,column:14},end:{line:672,column:9}},type:"if",locations:[{start:{line:670,column:14},end:{line:672,column:9}},{start:{line:670,column:14},end:{line:672,column:9}}],line:670},"42":{loc:{start:{line:695,column:8},end:{line:699,column:9}},type:"if",locations:[{start:{line:695,column:8},end:{line:699,column:9}},{start:{line:695,column:8},end:{line:699,column:9}}],line:695},"43":{loc:{start:{line:697,column:14},end:{line:699,column:9}},type:"if",locations:[{start:{line:697,column:14},end:{line:699,column:9}},{start:{line:697,column:14},end:{line:699,column:9}}],line:697},"44":{loc:{start:{line:707,column:8},end:{line:709,column:9}},type:"if",locations:[{start:{line:707,column:8},end:{line:709,column:9}},{start:{line:707,column:8},end:{line:709,column:9}}],line:707},"45":{loc:{start:{line:707,column:12},end:{line:707,column:38}},type:"binary-expr",locations:[{start:{line:707,column:12},end:{line:707,column:17}},{start:{line:707,column:21},end:{line:707,column:38}}],line:707},"46":{loc:{start:{line:711,column:15},end:{line:711,column:42}},type:"binary-expr",locations:[{start:{line:711,column:15},end:{line:711,column:28}},{start:{line:711,column:32},end:{line:711,column:42}}],line:711},"47":{loc:{start:{line:720,column:8},end:{line:722,column:9}},type:"if",locations:[{start:{line:720,column:8},end:{line:722,column:9}},{start:{line:720,column:8},end:{line:722,column:9}}],line:720},"48":{loc:{start:{line:723,column:8},end:{line:725,column:9}},type:"if",locations:[{start:{line:723,column:8},end:{line:725,column:9}},{start:{line:723,column:8},end:{line:725,column:9}}],line:723},"49":{loc:{start:{line:737,column:8},end:{line:739,column:9}},type:"if",locations:[{start:{line:737,column:8},end:{line:739,column:9}},{start:{line:737,column:8},end:{line:739,column:9}}],line:737},"50":{loc:{start:{line:862,column:20},end:{line:864,column:21}},type:"if",locations:[{start:{line:862,column:20},end:{line:864,column:21}},{start:{line:862,column:20},end:{line:864,column:21}}],line:862},"51":{loc:{start:{line:917,column:8},end:{line:919,column:9}},type:"if",locations:[{start:{line:917,column:8},end:{line:919,column:9}},{start:{line:917,column:8},end:{line:919,column:9}}],line:917},"52":{loc:{start:{line:928,column:8},end:{line:930,column:9}},type:"if",locations:[{start:{line:928,column:8},end:{line:930,column:9}},{start:{line:928,column:8},end:{line:930,column:9}}],line:928},"53":{loc:{start:{line:928,column:12},end:{line:928,column:36}},type:"binary-expr",locations:[{start:{line:928,column:12},end:{line:928,column:16}},{start:{line:928,column:20},end:{line:928,column:36}}],line:928},"54":{loc:{start:{line:932,column:8},end:{line:934,column:9}},type:"if",locations:[{start:{line:932,column:8},end:{line:934,column:9}},{start:{line:932,column:8},end:{line:934,column:9}}],line:932},"55":{loc:{start:{line:937,column:8},end:{line:939,column:9}},type:"if",locations:[{start:{line:937,column:8},end:{line:939,column:9}},{start:{line:937,column:8},end:{line:939,column:9}}],line:937},"56":{loc:{start:{line:963,column:8},end:{line:965,column:9}},type:"if",locations:[{start:{line:963,column:8},end:{line:965,column:9}},{start:{line:963,column:8},end:{line:965,column:9}}],line:963},"57":{loc:{start:{line:963,column:12},end:{line:963,column:46}},type:"binary-expr",locations:[{start:{line:963,column:12},end:{line:963,column:21}},{start:{line:963,column:25},end:{line:963,column:46}}],line:963},"58":{loc:{start:{line:967,column:8},end:{line:969,column:9}},type:"if",locations:[{start:{line:967,column:8},end:{line:969,column:9}},{start:{line:967,column:8},end:{line:969,column:9}}],line:967},"59":{loc:{start:{line:973,column:8},end:{line:990,column:9}},type:"if",locations:[{start:{line:973,column:8},end:{line:990,column:9}},{start:{line:973,column:8},end:{line:990,column:9}}],line:973},"60":{loc:{start:{line:1021,column:8},end:{line:1023,column:9}},type:"if",locations:[{start:{line:1021,column:8},end:{line:1023,column:9}},{start:{line:1021,column:8},end:{line:1023,column:9}}],line:1021},"61":{loc:{start:{line:1028,column:8},end:{line:1030,column:9}},type:"if",locations:[{start:{line:1028,column:8},end:{line:1030,column:9}},{start:{line:1028,column:8},end:{line:1030,column:9}}],line:1028},"62":{loc:{start:{line:1032,column:8},end:{line:1038,column:9}},type:"if",locations:[{start:{line:1032,column:8},end:{line:1038,column:9}},{start:{line:1032,column:8},end:{line:1038,column:9}}],line:1032},"63":{loc:{start:{line:1034,column:14},end:{line:1038,column:9}},type:"if",locations:[{start:{line:1034,column:14},end:{line:1038,column:9}},{start:{line:1034,column:14},end:{line:1038,column:9}}],line:1034},"64":{loc:{start:{line:1065,column:8},end:{line:1074,column:9}},type:"if",locations:[{start:{line:1065,column:8},end:{line:1074,column:9}},{start:{line:1065,column:8},end:{line:1074,column:9}}],line:1065},"65":{loc:{start:{line:1065,column:12},end:{line:1065,column:56}},type:"binary-expr",locations:[{start:{line:1065,column:12},end:{line:1065,column:26}},{start:{line:1065,column:30},end:{line:1065,column:56}}],line:1065},"66":{loc:{start:{line:1100,column:8},end:{line:1102,column:9}},type:"if",locations:[{start:{line:1100,column:8},end:{line:1102,column:9}},{start:{line:1100,column:8},end:{line:1102,column:9}}],line:1100},"67":{loc:{start:{line:1100,column:12},end:{line:1100,column:36}},type:"binary-expr",locations:[{start:{line:1100,column:12},end:{line:1100,column:16}},{start:{line:1100,column:20},end:{line:1100,column:36}}],line:1100},"68":{loc:{start:{line:1106,column:8},end:{line:1108,column:9}},type:"if",locations:[{start:{line:1106,column:8},end:{line:1108,column:9}},{start:{line:1106,column:8},end:{line:1108,column:9}}],line:1106},"69":{loc:{start:{line:1110,column:8},end:{line:1112,column:9}},type:"if",locations:[{start:{line:1110,column:8},end:{line:1112,column:9}},{start:{line:1110,column:8},end:{line:1112,column:9}}],line:1110},"70":{loc:{start:{line:1115,column:8},end:{line:1117,column:9}},type:"if",locations:[{start:{line:1115,column:8},end:{line:1117,column:9}},{start:{line:1115,column:8},end:{line:1117,column:9}}],line:1115},"71":{loc:{start:{line:1142,column:56},end:{line:1142,column:97}},type:"binary-expr",locations:[{start:{line:1142,column:56},end:{line:1142,column:77}},{start:{line:1142,column:81},end:{line:1142,column:97}}],line:1142},"72":{loc:{start:{line:1149,column:8},end:{line:1151,column:9}},type:"if",locations:[{start:{line:1149,column:8},end:{line:1151,column:9}},{start:{line:1149,column:8},end:{line:1151,column:9}}],line:1149},"73":{loc:{start:{line:1161,column:8},end:{line:1163,column:9}},type:"if",locations:[{start:{line:1161,column:8},end:{line:1163,column:9}},{start:{line:1161,column:8},end:{line:1163,column:9}}],line:1161},"74":{loc:{start:{line:1168,column:8},end:{line:1170,column:9}},type:"if",locations:[{start:{line:1168,column:8},end:{line:1170,column:9}},{start:{line:1168,column:8},end:{line:1170,column:9}}],line:1168},"75":{loc:{start:{line:1168,column:12},end:{line:1168,column:40}},type:"binary-expr",locations:[{start:{line:1168,column:12},end:{line:1168,column:18}},{start:{line:1168,column:22},end:{line:1168,column:40}}],line:1168},"76":{loc:{start:{line:1174,column:8},end:{line:1176,column:9}},type:"if",locations:[{start:{line:1174,column:8},end:{line:1176,column:9}},{start:{line:1174,column:8},end:{line:1176,column:9}}],line:1174},"77":{loc:{start:{line:1189,column:8},end:{line:1191,column:9}},type:"if",locations:[{start:{line:1189,column:8},end:{line:1191,column:9}},{start:{line:1189,column:8},end:{line:1191,column:9}}],line:1189},"78":{loc:{start:{line:1209,column:8},end:{line:1211,column:9}},type:"if",locations:[{start:{line:1209,column:8},end:{line:1211,column:9}},{start:{line:1209,column:8},end:{line:1211,column:9}}],line:1209},"79":{loc:{start:{line:1216,column:8},end:{line:1222,column:9}},type:"if",locations:[{start:{line:1216,column:8},end:{line:1222,column:9}},{start:{line:1216,column:8},end:{line:1222,column:9}}],line:1216},"80":{loc:{start:{line:1218,column:14},end:{line:1222,column:9}},type:"if",locations:[{start:{line:1218,column:14},end:{line:1222,column:9}},{start:{line:1218,column:14},end:{line:1222,column:9}}],line:1218},"81":{loc:{start:{line:1227,column:8},end:{line:1229,column:9}},type:"if",locations:[{start:{line:1227,column:8},end:{line:1229,column:9}},{start:{line:1227,column:8},end:{line:1229,column:9}}],line:1227},"82":{loc:{start:{line:1241,column:8},end:{line:1243,column:9}},type:"if",locations:[{start:{line:1241,column:8},end:{line:1243,column:9}},{start:{line:1241,column:8},end:{line:1243,column:9}}],line:1241},"83":{loc:{start:{line:1241,column:12},end:{line:1241,column:31}},type:"binary-expr",locations:[{start:{line:1241,column:12},end:{line:1241,column:18}},{start:{line:1241,column:22},end:{line:1241,column:31}}],line:1241},"84":{loc:{start:{line:1266,column:8},end:{line:1268,column:9}},type:"if",locations:[{start:{line:1266,column:8},end:{line:1268,column:9}},{start:{line:1266,column:8},end:{line:1268,column:9}}],line:1266},"85":{loc:{start:{line:1266,column:12},end:{line:1266,column:50}},type:"binary-expr",locations:[{start:{line:1266,column:12},end:{line:1266,column:23}},{start:{line:1266,column:27},end:{line:1266,column:50}}],line:1266},"86":{loc:{start:{line:1300,column:8},end:{line:1302,column:9}},type:"if",locations:[{start:{line:1300,column:8},end:{line:1302,column:9}},{start:{line:1300,column:8},end:{line:1302,column:9}}],line:1300},"87":{loc:{start:{line:1370,column:8},end:{line:1374,column:9}},type:"if",locations:[{start:{line:1370,column:8},end:{line:1374,column:9}},{start:{line:1370,column:8},end:{line:1374,column:9}}],line:1370},"88":{loc:{start:{line:1372,column:14},end:{line:1374,column:9}},type:"if",locations:[{start:{line:1372,column:14},end:{line:1374,column:9}},{start:{line:1372,column:14},end:{line:1374,column:9}}],line:1372},"89":{loc:{start:{line:1381,column:8},end:{line:1383,column:9}},type:"if",locations:[{start:{line:1381,column:8},end:{line:1383,column:9}},{start:{line:1381,column:8},end:{line:1383,column:9}}],line:1381},"90":{loc:{start:{line:1381,column:12},end:{line:1381,column:93}},type:"binary-expr",locations:[{start:{line:1381,column:12},end:{line:1381,column:39}},{start:{line:1381,column:43},end:{line:1381,column:63}},{start:{line:1381,column:67},end:{line:1381,column:93}}],line:1381},"91":{loc:{start:{line:1389,column:12},end:{line:1391,column:13}},type:"if",locations:[{start:{line:1389,column:12},end:{line:1391,column:13}},{start:{line:1389,column:12},end:{line:1391,column:13}}],line:1389},"92":{loc:{start:{line:1393,column:8},end:{line:1418,column:9}},type:"switch",locations:[{start:{line:1394,column:12},end:{line:1397,column:17}},{start:{line:1398,column:12},end:{line:1401,column:17}},{start:{line:1402,column:12},end:{line:1405,column:17}},{start:{line:1406,column:12},end:{line:1409,column:17}},{start:{line:1410,column:12},end:{line:1413,column:17}},{start:{line:1414,column:12},end:{line:1417,column:17}}],line:1393},"93":{loc:{start:{line:1395,column:16},end:{line:1397,column:17}},type:"if",locations:[{start:{line:1395,column:16},end:{line:1397,column:17}},{start:{line:1395,column:16},end:{line:1397,column:17}}],line:1395},"94":{loc:{start:{line:1399,column:16},end:{line:1401,column:17}},type:"if",locations:[{start:{line:1399,column:16},end:{line:1401,column:17}},{start:{line:1399,column:16},end:{line:1401,column:17}}],line:1399},"95":{loc:{start:{line:1403,column:16},end:{line:1405,column:17}},type:"if",locations:[{start:{line:1403,column:16},end:{line:1405,column:17}},{start:{line:1403,column:16},end:{line:1405,column:17}}],line:1403},"96":{loc:{start:{line:1407,column:16},end:{line:1409,column:17}},type:"if",locations:[{start:{line:1407,column:16},end:{line:1409,column:17}},{start:{line:1407,column:16},end:{line:1409,column:17}}],line:1407},"97":{loc:{start:{line:1411,column:16},end:{line:1413,column:17}},type:"if",locations:[{start:{line:1411,column:16},end:{line:1413,column:17}},{start:{line:1411,column:16},end:{line:1413,column:17}}],line:1411},"98":{loc:{start:{line:1415,column:16},end:{line:1417,column:17}},type:"if",locations:[{start:{line:1415,column:16},end:{line:1417,column:17}},{start:{line:1415,column:16},end:{line:1417,column:17}}],line:1415},"99":{loc:{start:{line:1456,column:8},end:{line:1460,column:9}},type:"if",locations:[{start:{line:1456,column:8},end:{line:1460,column:9}},{start:{line:1456,column:8},end:{line:1460,column:9}}],line:1456},"100":{loc:{start:{line:1458,column:14},end:{line:1460,column:9}},type:"if",locations:[{start:{line:1458,column:14},end:{line:1460,column:9}},{start:{line:1458,column:14},end:{line:1460,column:9}}],line:1458},"101":{loc:{start:{line:1479,column:8},end:{line:1481,column:9}},type:"if",locations:[{start:{line:1479,column:8},end:{line:1481,column:9}},{start:{line:1479,column:8},end:{line:1481,column:9}}],line:1479},"102":{loc:{start:{line:1544,column:8},end:{line:1546,column:9}},type:"if",locations:[{start:{line:1544,column:8},end:{line:1546,column:9}},{start:{line:1544,column:8},end:{line:1546,column:9}}],line:1544},"103":{loc:{start:{line:1544,column:12},end:{line:1544,column:46}},type:"binary-expr",locations:[{start:{line:1544,column:12},end:{line:1544,column:21}},{start:{line:1544,column:25},end:{line:1544,column:46}}],line:1544},"104":{loc:{start:{line:1554,column:8},end:{line:1556,column:9}},type:"if",locations:[{start:{line:1554,column:8},end:{line:1556,column:9}},{start:{line:1554,column:8},end:{line:1556,column:9}}],line:1554},"105":{loc:{start:{line:1559,column:8},end:{line:1561,column:9}},type:"if",locations:[{start:{line:1559,column:8},end:{line:1561,column:9}},{start:{line:1559,column:8},end:{line:1561,column:9}}],line:1559},"106":{loc:{start:{line:1571,column:8},end:{line:1573,column:9}},type:"if",locations:[{start:{line:1571,column:8},end:{line:1573,column:9}},{start:{line:1571,column:8},end:{line:1573,column:9}}],line:1571},"107":{loc:{start:{line:1571,column:12},end:{line:1571,column:50}},type:"binary-expr",locations:[{start:{line:1571,column:12},end:{line:1571,column:23}},{start:{line:1571,column:27},end:{line:1571,column:50}}],line:1571},"108":{loc:{start:{line:1577,column:8},end:{line:1579,column:9}},type:"if",locations:[{start:{line:1577,column:8},end:{line:1579,column:9}},{start:{line:1577,column:8},end:{line:1579,column:9}}],line:1577},"109":{loc:{start:{line:1592,column:8},end:{line:1594,column:9}},type:"if",locations:[{start:{line:1592,column:8},end:{line:1594,column:9}},{start:{line:1592,column:8},end:{line:1594,column:9}}],line:1592},"110":{loc:{start:{line:1595,column:8},end:{line:1597,column:9}},type:"if",locations:[{start:{line:1595,column:8},end:{line:1597,column:9}},{start:{line:1595,column:8},end:{line:1597,column:9}}],line:1595},"111":{loc:{start:{line:1617,column:8},end:{line:1619,column:9}},type:"if",locations:[{start:{line:1617,column:8},end:{line:1619,column:9}},{start:{line:1617,column:8},end:{line:1619,column:9}}],line:1617},"112":{loc:{start:{line:1617,column:12},end:{line:1617,column:50}},type:"binary-expr",locations:[{start:{line:1617,column:12},end:{line:1617,column:23}},{start:{line:1617,column:27},end:{line:1617,column:50}}],line:1617},"113":{loc:{start:{line:1623,column:8},end:{line:1625,column:9}},type:"if",locations:[{start:{line:1623,column:8},end:{line:1625,column:9}},{start:{line:1623,column:8},end:{line:1625,column:9}}],line:1623},"114":{loc:{start:{line:1623,column:12},end:{line:1623,column:56}},type:"binary-expr",locations:[{start:{line:1623,column:12},end:{line:1623,column:26}},{start:{line:1623,column:30},end:{line:1623,column:56}}],line:1623},"115":{loc:{start:{line:1670,column:8},end:{line:1672,column:9}},type:"if",locations:[{start:{line:1670,column:8},end:{line:1672,column:9}},{start:{line:1670,column:8},end:{line:1672,column:9}}],line:1670},"116":{loc:{start:{line:1690,column:8},end:{line:1692,column:9}},type:"if",locations:[{start:{line:1690,column:8},end:{line:1692,column:9}},{start:{line:1690,column:8},end:{line:1692,column:9}}],line:1690},"117":{loc:{start:{line:1690,column:11},end:{line:1690,column:49}},type:"binary-expr",locations:[{start:{line:1690,column:11},end:{line:1690,column:22}},{start:{line:1690,column:26},end:{line:1690,column:49}}],line:1690},"118":{loc:{start:{line:1698,column:8},end:{line:1700,column:9}},type:"if",locations:[{start:{line:1698,column:8},end:{line:1700,column:9}},{start:{line:1698,column:8},end:{line:1700,column:9}}],line:1698},"119":{loc:{start:{line:1698,column:12},end:{line:1698,column:48}},type:"binary-expr",locations:[{start:{line:1698,column:12},end:{line:1698,column:22}},{start:{line:1698,column:26},end:{line:1698,column:48}}],line:1698},"120":{loc:{start:{line:1702,column:8},end:{line:1704,column:9}},type:"if",locations:[{start:{line:1702,column:8},end:{line:1704,column:9}},{start:{line:1702,column:8},end:{line:1704,column:9}}],line:1702},"121":{loc:{start:{line:1705,column:8},end:{line:1707,column:9}},type:"if",locations:[{start:{line:1705,column:8},end:{line:1707,column:9}},{start:{line:1705,column:8},end:{line:1707,column:9}}],line:1705},"122":{loc:{start:{line:1708,column:8},end:{line:1710,column:9}},type:"if",locations:[{start:{line:1708,column:8},end:{line:1710,column:9}},{start:{line:1708,column:8},end:{line:1710,column:9}}],line:1708},"123":{loc:{start:{line:1742,column:8},end:{line:1744,column:9}},type:"if",locations:[{start:{line:1742,column:8},end:{line:1744,column:9}},{start:{line:1742,column:8},end:{line:1744,column:9}}],line:1742},"124":{loc:{start:{line:1742,column:12},end:{line:1742,column:52}},type:"binary-expr",locations:[{start:{line:1742,column:12},end:{line:1742,column:24}},{start:{line:1742,column:28},end:{line:1742,column:52}}],line:1742},"125":{loc:{start:{line:1748,column:8},end:{line:1750,column:9}},type:"if",locations:[{start:{line:1748,column:8},end:{line:1750,column:9}},{start:{line:1748,column:8},end:{line:1750,column:9}}],line:1748},"126":{loc:{start:{line:1748,column:12},end:{line:1748,column:48}},type:"binary-expr",locations:[{start:{line:1748,column:12},end:{line:1748,column:22}},{start:{line:1748,column:26},end:{line:1748,column:48}}],line:1748},"127":{loc:{start:{line:1752,column:8},end:{line:1754,column:9}},type:"if",locations:[{start:{line:1752,column:8},end:{line:1754,column:9}},{start:{line:1752,column:8},end:{line:1754,column:9}}],line:1752},"128":{loc:{start:{line:1804,column:8},end:{line:1806,column:9}},type:"if",locations:[{start:{line:1804,column:8},end:{line:1806,column:9}},{start:{line:1804,column:8},end:{line:1806,column:9}}],line:1804},"129":{loc:{start:{line:1804,column:12},end:{line:1804,column:91}},type:"binary-expr",locations:[{start:{line:1804,column:12},end:{line:1804,column:37}},{start:{line:1804,column:41},end:{line:1804,column:61}},{start:{line:1804,column:65},end:{line:1804,column:91}}],line:1804},"130":{loc:{start:{line:1812,column:12},end:{line:1814,column:13}},type:"if",locations:[{start:{line:1812,column:12},end:{line:1814,column:13}},{start:{line:1812,column:12},end:{line:1814,column:13}}],line:1812},"131":{loc:{start:{line:1816,column:8},end:{line:1833,column:9}},type:"switch",locations:[{start:{line:1817,column:12},end:{line:1820,column:17}},{start:{line:1821,column:12},end:{line:1824,column:17}},{start:{line:1825,column:12},end:{line:1828,column:17}},{start:{line:1829,column:12},end:{line:1832,column:17}}],line:1816},"132":{loc:{start:{line:1818,column:16},end:{line:1820,column:17}},type:"if",locations:[{start:{line:1818,column:16},end:{line:1820,column:17}},{start:{line:1818,column:16},end:{line:1820,column:17}}],line:1818},"133":{loc:{start:{line:1822,column:16},end:{line:1824,column:17}},type:"if",locations:[{start:{line:1822,column:16},end:{line:1824,column:17}},{start:{line:1822,column:16},end:{line:1824,column:17}}],line:1822},"134":{loc:{start:{line:1826,column:16},end:{line:1828,column:17}},type:"if",locations:[{start:{line:1826,column:16},end:{line:1828,column:17}},{start:{line:1826,column:16},end:{line:1828,column:17}}],line:1826},"135":{loc:{start:{line:1830,column:16},end:{line:1832,column:17}},type:"if",locations:[{start:{line:1830,column:16},end:{line:1832,column:17}},{start:{line:1830,column:16},end:{line:1832,column:17}}],line:1830},"136":{loc:{start:{line:1830,column:20},end:{line:1830,column:69}},type:"binary-expr",locations:[{start:{line:1830,column:20},end:{line:1830,column:45}},{start:{line:1830,column:49},end:{line:1830,column:69}}],line:1830},"137":{loc:{start:{line:1853,column:8},end:{line:1857,column:9}},type:"if",locations:[{start:{line:1853,column:8},end:{line:1857,column:9}},{start:{line:1853,column:8},end:{line:1857,column:9}}],line:1853},"138":{loc:{start:{line:1855,column:14},end:{line:1857,column:9}},type:"if",locations:[{start:{line:1855,column:14},end:{line:1857,column:9}},{start:{line:1855,column:14},end:{line:1857,column:9}}],line:1855},"139":{loc:{start:{line:1904,column:12},end:{line:1907,column:13}},type:"if",locations:[{start:{line:1904,column:12},end:{line:1907,column:13}},{start:{line:1904,column:12},end:{line:1907,column:13}}],line:1904},"140":{loc:{start:{line:1908,column:12},end:{line:1910,column:13}},type:"if",locations:[{start:{line:1908,column:12},end:{line:1910,column:13}},{start:{line:1908,column:12},end:{line:1910,column:13}}],line:1908},"141":{loc:{start:{line:1912,column:8},end:{line:1915,column:9}},type:"if",locations:[{start:{line:1912,column:8},end:{line:1915,column:9}},{start:{line:1912,column:8},end:{line:1915,column:9}}],line:1912},"142":{loc:{start:{line:1912,column:12},end:{line:1912,column:60}},type:"binary-expr",locations:[{start:{line:1912,column:12},end:{line:1912,column:35}},{start:{line:1912,column:39},end:{line:1912,column:60}}],line:1912},"143":{loc:{start:{line:1930,column:8},end:{line:1932,column:9}},type:"if",locations:[{start:{line:1930,column:8},end:{line:1932,column:9}},{start:{line:1930,column:8},end:{line:1932,column:9}}],line:1930},"144":{loc:{start:{line:1930,column:12},end:{line:1930,column:50}},type:"binary-expr",locations:[{start:{line:1930,column:12},end:{line:1930,column:23}},{start:{line:1930,column:27},end:{line:1930,column:50}}],line:1930},"145":{loc:{start:{line:1935,column:8},end:{line:1937,column:9}},type:"if",locations:[{start:{line:1935,column:8},end:{line:1937,column:9}},{start:{line:1935,column:8},end:{line:1937,column:9}}],line:1935},"146":{loc:{start:{line:1939,column:8},end:{line:1941,column:9}},type:"if",locations:[{start:{line:1939,column:8},end:{line:1941,column:9}},{start:{line:1939,column:8},end:{line:1941,column:9}}],line:1939},"147":{loc:{start:{line:1973,column:8},end:{line:1975,column:9}},type:"if",locations:[{start:{line:1973,column:8},end:{line:1975,column:9}},{start:{line:1973,column:8},end:{line:1975,column:9}}],line:1973},"148":{loc:{start:{line:1983,column:8},end:{line:1985,column:9}},type:"if",locations:[{start:{line:1983,column:8},end:{line:1985,column:9}},{start:{line:1983,column:8},end:{line:1985,column:9}}],line:1983},"149":{loc:{start:{line:1983,column:12},end:{line:1983,column:48}},type:"binary-expr",locations:[{start:{line:1983,column:12},end:{line:1983,column:22}},{start:{line:1983,column:26},end:{line:1983,column:48}}],line:1983},"150":{loc:{start:{line:1988,column:8},end:{line:1990,column:9}},type:"if",locations:[{start:{line:1988,column:8},end:{line:1990,column:9}},{start:{line:1988,column:8},end:{line:1990,column:9}}],line:1988},"151":{loc:{start:{line:1991,column:8},end:{line:1993,column:9}},type:"if",locations:[{start:{line:1991,column:8},end:{line:1993,column:9}},{start:{line:1991,column:8},end:{line:1993,column:9}}],line:1991},"152":{loc:{start:{line:2022,column:8},end:{line:2044,column:9}},type:"if",locations:[{start:{line:2022,column:8},end:{line:2044,column:9}},{start:{line:2022,column:8},end:{line:2044,column:9}}],line:2022},"153":{loc:{start:{line:2052,column:39},end:{line:2052,column:215}},type:"cond-expr",locations:[{start:{line:2052,column:123},end:{line:2052,column:124}},{start:{line:2052,column:127},end:{line:2052,column:215}}],line:2052},"154":{loc:{start:{line:2052,column:40},end:{line:2052,column:119}},type:"binary-expr",locations:[{start:{line:2052,column:40},end:{line:2052,column:53}},{start:{line:2052,column:57},end:{line:2052,column:69}},{start:{line:2052,column:73},end:{line:2052,column:85}},{start:{line:2052,column:89},end:{line:2052,column:102}},{start:{line:2052,column:106},end:{line:2052,column:119}}],line:2052},"155":{loc:{start:{line:2052,column:127},end:{line:2052,column:215}},type:"cond-expr",locations:[{start:{line:2052,column:210},end:{line:2052,column:212}},{start:{line:2052,column:214},end:{line:2052,column:215}}],line:2052},"156":{loc:{start:{line:2052,column:128},end:{line:2052,column:207}},type:"binary-expr",locations:[{start:{line:2052,column:128},end:{line:2052,column:141}},{start:{line:2052,column:145},end:{line:2052,column:157}},{start:{line:2052,column:161},end:{line:2052,column:173}},{start:{line:2052,column:177},end:{line:2052,column:190}},{start:{line:2052,column:194},end:{line:2052,column:207}}],line:2052},"157":{loc:{start:{line:2053,column:39},end:{line:2053,column:118}},type:"cond-expr",locations:[{start:{line:2053,column:61},end:{line:2053,column:62}},{start:{line:2053,column:66},end:{line:2053,column:117}}],line:2053},"158":{loc:{start:{line:2053,column:66},end:{line:2053,column:117}},type:"cond-expr",locations:[{start:{line:2053,column:88},end:{line:2053,column:90}},{start:{line:2053,column:93},end:{line:2053,column:117}}],line:2053},"159":{loc:{start:{line:2053,column:93},end:{line:2053,column:117}},type:"cond-expr",locations:[{start:{line:2053,column:111},end:{line:2053,column:112}},{start:{line:2053,column:115},end:{line:2053,column:117}}],line:2053},"160":{loc:{start:{line:2054,column:39},end:{line:2054,column:113}},type:"cond-expr",locations:[{start:{line:2054,column:71},end:{line:2054,column:73}},{start:{line:2054,column:76},end:{line:2054,column:112}}],line:2054},"161":{loc:{start:{line:2054,column:40},end:{line:2054,column:67}},type:"binary-expr",locations:[{start:{line:2054,column:40},end:{line:2054,column:52}},{start:{line:2054,column:56},end:{line:2054,column:67}}],line:2054},"162":{loc:{start:{line:2054,column:76},end:{line:2054,column:112}},type:"cond-expr",locations:[{start:{line:2054,column:106},end:{line:2054,column:108}},{start:{line:2054,column:111},end:{line:2054,column:112}}],line:2054},"163":{loc:{start:{line:2054,column:76},end:{line:2054,column:103}},type:"binary-expr",locations:[{start:{line:2054,column:76},end:{line:2054,column:88}},{start:{line:2054,column:92},end:{line:2054,column:103}}],line:2054},"164":{loc:{start:{line:2061,column:39},end:{line:2061,column:215}},type:"cond-expr",locations:[{start:{line:2061,column:123},end:{line:2061,column:124}},{start:{line:2061,column:127},end:{line:2061,column:215}}],line:2061},"165":{loc:{start:{line:2061,column:40},end:{line:2061,column:119}},type:"binary-expr",locations:[{start:{line:2061,column:40},end:{line:2061,column:53}},{start:{line:2061,column:57},end:{line:2061,column:69}},{start:{line:2061,column:73},end:{line:2061,column:85}},{start:{line:2061,column:89},end:{line:2061,column:102}},{start:{line:2061,column:106},end:{line:2061,column:119}}],line:2061},"166":{loc:{start:{line:2061,column:127},end:{line:2061,column:215}},type:"cond-expr",locations:[{start:{line:2061,column:210},end:{line:2061,column:212}},{start:{line:2061,column:214},end:{line:2061,column:215}}],line:2061},"167":{loc:{start:{line:2061,column:128},end:{line:2061,column:207}},type:"binary-expr",locations:[{start:{line:2061,column:128},end:{line:2061,column:141}},{start:{line:2061,column:145},end:{line:2061,column:157}},{start:{line:2061,column:161},end:{line:2061,column:173}},{start:{line:2061,column:177},end:{line:2061,column:190}},{start:{line:2061,column:194},end:{line:2061,column:207}}],line:2061},"168":{loc:{start:{line:2062,column:39},end:{line:2062,column:118}},type:"cond-expr",locations:[{start:{line:2062,column:61},end:{line:2062,column:63}},{start:{line:2062,column:67},end:{line:2062,column:117}}],line:2062},"169":{loc:{start:{line:2062,column:67},end:{line:2062,column:117}},type:"cond-expr",locations:[{start:{line:2062,column:89},end:{line:2062,column:90}},{start:{line:2062,column:93},end:{line:2062,column:117}}],line:2062},"170":{loc:{start:{line:2062,column:93},end:{line:2062,column:117}},type:"cond-expr",locations:[{start:{line:2062,column:111},end:{line:2062,column:112}},{start:{line:2062,column:115},end:{line:2062,column:117}}],line:2062},"171":{loc:{start:{line:2063,column:39},end:{line:2063,column:113}},type:"cond-expr",locations:[{start:{line:2063,column:71},end:{line:2063,column:73}},{start:{line:2063,column:76},end:{line:2063,column:112}}],line:2063},"172":{loc:{start:{line:2063,column:40},end:{line:2063,column:67}},type:"binary-expr",locations:[{start:{line:2063,column:40},end:{line:2063,column:52}},{start:{line:2063,column:56},end:{line:2063,column:67}}],line:2063},"173":{loc:{start:{line:2063,column:76},end:{line:2063,column:112}},type:"cond-expr",locations:[{start:{line:2063,column:106},end:{line:2063,column:108}},{start:{line:2063,column:111},end:{line:2063,column:112}}],line:2063},"174":{loc:{start:{line:2063,column:76},end:{line:2063,column:103}},type:"binary-expr",locations:[{start:{line:2063,column:76},end:{line:2063,column:88}},{start:{line:2063,column:92},end:{line:2063,column:103}}],line:2063},"175":{loc:{start:{line:2073,column:8},end:{line:2075,column:9}},type:"if",locations:[{start:{line:2073,column:8},end:{line:2075,column:9}},{start:{line:2073,column:8},end:{line:2075,column:9}}],line:2073},"176":{loc:{start:{line:2073,column:12},end:{line:2073,column:33}},type:"binary-expr",locations:[{start:{line:2073,column:12},end:{line:2073,column:21}},{start:{line:2073,column:25},end:{line:2073,column:33}}],line:2073},"177":{loc:{start:{line:2081,column:8},end:{line:2085,column:9}},type:"if",locations:[{start:{line:2081,column:8},end:{line:2085,column:9}},{start:{line:2081,column:8},end:{line:2085,column:9}}],line:2081},"178":{loc:{start:{line:2081,column:12},end:{line:2081,column:58}},type:"binary-expr",locations:[{start:{line:2081,column:12},end:{line:2081,column:27}},{start:{line:2081,column:31},end:{line:2081,column:58}}],line:2081},"179":{loc:{start:{line:2093,column:8},end:{line:2095,column:9}},type:"if",locations:[{start:{line:2093,column:8},end:{line:2095,column:9}},{start:{line:2093,column:8},end:{line:2095,column:9}}],line:2093},"180":{loc:{start:{line:2093,column:12},end:{line:2093,column:50}},type:"binary-expr",locations:[{start:{line:2093,column:12},end:{line:2093,column:23}},{start:{line:2093,column:27},end:{line:2093,column:50}}],line:2093},"181":{loc:{start:{line:2097,column:8},end:{line:2099,column:9}},type:"if",locations:[{start:{line:2097,column:8},end:{line:2099,column:9}},{start:{line:2097,column:8},end:{line:2099,column:9}}],line:2097},"182":{loc:{start:{line:2125,column:8},end:{line:2147,column:9}},type:"if",locations:[{start:{line:2125,column:8},end:{line:2147,column:9}},{start:{line:2125,column:8},end:{line:2147,column:9}}],line:2125},"183":{loc:{start:{line:2161,column:12},end:{line:2212,column:13}},type:"if",locations:[{start:{line:2161,column:12},end:{line:2212,column:13}},{start:{line:2161,column:12},end:{line:2212,column:13}}],line:2161},"184":{loc:{start:{line:2161,column:16},end:{line:2161,column:63}},type:"binary-expr",locations:[{start:{line:2161,column:16},end:{line:2161,column:45}},{start:{line:2161,column:49},end:{line:2161,column:63}}],line:2161},"185":{loc:{start:{line:2166,column:16},end:{line:2211,column:17}},type:"if",locations:[{start:{line:2166,column:16},end:{line:2211,column:17}},{start:{line:2166,column:16},end:{line:2211,column:17}}],line:2166},"186":{loc:{start:{line:2185,column:20},end:{line:2210,column:21}},type:"if",locations:[{start:{line:2185,column:20},end:{line:2210,column:21}},{start:{line:2185,column:20},end:{line:2210,column:21}}],line:2185},"187":{loc:{start:{line:2195,column:27},end:{line:2210,column:21}},type:"if",locations:[{start:{line:2195,column:27},end:{line:2210,column:21}},{start:{line:2195,column:27},end:{line:2210,column:21}}],line:2195},"188":{loc:{start:{line:2195,column:30},end:{line:2195,column:53}},type:"binary-expr",locations:[{start:{line:2195,column:30},end:{line:2195,column:40}},{start:{line:2195,column:44},end:{line:2195,column:53}}],line:2195},"189":{loc:{start:{line:2214,column:8},end:{line:2216,column:9}},type:"if",locations:[{start:{line:2214,column:8},end:{line:2216,column:9}},{start:{line:2214,column:8},end:{line:2216,column:9}}],line:2214},"190":{loc:{start:{line:2220,column:8},end:{line:2240,column:9}},type:"if",locations:[{start:{line:2220,column:8},end:{line:2240,column:9}},{start:{line:2220,column:8},end:{line:2240,column:9}}],line:2220},"191":{loc:{start:{line:2227,column:14},end:{line:2240,column:9}},type:"if",locations:[{start:{line:2227,column:14},end:{line:2240,column:9}},{start:{line:2227,column:14},end:{line:2240,column:9}}],line:2227},"192":{loc:{start:{line:2227,column:17},end:{line:2227,column:63}},type:"binary-expr",locations:[{start:{line:2227,column:17},end:{line:2227,column:28}},{start:{line:2227,column:32},end:{line:2227,column:63}}],line:2227},"193":{loc:{start:{line:2248,column:8},end:{line:2257,column:9}},type:"if",locations:[{start:{line:2248,column:8},end:{line:2257,column:9}},{start:{line:2248,column:8},end:{line:2257,column:9}}],line:2248},"194":{loc:{start:{line:2268,column:8},end:{line:2270,column:9}},type:"if",locations:[{start:{line:2268,column:8},end:{line:2270,column:9}},{start:{line:2268,column:8},end:{line:2270,column:9}}],line:2268},"195":{loc:{start:{line:2268,column:12},end:{line:2268,column:33}},type:"binary-expr",locations:[{start:{line:2268,column:12},end:{line:2268,column:21}},{start:{line:2268,column:25},end:{line:2268,column:33}}],line:2268},"196":{loc:{start:{line:2277,column:8},end:{line:2279,column:9}},type:"if",locations:[{start:{line:2277,column:8},end:{line:2279,column:9}},{start:{line:2277,column:8},end:{line:2279,column:9}}],line:2277},"197":{loc:{start:{line:2277,column:12},end:{line:2277,column:48}},type:"binary-expr",locations:[{start:{line:2277,column:12},end:{line:2277,column:22}},{start:{line:2277,column:26},end:{line:2277,column:48}}],line:2277},"198":{loc:{start:{line:2281,column:8},end:{line:2283,column:9}},type:"if",locations:[{start:{line:2281,column:8},end:{line:2283,column:9}},{start:{line:2281,column:8},end:{line:2283,column:9}}],line:2281},"199":{loc:{start:{line:2284,column:8},end:{line:2286,column:9}},type:"if",locations:[{start:{line:2284,column:8},end:{line:2286,column:9}},{start:{line:2284,column:8},end:{line:2286,column:9}}],line:2284},"200":{loc:{start:{line:2289,column:8},end:{line:2293,column:9}},type:"if",locations:[{start:{line:2289,column:8},end:{line:2293,column:9}},{start:{line:2289,column:8},end:{line:2293,column:9}}],line:2289},"201":{loc:{start:{line:2289,column:12},end:{line:2289,column:58}},type:"binary-expr",locations:[{start:{line:2289,column:12},end:{line:2289,column:27}},{start:{line:2289,column:31},end:{line:2289,column:58}}],line:2289},"202":{loc:{start:{line:2315,column:8},end:{line:2336,column:9}},type:"if",locations:[{start:{line:2315,column:8},end:{line:2336,column:9}},{start:{line:2315,column:8},end:{line:2336,column:9}}],line:2315},"203":{loc:{start:{line:2347,column:12},end:{line:2374,column:13}},type:"if",locations:[{start:{line:2347,column:12},end:{line:2374,column:13}},{start:{line:2347,column:12},end:{line:2374,column:13}}],line:2347},"204":{loc:{start:{line:2347,column:16},end:{line:2347,column:63}},type:"binary-expr",locations:[{start:{line:2347,column:16},end:{line:2347,column:45}},{start:{line:2347,column:49},end:{line:2347,column:63}}],line:2347},"205":{loc:{start:{line:2350,column:16},end:{line:2373,column:17}},type:"if",locations:[{start:{line:2350,column:16},end:{line:2373,column:17}},{start:{line:2350,column:16},end:{line:2373,column:17}}],line:2350},"206":{loc:{start:{line:2360,column:23},end:{line:2373,column:17}},type:"if",locations:[{start:{line:2360,column:23},end:{line:2373,column:17}},{start:{line:2360,column:23},end:{line:2373,column:17}}],line:2360},"207":{loc:{start:{line:2360,column:26},end:{line:2360,column:48}},type:"binary-expr",locations:[{start:{line:2360,column:26},end:{line:2360,column:35}},{start:{line:2360,column:39},end:{line:2360,column:48}}],line:2360},"208":{loc:{start:{line:2379,column:8},end:{line:2399,column:9}},type:"if",locations:[{start:{line:2379,column:8},end:{line:2399,column:9}},{start:{line:2379,column:8},end:{line:2399,column:9}}],line:2379},"209":{loc:{start:{line:2386,column:14},end:{line:2399,column:9}},type:"if",locations:[{start:{line:2386,column:14},end:{line:2399,column:9}},{start:{line:2386,column:14},end:{line:2399,column:9}}],line:2386},"210":{loc:{start:{line:2386,column:17},end:{line:2386,column:63}},type:"binary-expr",locations:[{start:{line:2386,column:17},end:{line:2386,column:28}},{start:{line:2386,column:32},end:{line:2386,column:63}}],line:2386},"211":{loc:{start:{line:2410,column:8},end:{line:2420,column:9}},type:"if",locations:[{start:{line:2410,column:8},end:{line:2420,column:9}},{start:{line:2410,column:8},end:{line:2420,column:9}}],line:2410},"212":{loc:{start:{line:2426,column:8},end:{line:2428,column:9}},type:"if",locations:[{start:{line:2426,column:8},end:{line:2428,column:9}},{start:{line:2426,column:8},end:{line:2428,column:9}}],line:2426},"213":{loc:{start:{line:2434,column:8},end:{line:2436,column:9}},type:"if",locations:[{start:{line:2434,column:8},end:{line:2436,column:9}},{start:{line:2434,column:8},end:{line:2436,column:9}}],line:2434},"214":{loc:{start:{line:2434,column:12},end:{line:2434,column:48}},type:"binary-expr",locations:[{start:{line:2434,column:12},end:{line:2434,column:22}},{start:{line:2434,column:26},end:{line:2434,column:48}}],line:2434},"215":{loc:{start:{line:2440,column:8},end:{line:2442,column:9}},type:"if",locations:[{start:{line:2440,column:8},end:{line:2442,column:9}},{start:{line:2440,column:8},end:{line:2442,column:9}}],line:2440},"216":{loc:{start:{line:2443,column:8},end:{line:2445,column:9}},type:"if",locations:[{start:{line:2443,column:8},end:{line:2445,column:9}},{start:{line:2443,column:8},end:{line:2445,column:9}}],line:2443},"217":{loc:{start:{line:2449,column:8},end:{line:2453,column:9}},type:"if",locations:[{start:{line:2449,column:8},end:{line:2453,column:9}},{start:{line:2449,column:8},end:{line:2453,column:9}}],line:2449},"218":{loc:{start:{line:2449,column:12},end:{line:2449,column:58}},type:"binary-expr",locations:[{start:{line:2449,column:12},end:{line:2449,column:27}},{start:{line:2449,column:31},end:{line:2449,column:58}}],line:2449},"219":{loc:{start:{line:2475,column:8},end:{line:2479,column:9}},type:"if",locations:[{start:{line:2475,column:8},end:{line:2479,column:9}},{start:{line:2475,column:8},end:{line:2479,column:9}}],line:2475},"220":{loc:{start:{line:2490,column:12},end:{line:2528,column:13}},type:"if",locations:[{start:{line:2490,column:12},end:{line:2528,column:13}},{start:{line:2490,column:12},end:{line:2528,column:13}}],line:2490},"221":{loc:{start:{line:2493,column:16},end:{line:2527,column:17}},type:"if",locations:[{start:{line:2493,column:16},end:{line:2527,column:17}},{start:{line:2493,column:16},end:{line:2527,column:17}}],line:2493},"222":{loc:{start:{line:2503,column:23},end:{line:2527,column:17}},type:"if",locations:[{start:{line:2503,column:23},end:{line:2527,column:17}},{start:{line:2503,column:23},end:{line:2527,column:17}}],line:2503},"223":{loc:{start:{line:2503,column:26},end:{line:2503,column:48}},type:"binary-expr",locations:[{start:{line:2503,column:26},end:{line:2503,column:35}},{start:{line:2503,column:39},end:{line:2503,column:48}}],line:2503},"224":{loc:{start:{line:2534,column:8},end:{line:2554,column:9}},type:"if",locations:[{start:{line:2534,column:8},end:{line:2554,column:9}},{start:{line:2534,column:8},end:{line:2554,column:9}}],line:2534},"225":{loc:{start:{line:2541,column:14},end:{line:2554,column:9}},type:"if",locations:[{start:{line:2541,column:14},end:{line:2554,column:9}},{start:{line:2541,column:14},end:{line:2554,column:9}}],line:2541},"226":{loc:{start:{line:2541,column:17},end:{line:2541,column:63}},type:"binary-expr",locations:[{start:{line:2541,column:17},end:{line:2541,column:28}},{start:{line:2541,column:32},end:{line:2541,column:63}}],line:2541},"227":{loc:{start:{line:2564,column:8},end:{line:2574,column:9}},type:"if",locations:[{start:{line:2564,column:8},end:{line:2574,column:9}},{start:{line:2564,column:8},end:{line:2574,column:9}}],line:2564},"228":{loc:{start:{line:2580,column:8},end:{line:2582,column:9}},type:"if",locations:[{start:{line:2580,column:8},end:{line:2582,column:9}},{start:{line:2580,column:8},end:{line:2582,column:9}}],line:2580},"229":{loc:{start:{line:2587,column:8},end:{line:2591,column:9}},type:"if",locations:[{start:{line:2587,column:8},end:{line:2591,column:9}},{start:{line:2587,column:8},end:{line:2591,column:9}}],line:2587},"230":{loc:{start:{line:2587,column:12},end:{line:2587,column:58}},type:"binary-expr",locations:[{start:{line:2587,column:12},end:{line:2587,column:27}},{start:{line:2587,column:31},end:{line:2587,column:58}}],line:2587},"231":{loc:{start:{line:2597,column:8},end:{line:2599,column:9}},type:"if",locations:[{start:{line:2597,column:8},end:{line:2599,column:9}},{start:{line:2597,column:8},end:{line:2599,column:9}}],line:2597},"232":{loc:{start:{line:2597,column:12},end:{line:2597,column:50}},type:"binary-expr",locations:[{start:{line:2597,column:12},end:{line:2597,column:23}},{start:{line:2597,column:27},end:{line:2597,column:50}}],line:2597},"233":{loc:{start:{line:2601,column:8},end:{line:2603,column:9}},type:"if",locations:[{start:{line:2601,column:8},end:{line:2603,column:9}},{start:{line:2601,column:8},end:{line:2603,column:9}}],line:2601},"234":{loc:{start:{line:2626,column:8},end:{line:2630,column:9}},type:"if",locations:[{start:{line:2626,column:8},end:{line:2630,column:9}},{start:{line:2626,column:8},end:{line:2630,column:9}}],line:2626},"235":{loc:{start:{line:2642,column:12},end:{line:2690,column:13}},type:"if",locations:[{start:{line:2642,column:12},end:{line:2690,column:13}},{start:{line:2642,column:12},end:{line:2690,column:13}}],line:2642},"236":{loc:{start:{line:2647,column:16},end:{line:2689,column:17}},type:"if",locations:[{start:{line:2647,column:16},end:{line:2689,column:17}},{start:{line:2647,column:16},end:{line:2689,column:17}}],line:2647},"237":{loc:{start:{line:2665,column:20},end:{line:2688,column:21}},type:"if",locations:[{start:{line:2665,column:20},end:{line:2688,column:21}},{start:{line:2665,column:20},end:{line:2688,column:21}}],line:2665},"238":{loc:{start:{line:2675,column:27},end:{line:2688,column:21}},type:"if",locations:[{start:{line:2675,column:27},end:{line:2688,column:21}},{start:{line:2675,column:27},end:{line:2688,column:21}}],line:2675},"239":{loc:{start:{line:2675,column:30},end:{line:2675,column:53}},type:"binary-expr",locations:[{start:{line:2675,column:30},end:{line:2675,column:40}},{start:{line:2675,column:44},end:{line:2675,column:53}}],line:2675},"240":{loc:{start:{line:2694,column:8},end:{line:2714,column:9}},type:"if",locations:[{start:{line:2694,column:8},end:{line:2714,column:9}},{start:{line:2694,column:8},end:{line:2714,column:9}}],line:2694},"241":{loc:{start:{line:2701,column:14},end:{line:2714,column:9}},type:"if",locations:[{start:{line:2701,column:14},end:{line:2714,column:9}},{start:{line:2701,column:14},end:{line:2714,column:9}}],line:2701},"242":{loc:{start:{line:2701,column:17},end:{line:2701,column:63}},type:"binary-expr",locations:[{start:{line:2701,column:17},end:{line:2701,column:28}},{start:{line:2701,column:32},end:{line:2701,column:63}}],line:2701},"243":{loc:{start:{line:2721,column:8},end:{line:2730,column:9}},type:"if",locations:[{start:{line:2721,column:8},end:{line:2730,column:9}},{start:{line:2721,column:8},end:{line:2730,column:9}}],line:2721},"244":{loc:{start:{line:2737,column:8},end:{line:2739,column:9}},type:"if",locations:[{start:{line:2737,column:8},end:{line:2739,column:9}},{start:{line:2737,column:8},end:{line:2739,column:9}}],line:2737},"245":{loc:{start:{line:2737,column:12},end:{line:2737,column:58}},type:"binary-expr",locations:[{start:{line:2737,column:12},end:{line:2737,column:27}},{start:{line:2737,column:31},end:{line:2737,column:58}}],line:2737},"246":{loc:{start:{line:2745,column:8},end:{line:2747,column:9}},type:"if",locations:[{start:{line:2745,column:8},end:{line:2747,column:9}},{start:{line:2745,column:8},end:{line:2747,column:9}}],line:2745},"247":{loc:{start:{line:2745,column:12},end:{line:2745,column:60}},type:"binary-expr",locations:[{start:{line:2745,column:12},end:{line:2745,column:28}},{start:{line:2745,column:32},end:{line:2745,column:60}}],line:2745},"248":{loc:{start:{line:2771,column:8},end:{line:2779,column:9}},type:"if",locations:[{start:{line:2771,column:8},end:{line:2779,column:9}},{start:{line:2771,column:8},end:{line:2779,column:9}}],line:2771},"249":{loc:{start:{line:2790,column:8},end:{line:2796,column:9}},type:"if",locations:[{start:{line:2790,column:8},end:{line:2796,column:9}},{start:{line:2790,column:8},end:{line:2796,column:9}}],line:2790},"250":{loc:{start:{line:2793,column:14},end:{line:2796,column:9}},type:"if",locations:[{start:{line:2793,column:14},end:{line:2796,column:9}},{start:{line:2793,column:14},end:{line:2796,column:9}}],line:2793},"251":{loc:{start:{line:2806,column:8},end:{line:2812,column:9}},type:"if",locations:[{start:{line:2806,column:8},end:{line:2812,column:9}},{start:{line:2806,column:8},end:{line:2812,column:9}}],line:2806},"252":{loc:{start:{line:2809,column:14},end:{line:2812,column:9}},type:"if",locations:[{start:{line:2809,column:14},end:{line:2812,column:9}},{start:{line:2809,column:14},end:{line:2812,column:9}}],line:2809},"253":{loc:{start:{line:2821,column:8},end:{line:2823,column:9}},type:"if",locations:[{start:{line:2821,column:8},end:{line:2823,column:9}},{start:{line:2821,column:8},end:{line:2823,column:9}}],line:2821},"254":{loc:{start:{line:2821,column:12},end:{line:2821,column:58}},type:"binary-expr",locations:[{start:{line:2821,column:12},end:{line:2821,column:27}},{start:{line:2821,column:31},end:{line:2821,column:58}}],line:2821},"255":{loc:{start:{line:2831,column:8},end:{line:2833,column:9}},type:"if",locations:[{start:{line:2831,column:8},end:{line:2833,column:9}},{start:{line:2831,column:8},end:{line:2833,column:9}}],line:2831},"256":{loc:{start:{line:2831,column:12},end:{line:2831,column:60}},type:"binary-expr",locations:[{start:{line:2831,column:12},end:{line:2831,column:28}},{start:{line:2831,column:32},end:{line:2831,column:60}}],line:2831},"257":{loc:{start:{line:2855,column:8},end:{line:2863,column:9}},type:"if",locations:[{start:{line:2855,column:8},end:{line:2863,column:9}},{start:{line:2855,column:8},end:{line:2863,column:9}}],line:2855},"258":{loc:{start:{line:2871,column:8},end:{line:2877,column:9}},type:"if",locations:[{start:{line:2871,column:8},end:{line:2877,column:9}},{start:{line:2871,column:8},end:{line:2877,column:9}}],line:2871},"259":{loc:{start:{line:2874,column:14},end:{line:2877,column:9}},type:"if",locations:[{start:{line:2874,column:14},end:{line:2877,column:9}},{start:{line:2874,column:14},end:{line:2877,column:9}}],line:2874},"260":{loc:{start:{line:2887,column:8},end:{line:2893,column:9}},type:"if",locations:[{start:{line:2887,column:8},end:{line:2893,column:9}},{start:{line:2887,column:8},end:{line:2893,column:9}}],line:2887},"261":{loc:{start:{line:2890,column:14},end:{line:2893,column:9}},type:"if",locations:[{start:{line:2890,column:14},end:{line:2893,column:9}},{start:{line:2890,column:14},end:{line:2893,column:9}}],line:2890},"262":{loc:{start:{line:2904,column:8},end:{line:2906,column:9}},type:"if",locations:[{start:{line:2904,column:8},end:{line:2906,column:9}},{start:{line:2904,column:8},end:{line:2906,column:9}}],line:2904},"263":{loc:{start:{line:2904,column:12},end:{line:2904,column:50}},type:"binary-expr",locations:[{start:{line:2904,column:12},end:{line:2904,column:23}},{start:{line:2904,column:27},end:{line:2904,column:50}}],line:2904},"264":{loc:{start:{line:2910,column:8},end:{line:2912,column:9}},type:"if",locations:[{start:{line:2910,column:8},end:{line:2912,column:9}},{start:{line:2910,column:8},end:{line:2912,column:9}}],line:2910},"265":{loc:{start:{line:2910,column:12},end:{line:2910,column:48}},type:"binary-expr",locations:[{start:{line:2910,column:12},end:{line:2910,column:22}},{start:{line:2910,column:26},end:{line:2910,column:48}}],line:2910},"266":{loc:{start:{line:2979,column:8},end:{line:2981,column:9}},type:"if",locations:[{start:{line:2979,column:8},end:{line:2981,column:9}},{start:{line:2979,column:8},end:{line:2981,column:9}}],line:2979},"267":{loc:{start:{line:2982,column:8},end:{line:2984,column:9}},type:"if",locations:[{start:{line:2982,column:8},end:{line:2984,column:9}},{start:{line:2982,column:8},end:{line:2984,column:9}}],line:2982}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0},b:{"0":[0,0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0,0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0,0],"91":[0,0],"92":[0,0,0,0,0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0,0],"130":[0,0],"131":[0,0,0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0,0,0,0],"155":[0,0],"156":[0,0,0,0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0,0,0,0],"166":[0,0],"167":[0,0,0,0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"bd174a32108d3681a68ebf653dd303d99306a75f"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{Contract,Context}=(cov_7ffl2vh04.s[0]++,require('fabric-contract-api'));const{Buffer}=(cov_7ffl2vh04.s[1]++,require('safe-buffer'));class securitizationContext extends Context{constructor(){cov_7ffl2vh04.f[0]++;cov_7ffl2vh04.s[2]++;super();}GetMSPID(){cov_7ffl2vh04.f[1]++;cov_7ffl2vh04.s[3]++;return this.clientIdentity.getMSPID();}GetUserIdentity(value){cov_7ffl2vh04.f[2]++;cov_7ffl2vh04.s[4]++;return this.clientIdentity.getAttributeValue(value);}SetUserIdentity(userIdentity){cov_7ffl2vh04.f[3]++;cov_7ffl2vh04.s[5]++;this.userIdentity=userIdentity;// return this.clientIdentity.getAttributeValue('userIdentity')
}GetRole(){cov_7ffl2vh04.f[4]++;cov_7ffl2vh04.s[6]++;return this.clientIdentity.assertAttributeValue('hf.role','client');}// SetMSPID provides a value for MSP ID
SetMSPID(mspid){cov_7ffl2vh04.f[5]++;cov_7ffl2vh04.s[7]++;this.mspid=mspid;}// GetTransient returns set MSP ID
GetTransient(){cov_7ffl2vh04.f[6]++;cov_7ffl2vh04.s[8]++;return this.stub.getTransient();}// SetTransient provides a value for MSP ID
SetTransient(transient){cov_7ffl2vh04.f[7]++;cov_7ffl2vh04.s[9]++;this.transient=transient;}CheckFormat(number,numberCase){cov_7ffl2vh04.f[8]++;let index;let count;// Our token will have 2 decimals, like fiat currencies
// In nodejs every atribute is passed as a string
// First check if it is a number
// number.stringify()
// if(typeof number !=='number'){
//     throw new Error('Wrong notation');
// }
// Not necessary, we are working with 2decimal-numbers
// Integer between -2^53-1 and 2^53-1
// if (!Number.isSafeInteger(number)){
//     throw new Error('Wrong number');
// }
// Check if it is a 2decimal-number
cov_7ffl2vh04.s[10]++;switch(numberCase==='float'?(cov_7ffl2vh04.b[1][0]++,0):(cov_7ffl2vh04.b[1][1]++,numberCase==='int'?(cov_7ffl2vh04.b[2][0]++,1):(cov_7ffl2vh04.b[2][1]++,2))){// Numero con decimales
case 0:cov_7ffl2vh04.b[0][0]++;cov_7ffl2vh04.s[11]++;console.log('Case 0');cov_7ffl2vh04.s[12]++;count=0;cov_7ffl2vh04.s[13]++;for(let i=(cov_7ffl2vh04.s[14]++,0);i<number.length;i++){cov_7ffl2vh04.s[15]++;if(numberString[i]==='.'){cov_7ffl2vh04.b[3][0]++;cov_7ffl2vh04.s[16]++;index=i;cov_7ffl2vh04.s[17]++;count=count+1;}else{cov_7ffl2vh04.b[3][1]++;cov_7ffl2vh04.s[18]++;if(numberString[i]===','){cov_7ffl2vh04.b[4][0]++;cov_7ffl2vh04.s[19]++;throw new Error('Wrong format. Try using dot instead of comma');}else{cov_7ffl2vh04.b[4][1]++;}}}cov_7ffl2vh04.s[20]++;if((cov_7ffl2vh04.b[6][0]++,number.length-1-index>2)||(cov_7ffl2vh04.b[6][1]++,count>1)){cov_7ffl2vh04.b[5][0]++;cov_7ffl2vh04.s[21]++;throw new Error('Wrong decimals');}else{cov_7ffl2vh04.b[5][1]++;}// Check if it is strictly positive
cov_7ffl2vh04.s[22]++;number=parseFloat(number);cov_7ffl2vh04.s[23]++;if(number<=0){cov_7ffl2vh04.b[7][0]++;cov_7ffl2vh04.s[24]++;throw new Error('Number must be strictly positive');}else{cov_7ffl2vh04.b[7][1]++;}cov_7ffl2vh04.s[25]++;return true;case 1:cov_7ffl2vh04.b[0][1]++;cov_7ffl2vh04.s[26]++;console.log('Case 1');cov_7ffl2vh04.s[27]++;count=0;cov_7ffl2vh04.s[28]++;for(let i=(cov_7ffl2vh04.s[29]++,0);i<number.length;i++){cov_7ffl2vh04.s[30]++;if(numberString[i]==='.'){cov_7ffl2vh04.b[8][0]++;cov_7ffl2vh04.s[31]++;throw new Error('Wrong format. This number is supposed to be integer');}else{cov_7ffl2vh04.b[8][1]++;cov_7ffl2vh04.s[32]++;if(numberString[i]===','){cov_7ffl2vh04.b[9][0]++;cov_7ffl2vh04.s[33]++;throw new Error('Wrong format. This number is supposed to be integer');}else{cov_7ffl2vh04.b[9][1]++;}}}// Check if it is strictly positive
cov_7ffl2vh04.s[34]++;number=parseInt(number);cov_7ffl2vh04.s[35]++;if(number<=0){cov_7ffl2vh04.b[10][0]++;cov_7ffl2vh04.s[36]++;throw new Error('Number must be strictly positive');}else{cov_7ffl2vh04.b[10][1]++;}cov_7ffl2vh04.s[37]++;return true;case 2:cov_7ffl2vh04.b[0][2]++;cov_7ffl2vh04.s[38]++;throw new Error(`Check what format do you want`);default:cov_7ffl2vh04.b[0][3]++;cov_7ffl2vh04.s[39]++;throw new Error('Error');}}GetEventPayload(){cov_7ffl2vh04.f[9]++;cov_7ffl2vh04.s[40]++;return this.stub.setEvent(this.eventName,this.eventPayload);}SetEventPayload(eventPayload){cov_7ffl2vh04.f[10]++;cov_7ffl2vh04.s[41]++;this.eventPayload=eventPayload;}SetEventName(eventName){cov_7ffl2vh04.f[11]++;cov_7ffl2vh04.s[42]++;this.eventName=eventName;}// SetEventPayload(eventName,eventPayload){
//     return this.stub.setEvent(eventName,eventPayload)
// }
}class commonSecuritizationContract extends Contract{constructor(){cov_7ffl2vh04.f[12]++;cov_7ffl2vh04.s[43]++;// Unique namespace when multiple contracts per chaincode file
super('common.securitization.com');}/**
     * Define a custom context for securitization
    */createContext(){cov_7ffl2vh04.f[13]++;cov_7ffl2vh04.s[44]++;return new securitizationContext();}// Here auxiliary functions
// Our token will have 2 decimals, like fiat currencies
async _checkDecimals(number){cov_7ffl2vh04.f[14]++;// In nodejs every atribute is passed as a string
// First check if it is a number
// number.stringify()
// if(typeof number !=='number'){
//     throw new Error('Wrong notation');
// }
// Not necessary, we are working with 2decimal-numbers
// Integer between -2^53-1 and 2^53-1
// if (!Number.isSafeInteger(number)){
//     throw new Error('Wrong number');
// }
// Check if it is a 2decimal-number
const numberString=(cov_7ffl2vh04.s[45]++,number.toString());let index;let count=(cov_7ffl2vh04.s[46]++,0);cov_7ffl2vh04.s[47]++;for(let i=(cov_7ffl2vh04.s[48]++,0);i<numberString.length;i++){cov_7ffl2vh04.s[49]++;if(numberString[i]==='.'){cov_7ffl2vh04.b[11][0]++;cov_7ffl2vh04.s[50]++;index=i;cov_7ffl2vh04.s[51]++;count=count+1;}else{cov_7ffl2vh04.b[11][1]++;}cov_7ffl2vh04.s[52]++;if(numberString[i]===','){cov_7ffl2vh04.b[12][0]++;cov_7ffl2vh04.s[53]++;throw new Error('Wrong format. Try using dot instead of comma');}else{cov_7ffl2vh04.b[12][1]++;}}cov_7ffl2vh04.s[54]++;console.log(`numero de puntos ${count}`);cov_7ffl2vh04.s[55]++;if((cov_7ffl2vh04.b[14][0]++,numberString.length-1-index>2)||(cov_7ffl2vh04.b[14][1]++,count>1)){cov_7ffl2vh04.b[13][0]++;cov_7ffl2vh04.s[56]++;throw new Error('Wrong decimals');}else{cov_7ffl2vh04.b[13][1]++;}// Check if it is strictly positive
cov_7ffl2vh04.s[57]++;number=parseFloat(number);cov_7ffl2vh04.s[58]++;if(number<=0){cov_7ffl2vh04.b[15][0]++;cov_7ffl2vh04.s[59]++;throw new Error('Number must be strictly positive');}else{cov_7ffl2vh04.b[15][1]++;}cov_7ffl2vh04.s[60]++;return true;}// async beforeTransaction(ctx) {
//     let par=ctx.stub.getFunctionAndParameters();
//     let func = par.fcn;
//     let params=par.params;
//     // switch(func){
//     //     case 'PPAProposal':
//     //     case 'AcceptPPA':
//     //     case 'MintPPA':
//     //     case '':
//     // }
// }
// afterTransaction will return the event of the transaction
// async afterTransaction(ctx){
//     let par=ctx.stub.getFunctionAndParameters();
//     let func = par.fcn;
//     switch(func){
//         case 'PPAProposal':
//             return await ctx.GetEventPayload()            
//         case 'AcceptPPA':
//             return await ctx.GetEventPayload()
//         case 'MintPPA':
//             return await ctx.GetEventPayload()
//         default:
//             return
//     }
// }
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//---------------------------------------IMPORTANTE----------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
// Diferenciar 2 casos:
// En cuanto al dinero si es dinero que va destinado al pago de cupones o de principal
// En cuanto a bonos si son del mismo tramo o no (esto de momento nada)
// Funcionan
// Transfer money
async _transferMoney(ctx,userID,amount,keyFrom){cov_7ffl2vh04.f[15]++;const genericID=(cov_7ffl2vh04.s[61]++,await ctx.stub.getTxID());const key1=(cov_7ffl2vh04.s[62]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));cov_7ffl2vh04.s[63]++;for(const key of keyFrom){cov_7ffl2vh04.s[64]++;await ctx.stub.deleteState(key);}let typeID=(cov_7ffl2vh04.s[65]++,':0');const utxo=(cov_7ffl2vh04.s[66]++,{ID:key1+typeID,GenericID:genericID,Owner:userID,Issuer:await ctx.clientIdentity.getID(),Amount:amount,Factor:100,CanBeUsed:true,TypeID:typeID});cov_7ffl2vh04.s[67]++;await ctx.stub.putState(key1,Buffer.from(JSON.stringify(utxo)));}async PoolMoney(ctx){cov_7ffl2vh04.f[16]++;const userID=(cov_7ffl2vh04.s[68]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_7ffl2vh04.s[69]++,await ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]));let amount;let resultKeys=(cov_7ffl2vh04.s[70]++,[]);let counter=(cov_7ffl2vh04.s[71]++,0);let value;cov_7ffl2vh04.s[72]++;for await(const res of iterator){cov_7ffl2vh04.s[73]++;value=JSON.parse(res.value.toString());cov_7ffl2vh04.s[74]++;amount=parseFloat(value.Amount);cov_7ffl2vh04.s[75]++;if((cov_7ffl2vh04.b[17][0]++,value.CanBeUsed)&&(cov_7ffl2vh04.b[17][1]++,value.Owner===userID)){cov_7ffl2vh04.b[16][0]++;cov_7ffl2vh04.s[76]++;resultKeys.push(res.key.toString());cov_7ffl2vh04.s[77]++;counter=counter+amount;}else{cov_7ffl2vh04.b[16][1]++;}cov_7ffl2vh04.s[78]++;if(resultKeys.length===2){cov_7ffl2vh04.b[18][0]++;cov_7ffl2vh04.s[79]++;break;}else{cov_7ffl2vh04.b[18][1]++;}}cov_7ffl2vh04.s[80]++;if((cov_7ffl2vh04.b[20][0]++,resultKeys.length===0)||(cov_7ffl2vh04.b[20][1]++,resultKeys.length===1)){cov_7ffl2vh04.b[19][0]++;cov_7ffl2vh04.s[81]++;console.log('There is nothing left to do');cov_7ffl2vh04.s[82]++;return;}else{cov_7ffl2vh04.b[19][1]++;}cov_7ffl2vh04.s[83]++;await this._transferMoney(ctx,userID,counter,resultKeys);}// In this scenario, Originator will initiate the securitization lifecycle. This org will propose a PPA to a
// farmer/irrigator. To achieve that it is important for the originator to know (listen to enrollments) which farmers
// have been registered as participants of the network, in order to propose a PPA to a particular irrigator, not to a
// generic farmer
// If we know the User ID, then we can query the PPA asociated with that ID
async QueryPPA(ctx,userID){cov_7ffl2vh04.f[17]++;// Prior verificatios deactivated in testing (because of test-network)
// Who can query this data?
const ppa=(cov_7ffl2vh04.s[84]++,await this._mygetStateByPartialCompositeKey(ctx,'PPA',userID));cov_7ffl2vh04.s[85]++;return ppa;}async _getAllResults(iterator,isHistory){cov_7ffl2vh04.f[18]++;let allResults=(cov_7ffl2vh04.s[86]++,[]);let res=(cov_7ffl2vh04.s[87]++,await iterator.next());cov_7ffl2vh04.s[88]++;while(!res.done){cov_7ffl2vh04.s[89]++;if((cov_7ffl2vh04.b[22][0]++,res.value)&&(cov_7ffl2vh04.b[22][1]++,res.value.value.toString())){cov_7ffl2vh04.b[21][0]++;let jsonRes=(cov_7ffl2vh04.s[90]++,{});cov_7ffl2vh04.s[91]++;console.log(res.value.value.toString('utf8'));cov_7ffl2vh04.s[92]++;if((cov_7ffl2vh04.b[24][0]++,isHistory)&&(cov_7ffl2vh04.b[24][1]++,isHistory===true)){cov_7ffl2vh04.b[23][0]++;cov_7ffl2vh04.s[93]++;jsonRes.TxId=res.value.tx_id;cov_7ffl2vh04.s[94]++;jsonRes.Timestamp=res.value.timestamp;cov_7ffl2vh04.s[95]++;try{cov_7ffl2vh04.s[96]++;jsonRes.Value=JSON.parse(res.value.value.toString('utf8'));}catch(err){cov_7ffl2vh04.s[97]++;console.log(err);cov_7ffl2vh04.s[98]++;jsonRes.Value=res.value.value.toString('utf8');}}else{cov_7ffl2vh04.b[23][1]++;cov_7ffl2vh04.s[99]++;jsonRes.Key=res.value.key;cov_7ffl2vh04.s[100]++;try{cov_7ffl2vh04.s[101]++;jsonRes.Record=JSON.parse(res.value.value.toString('utf8'));}catch(err){cov_7ffl2vh04.s[102]++;console.log(err);cov_7ffl2vh04.s[103]++;jsonRes.Record=res.value.value.toString('utf8');}}cov_7ffl2vh04.s[104]++;allResults.push(jsonRes);}else{cov_7ffl2vh04.b[21][1]++;}cov_7ffl2vh04.s[105]++;res=await iterator.next();}cov_7ffl2vh04.s[106]++;iterator.close();cov_7ffl2vh04.s[107]++;return allResults;}async QueryPPAHistory(ctx,userID,ppaID){cov_7ffl2vh04.f[19]++;const key=(cov_7ffl2vh04.s[108]++,await ctx.stub.createCompositeKey('PPA',[userID,ppaID]));let resultsIterator=(cov_7ffl2vh04.s[109]++,await ctx.stub.getHistoryForKey(key));let results=(cov_7ffl2vh04.s[110]++,await this._getAllResults(resultsIterator,true));cov_7ffl2vh04.s[111]++;return results;}// Igual esto tiene que ir en un canal donde esté el/los bancos.
// Esta funcion la tengo que activar para "crear dinero"
// Minting money
async Mint(ctx,amount){cov_7ffl2vh04.f[20]++;cov_7ffl2vh04.s[112]++;if((cov_7ffl2vh04.b[26][0]++,amount==='')||(cov_7ffl2vh04.b[26][1]++,amount==='0')){cov_7ffl2vh04.b[25][0]++;cov_7ffl2vh04.s[113]++;throw new Error('Please, choose a valid value for this field');}else{cov_7ffl2vh04.b[25][1]++;}// Checking format
cov_7ffl2vh04.s[114]++;await this._checkDecimals(amount);// Each UTXO will have a unique, free-collision key
const genericID=(cov_7ffl2vh04.s[115]++,await ctx.stub.getTxID());const userID=(cov_7ffl2vh04.s[116]++,await ctx.GetUserIdentity('cif'));// const userID=ctx.clientIdentity.getID();
const key=(cov_7ffl2vh04.s[117]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));let typeID;cov_7ffl2vh04.s[118]++;typeID=':0';//mirar si añadiendo ':0' sigue haciendo bien el query
const securitizationCoin=(cov_7ffl2vh04.s[119]++,{ID:key+typeID,GenericID:genericID,TypeID:typeID,Issuer:await ctx.clientIdentity.getID(),Owner:userID,Amount:parseInt(parseFloat(amount)*100),Factor:100,CanBeUsed:true});cov_7ffl2vh04.s[120]++;await ctx.stub.putState(securitizationCoin.ID,Buffer.from(JSON.stringify(securitizationCoin)));}// // query how many SecuritizationCoin IDs you own
// async _queryNumberofMyCoins(ctx){
//     const userID=ctx.clientIdentity.getID();
//     // const key=await ctx.stub.createCompositeKey('securitizationCoin',[userID,keyID]);
//     const iterator=ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]);
//     let results = 0;
//     for await (const res of iterator) {
//         // const splitKey = ctx.stub.splitCompositeKey(res.key);
//         results+=1;
//         }
//     return results;
// }
// // When there is more than one value associated to that partial key
// async _mygetMultipleStateByPartialCompositeKey(ctx, name, userID){
//     const iterator=ctx.stub.getStateByPartialCompositeKey(name,[userID]);
//     let counter=0;
//     let results;
//     for await (const res of iterator) {
//         results=JSON.parse(res.value.toString())
//         counter=counter+1;
//         }
//     if (counter===0){
//         throw new Error(`Error`);
//     }
//     return results;
// }
// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_7ffl2vh04.f[21]++;const iterator=(cov_7ffl2vh04.s[121]++,ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_7ffl2vh04.s[122]++,0);let results;cov_7ffl2vh04.s[123]++;for await(const res of iterator){cov_7ffl2vh04.s[124]++;results=JSON.parse(res.value.toString());cov_7ffl2vh04.s[125]++;counter=counter+1;}cov_7ffl2vh04.s[126]++;if(counter>1){cov_7ffl2vh04.b[27][0]++;cov_7ffl2vh04.s[127]++;throw new Error('Check this...');}else{cov_7ffl2vh04.b[27][1]++;cov_7ffl2vh04.s[128]++;if(counter===0){cov_7ffl2vh04.b[28][0]++;cov_7ffl2vh04.s[129]++;return true;}else{cov_7ffl2vh04.b[28][1]++;}}cov_7ffl2vh04.s[130]++;return results;}// funciona
async QueryMyCoins(ctx){cov_7ffl2vh04.f[22]++;const userID=(cov_7ffl2vh04.s[131]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_7ffl2vh04.s[132]++,ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]));let results=(cov_7ffl2vh04.s[133]++,[]);cov_7ffl2vh04.s[134]++;for await(const res of iterator){const valor=(cov_7ffl2vh04.s[135]++,JSON.parse(res.value.toString()));cov_7ffl2vh04.s[136]++;results.push(valor);}cov_7ffl2vh04.s[137]++;return results;}// // funciona
async QueryMyBond(ctx){cov_7ffl2vh04.f[23]++;const userID=(cov_7ffl2vh04.s[138]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_7ffl2vh04.s[139]++,ctx.stub.getStateByPartialCompositeKey('BondToken',[userID]));let results=(cov_7ffl2vh04.s[140]++,[]);cov_7ffl2vh04.s[141]++;for await(const res of iterator){const valor=(cov_7ffl2vh04.s[142]++,JSON.parse(res.value.toString()));cov_7ffl2vh04.s[143]++;results.push(valor);}cov_7ffl2vh04.s[144]++;return results;}// async _verifyPoolSize(ctx){
//     const iterator= ctx.stub.getStateByPartialCompositeKey('PPAToken',[]);
//     let results=[];
//     for await (const res of iterator) {
//         console.log('hay uno');
//         results.push(res.key);
//     }
//     if (results.length===this.ExpectingValue){
//         console.log('Es verdadero');
//         return true
//     }else{
//         console.log('es falso');
//         return false
//     }
// }
// async TransferFunds(ctx, utxoInput,receiver, amount){
//     await this._TransferMoney(ctx,utxoInput,amount,receiver);
// }
// // Asset pool will be sold entirely, so we dont provide amount parameter
// async _TransferPool(ctx,tokenID, receiver){
//     // We are going to suppose that each user has a unique state representing the
//     // total amount he/she owns
//     const userID=ctx.clientIdentity.getID();
//     // const tokenBytes=ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]);
//     // const token= JSON.parse(tokenBytes.value.toString());
//     const tokenBytes=await ctx.stub.getState(tokenID);
//     if (!tokenBytes || tokenBytes.length === 0) {
//         throw new Error(`Error`);
//     }
//     const token=tokenBytes.toString();
//     // if (token.owner!==userID){
//     //     throw new Error(`you can not transfer funds`);
//     // }
//     // if (token.Amount<amount){
//     //     throw new Error('Error');
//     // }
//     // const balance=token.Amount-amount;
//     const genericID=await ctx.stub.getTxID();
//     const key=await ctx.stub.createCompositeKey('POOL',[userID,genericID])
//     const pool={
//         ID: key,
//         content: token.results,
//         Owner: receiver
//         // amount: balance
//     };
//     await ctx.stub.deleteState(token.ID);
//     await ctx.stub.putState(key,Buffer.from(JSON.stringify(pool)));
// }
// this ids should be provided inside the requests states
// async DvP(ctx,userID,toIdentity,securityID,cashID){
//     //following Stella Project approach:
//     //querying if the securities counterparty has signed the request
//     const iterator=ctx.stub.getStateByPartialCompositeKey('Request',[userID,toIdentity]);
//     let value;
//     for await (const res of iterator) {
//         value=JSON.parse(res.value.toString());
//     }
//     const fromIdentity=value.value.Owner;
//     toIdentity=value.new_value.Owner;
//     await ctx.TransferFunds(cashID,toIdentity, value.value.amount);
//     await this._TransferPool(securityID,fromIdentity);
// }
}class ppaContract extends Contract{constructor(){cov_7ffl2vh04.f[24]++;cov_7ffl2vh04.s[145]++;// Unique namespace when multiple contracts per chaincode file
super('ppa.securitization.com');}createContext(){cov_7ffl2vh04.f[25]++;cov_7ffl2vh04.s[146]++;return new securitizationContext();}async beforeTransaction(ctx){cov_7ffl2vh04.f[26]++;let userMSPID=(cov_7ffl2vh04.s[147]++,await ctx.GetMSPID());cov_7ffl2vh04.s[148]++;if((cov_7ffl2vh04.b[30][0]++,userMSPID!=='originatorMSP')&&(cov_7ffl2vh04.b[30][1]++,userMSPID!=='farmerMSP')){cov_7ffl2vh04.b[29][0]++;cov_7ffl2vh04.s[149]++;throw new Error('You are not allowed to perform this action');}else{cov_7ffl2vh04.b[29][1]++;}cov_7ffl2vh04.s[150]++;await ctx.SetMSPID(userMSPID);let par=(cov_7ffl2vh04.s[151]++,ctx.stub.getFunctionAndParameters());let func=(cov_7ffl2vh04.s[152]++,par.fcn);let params=(cov_7ffl2vh04.s[153]++,par.params);cov_7ffl2vh04.s[154]++;for(let i=(cov_7ffl2vh04.s[155]++,0);i<params.length;i++){cov_7ffl2vh04.s[156]++;if(params[i]===''){cov_7ffl2vh04.b[31][0]++;cov_7ffl2vh04.s[157]++;throw new Error('There is at least one empty parameter');}else{cov_7ffl2vh04.b[31][1]++;}}cov_7ffl2vh04.s[158]++;switch(func){case'PPAProposal':cov_7ffl2vh04.b[32][0]++;cov_7ffl2vh04.s[159]++;if(ctx.mspid!=='originatorMSP'){cov_7ffl2vh04.b[33][0]++;cov_7ffl2vh04.s[160]++;throw new Error(`You are not allowed to perform this action`);}else{cov_7ffl2vh04.b[33][1]++;}case'AcceptPPA':cov_7ffl2vh04.b[32][1]++;cov_7ffl2vh04.s[161]++;if((await ctx.mspid)!=='farmerMSP'){cov_7ffl2vh04.b[34][0]++;cov_7ffl2vh04.s[162]++;throw new Error(`You are not allowed to perform this action`);}else{cov_7ffl2vh04.b[34][1]++;}case'MintPPA':cov_7ffl2vh04.b[32][2]++;cov_7ffl2vh04.s[163]++;if((await ctx.mspid)!=='originatorMSP'){cov_7ffl2vh04.b[35][0]++;cov_7ffl2vh04.s[164]++;throw new Error(`You are not allowed to perform this action`);}else{cov_7ffl2vh04.b[35][1]++;}case'MaintenanceServiceRequest':cov_7ffl2vh04.b[32][3]++;cov_7ffl2vh04.s[165]++;if((await ctx.mspid)!=='farmerMSP'){cov_7ffl2vh04.b[36][0]++;cov_7ffl2vh04.s[166]++;throw new Error(`You are not allowed to perform this action`);}else{cov_7ffl2vh04.b[36][1]++;}case'EnergyConsumptionPerUser':cov_7ffl2vh04.b[32][4]++;cov_7ffl2vh04.s[167]++;if(ctx.mspid!=='originatorMSP'){cov_7ffl2vh04.b[37][0]++;cov_7ffl2vh04.s[168]++;throw new Error(`You are not allowed to perform this action`);}else{cov_7ffl2vh04.b[37][1]++;}case'MonthlyBillPayout':cov_7ffl2vh04.b[32][5]++;cov_7ffl2vh04.s[169]++;if(ctx.mspid!=='farmerMSP'){cov_7ffl2vh04.b[38][0]++;cov_7ffl2vh04.s[170]++;throw new Error(`You are not allowed to perform this action`);}else{cov_7ffl2vh04.b[38][1]++;}// case 'WriteCommonRealTimeParameters':
}}//afterTransaction will return the event of the transaction
async afterTransaction(ctx){cov_7ffl2vh04.f[27]++;let event=(cov_7ffl2vh04.s[171]++,await ctx.GetEventPayload());cov_7ffl2vh04.s[172]++;return event;}// completar
maintenanceType=(cov_7ffl2vh04.s[173]++,[{name:'mantenimiento1',price:12},{name:'mantenimiento2',price:12},{name:'mantenimiento3',price:12}]);/**
     * 
     * @param {*} ctx 
     * @returns the size of the pool 
     */async _isPoolCreated(ctx){cov_7ffl2vh04.f[28]++;const iterator=(cov_7ffl2vh04.s[174]++,ctx.stub.getStateByPartialCompositeKey('POOL',[]));let results=(cov_7ffl2vh04.s[175]++,[]);cov_7ffl2vh04.s[176]++;for await(const res of iterator){cov_7ffl2vh04.s[177]++;// push key instead of value json
results.push(res.key);}cov_7ffl2vh04.s[178]++;return results.length;}/**
     *
     * @param {*} ctx
     * @param {*} userID is the ID linked to user (DNI, CIF,...) which is inside his/her ecert
     * @returns the number of PPAs with that partial composite key
     */ // Auxiliary function to query if PPA contract for this userID has already been proposed
async _isPPAProposed(ctx,userID){cov_7ffl2vh04.f[29]++;const iterator=(cov_7ffl2vh04.s[179]++,await ctx.stub.getStateByPartialCompositeKey('PPA',[userID]));// let resultKeys=[];
// console.log(iterator)
cov_7ffl2vh04.s[180]++;if(typeof iterator==='undefined'){cov_7ffl2vh04.b[39][0]++;cov_7ffl2vh04.s[181]++;return 0;}else{cov_7ffl2vh04.b[39][1]++;cov_7ffl2vh04.s[182]++;return 1;}// for await (const res of iterator) {
//     resultKeys.push(res.key);
// }
// return resultKeys.length
}/**
     * 
     * @param {*} ctx 
     * @param {*} docTypeName 
     * @returns the state associated with that partial key
     */ // This auxiliary function will only work with those states expected to be unique (POOL, REALTIMEPARAMETERS, RATING...)
async _getPoolStateByPartialCompositeKey(ctx,docTypeName){cov_7ffl2vh04.f[30]++;const iterator=(cov_7ffl2vh04.s[183]++,ctx.stub.getStateByPartialCompositeKey(docTypeName,[]));let counter=(cov_7ffl2vh04.s[184]++,0);let results;cov_7ffl2vh04.s[185]++;for await(const res of iterator){cov_7ffl2vh04.s[186]++;results=JSON.parse(res.value.toString());cov_7ffl2vh04.s[187]++;counter=counter+1;}cov_7ffl2vh04.s[188]++;if(counter>1){cov_7ffl2vh04.b[40][0]++;cov_7ffl2vh04.s[189]++;throw new Error('This state-value pair is not unique');}else{cov_7ffl2vh04.b[40][1]++;cov_7ffl2vh04.s[190]++;if(counter===0){cov_7ffl2vh04.b[41][0]++;cov_7ffl2vh04.s[191]++;return true;}else{cov_7ffl2vh04.b[41][1]++;}}cov_7ffl2vh04.s[192]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @param {*} userID
     * @returns
     */ // Auxiliary function to retrieve a value associated with a partial key. It is expected that
// this value is unique. One partial key may have multiple values associated to itself.
async _mygetStateByPartialCompositeKey(ctx,docTypeName,userID){cov_7ffl2vh04.f[31]++;const iterator=(cov_7ffl2vh04.s[193]++,ctx.stub.getStateByPartialCompositeKey(docTypeName,[userID]));let counter=(cov_7ffl2vh04.s[194]++,0);let results;cov_7ffl2vh04.s[195]++;for await(const res of iterator){cov_7ffl2vh04.s[196]++;results=JSON.parse(res.value.toString());cov_7ffl2vh04.s[197]++;counter=counter+1;}cov_7ffl2vh04.s[198]++;if(counter>1){cov_7ffl2vh04.b[42][0]++;cov_7ffl2vh04.s[199]++;throw new Error('This state-value pair is not unique');}else{cov_7ffl2vh04.b[42][1]++;cov_7ffl2vh04.s[200]++;if(counter===0){cov_7ffl2vh04.b[43][0]++;cov_7ffl2vh04.s[201]++;return true;}else{cov_7ffl2vh04.b[43][1]++;}}cov_7ffl2vh04.s[202]++;return results;}// This auxiliary function will allow us to determine to which identity are we going to pay the bills
async _isPPAinPool(ctx,ppaID){cov_7ffl2vh04.f[32]++;const pool=(cov_7ffl2vh04.s[203]++,await this._getPoolStateByPartialCompositeKey(ctx,'POOL'));cov_7ffl2vh04.s[204]++;if((cov_7ffl2vh04.b[45][0]++,!pool)||(cov_7ffl2vh04.b[45][1]++,pool.length===0)){cov_7ffl2vh04.b[44][0]++;cov_7ffl2vh04.s[205]++;return false;}else{cov_7ffl2vh04.b[44][1]++;}const containsppaID=(cov_7ffl2vh04.s[206]++,await pool.ppaIDs.includes(ppaID));cov_7ffl2vh04.s[207]++;return(cov_7ffl2vh04.b[46][0]++,containsppaID)&&(cov_7ffl2vh04.b[46][1]++,pool.Owner);}// This function will contain the contractual terms of the physical PPA
// This function will be run by Originator, who will propose a PPA to a particular user, by means
// of his/her user ID. This function will need a myriad of input arguments.
async PPAProposal(ctx,ownerID,customerID,date){cov_7ffl2vh04.f[33]++;cov_7ffl2vh04.s[208]++;// Prior verifications
if(ctx.GetUserIdentity('cif')!==ownerID){cov_7ffl2vh04.b[47][0]++;cov_7ffl2vh04.s[209]++;throw new Error(`Field ownerID ${ownerID} does not match your user identity of the ecert`);}else{cov_7ffl2vh04.b[47][1]++;}cov_7ffl2vh04.s[210]++;if(ownerID===customerID){cov_7ffl2vh04.b[48][0]++;cov_7ffl2vh04.s[211]++;throw new Error(`Check owner and customer identities`);}else{cov_7ffl2vh04.b[48][1]++;}// PPA ID will be a "sum" of multiple keys, one of them is a free-collision key, the txID
// This is not necessary, because each user will be subscribed to just one PPA
const genericID=(cov_7ffl2vh04.s[212]++,await ctx.stub.getTxID());// Create this composite Key
const ppaID=(cov_7ffl2vh04.s[213]++,await ctx.stub.createCompositeKey('PPA',[customerID,genericID]));// We also verify if a farmer/irrigator has already been offered a PPA
const ppaHasBeenProposed=(cov_7ffl2vh04.s[214]++,await this._isPPAProposed(ctx,customerID));cov_7ffl2vh04.s[215]++;console.log(`ppaHasBeenProposed: ${ppaHasBeenProposed}`);cov_7ffl2vh04.s[216]++;if(ppaHasBeenProposed!==0){cov_7ffl2vh04.b[49][0]++;cov_7ffl2vh04.s[217]++;throw new Error(`Error: PPA for user ${customerID} has already been offered`);}else{cov_7ffl2vh04.b[49][1]++;}// console.log('aqui2')
// TODO
// We define parameters of the PPA, just in case these parameters are common parameters.
const day=(cov_7ffl2vh04.s[218]++,1);const month=(cov_7ffl2vh04.s[219]++,10);const year=(cov_7ffl2vh04.s[220]++,2032);const ordinaryTerminationDate=(cov_7ffl2vh04.s[221]++,new Date(year,month-1,day).setHours(0,0,0,0));const firstExtension=(cov_7ffl2vh04.s[222]++,Date(year,month-2,day));const customer=(cov_7ffl2vh04.s[223]++,'');// const customerID='';
const customerEmail=(cov_7ffl2vh04.s[224]++,ctx.GetUserIdentity('email'));// Owner is the ecert whose identity has proposed this PPA
// const owner= ctx.clientIdentity.getID();
const system=(cov_7ffl2vh04.s[225]++,'');const land=(cov_7ffl2vh04.s[226]++,'');const landID=(cov_7ffl2vh04.s[227]++,'');const lastingPeriod=(cov_7ffl2vh04.s[228]++,'');// const ordinaryTerminationDate= '';
const advancedTerminated=(cov_7ffl2vh04.s[229]++,'');const startDate=(cov_7ffl2vh04.s[230]++,'');const extendedAgreement=(cov_7ffl2vh04.s[231]++,'');const initialExtensions=(cov_7ffl2vh04.s[232]++,'');// const firstExtension= '';
const secondExtension=(cov_7ffl2vh04.s[233]++,'');const extensionTimePriorToOrdinaryTerminationDate=(cov_7ffl2vh04.s[234]++,'');const isExtensionMandatory=(cov_7ffl2vh04.s[235]++,'');const additionalExtensions=(cov_7ffl2vh04.s[236]++,'');const additionalExtensionTimePriorToLastAdditionalExtension=(cov_7ffl2vh04.s[237]++,'');const additionalExtensionContractPrice=(cov_7ffl2vh04.s[238]++,'');const isAdditionalExtension=(cov_7ffl2vh04.s[239]++,'');const purchaseOption=(cov_7ffl2vh04.s[240]++,'');const contractPrice=(cov_7ffl2vh04.s[241]++,'');const paymentsFrequency=(cov_7ffl2vh04.s[242]++,12);const unitPrice=(cov_7ffl2vh04.s[243]++,'');const minimumMonthlyFee=(cov_7ffl2vh04.s[244]++,100);// const firstMonthlyPayment= '';
// const succesiveMonthlyPayments= '';
const dismantlingSystemIncluded=(cov_7ffl2vh04.s[245]++,'');const settlementBillingBussinesDays=(cov_7ffl2vh04.s[246]++,'');const dueAmountsDays=(cov_7ffl2vh04.s[247]++,'');const isInterestTriggered=(cov_7ffl2vh04.s[248]++,'');const sellToThirdParties=(cov_7ffl2vh04.s[249]++,'');const amountPayableToCustomer=(cov_7ffl2vh04.s[250]++,'');const settlementAmountPayableDays=(cov_7ffl2vh04.s[251]++,'');const amountPayableType=(cov_7ffl2vh04.s[252]++,'');const highestEnergyDemandConexion=(cov_7ffl2vh04.s[253]++,'');const grantFinancialAidBeneficiary=(cov_7ffl2vh04.s[254]++,'');const netAmountSubsidy=(cov_7ffl2vh04.s[255]++,'');const reductionContractPriceFees=(cov_7ffl2vh04.s[256]++,'');const grantCollectionTime=(cov_7ffl2vh04.s[257]++,'');const customerGoodFaith=(cov_7ffl2vh04.s[258]++,'');const systemLandMaintenance=(cov_7ffl2vh04.s[259]++,'');const maintenanceHistory=(cov_7ffl2vh04.s[260]++,'');const powerSupplyInterruption=(cov_7ffl2vh04.s[261]++,'');const powerSupplyInterruptionAdvancedTime=(cov_7ffl2vh04.s[262]++,'');const anomalyCircumstance=(cov_7ffl2vh04.s[263]++,'');const isCustomerAuthorized=(cov_7ffl2vh04.s[264]++,'');const additionalPowerSupplyInterruption=(cov_7ffl2vh04.s[265]++,'');const powerSupplyInterruptionCause=(cov_7ffl2vh04.s[266]++,'');const extraordinaryExpenses=(cov_7ffl2vh04.s[267]++,'');const isMaintenanceNecessary=(cov_7ffl2vh04.s[268]++,'');const legalObligationSystemLand=(cov_7ffl2vh04.s[269]++,'');const measurementEquipementResponsibility=(cov_7ffl2vh04.s[270]++,'');const annualAccountsTime=(cov_7ffl2vh04.s[271]++,'');const annualAccounts=(cov_7ffl2vh04.s[272]++,'');const informationChangedTime=(cov_7ffl2vh04.s[273]++,'');const highSpeedInternetConection=(cov_7ffl2vh04.s[274]++,'');const lastModificationOn=(cov_7ffl2vh04.s[275]++,new Date(date));const lastModificationUserID=(cov_7ffl2vh04.s[276]++,'');const isSigned=(cov_7ffl2vh04.s[277]++,false);const energyConsumption=(cov_7ffl2vh04.s[278]++,[]);const facturacionMensual=(cov_7ffl2vh04.s[279]++,[]);const lastEnergyConsumption=(cov_7ffl2vh04.s[280]++,'');const lastFacturacionMensual=(cov_7ffl2vh04.s[281]++,'');// Defining attributes of the object PPA
const PPA=(cov_7ffl2vh04.s[282]++,{docType:'PPA',ppaID:ppaID,Customer:customer,CustomerID:customerID,CustomerEmail:customerEmail,OwnerID:ownerID,Owner:await ctx.clientIdentity.getID(),System:system,Land:land,LandID:landID,LastingPeriod:lastingPeriod,OrdinaryTerminationDate:ordinaryTerminationDate,AdvancedTerminated:advancedTerminated,StartDate:startDate,EnergyConsumption:energyConsumption,ExtendedAgreement:extendedAgreement,InitialExtensions:initialExtensions,FirstExtension:firstExtension,SecondExtension:secondExtension,BillDate:'',ExtensionTimePriorToOrdinaryTerminationDate:extensionTimePriorToOrdinaryTerminationDate,IsExtensionMandatory:isExtensionMandatory,AdditionalExtensions:additionalExtensions,AdditionalExtensionTimePriorToLastAdditionalExtension:additionalExtensionTimePriorToLastAdditionalExtension,AdditionalExtensionContractPrice:additionalExtensionContractPrice,IsAdditionalExtension:isAdditionalExtension,PurchaseOption:purchaseOption,ContractPrice:contractPrice,PaymentsFrequency:paymentsFrequency,FacturacionMensual:facturacionMensual,LastFacturacionMensual:lastFacturacionMensual,LastEnergyConsumption:lastEnergyConsumption,EnergyConsumption:energyConsumption,UnitPrice:unitPrice,MinimumMonthlyFee:minimumMonthlyFee,DismantlingSystemIncluded:dismantlingSystemIncluded,SettlementBillingBussinesDays:settlementBillingBussinesDays,DueAmountsDays:dueAmountsDays,IsInterestTriggered:isInterestTriggered,SellToThirdParties:sellToThirdParties,AmountPayableToCustomer:{myMethod:()=>{cov_7ffl2vh04.f[34]++;cov_7ffl2vh04.s[283]++;if(!PPA.SellToThirdParties){cov_7ffl2vh04.b[50][0]++;cov_7ffl2vh04.s[284]++;return 0;}else{cov_7ffl2vh04.b[50][1]++;}cov_7ffl2vh04.s[285]++;return 100;}},SettlementAmountPayableDays:settlementAmountPayableDays,AmountPayableType:amountPayableType,HighestEnergyDemandConexion:highestEnergyDemandConexion,GrantFinancialAidBeneficiary:grantFinancialAidBeneficiary,NetAmountSubsidy:netAmountSubsidy,ReductionContractPriceFees:reductionContractPriceFees,GrantCollectionTime:grantCollectionTime,CustomerGoodFaith:customerGoodFaith,SystemLandMaintenance:systemLandMaintenance,MaintenanceHistory:maintenanceHistory,PowerSupplyInterruption:powerSupplyInterruption,PowerSupplyInterruptionAdvancedTime:powerSupplyInterruptionAdvancedTime,AnomalyCircumstance:anomalyCircumstance,IsCustomerAuthorized:isCustomerAuthorized,AdditionalPowerSupplyInterruption:additionalPowerSupplyInterruption,PowerSupplyInterruptionCause:powerSupplyInterruptionCause,ExtraordinaryExpenses:extraordinaryExpenses,IsMaintenanceNecessary:isMaintenanceNecessary,LegalObligationSystemLand:legalObligationSystemLand,MeasurementEquipementResponsibility:measurementEquipementResponsibility,AnnualAccountsTime:annualAccountsTime,AnnualAccounts:annualAccounts,InformationChangedTime:informationChangedTime,HighSpeedInternetConection:highSpeedInternetConection,LastModificationOn:lastModificationOn,LastModificationUserID:lastModificationUserID,IsSigned:isSigned,IsServiceMaintenanceOn:false,IsLastBillPaid:false});const valueBuffer=(cov_7ffl2vh04.s[286]++,Buffer.from(JSON.stringify(PPA)));// set event must be inside after transaction
cov_7ffl2vh04.s[287]++;await ctx.SetEventPayload(valueBuffer);cov_7ffl2vh04.s[288]++;await ctx.SetEventName('PPAproposed');// await ctx.stub.putState('ppa',valueBuffer);
cov_7ffl2vh04.s[289]++;await ctx.stub.putState(ppaID,valueBuffer);cov_7ffl2vh04.s[290]++;return PPA;}// Farmer/Irrigator will execute this function and by doing that, he/she accepts/signs the PPA
// proposal
async AcceptPPA(ctx,userID,date){cov_7ffl2vh04.f[35]++;cov_7ffl2vh04.s[291]++;if(ctx.GetUserIdentity('cif')!==userID){cov_7ffl2vh04.b[51][0]++;cov_7ffl2vh04.s[292]++;throw new Error(`Field ownerID ${userID} does not match your user identity of the ecert`);}else{cov_7ffl2vh04.b[51][1]++;}// we retrieve the value associated with this partial key
const ppa=(cov_7ffl2vh04.s[293]++,await this._mygetStateByPartialCompositeKey(ctx,'PPA',userID));// ppa returns true if no PPA Contract for that userID has been issued.
// ppa returns error if something is wrong with PPA Contract
// Otherwise, ppa returns ppa value for that partial key
cov_7ffl2vh04.s[294]++;if((cov_7ffl2vh04.b[53][0]++,!ppa)||(cov_7ffl2vh04.b[53][1]++,ppa.length===0)){cov_7ffl2vh04.b[52][0]++;cov_7ffl2vh04.s[295]++;throw new Error(`This PPA has not been proposed nor there are multiple values associated with this partial key`);}else{cov_7ffl2vh04.b[52][1]++;}cov_7ffl2vh04.s[296]++;if(ppa.CustomerID!==userID){cov_7ffl2vh04.b[54][0]++;cov_7ffl2vh04.s[297]++;throw new Error(`You are not allowed to perform this action`);}else{cov_7ffl2vh04.b[54][1]++;}// Check if attribute IsSigned is true
cov_7ffl2vh04.s[298]++;if(ppa.IsSigned){cov_7ffl2vh04.b[55][0]++;cov_7ffl2vh04.s[299]++;throw new Error(`Your PPA has been already signed`);}else{cov_7ffl2vh04.b[55][1]++;}// Otherwise, change the IsSigned state.
cov_7ffl2vh04.s[300]++;ppa.IsSigned=true;cov_7ffl2vh04.s[301]++;ppa.Customer=await ctx.clientIdentity.getID();// Attach current date
cov_7ffl2vh04.s[302]++;ppa.LastModificationOn=new Date(date);const valueBuffer=(cov_7ffl2vh04.s[303]++,Buffer.from(JSON.stringify(ppa)));cov_7ffl2vh04.s[304]++;await ctx.SetEventPayload(valueBuffer);cov_7ffl2vh04.s[305]++;await ctx.SetEventName('PPAaccepted');cov_7ffl2vh04.s[306]++;await ctx.stub.putState(ppa.ppaID,valueBuffer);}// If a farmer signs a PPAproposal, originator will receive its event and according to it, will issue a POOL token that
// will record every ppaID. The owner of this Token will receive the payments farmers will do.
// This will be the pool of PPAs 
async MintPPA(ctx,ppaID){cov_7ffl2vh04.f[36]++;const genericID=(cov_7ffl2vh04.s[307]++,await ctx.stub.getTxID());const ppaBytes=(cov_7ffl2vh04.s[308]++,await ctx.stub.getState(ppaID));cov_7ffl2vh04.s[309]++;if((cov_7ffl2vh04.b[57][0]++,!ppaBytes)||(cov_7ffl2vh04.b[57][1]++,ppaBytes.length===0)){cov_7ffl2vh04.b[56][0]++;cov_7ffl2vh04.s[310]++;throw new Error(`Error: no State related to key ${ppaID}`);}else{cov_7ffl2vh04.b[56][1]++;}const ppa=(cov_7ffl2vh04.s[311]++,JSON.parse(ppaBytes.toString()));cov_7ffl2vh04.s[312]++;if(ctx.GetUserIdentity('cif')!==ppa.OwnerID){cov_7ffl2vh04.b[58][0]++;cov_7ffl2vh04.s[313]++;throw new Error(`Field ownerID does not match your user identity of the ecert`);}else{cov_7ffl2vh04.b[58][1]++;}// Include PPA Key inside Pool of assets
let pool;cov_7ffl2vh04.s[314]++;if((await this._isPoolCreated(ctx))===0){cov_7ffl2vh04.b[59][0]++;cov_7ffl2vh04.s[315]++;pool={poolID:'',ppaIDs:[],Owner:''};cov_7ffl2vh04.s[316]++;pool.Owner=ppa.Owner;cov_7ffl2vh04.s[317]++;pool.ppaIDs.push(ppa.ppaID);cov_7ffl2vh04.s[318]++;pool.poolID=await ctx.stub.createCompositeKey('POOL',[genericID]);cov_7ffl2vh04.s[319]++;await ctx.stub.putState(pool.poolID,Buffer.from(JSON.stringify(pool)));}else{cov_7ffl2vh04.b[59][1]++;cov_7ffl2vh04.s[320]++;pool=await this._getPoolStateByPartialCompositeKey(ctx,'POOL');cov_7ffl2vh04.s[321]++;pool.Owner=ppa.Owner;cov_7ffl2vh04.s[322]++;pool.ppaIDs.push(ppa.ppaID);cov_7ffl2vh04.s[323]++;await ctx.stub.deleteState(pool.poolID);cov_7ffl2vh04.s[324]++;pool.poolID=await ctx.stub.createCompositeKey('POOL',[genericID]);cov_7ffl2vh04.s[325]++;await ctx.stub.putState(pool.poolID,Buffer.from(JSON.stringify(pool)));}let valueBuffer=(cov_7ffl2vh04.s[326]++,Buffer.from(JSON.stringify(pool)));cov_7ffl2vh04.s[327]++;await ctx.SetEventPayload(valueBuffer);cov_7ffl2vh04.s[328]++;await ctx.SetEventName('PPAtokenMinted');}// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ---------------------------------------TODO-----------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
/**
     *
     * @param {Context} ctx
     * @param {string} argtype is the default types of maintenance services originator is
     *  able to provide
     */ // Farmer will execute this function in order to request one of the default maintenance services
// offered by Originator. She/He will record the date request was made, so originator must be listening
// to events of this type if no overexpenses are considered
async MaintenanceServiceRequest(ctx,userID,serviceMaintenanceType,date){cov_7ffl2vh04.f[37]++;cov_7ffl2vh04.s[329]++;if(ctx.GetUserIdentity('cif')!==userID){cov_7ffl2vh04.b[60][0]++;cov_7ffl2vh04.s[330]++;throw new Error(`Field ownerID ${userID} does not match your user identity of the ecert`);}else{cov_7ffl2vh04.b[60][1]++;}// we retrieve customer PPA linked to her/his ID
const ppa=(cov_7ffl2vh04.s[331]++,await this._mygetStateByPartialCompositeKey(ctx,'PPA',userID));// We check if it has been signed
cov_7ffl2vh04.s[332]++;if(!ppa.IsSigned){cov_7ffl2vh04.b[61][0]++;cov_7ffl2vh04.s[333]++;throw new Error('This PPA has not been signed');}else{cov_7ffl2vh04.b[61][1]++;}// Prior input parameters verifications
cov_7ffl2vh04.s[334]++;if(serviceMaintenanceType===''){cov_7ffl2vh04.b[62][0]++;cov_7ffl2vh04.s[335]++;throw new Error('This field cannot be empty');}else{cov_7ffl2vh04.b[62][1]++;cov_7ffl2vh04.s[336]++;if(serviceMaintenanceType!==this.maintenanceType.find(service=>{cov_7ffl2vh04.f[38]++;cov_7ffl2vh04.s[337]++;return service.name===serviceMaintenanceType;}).name){cov_7ffl2vh04.b[63][0]++;cov_7ffl2vh04.s[338]++;throw new Error(`The ${serviceMaintenanceType} service is not available`);}else{cov_7ffl2vh04.b[63][1]++;cov_7ffl2vh04.s[339]++;ppa.MaintenanceServiceRequest=serviceMaintenanceType;}}cov_7ffl2vh04.s[340]++;ppa.LastModificationOn=new Date(date);cov_7ffl2vh04.s[341]++;ppa.IsServiceMaintenanceOn=true;cov_7ffl2vh04.s[342]++;ppa.LastModificationUserID=userID;cov_7ffl2vh04.s[343]++;ppa.ServiceRequestDate=ppa.lastModificationOn;// En golang los Bytes de la ID funcionan bien
const valueBuffer=(cov_7ffl2vh04.s[344]++,Buffer.from(JSON.stringify(ppa)));cov_7ffl2vh04.s[345]++;await ctx.stub.putState(ppa.value.ppaID,valueBuffer);cov_7ffl2vh04.s[346]++;await ctx.SetEventName('MaintenanceRequired');cov_7ffl2vh04.s[347]++;await ctx.SetEventPayload(valueBuffer);}// for simplicity we are not considering a symbiosys between oracles and blockchain
// networks (in this version), so we will introduce that real time parameters as a function
// which will be called beforeTransaction (or not). That parameters state will include current
// electricity price, current payment proportion between principal and coupon...
async WriteCommonRealTimeParameters(ctx,currentElectricityPrice,paymentProportionAllocated,date){cov_7ffl2vh04.f[39]++;// At the moment no identity verifications
// Who can commit this function????
// We are going to assign an easy-to-query key
const key=(cov_7ffl2vh04.s[348]++,'RealTimeParameters');// Check if this doc already exists
const oldvalueBytes=(cov_7ffl2vh04.s[349]++,await ctx.stub.getState(key));let value;cov_7ffl2vh04.s[350]++;if((cov_7ffl2vh04.b[65][0]++,!oldvalueBytes)||(cov_7ffl2vh04.b[65][1]++,oldvalueBytes.length===0)){cov_7ffl2vh04.b[64][0]++;cov_7ffl2vh04.s[351]++;value={ID:key,ElectricityPrice:currentElectricityPrice,ProportionAllocated:paymentProportionAllocated,LastModificationOn:new Date(date)};const valueBuffer=(cov_7ffl2vh04.s[352]++,Buffer.from(JSON.stringify(value)));cov_7ffl2vh04.s[353]++;await ctx.stub.putState(key,valueBuffer);}else{cov_7ffl2vh04.b[64][1]++;}cov_7ffl2vh04.s[354]++;value=JSON.parse(oldvalueBytes.toString());cov_7ffl2vh04.s[355]++;value.key=key;cov_7ffl2vh04.s[356]++;value.ElectricityPrice=currentElectricityPrice;cov_7ffl2vh04.s[357]++;value.ProportionAllocated=paymentProportionAllocated;cov_7ffl2vh04.s[358]++;value.LastModificationOn=new Date(date);const valueBuffer=(cov_7ffl2vh04.s[359]++,Buffer.from(JSON.stringify(value)));cov_7ffl2vh04.s[360]++;await ctx.stub.putState(key,valueBuffer);}// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// could this function be executed from .job file?
// Originator will execute this function monthly to update the PPA with data about energy
// consumption
async EnergyConsumptionPerUser(ctx,userID,energyConsumption,date){cov_7ffl2vh04.f[40]++;let ownerID=(cov_7ffl2vh04.s[361]++,await ctx.GetUserIdentity('cif'));// retrieve PPA state
const ppa=(cov_7ffl2vh04.s[362]++,await this._mygetStateByPartialCompositeKey(ctx,'PPA',userID));cov_7ffl2vh04.s[363]++;if((cov_7ffl2vh04.b[67][0]++,!ppa)||(cov_7ffl2vh04.b[67][1]++,ppa.length===0)){cov_7ffl2vh04.b[66][0]++;cov_7ffl2vh04.s[364]++;throw new Error(`Error, PPA linked to userID ${userID} does not exist`);}else{cov_7ffl2vh04.b[66][1]++;}const energy=(cov_7ffl2vh04.s[365]++,parseFloat(energyConsumption));// update the date
cov_7ffl2vh04.s[366]++;ppa.LastModificationOn=new Date(date);cov_7ffl2vh04.s[367]++;if(!ppa.IsSigned){cov_7ffl2vh04.b[68][0]++;cov_7ffl2vh04.s[368]++;throw new Error('This PPA has not been signed');}else{cov_7ffl2vh04.b[68][1]++;}// check if owner of the PPA (originator) matches the client who executes this function
cov_7ffl2vh04.s[369]++;if(ownerID!==ppa.Owner){cov_7ffl2vh04.b[69][0]++;cov_7ffl2vh04.s[370]++;throw new Error(`You are not allowed to perform this action`);}else{cov_7ffl2vh04.b[69][1]++;}// these data will be reset once a year (once its size is equal to 12)
cov_7ffl2vh04.s[371]++;if(ppa.EnergyConsumption.length===ppa.PaymentsFrequency){cov_7ffl2vh04.b[70][0]++;cov_7ffl2vh04.s[372]++;ppa.EnergyConsumption=[];}else{cov_7ffl2vh04.b[70][1]++;}// append data
cov_7ffl2vh04.s[373]++;ppa.EnergyConsumption.push(energy);cov_7ffl2vh04.s[374]++;ppa.LastEnergyConsumption=energy;cov_7ffl2vh04.s[375]++;ppa.LastModificationUserID=ownerID;cov_7ffl2vh04.s[376]++;ppa.BillDate=ppa.LastModificationOn;cov_7ffl2vh04.s[377]++;ppa.IsLastBillPaid=false;const ppaBuffer=(cov_7ffl2vh04.s[378]++,Buffer.from(JSON.stringify(ppa)));cov_7ffl2vh04.s[379]++;await ctx.stub.putState(ppa.ppaID,ppaBuffer);cov_7ffl2vh04.s[380]++;await ctx.SetEventName('BillDelivered');cov_7ffl2vh04.s[381]++;await ctx.SetEventPayload(ppaBuffer);}// TODO: add non working days
// This auxiliary function serves to compute the time between two dates, including if there are 
// non working days in between. It serves to pay bills, to maintenance service request and every function
// which involves a fixed period of time to be executed.
async _checkNonWorkingDays(currentDate,notificationDate){cov_7ffl2vh04.f[41]++;const nonWorkingDay1=(cov_7ffl2vh04.s[382]++,new Date(2022,0,1));const nonWorkingDay2=(cov_7ffl2vh04.s[383]++,new Date(2021,11,25));const nonWorkingDay3=(cov_7ffl2vh04.s[384]++,new Date(2022,4,1));const nonWorkingDays=(cov_7ffl2vh04.s[385]++,[nonWorkingDay1,nonWorkingDay2,nonWorkingDay3]);const new_resultados=(cov_7ffl2vh04.s[386]++,nonWorkingDays.filter(day=>{cov_7ffl2vh04.f[42]++;cov_7ffl2vh04.s[387]++;return(cov_7ffl2vh04.b[71][0]++,day>=notificationDate)&&(cov_7ffl2vh04.b[71][1]++,day<=currentDate);}));cov_7ffl2vh04.s[388]++;return new_resultados.length;}// Once originator has issued a bill, farmer/irrigator must pay for the consumed energy in a
// certain period of time, otherwise farmer will be considered a defaulter
async MonthlyBillPayout(ctx,userDNI,tokenID,typeID,date){cov_7ffl2vh04.f[43]++;cov_7ffl2vh04.s[389]++;if(userDNI!==(await ctx.GetUserIdentity('cif'))){cov_7ffl2vh04.b[72][0]++;cov_7ffl2vh04.s[390]++;throw new Error(`You are not allowed to perform this action`);}else{cov_7ffl2vh04.b[72][1]++;}// TODO: Igual es necerario que algun dato salga de algun oracle
// retrieve the state of the token
const userID=(cov_7ffl2vh04.s[391]++,await ctx.clientIdentity.getID());const compositeKey=(cov_7ffl2vh04.s[392]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID,typeID]));const tokenBytes=(cov_7ffl2vh04.s[393]++,await ctx.stub.getState(compositeKey));const token=(cov_7ffl2vh04.s[394]++,JSON.parse(tokenBytes.toString()));cov_7ffl2vh04.s[395]++;if(!token.CanBeUsed){cov_7ffl2vh04.b[73][0]++;cov_7ffl2vh04.s[396]++;throw new Error(`Error, token with ID ${tokenID} is allocated to other services. Try to use another key or cancel whatever your token is allocated to`);}else{cov_7ffl2vh04.b[73][1]++;}// Now we retrieve the PPA associated with userDNI
const value=(cov_7ffl2vh04.s[397]++,await this._mygetStateByPartialCompositeKey(ctx,'PPA',userDNI));cov_7ffl2vh04.s[398]++;if((cov_7ffl2vh04.b[75][0]++,!value)||(cov_7ffl2vh04.b[75][1]++,value.length===0)){cov_7ffl2vh04.b[74][0]++;cov_7ffl2vh04.s[399]++;throw new Error(`PPA  linked to userID ${userDNI} does not exist`);}else{cov_7ffl2vh04.b[74][1]++;}// Check if customer and user who send transaction proposal match
// Not compulsory, we have already checked this with the ppa proposal
cov_7ffl2vh04.s[400]++;if(value.CustomerID!==userID){cov_7ffl2vh04.b[76][0]++;cov_7ffl2vh04.s[401]++;throw new Error(`You are not allowed to perform this action`);}else{cov_7ffl2vh04.b[76][1]++;}// Check if there are non working days between these dates
const currentDate=(cov_7ffl2vh04.s[402]++,new Date(date));const billDate=(cov_7ffl2vh04.s[403]++,value.BillDate);const numberNonworkingDays=(cov_7ffl2vh04.s[404]++,await this._checkNonWorkingDays(currentDate,billDate));cov_7ffl2vh04.s[405]++;const diff_days=(currentDate,billDate)=>{cov_7ffl2vh04.f[44]++;cov_7ffl2vh04.s[406]++;(currentDate.getTime()-billDate.getTime())/(1000*3600*24);};// TODO: not sure about this. If user wish to pay, should we accept late payments? better than nothing... 
// check if current day is inside boudary dates
const limitDate=(cov_7ffl2vh04.s[407]++,value.LimitDate+numberNonworkingDays);cov_7ffl2vh04.s[408]++;if(diff_days>limitDate){cov_7ffl2vh04.b[77][0]++;cov_7ffl2vh04.s[409]++;throw new Error(`Try to pay on time`);}else{cov_7ffl2vh04.b[77][1]++;}// These functions should be included in the PPA object
// Define functions to determine the price to pay for
const myFunctions=(cov_7ffl2vh04.s[410]++,{firstMonthlyPayment:(par_UnitPrice,par_EnergyConsumption,par_MinimumMonthlyFee)=>{cov_7ffl2vh04.f[45]++;const values=(cov_7ffl2vh04.s[411]++,[par_UnitPrice*par_EnergyConsumption,par_MinimumMonthlyFee]);// const values=[PPA.UnitPrice*PPA.LastEnergyConsumption,PPA.MinimumMonthlyFee];
const resultado=(cov_7ffl2vh04.s[412]++,Math.max(...values));cov_7ffl2vh04.s[413]++;return resultado;},succesiveMonthlyPayments:(par_LastEnergyConsumption,par_UnitPrice,par_MinimumMonthlyFee,par_EnergyConsumption,par_FacturacionMenusal)=>{cov_7ffl2vh04.f[46]++;const values=(cov_7ffl2vh04.s[414]++,[par_LastEnergyConsumption*par_UnitPrice,Math.abs(par_MinimumMonthlyFee*par_EnergyConsumption.length-Math.sum(par_FacturacionMenusal))]);const resultado=(cov_7ffl2vh04.s[415]++,Math.max(...values));cov_7ffl2vh04.s[416]++;return resultado;}});cov_7ffl2vh04.s[417]++;if(value.IsLastBillPaid){cov_7ffl2vh04.b[78][0]++;cov_7ffl2vh04.s[418]++;throw new Error(`You have already paid this bill`);}else{cov_7ffl2vh04.b[78][1]++;}// depending on which period we stay, i.e depending on which size energyconsumption has, which
// is our History per year
let bill;cov_7ffl2vh04.s[419]++;if(value.EnergyConsumption.length===1){cov_7ffl2vh04.b[79][0]++;cov_7ffl2vh04.s[420]++;bill=await myFunctions.firstMonthlyPayment(value.UnitPrice,value.LastEnergyConsumption,value.MinimumMonthlyFee);}else{cov_7ffl2vh04.b[79][1]++;cov_7ffl2vh04.s[421]++;if(value.EnergyConsumption.length!==0){cov_7ffl2vh04.b[80][0]++;cov_7ffl2vh04.s[422]++;bill=await myFunctions.succesiveMonthlyPayments.myMethod(value.LastEnergyConsumption,value.UnitPrice,value.MinimumMonthlyFee,value.EnergyConsumption,value.FacturacionMensual);}else{cov_7ffl2vh04.b[80][1]++;cov_7ffl2vh04.s[423]++;throw new Error(`Bill for user ${userDNI} still not delivered`);}}// Now it is clear how much has the farmer to pay for, it is time to pay (send his/her tokens)
const myMoney=(cov_7ffl2vh04.s[424]++,parseFloat(token.Amount));const balance=(cov_7ffl2vh04.s[425]++,myMoney-bill);cov_7ffl2vh04.s[426]++;if(balance<0){cov_7ffl2vh04.b[81][0]++;cov_7ffl2vh04.s[427]++;throw new Error('Please add more coins to your wallet, or pool them');}else{cov_7ffl2vh04.b[81][1]++;}cov_7ffl2vh04.s[428]++;value.FacturacionMensual.push(bill);cov_7ffl2vh04.s[429]++;value.LastFacturacionMensual=bill;cov_7ffl2vh04.s[430]++;value.LastModificationOn=currentDate;cov_7ffl2vh04.s[431]++;value.LastModificationUserID=userDNI;cov_7ffl2vh04.s[432]++;value.IsLastBillPaid=true;// retrieve PPA Pool state in order to allocate tokens to pool owner or to ppa Owner if ppa 
// is not inside pool
const[isInside,owner]=(cov_7ffl2vh04.s[433]++,await this._isPPAinPool(ctx,value.ppaID));cov_7ffl2vh04.s[434]++;if((cov_7ffl2vh04.b[83][0]++,!owner)||(cov_7ffl2vh04.b[83][1]++,!isInside)){cov_7ffl2vh04.b[82][0]++;cov_7ffl2vh04.s[435]++;owner=value.OwnerID;}else{cov_7ffl2vh04.b[82][1]++;}// TODO
// tranfer to tokens' owner
cov_7ffl2vh04.s[436]++;await this._TransferMoney(ctx,token.ID,bill,owner,userID);cov_7ffl2vh04.s[437]++;await ctx.stub.putState(value.ppaID,Buffer.from(JSON.stringify(value)));}// As a simplicity we will assume that each user will use just one token ID to pay the bill. If a 
// user has some IDs that putting together reach the desirable value, the user will
// pool his tokens, otherwise he/she will not commit the tx
/**
     *
     * @param {*} ctx
     * @param {*} tokenID
     * @param {*} amount
     * @param {*} receiverID
     */ // Auxiliary function to transfer the money farmers pay.
async _TransferMoney(ctx,tokenID,amount,receiverID,userID){cov_7ffl2vh04.f[47]++;// No prior verifications needed, because they have been checked in main function, which is 
// MonthlyPayout
const tokenBytes=(cov_7ffl2vh04.s[438]++,await ctx.stub.getState(tokenID));cov_7ffl2vh04.s[439]++;if((cov_7ffl2vh04.b[85][0]++,!tokenBytes)||(cov_7ffl2vh04.b[85][1]++,tokenBytes.length===0)){cov_7ffl2vh04.b[84][0]++;cov_7ffl2vh04.s[440]++;throw new Error(`Error: no token associated with ID ${tokenID} `);}else{cov_7ffl2vh04.b[84][1]++;}const token=(cov_7ffl2vh04.s[441]++,JSON.parse(tokenBytes.toString()));const balance=(cov_7ffl2vh04.s[442]++,token.Amount-amount);const genericID=(cov_7ffl2vh04.s[443]++,await ctx.stub.getTxID());let typeID;const key1=(cov_7ffl2vh04.s[444]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_7ffl2vh04.s[445]++,await ctx.stub.createCompositeKey('securitizationCoin',[receiverID,genericID]));cov_7ffl2vh04.s[446]++;typeID=':1';const utxo1=(cov_7ffl2vh04.s[447]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balance,CanBeUsed:true});cov_7ffl2vh04.s[448]++;typeID=':0';const utxo2=(cov_7ffl2vh04.s[449]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:token.Issuer,Amount:amount,CanBeUsed:true});cov_7ffl2vh04.s[450]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_7ffl2vh04.s[451]++;if(balance!==0){cov_7ffl2vh04.b[86][0]++;cov_7ffl2vh04.s[452]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_7ffl2vh04.b[86][1]++;}cov_7ffl2vh04.s[453]++;await ctx.stub.deleteState(token.ID);}// // TODO: Who can execute this function??
// /**
//  *
//  * @param {*} ctx
//  * @param {*} userID
//  * @param {*} date
//  */
// // Each period, originator will check how are performing the PPAs he has offered. This will update 
// // if some irrigator is a defaulter or not.
// async MonthlyPerformance(ctx, ppaID,date){
//     const ppaBytes=await ctx.stub.getState(ppaID);
//     if (!ppaBytes || ppaBytes.length === 0){
//         throw new Error(`This PPA ID ${ppaID} does not exist`);
//     }
//     let ppa=JSON.parse(ppaBytes.toString())
//     // Now we check its performance and update PPA according to elapsed time between current date
//     // and payment date or other dates
//     const currentlyDate=new Date(DATE)
//     // Were bills paid on time?
//     // Check difference between dates
//     // TODO: the rest of verifications
//     // ppa.LastModificationOn=date;
//     // ppa.LastModificationUserID=userID;
//     const ppaBuffer= Buffer.from(JSON.stringify(ppa));
//     await ctx.stub.putState(ppa.ppaID,ppaBuffer)
// }
// TODO:
// change userID -> ppaID
}// This is another contract which defines a new bussiness: the acquisition of PPA Tokens,
// valuation of the pool on-chain and  transference of the bonds
class bondIssuanceContract extends Contract{constructor(){cov_7ffl2vh04.f[48]++;cov_7ffl2vh04.s[454]++;super('bonds.securitization.com');}createContext(){cov_7ffl2vh04.f[49]++;cov_7ffl2vh04.s[455]++;return new securitizationContext();}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_7ffl2vh04.f[50]++;const iterator=(cov_7ffl2vh04.s[456]++,ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_7ffl2vh04.s[457]++,0);let results;cov_7ffl2vh04.s[458]++;for await(const res of iterator){cov_7ffl2vh04.s[459]++;results=JSON.parse(res.value.toString());cov_7ffl2vh04.s[460]++;counter=counter+1;}cov_7ffl2vh04.s[461]++;if(counter>1){cov_7ffl2vh04.b[87][0]++;cov_7ffl2vh04.s[462]++;throw new Error('Check this...');}else{cov_7ffl2vh04.b[87][1]++;cov_7ffl2vh04.s[463]++;if(counter===0){cov_7ffl2vh04.b[88][0]++;cov_7ffl2vh04.s[464]++;return true;}else{cov_7ffl2vh04.b[88][1]++;}}cov_7ffl2vh04.s[465]++;return results;}// Prior verifications included in beforeTransaction logic
async beforeTransaction(ctx){cov_7ffl2vh04.f[51]++;let userMSPID=(cov_7ffl2vh04.s[466]++,ctx.GetMSPID());cov_7ffl2vh04.s[467]++;if((cov_7ffl2vh04.b[90][0]++,userMSPID!=='originatorMSP')&&(cov_7ffl2vh04.b[90][1]++,userMSPID!=='spvMSP')&&(cov_7ffl2vh04.b[90][2]++,userMSPID!=='ratingagency')){cov_7ffl2vh04.b[89][0]++;cov_7ffl2vh04.s[468]++;throw new Error(`Your organization ${userMSPID} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[89][1]++;}cov_7ffl2vh04.s[469]++;await ctx.SetMSPID(userMSPID);let par=(cov_7ffl2vh04.s[470]++,await ctx.stub.getFunctionAndParameters());let func=(cov_7ffl2vh04.s[471]++,par.fcn);let params=(cov_7ffl2vh04.s[472]++,par.params);cov_7ffl2vh04.s[473]++;for(let i=(cov_7ffl2vh04.s[474]++,0);i<params.length;i++){cov_7ffl2vh04.s[475]++;if(params[i]===''){cov_7ffl2vh04.b[91][0]++;cov_7ffl2vh04.s[476]++;throw new Error('There is at least one empty parameter that should not be');}else{cov_7ffl2vh04.b[91][1]++;}}cov_7ffl2vh04.s[477]++;switch(func){case'BuyRequest':cov_7ffl2vh04.b[92][0]++;cov_7ffl2vh04.s[478]++;if(ctx.mspid!=='spvMSP'){cov_7ffl2vh04.b[93][0]++;cov_7ffl2vh04.s[479]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[93][1]++;}case'SellRequest':cov_7ffl2vh04.b[92][1]++;cov_7ffl2vh04.s[480]++;if(ctx.mspid!=='originatorMSP'){cov_7ffl2vh04.b[94][0]++;cov_7ffl2vh04.s[481]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[94][1]++;}case'SignRequestOriginator':cov_7ffl2vh04.b[92][2]++;cov_7ffl2vh04.s[482]++;if(ctx.mspid!=='originatorMSP'){cov_7ffl2vh04.b[95][0]++;cov_7ffl2vh04.s[483]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[95][1]++;}case'SignRequestSPV':cov_7ffl2vh04.b[92][3]++;cov_7ffl2vh04.s[484]++;if(ctx.mspid!=='spvMSP'){cov_7ffl2vh04.b[96][0]++;cov_7ffl2vh04.s[485]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[96][1]++;}case'Rating':cov_7ffl2vh04.b[92][4]++;cov_7ffl2vh04.s[486]++;if(ctx.mspid!=='ratingagencyMSP'){cov_7ffl2vh04.b[97][0]++;cov_7ffl2vh04.s[487]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[97][1]++;}case'IssueBond':cov_7ffl2vh04.b[92][5]++;cov_7ffl2vh04.s[488]++;if(ctx.mspid!=='spvMSP'){cov_7ffl2vh04.b[98][0]++;cov_7ffl2vh04.s[489]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[98][1]++;}}}async afterTransaction(ctx){cov_7ffl2vh04.f[52]++;let event=(cov_7ffl2vh04.s[490]++,await ctx.GetEventPayload());cov_7ffl2vh04.s[491]++;return event;}/**
     * 
     * @param {*} ctx 
     * @returns the size of the pool 
     */async _isPoolCreated(ctx){cov_7ffl2vh04.f[53]++;const iterator=(cov_7ffl2vh04.s[492]++,ctx.stub.getStateByPartialCompositeKey('POOL',[]));let results=(cov_7ffl2vh04.s[493]++,[]);cov_7ffl2vh04.s[494]++;for await(const res of iterator){cov_7ffl2vh04.s[495]++;// push key instead of value json
results.push(res.key);}cov_7ffl2vh04.s[496]++;return results.length;}/**
     * 
     * @param {*} ctx 
     * @param {*} docTypeName 
     * @returns the state associated with that partial key
     */ // This auxiliary function will only work with those states expected to be unique (POOL, REALTIMEPARAMETERS, RATING...)
async _getPoolStateByPartialCompositeKey(ctx,docTypeName){cov_7ffl2vh04.f[54]++;const iterator=(cov_7ffl2vh04.s[497]++,ctx.stub.getStateByPartialCompositeKey(docTypeName,[]));let counter=(cov_7ffl2vh04.s[498]++,0);let results;cov_7ffl2vh04.s[499]++;for await(const res of iterator){cov_7ffl2vh04.s[500]++;results=JSON.parse(res.value.toString());cov_7ffl2vh04.s[501]++;counter=counter+1;}cov_7ffl2vh04.s[502]++;if(counter>1){cov_7ffl2vh04.b[99][0]++;cov_7ffl2vh04.s[503]++;throw new Error('This state-value pair is not unique');}else{cov_7ffl2vh04.b[99][1]++;cov_7ffl2vh04.s[504]++;if(counter===0){cov_7ffl2vh04.b[100][0]++;cov_7ffl2vh04.s[505]++;return true;}else{cov_7ffl2vh04.b[100][1]++;}}cov_7ffl2vh04.s[506]++;return results;}// TODO: QUERY POOL FUNCTION
/**
     * 
     * @param {*} ctx 
     * @param {*} amount 
     * @param {*} price 
     * @param {*} toIdentity 
     */ // SPV will want to buy the pool of assets that originator owns, but firstly she/he needs
// to submit a request to buy it.
async BuyRequest(ctx,amount,price,toIdentity){cov_7ffl2vh04.f[55]++;cov_7ffl2vh04.s[507]++;// TODO: originator must achieve a certain pool size to sell??
//       what if actual pool size is greater than spv wants
if((await this._isPoolCreated(ctx))===0){cov_7ffl2vh04.b[101][0]++;cov_7ffl2vh04.s[508]++;throw new Error(`Pool still not created`);}else{cov_7ffl2vh04.b[101][1]++;}const userID=(cov_7ffl2vh04.s[509]++,await ctx.GetUserIdentity('cif'));const genericID=(cov_7ffl2vh04.s[510]++,await ctx.stub.getTxID());const requestID=(cov_7ffl2vh04.s[511]++,await ctx.stub.createCompositeKey('BuyRequest',[userID,genericID]));let value=(cov_7ffl2vh04.s[512]++,{ID:requestID,Owner:userID,Receiver:toIdentity,Amount:parseInt(amount),Price:parseFloat(price),IsSigned:false});const valueBuffer=(cov_7ffl2vh04.s[513]++,Buffer.from(JSON.stringify(value)));cov_7ffl2vh04.s[514]++;await ctx.stub.putState(requestID,valueBuffer);cov_7ffl2vh04.s[515]++;await ctx.SetEventName('BuyRequestIssued');cov_7ffl2vh04.s[516]++;await ctx.SetEventPayload(valueBuffer);}/**
     * 
     * @param {*} ctx 
     * @param {*} price 
     * @param {*} toIdentity 
     */ // Originator submits a sell request to SPV
async SellRequest(ctx,price,toIdentity){cov_7ffl2vh04.f[56]++;const userID=(cov_7ffl2vh04.s[517]++,await ctx.GetUserIdentity('cif'));const genericID=(cov_7ffl2vh04.s[518]++,await ctx.stub.getTxID());const requestID=(cov_7ffl2vh04.s[519]++,await ctx.stub.createCompositeKey('SellRequest',[userID,genericID]));let value=(cov_7ffl2vh04.s[520]++,{ID:requestID,Owner:userID,Receiver:toIdentity,Price:parseFloat(price),IsSigned:false});const valueBuffer=(cov_7ffl2vh04.s[521]++,Buffer.from(JSON.stringify(value)));cov_7ffl2vh04.s[522]++;await ctx.stub.putState(requestID,valueBuffer);cov_7ffl2vh04.s[523]++;await ctx.SetEventName('SellRequestIssued');cov_7ffl2vh04.s[524]++;await ctx.SetEventPayload(valueBuffer);}/**
     *
     * @param {*} ctx
     * @param {*} type
     * @param {*} toIdentity  in real case toIdentity is an attribute linked to certificate
     */ // cash owner must sign first
// SPV accepts request. Check if she/he has enough funds
async SignRequestSPV(ctx,toIdentity,tokenID,typeID){cov_7ffl2vh04.f[57]++;const userID=(cov_7ffl2vh04.s[525]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_7ffl2vh04.s[526]++,ctx.stub.getStateByPartialCompositeKey('BuyRequest',[toIdentity]));cov_7ffl2vh04.s[527]++;if((cov_7ffl2vh04.b[103][0]++,!iterator)||(cov_7ffl2vh04.b[103][1]++,iterator.length===0)){cov_7ffl2vh04.b[102][0]++;cov_7ffl2vh04.s[528]++;throw new Error(`User ID ${toIdentity} has no Buy Request linked to him/her`);}else{cov_7ffl2vh04.b[102][1]++;}let value;cov_7ffl2vh04.s[529]++;for await(const res of iterator){cov_7ffl2vh04.s[530]++;value=JSON.parse(res.value.toString());}// Check if this request has been already signed
cov_7ffl2vh04.s[531]++;if(value.IsSigned){cov_7ffl2vh04.b[104][0]++;cov_7ffl2vh04.s[532]++;throw new Error(`Request has been already signed. Not allowed to perform this action`);}else{cov_7ffl2vh04.b[104][1]++;}// Check if I am the receiver of that Request 
cov_7ffl2vh04.s[533]++;if(value.Receiver!==userID){cov_7ffl2vh04.b[105][0]++;cov_7ffl2vh04.s[534]++;throw new Error(`User ID ${userID} does not match Receiver ID`);}else{cov_7ffl2vh04.b[105][1]++;}// As cash owner will signs the request, we must be sure that he is the owner of that amount
// and maybe we should block his/her funds
// I dont think this could be necessary because in the DvP we will execute both actions, and
// if one of them does not succeed, noone will succeed. 
// In order to not create false requests we are going to freeze tokens
const token_ID=(cov_7ffl2vh04.s[535]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));const tokenBytes=(cov_7ffl2vh04.s[536]++,await ctx.stub.getState(token_ID+typeID));cov_7ffl2vh04.s[537]++;if((cov_7ffl2vh04.b[107][0]++,!tokenBytes)||(cov_7ffl2vh04.b[107][1]++,tokenBytes.length===0)){cov_7ffl2vh04.b[106][0]++;cov_7ffl2vh04.s[538]++;throw new Error(`Error, Token with ID ${tokenID+typeID} does not exist`);}else{cov_7ffl2vh04.b[106][1]++;}const myFunds=(cov_7ffl2vh04.s[539]++,JSON.parse(tokenBytes.toString()));// Check our funds
cov_7ffl2vh04.s[540]++;if(value.Price>myFunds.Amount){cov_7ffl2vh04.b[108][0]++;cov_7ffl2vh04.s[541]++;throw new Error(`Your token has not enough funds. Try to pool your token or ask for mint`);}else{cov_7ffl2vh04.b[108][1]++;}// If we have enough funds, then we can sign the request
cov_7ffl2vh04.s[542]++;value.IsSigned=true;// Retrieve sell request
const new_iterator=(cov_7ffl2vh04.s[543]++,ctx.stub.getStateByPartialCompositeKey('SellRequest',[userID]));let new_value;cov_7ffl2vh04.s[544]++;for await(const res of new_iterator){cov_7ffl2vh04.s[545]++;new_value=JSON.parse(res.value.toString());}cov_7ffl2vh04.s[546]++;if(new_value.IsSigned){cov_7ffl2vh04.b[109][0]++;cov_7ffl2vh04.s[547]++;throw new Error(`User ID ${new_value.Receiver} has signed his/her request`);}else{cov_7ffl2vh04.b[109][1]++;}cov_7ffl2vh04.s[548]++;if(new_value.Owner!==userID){cov_7ffl2vh04.b[110][0]++;cov_7ffl2vh04.s[549]++;throw new Error(`User ID ${userID} did not request to Sell`);}else{cov_7ffl2vh04.b[110][1]++;}// we put together both requests and buy request is signed
const n_value=(cov_7ffl2vh04.s[550]++,{value,new_value,TokenID:token_ID+typeID});const n_valueID=(cov_7ffl2vh04.s[551]++,'Request');const valueBuffer=(cov_7ffl2vh04.s[552]++,Buffer.from(JSON.stringify(n_value)));cov_7ffl2vh04.s[553]++;await ctx.stub.putState(n_valueID,valueBuffer);cov_7ffl2vh04.s[554]++;await ctx.stub.deleteState(value.ID);cov_7ffl2vh04.s[555]++;await ctx.stub.deleteState(new_value.ID);cov_7ffl2vh04.s[556]++;await ctx.SetEventName('SignSellRequest');cov_7ffl2vh04.s[557]++;await ctx.SetEventPayload(valueBuffer);}async _dvp(ctx,tokenID,securityID,tokensToTransfer){cov_7ffl2vh04.f[58]++;const tokenBytes=(cov_7ffl2vh04.s[558]++,await ctx.stub.getState(tokenID));cov_7ffl2vh04.s[559]++;if((cov_7ffl2vh04.b[112][0]++,!tokenBytes)||(cov_7ffl2vh04.b[112][1]++,tokenBytes.length===0)){cov_7ffl2vh04.b[111][0]++;cov_7ffl2vh04.s[560]++;throw new Error(`Error, Token state according to key ${tokenID} does not exist`);}else{cov_7ffl2vh04.b[111][1]++;}const token=(cov_7ffl2vh04.s[561]++,JSON.parse(tokenBytes.toString()));const securityBytes=(cov_7ffl2vh04.s[562]++,await ctx.stub.getState(securityID));cov_7ffl2vh04.s[563]++;if((cov_7ffl2vh04.b[114][0]++,!securityBytes)||(cov_7ffl2vh04.b[114][1]++,securityBytes.length===0)){cov_7ffl2vh04.b[113][0]++;cov_7ffl2vh04.s[564]++;throw new Error(`Error, Pool state according to key ${securityID} does not exist`);}else{cov_7ffl2vh04.b[113][1]++;}const security=(cov_7ffl2vh04.s[565]++,JSON.parse(securityBytes.toString()));const genericID=(cov_7ffl2vh04.s[566]++,await ctx.stub.getTxID());// 'user' seria el que recibe el token/bono
const key1=(cov_7ffl2vh04.s[567]++,await ctx.stub.createCompositeKey('securitizationCoin',[token.Owner,genericID]));const key2=(cov_7ffl2vh04.s[568]++,await ctx.stub.createCompositeKey('securitizationCoin',[security.Owner,genericID]));const securityKey1=(cov_7ffl2vh04.s[569]++,await ctx.stub.createCompositeKey('POOL',[token.Owner,genericID]));const balanceTokens=(cov_7ffl2vh04.s[570]++,token.Amount-tokensToTransfer);let utxo1;let utxo2;let typeID;cov_7ffl2vh04.s[571]++;typeID=':1';cov_7ffl2vh04.s[572]++;utxo1={ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balanceTokens,Factor:100,CanBeUsed:true};cov_7ffl2vh04.s[573]++;typeID=':0';cov_7ffl2vh04.s[574]++;utxo2={ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:security.Owner,Issuer:token.Issuer,Amount:tokensToTransfer,CanBeUsed:true};cov_7ffl2vh04.s[575]++;security.poolID=securityKey1;cov_7ffl2vh04.s[576]++;security.Owner=token.Owner;cov_7ffl2vh04.s[577]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_7ffl2vh04.s[578]++;await ctx.stub.putState(security.poolID,Buffer.from(JSON.stringify(security)));cov_7ffl2vh04.s[579]++;if(balanceTokens!=0){cov_7ffl2vh04.b[115][0]++;cov_7ffl2vh04.s[580]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_7ffl2vh04.b[115][1]++;}cov_7ffl2vh04.s[581]++;await ctx.stub.deleteState(tokenID);cov_7ffl2vh04.s[582]++;await ctx.stub.deleteState(securityID);}/**
     * 
     * @param {*} ctx 
     * @param {*} tokenid 
     */ // securities owner must sign afterwards
// originator accepts request: enough securities
async SignRequestOriginator(ctx,poolID){cov_7ffl2vh04.f[59]++;const userID=(cov_7ffl2vh04.s[583]++,await ctx.GetUserIdentity('cif'));const valueBytes=(cov_7ffl2vh04.s[584]++,await ctx.stub.getState('Request'));cov_7ffl2vh04.s[585]++;if((cov_7ffl2vh04.b[117][0]++,!valueBytes)||(cov_7ffl2vh04.b[117][1]++,valueBytes.length===0)){cov_7ffl2vh04.b[116][0]++;cov_7ffl2vh04.s[586]++;throw new Error(`Request State does not exist`);}else{cov_7ffl2vh04.b[116][1]++;}const value=(cov_7ffl2vh04.s[587]++,JSON.parse(valueBytes.toString()));// Originator in order to sign this request must provide an own PPA pool
const tokenID=(cov_7ffl2vh04.s[588]++,await ctx.stub.createCompositeKey('POOL',[poolID]));const poolBytes=(cov_7ffl2vh04.s[589]++,await ctx.stub.getState(tokenID));cov_7ffl2vh04.s[590]++;if((cov_7ffl2vh04.b[119][0]++,!poolBytes)||(cov_7ffl2vh04.b[119][1]++,poolBytes.length===0)){cov_7ffl2vh04.b[118][0]++;cov_7ffl2vh04.s[591]++;throw new Error(`Error, Pool State does not exist according to the key provided`);}else{cov_7ffl2vh04.b[118][1]++;}const pool=(cov_7ffl2vh04.s[592]++,JSON.parse(poolBytes.toString()));cov_7ffl2vh04.s[593]++;if(pool.Owner!==userID){cov_7ffl2vh04.b[120][0]++;cov_7ffl2vh04.s[594]++;throw new Error(`User ID ${userID} does not match Pool Owner`);}else{cov_7ffl2vh04.b[120][1]++;}cov_7ffl2vh04.s[595]++;if(pool.ppaIDs.length!==value.value.Amount){cov_7ffl2vh04.b[121][0]++;cov_7ffl2vh04.s[596]++;throw new Error(`Size of Pool and size of Buy Request do not match`);}else{cov_7ffl2vh04.b[121][1]++;}cov_7ffl2vh04.s[597]++;if(value.new_value.IsSigned){cov_7ffl2vh04.b[122][0]++;cov_7ffl2vh04.s[598]++;throw new Error(`Already signed`);}else{cov_7ffl2vh04.b[122][1]++;}cov_7ffl2vh04.s[599]++;value.new_value.IsSigned=true;// DvP is triggered
cov_7ffl2vh04.s[600]++;await this._dvp(ctx,value.TokenID,pool.poolID,value.value.Price);cov_7ffl2vh04.s[601]++;await ctx.stub.deleteState('Request');}// TODO
// Once SPV has acquired the Pool of PPAs, rating agency will assess PPA assets in order to
// issue securities backed by the Pool.
async Rating(ctx,poolID){cov_7ffl2vh04.f[60]++;const userID=(cov_7ffl2vh04.s[602]++,await ctx.GetUserIdentity('cif'));// const genericID=ctx.stub.getTxID();
const key=(cov_7ffl2vh04.s[603]++,await ctx.stub.createCompositeKey('Rating'));const value=(cov_7ffl2vh04.s[604]++,{ID:key,BackedBy:poolID,Owner:userID,RatingArgs:""});const valueBuffer=(cov_7ffl2vh04.s[605]++,Buffer.from(JSON.stringify(value)));cov_7ffl2vh04.s[606]++;await ctx.stub.putState(key,valueBuffer);}//check if spv owns every ppa
async IssueBond(ctx){cov_7ffl2vh04.f[61]++;const userID=(cov_7ffl2vh04.s[607]++,await ctx.GetUserIdentity('cif'));// We retrieve data from rating
const ratingBytes=(cov_7ffl2vh04.s[608]++,await ctx.stub.getState('Rating'));cov_7ffl2vh04.s[609]++;if((cov_7ffl2vh04.b[124][0]++,!ratingBytes)||(cov_7ffl2vh04.b[124][1]++,ratingBytes.length===0)){cov_7ffl2vh04.b[123][0]++;cov_7ffl2vh04.s[610]++;throw new Error(`Rating still not delivered`);}else{cov_7ffl2vh04.b[123][1]++;}const rating=(cov_7ffl2vh04.s[611]++,JSON.parse(ratingBytes.toString()));const poolID=(cov_7ffl2vh04.s[612]++,rating.BackedBy);const poolBytes=(cov_7ffl2vh04.s[613]++,await ctx.stub.getState(poolID));cov_7ffl2vh04.s[614]++;if((cov_7ffl2vh04.b[126][0]++,!poolBytes)||(cov_7ffl2vh04.b[126][1]++,poolBytes.length===0)){cov_7ffl2vh04.b[125][0]++;cov_7ffl2vh04.s[615]++;throw new Error(`Error, Pool State does not match Pool ID provided`);}else{cov_7ffl2vh04.b[125][1]++;}const pool=(cov_7ffl2vh04.s[616]++,JSON.parse(poolBytes.toString()));cov_7ffl2vh04.s[617]++;if(pool.Owner!==userID){cov_7ffl2vh04.b[127][0]++;cov_7ffl2vh04.s[618]++;throw new Error(`User ID ${userID} does not own Pool`);}else{cov_7ffl2vh04.b[127][1]++;}// Rating State will provide some attributes bons must have.
const genericID=(cov_7ffl2vh04.s[619]++,await ctx.stub.getTxID());const key=(cov_7ffl2vh04.s[620]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));const typeID=(cov_7ffl2vh04.s[621]++,':0');const bondID=(cov_7ffl2vh04.s[622]++,key+typeID);// TODO: every time there is an attribute namely Issuer, should it be 
// ctx.clientIdentity.getID() or ctx.clientIdentity.getIDBytes();
const bondToken=(cov_7ffl2vh04.s[623]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:"",CouponRate:"",MaturityDate:"",Issuer:userID,Owner:userID,Pool:"",AmountPaid:"",OriginalValue:"",MonthlyPayout:"",RemainingPayments:"",Amount:100000,CanBeUsed:true});cov_7ffl2vh04.s[624]++;valueBuffer=Buffer.from(JSON.stringify(bondToken));cov_7ffl2vh04.s[625]++;await ctx.stub.putState(bondID,valueBuffer);cov_7ffl2vh04.s[626]++;await ctx.SetEventName('BondsIssuance');cov_7ffl2vh04.s[627]++;await ctx.SetEventPayload(valueBuffer);}}class servicingContract extends Contract{constructor(){cov_7ffl2vh04.f[62]++;cov_7ffl2vh04.s[628]++;// Unique namespace when multiple contracts per chaincode file
super('servicing.securitization.com');}createContext(){cov_7ffl2vh04.f[63]++;cov_7ffl2vh04.s[629]++;return new securitizationContext();}// TODO: change which orgs can execute this contract
async beforeTransaction(ctx){cov_7ffl2vh04.f[64]++;let userMSPID=(cov_7ffl2vh04.s[630]++,ctx.GetMSPID());cov_7ffl2vh04.s[631]++;if((cov_7ffl2vh04.b[129][0]++,userMSPID!=='investorMSP')&&(cov_7ffl2vh04.b[129][1]++,userMSPID!=='spvMSP')&&(cov_7ffl2vh04.b[129][2]++,userMSPID!=='ratingagency')){cov_7ffl2vh04.b[128][0]++;cov_7ffl2vh04.s[632]++;throw new Error(`Your organization ${userMSPID} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[128][1]++;}cov_7ffl2vh04.s[633]++;await ctx.SetMSPID(userMSPID);let par=(cov_7ffl2vh04.s[634]++,ctx.stub.getFunctionAndParameters());let func=(cov_7ffl2vh04.s[635]++,par.fcn);let params=(cov_7ffl2vh04.s[636]++,par.params);cov_7ffl2vh04.s[637]++;for(let i=(cov_7ffl2vh04.s[638]++,0);i<params.length;i++){cov_7ffl2vh04.s[639]++;if(params[i]===''){cov_7ffl2vh04.b[130][0]++;cov_7ffl2vh04.s[640]++;throw new Error('There is at least one empty parameter that should not be');}else{cov_7ffl2vh04.b[130][1]++;}}cov_7ffl2vh04.s[641]++;switch(func){case'AskOrder':cov_7ffl2vh04.b[131][0]++;cov_7ffl2vh04.s[642]++;if(ctx.mspid!=='investorMSP'){cov_7ffl2vh04.b[132][0]++;cov_7ffl2vh04.s[643]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[132][1]++;}case'BidOrder':cov_7ffl2vh04.b[131][1]++;cov_7ffl2vh04.s[644]++;if(ctx.mspid!=='investorMSP'){cov_7ffl2vh04.b[133][0]++;cov_7ffl2vh04.s[645]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[133][1]++;}case'Matching':cov_7ffl2vh04.b[131][2]++;cov_7ffl2vh04.s[646]++;if(ctx.mspid!=='investorMSP'){cov_7ffl2vh04.b[134][0]++;cov_7ffl2vh04.s[647]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[134][1]++;}case'PoolBond':cov_7ffl2vh04.b[131][3]++;cov_7ffl2vh04.s[648]++;if((cov_7ffl2vh04.b[136][0]++,ctx.mspid!=='investorMSP')||(cov_7ffl2vh04.b[136][1]++,ctx.mspid!=='spvMSP')){cov_7ffl2vh04.b[135][0]++;cov_7ffl2vh04.s[649]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_7ffl2vh04.b[135][1]++;}}}async afterTransaction(ctx){cov_7ffl2vh04.f[65]++;let event=(cov_7ffl2vh04.s[650]++,await ctx.GetEventPayload());cov_7ffl2vh04.s[651]++;return event;}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_7ffl2vh04.f[66]++;const iterator=(cov_7ffl2vh04.s[652]++,ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_7ffl2vh04.s[653]++,0);let results;cov_7ffl2vh04.s[654]++;for await(const res of iterator){cov_7ffl2vh04.s[655]++;results=JSON.parse(res.value.toString());cov_7ffl2vh04.s[656]++;counter=counter+1;}cov_7ffl2vh04.s[657]++;if(counter>1){cov_7ffl2vh04.b[137][0]++;cov_7ffl2vh04.s[658]++;throw new Error('Partial Key Uniqueness not provided. Something went wrong');}else{cov_7ffl2vh04.b[137][1]++;cov_7ffl2vh04.s[659]++;if(counter===0){cov_7ffl2vh04.b[138][0]++;cov_7ffl2vh04.s[660]++;return true;}else{cov_7ffl2vh04.b[138][1]++;}}cov_7ffl2vh04.s[661]++;return results;}async _transferBond(ctx,userID,amount,keyFrom){cov_7ffl2vh04.f[67]++;const genericID=(cov_7ffl2vh04.s[662]++,await ctx.stub.getTxID());const key1=(cov_7ffl2vh04.s[663]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));cov_7ffl2vh04.s[664]++;for(const key of keyFrom){cov_7ffl2vh04.s[665]++;await ctx.stub.deleteState(key);}let typeID=(cov_7ffl2vh04.s[666]++,':0');const bondToken=(cov_7ffl2vh04.s[667]++,{ID:key1+typeID,GenericID:genericID,Rating:"",CouponRate:"",MaturityDate:"",Issuer:userID,Owner:userID,Pool:"",AmountPaid:"",OriginalValue:"",MonthlyPayout:"",RemainingPayments:"",Amount:amount,TypeID:typeID});const bondTokenBuffer=(cov_7ffl2vh04.s[668]++,Buffer.from(JSON.stringify(bondToken)));cov_7ffl2vh04.s[669]++;await ctx.stub.putState(key1,bondTokenBuffer);}async PoolBond(ctx){cov_7ffl2vh04.f[68]++;const userID=(cov_7ffl2vh04.s[670]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_7ffl2vh04.s[671]++,ctx.stub.getStateByPartialCompositeKey('BondToken',[userID]));let amount;let resultKeys=(cov_7ffl2vh04.s[672]++,[]);let counter=(cov_7ffl2vh04.s[673]++,0);let value;cov_7ffl2vh04.s[674]++;for await(const res of iterator){cov_7ffl2vh04.s[675]++;value=JSON.parse(res.value.toString());cov_7ffl2vh04.s[676]++;amount=parseInt(value.Amount);cov_7ffl2vh04.s[677]++;if(value.CanBeUsed){cov_7ffl2vh04.b[139][0]++;cov_7ffl2vh04.s[678]++;resultKeys.push(res.key.toString());cov_7ffl2vh04.s[679]++;counter=counter+amount;}else{cov_7ffl2vh04.b[139][1]++;}cov_7ffl2vh04.s[680]++;if(resultKeys.length===2){cov_7ffl2vh04.b[140][0]++;cov_7ffl2vh04.s[681]++;break;}else{cov_7ffl2vh04.b[140][1]++;}}cov_7ffl2vh04.s[682]++;if((cov_7ffl2vh04.b[142][0]++,resultKeys.length===0)||(cov_7ffl2vh04.b[142][1]++,resultKeys.length===1)){cov_7ffl2vh04.b[141][0]++;cov_7ffl2vh04.s[683]++;console.log('There is nothing left to do');cov_7ffl2vh04.s[684]++;return;}else{cov_7ffl2vh04.b[141][1]++;}cov_7ffl2vh04.s[685]++;await this._transferBond(ctx,userID,counter,resultKeys);}// Bid order will be executed by someone able to buy assets (bonds)
// Auxiliary function to allocate certain amount of money every time a bid order is submitted
async _splitMoney(ctx,tokenID,amount){cov_7ffl2vh04.f[69]++;const userID=(cov_7ffl2vh04.s[686]++,await ctx.GetUserIdentity('cif'));const tokenBytes=(cov_7ffl2vh04.s[687]++,await ctx.stub.getState(tokenID));cov_7ffl2vh04.s[688]++;if((cov_7ffl2vh04.b[144][0]++,!tokenBytes)||(cov_7ffl2vh04.b[144][1]++,tokenBytes.length===0)){cov_7ffl2vh04.b[143][0]++;cov_7ffl2vh04.s[689]++;throw new Error(`Error, Token state according to key ${tokenID} does not exist`);}else{cov_7ffl2vh04.b[143][1]++;}const token=(cov_7ffl2vh04.s[690]++,JSON.parse(tokenBytes.toString()));cov_7ffl2vh04.s[691]++;if(token.CanBeUsed===false){cov_7ffl2vh04.b[145][0]++;cov_7ffl2vh04.s[692]++;throw new Error(`This token ID ${tokenID} has already been used. Try another Token ID`);}else{cov_7ffl2vh04.b[145][1]++;}cov_7ffl2vh04.s[693]++;if(token.Amount<amount){cov_7ffl2vh04.b[146][0]++;cov_7ffl2vh04.s[694]++;throw new Error('Error, token State has not enough funds');}else{cov_7ffl2vh04.b[146][1]++;}const balance=(cov_7ffl2vh04.s[695]++,token.Amount-amount);const genericID=(cov_7ffl2vh04.s[696]++,await ctx.stub.getTxID());const key1=(cov_7ffl2vh04.s[697]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_7ffl2vh04.s[698]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));let typeID;cov_7ffl2vh04.s[699]++;typeID=':1';const utxo1=(cov_7ffl2vh04.s[700]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balance,CanBeUsed:true});cov_7ffl2vh04.s[701]++;typeID=':0';const utxo2=(cov_7ffl2vh04.s[702]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:amount,CanBeUsed:false});cov_7ffl2vh04.s[703]++;await ctx.stub.deleteState(token.ID);cov_7ffl2vh04.s[704]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_7ffl2vh04.s[705]++;if(balance!=0){cov_7ffl2vh04.b[147][0]++;cov_7ffl2vh04.s[706]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_7ffl2vh04.b[147][1]++;}cov_7ffl2vh04.s[707]++;return utxo2.ID;}// Auxiliary function to allocate certain amount of bonds every time an ask order is submitted
async _splitBonds(ctx,bondID,amount){cov_7ffl2vh04.f[70]++;const userID=(cov_7ffl2vh04.s[708]++,await ctx.GetUserIdentity('cif'));const bondBytes=(cov_7ffl2vh04.s[709]++,await ctx.stub.getState(bondID));cov_7ffl2vh04.s[710]++;if((cov_7ffl2vh04.b[149][0]++,!bondBytes)||(cov_7ffl2vh04.b[149][1]++,bondBytes.length===0)){cov_7ffl2vh04.b[148][0]++;cov_7ffl2vh04.s[711]++;throw new Error(`Error, Bond State according to key ${bondID} does not exist`);}else{cov_7ffl2vh04.b[148][1]++;}const bond=(cov_7ffl2vh04.s[712]++,await JSON.parse(bondBytes.toString()));cov_7ffl2vh04.s[713]++;if(!bond.CanBeUsed){cov_7ffl2vh04.b[150][0]++;cov_7ffl2vh04.s[714]++;throw new Error(`This Bond State with ID ${bondID} has already been used in a prior order`);}else{cov_7ffl2vh04.b[150][1]++;}cov_7ffl2vh04.s[715]++;if(amount>bond.Amount){cov_7ffl2vh04.b[151][0]++;cov_7ffl2vh04.s[716]++;throw new Error(`This Bond State has not enough bonds to transfer`);}else{cov_7ffl2vh04.b[151][1]++;}const balance=(cov_7ffl2vh04.s[717]++,bond.Amount-amount);const genericID=(cov_7ffl2vh04.s[718]++,ctx.stub.getTxID());const key1=(cov_7ffl2vh04.s[719]++,await ctx.stub.createCompositeKey('BondToken',[bond.Owner,genericID]));let typeID;cov_7ffl2vh04.s[720]++;typeID=':0';cov_7ffl2vh04.s[721]++;bondID=key1+typeID;const bond1=(cov_7ffl2vh04.s[722]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:bond.Rating,CouponRate:bond.CouponRate,MaturityDate:bond.MaturityDate,Issuer:bond.Issuer,Owner:bond.Owner,Pool:bond.Pool,AmountPaid:bond.AmountPaid,OriginalValue:bond.OriginalValue,MonthlyPayout:bond.MonthlyPayout,RemainingPayments:bond.RemainingPayments,Amount:amount,CanBeUsed:false});cov_7ffl2vh04.s[723]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond1)));cov_7ffl2vh04.s[724]++;if(balance!==0){cov_7ffl2vh04.b[152][0]++;const key2=(cov_7ffl2vh04.s[725]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));cov_7ffl2vh04.s[726]++;typeID=':1';cov_7ffl2vh04.s[727]++;bondID=key2+typeID;const bond2=(cov_7ffl2vh04.s[728]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:bond.Rating,CouponRate:bond.CouponRate,MaturityDate:bond.MaturityDate,Issuer:bond.Issuer,Owner:userID,Pool:bond.Pool,AmountPaid:bond.AmountPaid,OriginalValue:bond.OriginalValue,MonthlyPayout:bond.MonthlyPayout,RemainingPayments:bond.RemainingPayments,Amount:balance,CanBeUsed:true});cov_7ffl2vh04.s[729]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond2)));}else{cov_7ffl2vh04.b[152][1]++;}cov_7ffl2vh04.s[730]++;await ctx.stub.deleteState(bond.ID);cov_7ffl2vh04.s[731]++;return bond1.ID;}// Auxiliary function to sort bid orders according to price, if they are limit or market orders and time they were 
// submitted
async _sortingBidOrders(ctx,orderArray){cov_7ffl2vh04.f[71]++;cov_7ffl2vh04.s[732]++;await orderArray.sort((a,b)=>{cov_7ffl2vh04.f[72]++;cov_7ffl2vh04.s[733]++;return(cov_7ffl2vh04.b[154][0]++,a.MarketPrice)&&(cov_7ffl2vh04.b[154][1]++,!a.FullMatch)&&(cov_7ffl2vh04.b[154][2]++,!b.FullMatch)&&(cov_7ffl2vh04.b[154][3]++,b.MarketPrice)&&(cov_7ffl2vh04.b[154][4]++,a.Time<b.Time)?(cov_7ffl2vh04.b[153][0]++,1):(cov_7ffl2vh04.b[153][1]++,(cov_7ffl2vh04.b[156][0]++,a.MarketPrice)&&(cov_7ffl2vh04.b[156][1]++,!a.FullMatch)&&(cov_7ffl2vh04.b[156][2]++,!b.FullMatch)&&(cov_7ffl2vh04.b[156][3]++,b.MarketPrice)&&(cov_7ffl2vh04.b[156][4]++,a.Time>b.Time)?(cov_7ffl2vh04.b[155][0]++,-1):(cov_7ffl2vh04.b[155][1]++,0));});cov_7ffl2vh04.s[734]++;await orderArray.sort((b,a)=>{cov_7ffl2vh04.f[73]++;cov_7ffl2vh04.s[735]++;return a.Price>b.Price?(cov_7ffl2vh04.b[157][0]++,1):(cov_7ffl2vh04.b[157][1]++,b.Price>a.Price?(cov_7ffl2vh04.b[158][0]++,-1):(cov_7ffl2vh04.b[158][1]++,a.Time<b.Time?(cov_7ffl2vh04.b[159][0]++,1):(cov_7ffl2vh04.b[159][1]++,-1)));});cov_7ffl2vh04.s[736]++;await orderArray.sort((a,b)=>{cov_7ffl2vh04.f[74]++;cov_7ffl2vh04.s[737]++;return(cov_7ffl2vh04.b[161][0]++,!a.FullMatch)&&(cov_7ffl2vh04.b[161][1]++,b.FullMatch)?(cov_7ffl2vh04.b[160][0]++,-1):(cov_7ffl2vh04.b[160][1]++,(cov_7ffl2vh04.b[163][0]++,!b.FullMatch)&&(cov_7ffl2vh04.b[163][1]++,a.FullMatch)?(cov_7ffl2vh04.b[162][0]++,-1):(cov_7ffl2vh04.b[162][1]++,1));});cov_7ffl2vh04.s[738]++;return orderArray;}// Auxiliary function to sort ask orders according to price, if they are limit or market orders and time they were 
// submitted
async _sortingAskOrders(ctx,orderArray){cov_7ffl2vh04.f[75]++;cov_7ffl2vh04.s[739]++;await orderArray.sort((a,b)=>{cov_7ffl2vh04.f[76]++;cov_7ffl2vh04.s[740]++;return(cov_7ffl2vh04.b[165][0]++,a.MarketPrice)&&(cov_7ffl2vh04.b[165][1]++,!a.FullMatch)&&(cov_7ffl2vh04.b[165][2]++,!b.FullMatch)&&(cov_7ffl2vh04.b[165][3]++,b.MarketPrice)&&(cov_7ffl2vh04.b[165][4]++,a.Time<b.Time)?(cov_7ffl2vh04.b[164][0]++,1):(cov_7ffl2vh04.b[164][1]++,(cov_7ffl2vh04.b[167][0]++,a.MarketPrice)&&(cov_7ffl2vh04.b[167][1]++,!a.FullMatch)&&(cov_7ffl2vh04.b[167][2]++,!b.FullMatch)&&(cov_7ffl2vh04.b[167][3]++,b.MarketPrice)&&(cov_7ffl2vh04.b[167][4]++,a.Time>b.Time)?(cov_7ffl2vh04.b[166][0]++,-1):(cov_7ffl2vh04.b[166][1]++,0));});cov_7ffl2vh04.s[741]++;await orderArray.sort((b,a)=>{cov_7ffl2vh04.f[77]++;cov_7ffl2vh04.s[742]++;return a.Price>b.Price?(cov_7ffl2vh04.b[168][0]++,-1):(cov_7ffl2vh04.b[168][1]++,b.Price>a.Price?(cov_7ffl2vh04.b[169][0]++,1):(cov_7ffl2vh04.b[169][1]++,b.Time>a.Time?(cov_7ffl2vh04.b[170][0]++,1):(cov_7ffl2vh04.b[170][1]++,-1)));});cov_7ffl2vh04.s[743]++;await orderArray.sort((a,b)=>{cov_7ffl2vh04.f[78]++;cov_7ffl2vh04.s[744]++;return(cov_7ffl2vh04.b[172][0]++,!a.FullMatch)&&(cov_7ffl2vh04.b[172][1]++,b.FullMatch)?(cov_7ffl2vh04.b[171][0]++,-1):(cov_7ffl2vh04.b[171][1]++,(cov_7ffl2vh04.b[174][0]++,!b.FullMatch)&&(cov_7ffl2vh04.b[174][1]++,a.FullMatch)?(cov_7ffl2vh04.b[173][0]++,-1):(cov_7ffl2vh04.b[173][1]++,1));});cov_7ffl2vh04.s[745]++;return orderArray;}// Bid order will be executed by someone whose desire is buying bonds.
async BidOrder(ctx,amount,price,tokenID,identificativo,date){cov_7ffl2vh04.f[79]++;cov_7ffl2vh04.s[746]++;// first we check the format of price
await this._checkDecimals(price);cov_7ffl2vh04.s[747]++;price=parseFloat(price);cov_7ffl2vh04.s[748]++;price=parseInt(price*100);cov_7ffl2vh04.s[749]++;if((cov_7ffl2vh04.b[176][0]++,amount<=0)||(cov_7ffl2vh04.b[176][1]++,price<=0)){cov_7ffl2vh04.b[175][0]++;cov_7ffl2vh04.s[750]++;throw new Error(`Both Amount and Price arguments must be positive`);}else{cov_7ffl2vh04.b[175][1]++;}const userID=(cov_7ffl2vh04.s[751]++,await ctx.GetUserIdentity('cif'));// retrieve order book if it exists
const bookOrderBytes=(cov_7ffl2vh04.s[752]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_7ffl2vh04.s[753]++;if((cov_7ffl2vh04.b[178][0]++,!bookOrderBytes)||(cov_7ffl2vh04.b[178][1]++,bookOrderBytes.length===0)){cov_7ffl2vh04.b[177][0]++;cov_7ffl2vh04.s[754]++;bookOrder=[[],[]];}else{cov_7ffl2vh04.b[177][1]++;cov_7ffl2vh04.s[755]++;bookOrder=JSON.parse(bookOrderBytes.toString());}// retrieve token we are going to use to pay for
let myKey=(cov_7ffl2vh04.s[756]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));cov_7ffl2vh04.s[757]++;myKey=myKey+identificativo;const tokenBytes=(cov_7ffl2vh04.s[758]++,await ctx.stub.getState(myKey));// prior verifications are also inside auxiliary function 
cov_7ffl2vh04.s[759]++;if((cov_7ffl2vh04.b[180][0]++,!tokenBytes)||(cov_7ffl2vh04.b[180][1]++,tokenBytes.length===0)){cov_7ffl2vh04.b[179][0]++;cov_7ffl2vh04.s[760]++;throw new Error(`Error, Token State according to key ${tokenID} does not exist`);}else{cov_7ffl2vh04.b[179][1]++;}const token=(cov_7ffl2vh04.s[761]++,JSON.parse(tokenBytes.toString()));cov_7ffl2vh04.s[762]++;if(!token.CanBeUsed){cov_7ffl2vh04.b[181][0]++;cov_7ffl2vh04.s[763]++;throw new Error(`This Token State with ID ${tokenID} has already been used. Try another Token ID`);}else{cov_7ffl2vh04.b[181][1]++;}const genericID=(cov_7ffl2vh04.s[764]++,await ctx.stub.getTxID());const orderID=(cov_7ffl2vh04.s[765]++,await ctx.stub.createCompositeKey('BidOrder',[genericID]));// compute how many tokens we will withdraw from our Token State
const total=(cov_7ffl2vh04.s[766]++,amount*price);let currentOrder=(cov_7ffl2vh04.s[767]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:token.ID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),MatchID:[],Name:'Bid',Time:new Date(date).getTime()});let asks=(cov_7ffl2vh04.s[768]++,bookOrder[1]);let bids=(cov_7ffl2vh04.s[769]++,bookOrder[0]);// If there  is no asks it means we cannot match our bid order
cov_7ffl2vh04.s[770]++;if(asks.length===0){cov_7ffl2vh04.b[182][0]++;let newID=(cov_7ffl2vh04.s[771]++,await this._splitMoney(ctx,token.ID,total));const order=(cov_7ffl2vh04.s[772]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:newID,Name:'Bid',FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),MatchID:[],Time:new Date(date).getTime()});cov_7ffl2vh04.s[773]++;bookOrder[0].push(order);const book=(cov_7ffl2vh04.s[774]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_7ffl2vh04.s[775]++;bookOrder=[book,bookOrder[1]];cov_7ffl2vh04.s[776]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_7ffl2vh04.s[777]++;return;}else{cov_7ffl2vh04.b[182][1]++;}let bidReference=(cov_7ffl2vh04.s[778]++,currentOrder);let bondKeyAcumulator=(cov_7ffl2vh04.s[779]++,[]);let tokenAcumulator=(cov_7ffl2vh04.s[780]++,[]);let counter=(cov_7ffl2vh04.s[781]++,bidReference.Quantity);let balance=(cov_7ffl2vh04.s[782]++,0);let totalTokens=(cov_7ffl2vh04.s[783]++,0);let tokensCounter=(cov_7ffl2vh04.s[784]++,token.Amount);let balanceTokens=(cov_7ffl2vh04.s[785]++,0);// check if there is matching
cov_7ffl2vh04.s[786]++;for await(const ask of asks){cov_7ffl2vh04.s[787]++;if((cov_7ffl2vh04.b[184][0]++,ask.Price<=bidReference.Price)&&(cov_7ffl2vh04.b[184][1]++,!ask.FullMatch)){cov_7ffl2vh04.b[183][0]++;cov_7ffl2vh04.s[788]++;counter=counter-ask.Quantity;cov_7ffl2vh04.s[789]++;balance=ask.Quantity+counter;cov_7ffl2vh04.s[790]++;tokensCounter=tokensCounter-ask.Quantity*ask.Price;cov_7ffl2vh04.s[791]++;balanceTokens=ask.Quantity*ask.Price+tokensCounter;cov_7ffl2vh04.s[792]++;if(tokensCounter<=0){cov_7ffl2vh04.b[185][0]++;let amountSol=(cov_7ffl2vh04.s[793]++,Math.floor(balanceTokens/ask.Price));cov_7ffl2vh04.s[794]++;ask.QuantityMatch=amountSol;cov_7ffl2vh04.s[795]++;ask.Quantity=ask.Quantity-amountSol;cov_7ffl2vh04.s[796]++;ask.FullMatch=false;cov_7ffl2vh04.s[797]++;ask.PartialMatch=true;cov_7ffl2vh04.s[798]++;ask.MatchID.push(bidReference.ID);cov_7ffl2vh04.s[799]++;bidReference.MatchID.push(ask.TokenID);cov_7ffl2vh04.s[800]++;tokenAcumulator.push(ask);cov_7ffl2vh04.s[801]++;bondKeyAcumulator.push(ask.TokenID);cov_7ffl2vh04.s[802]++;totalTokens=totalTokens+ask.Price*amountSol;cov_7ffl2vh04.s[803]++;bidReference.MatchID.push(ask.TokenID);cov_7ffl2vh04.s[804]++;bondKeyAcumulator.push(ask.TokenID);cov_7ffl2vh04.s[805]++;tokenAcumulator.push(ask);cov_7ffl2vh04.s[806]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_7ffl2vh04.s[807]++;counter=0;cov_7ffl2vh04.s[808]++;break;}else{cov_7ffl2vh04.b[185][1]++;cov_7ffl2vh04.s[809]++;// FULL MATCH means that our submitted order with that size has been completed 
if(counter>=0){cov_7ffl2vh04.b[186][0]++;cov_7ffl2vh04.s[810]++;// FULL MATCH
ask.QuantityMatch=ask.Quantity;cov_7ffl2vh04.s[811]++;ask.FullMatch=true;cov_7ffl2vh04.s[812]++;ask.PartialMatch=false;cov_7ffl2vh04.s[813]++;ask.MatchID.push(bidReference.ID);cov_7ffl2vh04.s[814]++;bidReference.MatchID.push(ask.TokenID);cov_7ffl2vh04.s[815]++;tokenAcumulator.push(ask);cov_7ffl2vh04.s[816]++;bondKeyAcumulator.push(ask.TokenID);cov_7ffl2vh04.s[817]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;}else{cov_7ffl2vh04.b[186][1]++;cov_7ffl2vh04.s[818]++;if((cov_7ffl2vh04.b[188][0]++,counter<=0)&&(cov_7ffl2vh04.b[188][1]++,balance>0)){cov_7ffl2vh04.b[187][0]++;cov_7ffl2vh04.s[819]++;// PARTIAL MATCH means that our submitted order with that size has been completed partially
// PARTIAL MATCH
ask.FullMatch=false;cov_7ffl2vh04.s[820]++;ask.PartialMatch=true;cov_7ffl2vh04.s[821]++;ask.QuantityMatch=balance;cov_7ffl2vh04.s[822]++;ask.Quantity=ask.Quantity-balance;cov_7ffl2vh04.s[823]++;ask.MatchID.push(bidReference.ID);cov_7ffl2vh04.s[824]++;bidReference.MatchID.push(ask.TokenID);cov_7ffl2vh04.s[825]++;bondKeyAcumulator.push(ask.TokenID);cov_7ffl2vh04.s[826]++;tokenAcumulator.push(ask);cov_7ffl2vh04.s[827]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_7ffl2vh04.s[828]++;counter=0;// And finally break, because we read following a prestablished order
cov_7ffl2vh04.s[829]++;break;}else{cov_7ffl2vh04.b[187][1]++;}}}}else{cov_7ffl2vh04.b[183][1]++;}}cov_7ffl2vh04.s[830]++;if(totalTokens>token.Amount){cov_7ffl2vh04.b[189][0]++;cov_7ffl2vh04.s[831]++;throw new Error(`Your Token State with ID ${tokenID} do not have enough funds`);}else{cov_7ffl2vh04.b[189][1]++;}// now we upload our order and the matching state
let newID=(cov_7ffl2vh04.s[832]++,await this._splitMoney(ctx,token.ID,total));cov_7ffl2vh04.s[833]++;if(counter===0){cov_7ffl2vh04.b[190][0]++;cov_7ffl2vh04.s[834]++;// Full Match
currentOrder.TokenID=newID;cov_7ffl2vh04.s[835]++;currentOrder.FullMatch=true;cov_7ffl2vh04.s[836]++;currentOrder.PartialMatch=false;cov_7ffl2vh04.s[837]++;currentOrder.QuantityMatch=currentOrder.Quantity;cov_7ffl2vh04.s[838]++;currentOrder.MatchID=bidReference.MatchID;}else{cov_7ffl2vh04.b[190][1]++;cov_7ffl2vh04.s[839]++;if((cov_7ffl2vh04.b[192][0]++,counter!==0)&&(cov_7ffl2vh04.b[192][1]++,counter!==bidReference.Quantity)){cov_7ffl2vh04.b[191][0]++;cov_7ffl2vh04.s[840]++;// Partial Match 
currentOrder.TokenID=newID;cov_7ffl2vh04.s[841]++;currentOrder.FullMatch=false;cov_7ffl2vh04.s[842]++;currentOrder.PartialMatch=true;cov_7ffl2vh04.s[843]++;currentOrder.QuantityMatch=bidReference.Quantity-counter;cov_7ffl2vh04.s[844]++;currentOrder.Quantity=counter;cov_7ffl2vh04.s[845]++;currentOrder.MatchID=bidReference.MatchID;}else{cov_7ffl2vh04.b[191][1]++;cov_7ffl2vh04.s[846]++;// No match
currentOrder.TokenID=newID;cov_7ffl2vh04.s[847]++;currentOrder.FullMatch=false;cov_7ffl2vh04.s[848]++;currentOrder.PartialMatch=false;}}cov_7ffl2vh04.s[849]++;bookOrder[0].push(currentOrder);const bookBid=(cov_7ffl2vh04.s[850]++,await this._sortingBidOrders(ctx,bookOrder[0]));const bookAsk=(cov_7ffl2vh04.s[851]++,await this._sortingBidOrders(ctx,bookOrder[1]));cov_7ffl2vh04.s[852]++;bookOrder=[bookBid,bookAsk];// Finally we submit order book and matching state
cov_7ffl2vh04.s[853]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_7ffl2vh04.s[854]++;if(bondKeyAcumulator.length>0){cov_7ffl2vh04.b[193][0]++;const orderMatch=(cov_7ffl2vh04.s[855]++,{Orders:tokenAcumulator,Order:currentOrder});let orderBuffer=(cov_7ffl2vh04.s[856]++,Buffer.from(JSON.stringify(orderMatch)));cov_7ffl2vh04.s[857]++;await ctx.stub.putState('OrderMatch'+genericID,orderBuffer);cov_7ffl2vh04.s[858]++;await ctx.SetEventName('BidMatched');cov_7ffl2vh04.s[859]++;await ctx.SetEventPayload(orderBuffer);}else{cov_7ffl2vh04.b[193][1]++;}}// AskOrder  will be executed by someone able to sell assets at a limit price
async AskOrder(ctx,amount,price,bondID,identificativo,date){cov_7ffl2vh04.f[80]++;cov_7ffl2vh04.s[860]++;await this._checkDecimals(price);const userID=(cov_7ffl2vh04.s[861]++,await ctx.GetUserIdentity('cif'));cov_7ffl2vh04.s[862]++;amount=parseInt(amount);cov_7ffl2vh04.s[863]++;price=parseFloat(price);cov_7ffl2vh04.s[864]++;price=parseInt(price*100);cov_7ffl2vh04.s[865]++;if((cov_7ffl2vh04.b[195][0]++,amount<=0)||(cov_7ffl2vh04.b[195][1]++,price<=0)){cov_7ffl2vh04.b[194][0]++;cov_7ffl2vh04.s[866]++;throw new Error(`Both Amount or Price arguments must be positive`);}else{cov_7ffl2vh04.b[194][1]++;}let myKey=(cov_7ffl2vh04.s[867]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondID]));cov_7ffl2vh04.s[868]++;myKey=myKey+identificativo;const bondBytes=(cov_7ffl2vh04.s[869]++,await ctx.stub.getState(myKey));// These prior verifications are also inside auxiliary function
cov_7ffl2vh04.s[870]++;if((cov_7ffl2vh04.b[197][0]++,!bondBytes)||(cov_7ffl2vh04.b[197][1]++,bondBytes.length===0)){cov_7ffl2vh04.b[196][0]++;cov_7ffl2vh04.s[871]++;throw new Error(`Error, Bond State with ID ${bondID} does not exist`);}else{cov_7ffl2vh04.b[196][1]++;}const bond=(cov_7ffl2vh04.s[872]++,JSON.parse(bondBytes.toString()));cov_7ffl2vh04.s[873]++;if(!bond.CanBeUsed){cov_7ffl2vh04.b[198][0]++;cov_7ffl2vh04.s[874]++;throw new Error(`This Bond State with ID ${bondID} has already been used. Try another Bond ID`);}else{cov_7ffl2vh04.b[198][1]++;}cov_7ffl2vh04.s[875]++;if(bond.Amount<amount){cov_7ffl2vh04.b[199][0]++;cov_7ffl2vh04.s[876]++;throw new Error(`You are not supposed to do that.`);}else{cov_7ffl2vh04.b[199][1]++;}const bookOrderBytes=(cov_7ffl2vh04.s[877]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_7ffl2vh04.s[878]++;if((cov_7ffl2vh04.b[201][0]++,!bookOrderBytes)||(cov_7ffl2vh04.b[201][1]++,bookOrderBytes.length===0)){cov_7ffl2vh04.b[200][0]++;cov_7ffl2vh04.s[879]++;bookOrder=[[],[]];}else{cov_7ffl2vh04.b[200][1]++;cov_7ffl2vh04.s[880]++;bookOrder=JSON.parse(bookOrderBytes.toString());}const genericID=(cov_7ffl2vh04.s[881]++,await ctx.stub.getTxID());const orderID=(cov_7ffl2vh04.s[882]++,await ctx.stub.createCompositeKey('AskOrder',[genericID]));let currentOrder=(cov_7ffl2vh04.s[883]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:bond.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),MatchID:[],Name:'Ask',Time:new Date(date).getTime()});let asks=(cov_7ffl2vh04.s[884]++,bookOrder[1]);let bids=(cov_7ffl2vh04.s[885]++,bookOrder[0]);// If there is no bids it means we cannot match our ask order so we just submit it
cov_7ffl2vh04.s[886]++;if(bids.length===0){cov_7ffl2vh04.b[202][0]++;let newID=(cov_7ffl2vh04.s[887]++,await this._splitBonds(ctx,bond.ID,amount));const order=(cov_7ffl2vh04.s[888]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:newID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),MatchID:[],Name:'Ask',Time:new Date(date).getTime()});cov_7ffl2vh04.s[889]++;bookOrder[1].push(order);let book=(cov_7ffl2vh04.s[890]++,await this._sortingAskOrders(ctx,bookOrder[1]));cov_7ffl2vh04.s[891]++;bookOrder=[bookOrder[0],book];cov_7ffl2vh04.s[892]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_7ffl2vh04.s[893]++;return;}else{cov_7ffl2vh04.b[202][1]++;}const askReference=(cov_7ffl2vh04.s[894]++,currentOrder);let tokenKeyAcumulator=(cov_7ffl2vh04.s[895]++,[]);let tokenAcumulator=(cov_7ffl2vh04.s[896]++,[]);let tokenQuantitiesAcumulator=(cov_7ffl2vh04.s[897]++,[]);let counter=(cov_7ffl2vh04.s[898]++,askReference.Quantity);let totalTokens=(cov_7ffl2vh04.s[899]++,0);let balance=(cov_7ffl2vh04.s[900]++,0);// Check if our order can be matched
cov_7ffl2vh04.s[901]++;for await(const bid of bids){cov_7ffl2vh04.s[902]++;if((cov_7ffl2vh04.b[204][0]++,bid.Price>=askReference.Price)&&(cov_7ffl2vh04.b[204][1]++,!bid.FullMatch)){cov_7ffl2vh04.b[203][0]++;cov_7ffl2vh04.s[903]++;counter=counter-bid.Quantity;cov_7ffl2vh04.s[904]++;balance=bid.Quantity+counter;cov_7ffl2vh04.s[905]++;if(counter>=0){cov_7ffl2vh04.b[205][0]++;cov_7ffl2vh04.s[906]++;bid.FullMatch=true;cov_7ffl2vh04.s[907]++;bid.PartialMatch=false;cov_7ffl2vh04.s[908]++;bid.QuantityMatch=bid.Quantity;cov_7ffl2vh04.s[909]++;bid.MatchID.push(askReference.ID);cov_7ffl2vh04.s[910]++;askReference.MatchID.push(bid.ID);cov_7ffl2vh04.s[911]++;tokenKeyAcumulator.push(bid.ID);cov_7ffl2vh04.s[912]++;tokenAcumulator.push(bid);cov_7ffl2vh04.s[913]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_7ffl2vh04.s[914]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;}else{cov_7ffl2vh04.b[205][1]++;cov_7ffl2vh04.s[915]++;if((cov_7ffl2vh04.b[207][0]++,counter<0)&&(cov_7ffl2vh04.b[207][1]++,balance>0)){cov_7ffl2vh04.b[206][0]++;cov_7ffl2vh04.s[916]++;bid.FullMatch=false;cov_7ffl2vh04.s[917]++;bid.PartialMatch=true;cov_7ffl2vh04.s[918]++;bid.QuantityMatch=balance;cov_7ffl2vh04.s[919]++;bid.Quantity=bid.Quantity-balance;cov_7ffl2vh04.s[920]++;bid.MatchID.push(askReference.ID);cov_7ffl2vh04.s[921]++;askReference.MatchID.push(bid.ID);cov_7ffl2vh04.s[922]++;tokenKeyAcumulator.push(bid.ID);cov_7ffl2vh04.s[923]++;tokenAcumulator.push(bid);cov_7ffl2vh04.s[924]++;tokenQuantitiesAcumulator.push(counter+bid.Quantity);cov_7ffl2vh04.s[925]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_7ffl2vh04.s[926]++;counter=0;cov_7ffl2vh04.s[927]++;break;}else{cov_7ffl2vh04.b[206][1]++;}}}else{cov_7ffl2vh04.b[203][1]++;}}let newID=(cov_7ffl2vh04.s[928]++,await this._splitBonds(ctx,bond.ID,amount));// According to what matching situation we are, differents orders will be submitted
cov_7ffl2vh04.s[929]++;if(counter===0){cov_7ffl2vh04.b[208][0]++;cov_7ffl2vh04.s[930]++;// Full Match
currentOrder.TokenID=newID;cov_7ffl2vh04.s[931]++;currentOrder.FullMatch=true;cov_7ffl2vh04.s[932]++;currentOrder.PartialMatch=false;cov_7ffl2vh04.s[933]++;currentOrder.QuantityMatch=currentOrder.Quantity;cov_7ffl2vh04.s[934]++;currentOrder.MatchID=askReference.MatchID;}else{cov_7ffl2vh04.b[208][1]++;cov_7ffl2vh04.s[935]++;if((cov_7ffl2vh04.b[210][0]++,counter!==0)&&(cov_7ffl2vh04.b[210][1]++,counter!==askReference.Quantity)){cov_7ffl2vh04.b[209][0]++;cov_7ffl2vh04.s[936]++;// Partial Match
currentOrder.TokenID=newID;cov_7ffl2vh04.s[937]++;currentOrder.FullMatch=false;cov_7ffl2vh04.s[938]++;currentOrder.PartialMatch=true;cov_7ffl2vh04.s[939]++;currentOrder.QuantityMatch=askReference.Quantity-counter;cov_7ffl2vh04.s[940]++;currentOrder.Quantity=counter;cov_7ffl2vh04.s[941]++;currentOrder.MatchID=askReference.MatchID;}else{cov_7ffl2vh04.b[209][1]++;cov_7ffl2vh04.s[942]++;// No match
currentOrder.TokenID=newID;cov_7ffl2vh04.s[943]++;currentOrder.FullMatch=false;cov_7ffl2vh04.s[944]++;currentOrder.PartialMatch=false;}}cov_7ffl2vh04.s[945]++;bookOrder[1].push(currentOrder);// Sort order book according to prior rules
let bookAsk=(cov_7ffl2vh04.s[946]++,await this._sortingAskOrders(ctx,bookOrder[1]));let bookBid=(cov_7ffl2vh04.s[947]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_7ffl2vh04.s[948]++;bookOrder=[bookBid,bookAsk];cov_7ffl2vh04.s[949]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_7ffl2vh04.s[950]++;if(tokenKeyAcumulator.length>0){cov_7ffl2vh04.b[211][0]++;const orderMatch=(cov_7ffl2vh04.s[951]++,{Orders:tokenAcumulator,Order:currentOrder});let orderBuffer=(cov_7ffl2vh04.s[952]++,Buffer.from(JSON.stringify(orderMatch)));cov_7ffl2vh04.s[953]++;await ctx.stub.putState('OrderMatch'+genericID,orderBuffer);// finally we set an event saying that our order has been matched and with which orders
cov_7ffl2vh04.s[954]++;await ctx.SetEventName('AskMatched');cov_7ffl2vh04.s[955]++;await ctx.SetEventPayload(orderBuffer);}else{cov_7ffl2vh04.b[211][1]++;}}// AskMarketOrder will be executed by someone whose desire is selling bonds at market price.
async AskMarketOrder(ctx,amount,bondID,identificativo,date){cov_7ffl2vh04.f[81]++;cov_7ffl2vh04.s[956]++;amount=parseInt(amount);cov_7ffl2vh04.s[957]++;if(amount<=0){cov_7ffl2vh04.b[212][0]++;cov_7ffl2vh04.s[958]++;throw new Error(`Amount argument must be positive`);}else{cov_7ffl2vh04.b[212][1]++;}const userID=(cov_7ffl2vh04.s[959]++,await ctx.GetUserIdentity('cif'));let myKey=(cov_7ffl2vh04.s[960]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondID]));cov_7ffl2vh04.s[961]++;myKey=myKey+identificativo;const bondBytes=(cov_7ffl2vh04.s[962]++,await ctx.stub.getState(myKey));cov_7ffl2vh04.s[963]++;if((cov_7ffl2vh04.b[214][0]++,!bondBytes)||(cov_7ffl2vh04.b[214][1]++,bondBytes.length===0)){cov_7ffl2vh04.b[213][0]++;cov_7ffl2vh04.s[964]++;throw new Error(`Error, Bond State with key ${bondID} does not exist`);}else{cov_7ffl2vh04.b[213][1]++;}// These prior verifications are also inside auxiliary function.
const bond=(cov_7ffl2vh04.s[965]++,JSON.parse(bondBytes.toString()));cov_7ffl2vh04.s[966]++;if(!bond.CanBeUsed){cov_7ffl2vh04.b[215][0]++;cov_7ffl2vh04.s[967]++;throw new Error(`This Bond State with ID ${bondID} has already been used. Try another bond ID`);}else{cov_7ffl2vh04.b[215][1]++;}cov_7ffl2vh04.s[968]++;if(bond.Amount<amount){cov_7ffl2vh04.b[216][0]++;cov_7ffl2vh04.s[969]++;throw new Error(`Your token has not enough funds`);}else{cov_7ffl2vh04.b[216][1]++;}// retrieve order book if it exists
const bookOrderBytes=(cov_7ffl2vh04.s[970]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_7ffl2vh04.s[971]++;if((cov_7ffl2vh04.b[218][0]++,!bookOrderBytes)||(cov_7ffl2vh04.b[218][1]++,bookOrderBytes.length===0)){cov_7ffl2vh04.b[217][0]++;cov_7ffl2vh04.s[972]++;bookOrder=[[],[]];}else{cov_7ffl2vh04.b[217][1]++;cov_7ffl2vh04.s[973]++;bookOrder=JSON.parse(bookOrderBytes.toString());}const genericID=(cov_7ffl2vh04.s[974]++,await ctx.stub.getTxID());const orderID=(cov_7ffl2vh04.s[975]++,await ctx.stub.createCompositeKey('AskOrder',[genericID]));let currentOrder=(cov_7ffl2vh04.s[976]++,{ID:orderID,Quantity:amount,Price:'',MarketPrice:true,TokenID:bond.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:amount,MatchID:[],Name:'Ask',Time:new Date(date).getTime()});let asks=(cov_7ffl2vh04.s[977]++,bookOrder[1]);let bids=(cov_7ffl2vh04.s[978]++,bookOrder[0]);// If there is no bids it means we cannot match our ask order
cov_7ffl2vh04.s[979]++;if(bids.length===0){cov_7ffl2vh04.b[219][0]++;cov_7ffl2vh04.s[980]++;// For sake of simplicity if there are no asks you cannot submit
// a market order
throw new Error(`There are no asks submitted.`);}else{cov_7ffl2vh04.b[219][1]++;}const askReference=(cov_7ffl2vh04.s[981]++,currentOrder);let tokenKeyAcumulator=(cov_7ffl2vh04.s[982]++,[]);let tokenAcumulator=(cov_7ffl2vh04.s[983]++,[]);let tokenQuantitiesAcumulator=(cov_7ffl2vh04.s[984]++,[]);let counter=(cov_7ffl2vh04.s[985]++,askReference.Quantity);let totalTokens=(cov_7ffl2vh04.s[986]++,0);let balance=(cov_7ffl2vh04.s[987]++,0);// Check if there is matching
cov_7ffl2vh04.s[988]++;for await(const bid of bids){cov_7ffl2vh04.s[989]++;if(!bid.FullMatch){cov_7ffl2vh04.b[220][0]++;cov_7ffl2vh04.s[990]++;counter=counter-bid.Quantity;cov_7ffl2vh04.s[991]++;balance=bid.Quantity+counter;cov_7ffl2vh04.s[992]++;if(counter>0){cov_7ffl2vh04.b[221][0]++;cov_7ffl2vh04.s[993]++;bid.FullMatch=true;cov_7ffl2vh04.s[994]++;bid.PartialMatch=false;cov_7ffl2vh04.s[995]++;bid.QuantityMatch=bid.Quantity;cov_7ffl2vh04.s[996]++;bid.MatchID.push(askReference.ID);cov_7ffl2vh04.s[997]++;askReference.MatchID.push(bid.ID);cov_7ffl2vh04.s[998]++;tokenKeyAcumulator.push(bid.ID);cov_7ffl2vh04.s[999]++;tokenAcumulator.push(bid);cov_7ffl2vh04.s[1000]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_7ffl2vh04.s[1001]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;}else{cov_7ffl2vh04.b[221][1]++;cov_7ffl2vh04.s[1002]++;if((cov_7ffl2vh04.b[223][0]++,counter<0)&&(cov_7ffl2vh04.b[223][1]++,balance>0)){cov_7ffl2vh04.b[222][0]++;cov_7ffl2vh04.s[1003]++;bid.FullMatch=false;cov_7ffl2vh04.s[1004]++;bid.PartialMatch=true;cov_7ffl2vh04.s[1005]++;bid.QuantityMatch=balance;cov_7ffl2vh04.s[1006]++;bid.Quantity=bid.Quantity-balance;cov_7ffl2vh04.s[1007]++;bid.MatchID.push(askReference.ID);cov_7ffl2vh04.s[1008]++;askReference.MatchID.push(bid.ID);cov_7ffl2vh04.s[1009]++;tokenKeyAcumulator.push(bid.ID);cov_7ffl2vh04.s[1010]++;tokenAcumulator.push(bid);cov_7ffl2vh04.s[1011]++;tokenQuantitiesAcumulator.push(counter+bid.Quantity);cov_7ffl2vh04.s[1012]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_7ffl2vh04.s[1013]++;counter=0;cov_7ffl2vh04.s[1014]++;break;}else{cov_7ffl2vh04.b[222][1]++;cov_7ffl2vh04.s[1015]++;bid.FullMatch=true;cov_7ffl2vh04.s[1016]++;bid.PartialMatch=false;cov_7ffl2vh04.s[1017]++;bid.QuantityMatch=bid.Quantity;cov_7ffl2vh04.s[1018]++;bid.MatchID.push(askReference.ID);cov_7ffl2vh04.s[1019]++;askReference.MatchID.push(bid.ID);cov_7ffl2vh04.s[1020]++;tokenKeyAcumulator.push(bid.ID);cov_7ffl2vh04.s[1021]++;tokenAcumulator.push(bid);cov_7ffl2vh04.s[1022]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_7ffl2vh04.s[1023]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_7ffl2vh04.s[1024]++;break;}}}else{cov_7ffl2vh04.b[220][1]++;}}let newID=(cov_7ffl2vh04.s[1025]++,await this._splitBonds(ctx,bond.ID,amount));cov_7ffl2vh04.s[1026]++;if(counter===0){cov_7ffl2vh04.b[224][0]++;cov_7ffl2vh04.s[1027]++;// Full Match
currentOrder.TokenID=newID;cov_7ffl2vh04.s[1028]++;currentOrder.FullMatch=true;cov_7ffl2vh04.s[1029]++;currentOrder.PartialMatch=false;cov_7ffl2vh04.s[1030]++;currentOrder.QuantityMatch=currentOrder.Quantity;cov_7ffl2vh04.s[1031]++;currentOrder.MatchID=askReference.MatchID;}else{cov_7ffl2vh04.b[224][1]++;cov_7ffl2vh04.s[1032]++;if((cov_7ffl2vh04.b[226][0]++,counter!==0)&&(cov_7ffl2vh04.b[226][1]++,counter!==askReference.Quantity)){cov_7ffl2vh04.b[225][0]++;cov_7ffl2vh04.s[1033]++;// Partial Match
currentOrder.TokenID=newID;cov_7ffl2vh04.s[1034]++;currentOrder.FullMatch=false;cov_7ffl2vh04.s[1035]++;currentOrder.PartialMatch=true;cov_7ffl2vh04.s[1036]++;currentOrder.QuantityMatch=askReference.Quantity-counter;cov_7ffl2vh04.s[1037]++;currentOrder.Quantity=counter;cov_7ffl2vh04.s[1038]++;currentOrder.MatchID=askReference.MatchID;}else{cov_7ffl2vh04.b[225][1]++;cov_7ffl2vh04.s[1039]++;// No match
currentOrder.TokenID=newID;cov_7ffl2vh04.s[1040]++;currentOrder.FullMatch=false;cov_7ffl2vh04.s[1041]++;currentOrder.PartialMatch=false;}}cov_7ffl2vh04.s[1042]++;bookOrder[1].push(currentOrder);let bookAsk=(cov_7ffl2vh04.s[1043]++,await this._sortingAskOrders(ctx,bookOrder[1]));let bookBid=(cov_7ffl2vh04.s[1044]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_7ffl2vh04.s[1045]++;bookOrder=[bookBid,bookAsk];cov_7ffl2vh04.s[1046]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_7ffl2vh04.s[1047]++;if(tokenKeyAcumulator.length>0){cov_7ffl2vh04.b[227][0]++;const orderMatch=(cov_7ffl2vh04.s[1048]++,{Orders:tokenAcumulator,Order:currentOrder});let orderBuffer=(cov_7ffl2vh04.s[1049]++,Buffer.from(JSON.stringify(orderMatch)));cov_7ffl2vh04.s[1050]++;await ctx.stub.putState('OrderMatch'+genericID,orderBuffer);// finally we set an event saying that our order has been matched and with which orders
cov_7ffl2vh04.s[1051]++;await ctx.SetEventName('AskMatched');cov_7ffl2vh04.s[1052]++;await ctx.SetEventPayload(orderBuffer);}else{cov_7ffl2vh04.b[227][1]++;}}// BidMarketOrder will be executed by someone whose desire is buying bonds at market price.
async BidMarketOrder(ctx,amount,tokenID,identificativo,date){cov_7ffl2vh04.f[82]++;cov_7ffl2vh04.s[1053]++;if(amount<=0){cov_7ffl2vh04.b[228][0]++;cov_7ffl2vh04.s[1054]++;throw new Error(`Amount argument must be positive`);}else{cov_7ffl2vh04.b[228][1]++;}const userID=(cov_7ffl2vh04.s[1055]++,await ctx.GetUserIdentity('cif'));const bookOrderBytes=(cov_7ffl2vh04.s[1056]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_7ffl2vh04.s[1057]++;if((cov_7ffl2vh04.b[230][0]++,!bookOrderBytes)||(cov_7ffl2vh04.b[230][1]++,bookOrderBytes.length===0)){cov_7ffl2vh04.b[229][0]++;cov_7ffl2vh04.s[1058]++;bookOrder=[[],[]];}else{cov_7ffl2vh04.b[229][1]++;cov_7ffl2vh04.s[1059]++;bookOrder=JSON.parse(bookOrderBytes.toString());}// These prior verifications are also inside auxiliary function
let myKey=(cov_7ffl2vh04.s[1060]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));cov_7ffl2vh04.s[1061]++;myKey=myKey+identificativo;const tokenBytes=(cov_7ffl2vh04.s[1062]++,await ctx.stub.getState(myKey));cov_7ffl2vh04.s[1063]++;if((cov_7ffl2vh04.b[232][0]++,!tokenBytes)||(cov_7ffl2vh04.b[232][1]++,tokenBytes.length===0)){cov_7ffl2vh04.b[231][0]++;cov_7ffl2vh04.s[1064]++;throw new Error(`Error, Token State with ID ${tokenID} does not exist`);}else{cov_7ffl2vh04.b[231][1]++;}const token=(cov_7ffl2vh04.s[1065]++,JSON.parse(tokenBytes.toString()));cov_7ffl2vh04.s[1066]++;if(!token.CanBeUsed){cov_7ffl2vh04.b[233][0]++;cov_7ffl2vh04.s[1067]++;throw new Error(`This Token State with ID ${tokenID} has already been used. Try another token ID`);}else{cov_7ffl2vh04.b[233][1]++;}const genericID=(cov_7ffl2vh04.s[1068]++,await ctx.stub.getTxID());const orderID=(cov_7ffl2vh04.s[1069]++,await ctx.stub.createCompositeKey('BidOrder',[genericID]));let currentOrder=(cov_7ffl2vh04.s[1070]++,{ID:orderID,Quantity:parseInt(amount),Price:'',MarketPrice:true,TokenID:token.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),MatchID:[],Name:'Bid',Time:new Date(date).getTime()});let asks=(cov_7ffl2vh04.s[1071]++,bookOrder[1]);let bids=(cov_7ffl2vh04.s[1072]++,bookOrder[0]);// If there  is no asks it means we cannot match our bid order, so it has no sense to commit a bid order
// at market price
cov_7ffl2vh04.s[1073]++;if(asks.length===0){cov_7ffl2vh04.b[234][0]++;cov_7ffl2vh04.s[1074]++;// For sake of simplicity if there are no asks you cannot submit
// a market order
throw new Error(`There are no asks submitted.`);}else{cov_7ffl2vh04.b[234][1]++;}let bidReference=(cov_7ffl2vh04.s[1075]++,currentOrder);let bondKeyAcumulator=(cov_7ffl2vh04.s[1076]++,[]);let tokenAcumulator=(cov_7ffl2vh04.s[1077]++,[]);let counter=(cov_7ffl2vh04.s[1078]++,bidReference.Quantity);let balance=(cov_7ffl2vh04.s[1079]++,0);let totalTokens=(cov_7ffl2vh04.s[1080]++,0);let tokensCounter=(cov_7ffl2vh04.s[1081]++,token.Amount);let balanceTokens=(cov_7ffl2vh04.s[1082]++,0);cov_7ffl2vh04.s[1083]++;for await(const ask of asks){cov_7ffl2vh04.s[1084]++;if(!ask.FullMatch){cov_7ffl2vh04.b[235][0]++;cov_7ffl2vh04.s[1085]++;counter=counter-ask.Quantity;cov_7ffl2vh04.s[1086]++;balance=ask.Quantity+counter;cov_7ffl2vh04.s[1087]++;tokensCounter=tokensCounter-ask.Quantity*ask.Price;cov_7ffl2vh04.s[1088]++;balanceTokens=ask.Quantity*ask.Price+tokensCounter;cov_7ffl2vh04.s[1089]++;if(tokensCounter<=0){cov_7ffl2vh04.b[236][0]++;let amountSol=(cov_7ffl2vh04.s[1090]++,Math.floor(balanceTokens/ask.Price));cov_7ffl2vh04.s[1091]++;ask.QuantityMatch=amountSol;cov_7ffl2vh04.s[1092]++;ask.Quantity=ask.Quantity-amountSol;cov_7ffl2vh04.s[1093]++;ask.FullMatch=false;cov_7ffl2vh04.s[1094]++;ask.PartialMatch=true;cov_7ffl2vh04.s[1095]++;ask.MatchID.push(bidReference.ID);cov_7ffl2vh04.s[1096]++;bidReference.MatchID.push(ask.TokenID);cov_7ffl2vh04.s[1097]++;tokenAcumulator.push(ask);cov_7ffl2vh04.s[1098]++;bondKeyAcumulator.push(ask.TokenID);cov_7ffl2vh04.s[1099]++;totalTokens=totalTokens+ask.Price*amountSol;cov_7ffl2vh04.s[1100]++;bidReference.MatchID.push(ask.TokenID);cov_7ffl2vh04.s[1101]++;bondKeyAcumulator.push(ask.TokenID);cov_7ffl2vh04.s[1102]++;tokenAcumulator.push(ask);cov_7ffl2vh04.s[1103]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_7ffl2vh04.s[1104]++;counter=0;cov_7ffl2vh04.s[1105]++;break;}else{cov_7ffl2vh04.b[236][1]++;cov_7ffl2vh04.s[1106]++;if(counter>=0){cov_7ffl2vh04.b[237][0]++;cov_7ffl2vh04.s[1107]++;// FULL MATCH
ask.QuantityMatch=ask.Quantity;cov_7ffl2vh04.s[1108]++;ask.FullMatch=true;cov_7ffl2vh04.s[1109]++;ask.PartialMatch=false;cov_7ffl2vh04.s[1110]++;ask.MatchID.push(bidReference.ID);cov_7ffl2vh04.s[1111]++;bidReference.MatchID.push(ask.TokenID);cov_7ffl2vh04.s[1112]++;tokenAcumulator.push(ask);cov_7ffl2vh04.s[1113]++;bondKeyAcumulator.push(ask.TokenID);cov_7ffl2vh04.s[1114]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;}else{cov_7ffl2vh04.b[237][1]++;cov_7ffl2vh04.s[1115]++;if((cov_7ffl2vh04.b[239][0]++,counter<=0)&&(cov_7ffl2vh04.b[239][1]++,balance>0)){cov_7ffl2vh04.b[238][0]++;cov_7ffl2vh04.s[1116]++;// Partial Match
ask.FullMatch=false;cov_7ffl2vh04.s[1117]++;ask.PartialMatch=true;cov_7ffl2vh04.s[1118]++;ask.QuantityMatch=balance;cov_7ffl2vh04.s[1119]++;ask.Quantity=ask.Quantity-balance;cov_7ffl2vh04.s[1120]++;ask.MatchID.push(bidReference.ID);cov_7ffl2vh04.s[1121]++;bidReference.MatchID.push(ask.TokenID);cov_7ffl2vh04.s[1122]++;bondKeyAcumulator.push(ask.TokenID);cov_7ffl2vh04.s[1123]++;tokenAcumulator.push(ask);cov_7ffl2vh04.s[1124]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_7ffl2vh04.s[1125]++;counter=0;cov_7ffl2vh04.s[1126]++;break;}else{cov_7ffl2vh04.b[238][1]++;}}}}else{cov_7ffl2vh04.b[235][1]++;}}let newID=(cov_7ffl2vh04.s[1127]++,await this._splitMoney(ctx,token.ID,totalTokens));cov_7ffl2vh04.s[1128]++;if(counter===0){cov_7ffl2vh04.b[240][0]++;cov_7ffl2vh04.s[1129]++;// Full Match
currentOrder.TokenID=newID;cov_7ffl2vh04.s[1130]++;currentOrder.FullMatch=true;cov_7ffl2vh04.s[1131]++;currentOrder.PartialMatch=false;cov_7ffl2vh04.s[1132]++;currentOrder.QuantityMatch=currentOrder.Quantity;cov_7ffl2vh04.s[1133]++;currentOrder.MatchID=bidReference.MatchID;}else{cov_7ffl2vh04.b[240][1]++;cov_7ffl2vh04.s[1134]++;if((cov_7ffl2vh04.b[242][0]++,counter!==0)&&(cov_7ffl2vh04.b[242][1]++,counter!==bidReference.Quantity)){cov_7ffl2vh04.b[241][0]++;cov_7ffl2vh04.s[1135]++;// Partial Match 
currentOrder.TokenID=newID;cov_7ffl2vh04.s[1136]++;currentOrder.FullMatch=false;cov_7ffl2vh04.s[1137]++;currentOrder.PartialMatch=true;cov_7ffl2vh04.s[1138]++;currentOrder.QuantityMatch=bidReference.Quantity-counter;cov_7ffl2vh04.s[1139]++;currentOrder.Quantity=counter;cov_7ffl2vh04.s[1140]++;currentOrder.MatchID=bidReference.MatchID;}else{cov_7ffl2vh04.b[241][1]++;cov_7ffl2vh04.s[1141]++;// No match
currentOrder.TokenID=newID;cov_7ffl2vh04.s[1142]++;currentOrder.FullMatch=false;cov_7ffl2vh04.s[1143]++;currentOrder.PartialMatch=false;}}cov_7ffl2vh04.s[1144]++;bookOrder[0].push(currentOrder);const bookBid=(cov_7ffl2vh04.s[1145]++,await this._sortingBidOrders(ctx,bookOrder[0]));const bookAsk=(cov_7ffl2vh04.s[1146]++,await this._sortingBidOrders(ctx,bookOrder[1]));cov_7ffl2vh04.s[1147]++;bookOrder=[bookBid,bookAsk];cov_7ffl2vh04.s[1148]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_7ffl2vh04.s[1149]++;if(bondKeyAcumulator.length>0){cov_7ffl2vh04.b[243][0]++;const orderMatch=(cov_7ffl2vh04.s[1150]++,{Orders:tokenAcumulator,Order:currentOrder});let orderBuffer=(cov_7ffl2vh04.s[1151]++,Buffer.from(JSON.stringify(orderMatch)));cov_7ffl2vh04.s[1152]++;await ctx.stub.putState('OrderMatch'+genericID,orderBuffer);cov_7ffl2vh04.s[1153]++;await ctx.SetEventName('BidMatched');cov_7ffl2vh04.s[1154]++;await ctx.SetEventPayload(orderBuffer);}else{cov_7ffl2vh04.b[243][1]++;}}// This function will do a delivery versus payment when a Bid Order achieves a match
// This function will be executed until no state according to that key exists in world state
async MatchingBid(ctx,orderID){cov_7ffl2vh04.f[83]++;const orderBookBytes=(cov_7ffl2vh04.s[1155]++,await ctx.stub.getState('OrderBook'));cov_7ffl2vh04.s[1156]++;if((cov_7ffl2vh04.b[245][0]++,!orderBookBytes)||(cov_7ffl2vh04.b[245][1]++,orderBookBytes.length===0)){cov_7ffl2vh04.b[244][0]++;cov_7ffl2vh04.s[1157]++;throw new Error(`Error, Order Book State associated to key ${'OrderBook'} does not exist`);}else{cov_7ffl2vh04.b[244][1]++;}let orderBook=(cov_7ffl2vh04.s[1158]++,JSON.parse(orderBookBytes.toString()));let asks=(cov_7ffl2vh04.s[1159]++,orderBook[1]);let bids=(cov_7ffl2vh04.s[1160]++,orderBook[0]);const orderMatchBytes=(cov_7ffl2vh04.s[1161]++,await ctx.stub.getState(orderID));cov_7ffl2vh04.s[1162]++;if((cov_7ffl2vh04.b[247][0]++,!orderMatchBytes)||(cov_7ffl2vh04.b[247][1]++,orderMatchBytes.length===0)){cov_7ffl2vh04.b[246][0]++;cov_7ffl2vh04.s[1163]++;throw new Error(`Error, Matching Order with ID ${orderID} does not exist`);}else{cov_7ffl2vh04.b[246][1]++;}let orderMatch=(cov_7ffl2vh04.s[1164]++,JSON.parse(orderMatchBytes.toString()));let order=(cov_7ffl2vh04.s[1165]++,orderMatch.Order);let orders=(cov_7ffl2vh04.s[1166]++,orderMatch.Orders[0]);let bond=(cov_7ffl2vh04.s[1167]++,asks.filter(item=>{cov_7ffl2vh04.f[84]++;cov_7ffl2vh04.s[1168]++;return item.ID===orders.ID;}));let token=(cov_7ffl2vh04.s[1169]++,bids.filter(item=>{cov_7ffl2vh04.f[85]++;cov_7ffl2vh04.s[1170]++;return item.ID===order.ID;}));let tokenID;let bondID;// delivery vs payment will change the IDs of both token and bond and will be included in order book
cov_7ffl2vh04.s[1171]++;[tokenID,bondID]=await this._dvp(ctx,bond[0].TokenID,token[0].TokenID,orders.QuantityMatch*order.Price,orders.QuantityMatch);let newCounter=(cov_7ffl2vh04.s[1172]++,order.QuantityMatch-orders.QuantityMatch);cov_7ffl2vh04.s[1173]++;order.TokenID=tokenID;cov_7ffl2vh04.s[1174]++;order.QuantityMatch=newCounter;let new_orders=(cov_7ffl2vh04.s[1175]++,orderMatch.Orders.filter(item=>{cov_7ffl2vh04.f[86]++;cov_7ffl2vh04.s[1176]++;return item.ID!==orders.ID;}));// lo que pasa con el documento de matching: si se han transferido todos, se elimina, en caso contrario solo
// se elimina el order del ask
// If we have transfered all tokens/bonds we can delete Order Match document from world state
cov_7ffl2vh04.s[1177]++;if(newCounter===0){cov_7ffl2vh04.b[248][0]++;cov_7ffl2vh04.s[1178]++;await ctx.stub.deleteState(orderID);}else{cov_7ffl2vh04.b[248][1]++;let match=(cov_7ffl2vh04.s[1179]++,{Orders:new_orders,Order:order});cov_7ffl2vh04.s[1180]++;await ctx.stub.putState(orderID,Buffer.from(JSON.stringify(match)));}// We have to modify order book because orders partially matched have changed their tokens ID
// For Ask Orders
let myAsk=(cov_7ffl2vh04.s[1181]++,await asks.filter(item=>{cov_7ffl2vh04.f[87]++;cov_7ffl2vh04.s[1182]++;return item.ID===orders.ID;}));let index=(cov_7ffl2vh04.s[1183]++,asks.indexOf(myAsk[0]));cov_7ffl2vh04.s[1184]++;myAsk[0].TokenID=bondID;cov_7ffl2vh04.s[1185]++;myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;cov_7ffl2vh04.s[1186]++;if(myAsk[0].RestingQuantity!==0){cov_7ffl2vh04.b[249][0]++;cov_7ffl2vh04.s[1187]++;asks[index]=myAsk[0];cov_7ffl2vh04.s[1188]++;orderBook=[bids,asks];}else{cov_7ffl2vh04.b[249][1]++;cov_7ffl2vh04.s[1189]++;if(myAsk[0].RestingQuantity===0){cov_7ffl2vh04.b[250][0]++;cov_7ffl2vh04.s[1190]++;myAsk=await asks.filter(item=>{cov_7ffl2vh04.f[88]++;cov_7ffl2vh04.s[1191]++;return item.ID!==orders.ID;});cov_7ffl2vh04.s[1192]++;orderBook=[bids,myAsk];}else{cov_7ffl2vh04.b[250][1]++;}}cov_7ffl2vh04.s[1193]++;asks=orderBook[1];cov_7ffl2vh04.s[1194]++;bids=orderBook[0];// For Bid Order
let myBid=(cov_7ffl2vh04.s[1195]++,await bids.filter(item=>{cov_7ffl2vh04.f[89]++;cov_7ffl2vh04.s[1196]++;return item.ID===order.ID;}));cov_7ffl2vh04.s[1197]++;index=bids.indexOf(myBid[0]);cov_7ffl2vh04.s[1198]++;myBid[0].TokenID=tokenID;cov_7ffl2vh04.s[1199]++;myBid[0].RestingQuantity=myBid[0].RestingQuantity-orders.QuantityMatch;cov_7ffl2vh04.s[1200]++;if(myBid[0].RestingQuantity!==0){cov_7ffl2vh04.b[251][0]++;cov_7ffl2vh04.s[1201]++;bids[index]=myBid[0];cov_7ffl2vh04.s[1202]++;orderBook=[bids,asks];}else{cov_7ffl2vh04.b[251][1]++;cov_7ffl2vh04.s[1203]++;if(myBid[0].RestingQuantity===0){cov_7ffl2vh04.b[252][0]++;cov_7ffl2vh04.s[1204]++;myBid=await bids.filter(item=>{cov_7ffl2vh04.f[90]++;cov_7ffl2vh04.s[1205]++;return item.ID!==order.ID;});cov_7ffl2vh04.s[1206]++;orderBook=[myBid,asks];}else{cov_7ffl2vh04.b[252][1]++;}}cov_7ffl2vh04.s[1207]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(orderBook)));}// This function will do a delivery versus payment when an Ask Order achieves a match
// This function will be executed until no state according to that key exists in world state
async MatchingAsk(ctx,orderID){cov_7ffl2vh04.f[91]++;const orderBookBytes=(cov_7ffl2vh04.s[1208]++,await ctx.stub.getState('OrderBook'));cov_7ffl2vh04.s[1209]++;if((cov_7ffl2vh04.b[254][0]++,!orderBookBytes)||(cov_7ffl2vh04.b[254][1]++,orderBookBytes.length===0)){cov_7ffl2vh04.b[253][0]++;cov_7ffl2vh04.s[1210]++;throw new Error(`Error, Order Book State associated to key ${'OrderBook'} does not exist`);}else{cov_7ffl2vh04.b[253][1]++;}let orderBook=(cov_7ffl2vh04.s[1211]++,JSON.parse(orderBookBytes.toString()));let asks=(cov_7ffl2vh04.s[1212]++,orderBook[1]);let bids=(cov_7ffl2vh04.s[1213]++,orderBook[0]);// Retrieve order Match State
const orderMatchBytes=(cov_7ffl2vh04.s[1214]++,await ctx.stub.getState(orderID));cov_7ffl2vh04.s[1215]++;if((cov_7ffl2vh04.b[256][0]++,!orderMatchBytes)||(cov_7ffl2vh04.b[256][1]++,orderMatchBytes.length===0)){cov_7ffl2vh04.b[255][0]++;cov_7ffl2vh04.s[1216]++;throw new Error(`Error, Matched Order State with ID ${orderID} does not exist`);}else{cov_7ffl2vh04.b[255][1]++;}const orderMatch=(cov_7ffl2vh04.s[1217]++,JSON.parse(orderMatchBytes.toString()));let order=(cov_7ffl2vh04.s[1218]++,orderMatch.Order);let orders=(cov_7ffl2vh04.s[1219]++,orderMatch.Orders[0]);let bond=(cov_7ffl2vh04.s[1220]++,await asks.filter(item=>{cov_7ffl2vh04.f[92]++;cov_7ffl2vh04.s[1221]++;return item.ID===order.ID;}));let token=(cov_7ffl2vh04.s[1222]++,await bids.filter(item=>{cov_7ffl2vh04.f[93]++;cov_7ffl2vh04.s[1223]++;return item.ID===orders.ID;}));let tokenID;let bondID;// delivery vs payment
cov_7ffl2vh04.s[1224]++;[tokenID,bondID]=await this._dvp(ctx,bond[0].TokenID,token[0].TokenID,orders.QuantityMatch*orders.Price,orders.QuantityMatch);let newCounter=(cov_7ffl2vh04.s[1225]++,order.QuantityMatch-orders.QuantityMatch);cov_7ffl2vh04.s[1226]++;order.TokenID=tokenID;cov_7ffl2vh04.s[1227]++;order.QuantityMatch=newCounter;let new_orders=(cov_7ffl2vh04.s[1228]++,await orderMatch.Orders.filter(item=>{cov_7ffl2vh04.f[94]++;cov_7ffl2vh04.s[1229]++;return item.ID!==orders.ID;}));// If every Token/Bond have been transfered, we will delete Match Order State
cov_7ffl2vh04.s[1230]++;if(newCounter===0){cov_7ffl2vh04.b[257][0]++;cov_7ffl2vh04.s[1231]++;await ctx.stub.deleteState(orderID);}else{cov_7ffl2vh04.b[257][1]++;const match=(cov_7ffl2vh04.s[1232]++,{Orders:new_orders,Order:order});cov_7ffl2vh04.s[1233]++;await ctx.stub.putState(orderID,Buffer.from(JSON.stringify(match)));}let myBid=(cov_7ffl2vh04.s[1234]++,await bids.filter(item=>{cov_7ffl2vh04.f[95]++;cov_7ffl2vh04.s[1235]++;return item.ID===orders.ID;}));let index=(cov_7ffl2vh04.s[1236]++,bids.indexOf(myBid[0]));cov_7ffl2vh04.s[1237]++;myBid[0].TokenID=tokenID;cov_7ffl2vh04.s[1238]++;myBid[0].RestingQuantity=myBid[0].RestingQuantity-orders.QuantityMatch;cov_7ffl2vh04.s[1239]++;if(myBid[0].RestingQuantity!==0){cov_7ffl2vh04.b[258][0]++;cov_7ffl2vh04.s[1240]++;bids[index]=myBid[0];cov_7ffl2vh04.s[1241]++;orderBook=[bids,asks];}else{cov_7ffl2vh04.b[258][1]++;cov_7ffl2vh04.s[1242]++;if(myBid[0].RestingQuantity===0){cov_7ffl2vh04.b[259][0]++;cov_7ffl2vh04.s[1243]++;myBid=await bids.filter(item=>{cov_7ffl2vh04.f[96]++;cov_7ffl2vh04.s[1244]++;return item.ID!==orders.ID;});cov_7ffl2vh04.s[1245]++;orderBook=[myBid,asks];}else{cov_7ffl2vh04.b[259][1]++;}}cov_7ffl2vh04.s[1246]++;asks=orderBook[1];cov_7ffl2vh04.s[1247]++;bids=orderBook[0];let myAsk=(cov_7ffl2vh04.s[1248]++,await asks.filter(item=>{cov_7ffl2vh04.f[97]++;cov_7ffl2vh04.s[1249]++;return item.ID===order.ID;}));cov_7ffl2vh04.s[1250]++;index=asks.indexOf(myAsk[0]);cov_7ffl2vh04.s[1251]++;myAsk[0].TokenID=bondID;cov_7ffl2vh04.s[1252]++;myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;cov_7ffl2vh04.s[1253]++;if(myAsk[0].RestingQuantity!==0){cov_7ffl2vh04.b[260][0]++;cov_7ffl2vh04.s[1254]++;asks[index]=myAsk[0];cov_7ffl2vh04.s[1255]++;orderBook=[bids,asks];}else{cov_7ffl2vh04.b[260][1]++;cov_7ffl2vh04.s[1256]++;if(myAsk[0].RestingQuantity===0){cov_7ffl2vh04.b[261][0]++;cov_7ffl2vh04.s[1257]++;myAsk=await asks.filter(item=>{cov_7ffl2vh04.f[98]++;cov_7ffl2vh04.s[1258]++;return item.ID!==order.ID;});cov_7ffl2vh04.s[1259]++;orderBook=[bids,myAsk];}else{cov_7ffl2vh04.b[261][1]++;}}cov_7ffl2vh04.s[1260]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(orderBook)));}async _dvp(ctx,bondID,tokenID,tokensToTransfer,bondsToTransfer){cov_7ffl2vh04.f[99]++;const tokenBytes=(cov_7ffl2vh04.s[1261]++,await ctx.stub.getState(tokenID));cov_7ffl2vh04.s[1262]++;if((cov_7ffl2vh04.b[263][0]++,!tokenBytes)||(cov_7ffl2vh04.b[263][1]++,tokenBytes.length===0)){cov_7ffl2vh04.b[262][0]++;cov_7ffl2vh04.s[1263]++;throw new Error(`Error, Token State with key ${tokenID} does not exist`);}else{cov_7ffl2vh04.b[262][1]++;}const token=(cov_7ffl2vh04.s[1264]++,JSON.parse(tokenBytes.toString()));const bondBytes=(cov_7ffl2vh04.s[1265]++,await ctx.stub.getState(bondID));cov_7ffl2vh04.s[1266]++;if((cov_7ffl2vh04.b[265][0]++,!bondBytes)||(cov_7ffl2vh04.b[265][1]++,bondBytes.length===0)){cov_7ffl2vh04.b[264][0]++;cov_7ffl2vh04.s[1267]++;throw new Error(`Error, Bond State with ID ${bondID} does not exist`);}else{cov_7ffl2vh04.b[264][1]++;}const bond=(cov_7ffl2vh04.s[1268]++,JSON.parse(bondBytes.toString()));const genericID=(cov_7ffl2vh04.s[1269]++,await ctx.stub.getTxID());const key1=(cov_7ffl2vh04.s[1270]++,await ctx.stub.createCompositeKey('securitizationCoin',[bond.Owner,genericID]));const key2=(cov_7ffl2vh04.s[1271]++,await ctx.stub.createCompositeKey('securitizationCoin',[token.Owner,genericID]));const bondKey1=(cov_7ffl2vh04.s[1272]++,await ctx.stub.createCompositeKey('BondToken',[token.Owner,genericID]));const bondKey2=(cov_7ffl2vh04.s[1273]++,await ctx.stub.createCompositeKey('BondToken',[bond.Owner,genericID]));const balanceTokens=(cov_7ffl2vh04.s[1274]++,token.Amount-tokensToTransfer);let utxo1;let utxo2;let typeID;cov_7ffl2vh04.s[1275]++;typeID=':1';cov_7ffl2vh04.s[1276]++;utxo1={ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balanceTokens,CanBeUsed:false};cov_7ffl2vh04.s[1277]++;typeID=':0';cov_7ffl2vh04.s[1278]++;utxo2={ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:bond.Owner,Issuer:token.Issuer,Amount:tokensToTransfer,CanBeUsed:true};const balanceBonds=(cov_7ffl2vh04.s[1279]++,bond.Amount-bondsToTransfer);let bond1;let bond2;cov_7ffl2vh04.s[1280]++;typeID=':1';// TODO:
// Bond Arguments.
cov_7ffl2vh04.s[1281]++;bond1={ID:bondKey1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balanceBonds,CanBeUsed:false};cov_7ffl2vh04.s[1282]++;typeID=':0';cov_7ffl2vh04.s[1283]++;bond2={ID:bondKey2+typeID,GenericID:genericID,TypeID:typeID,Owner:bond.Owner,Issuer:token.Issuer,Amount:bondsToTransfer,CanBeUsed:true};cov_7ffl2vh04.s[1284]++;await ctx.stub.deleteState(tokenID);cov_7ffl2vh04.s[1285]++;await ctx.stub.deleteState(bondID);cov_7ffl2vh04.s[1286]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_7ffl2vh04.s[1287]++;await ctx.stub.putState(bond2.ID,Buffer.from(JSON.stringify(bond2)));cov_7ffl2vh04.s[1288]++;if(balanceTokens!=0){cov_7ffl2vh04.b[266][0]++;cov_7ffl2vh04.s[1289]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_7ffl2vh04.b[266][1]++;}cov_7ffl2vh04.s[1290]++;if(balanceBonds!=0){cov_7ffl2vh04.b[267][0]++;cov_7ffl2vh04.s[1291]++;await ctx.stub.putState(bond1.ID,Buffer.from(JSON.stringify(bond1)));}else{cov_7ffl2vh04.b[267][1]++;}cov_7ffl2vh04.s[1292]++;return[utxo1.ID,bond1.ID];}async QueryBookOrder(ctx){cov_7ffl2vh04.f[100]++;const bookOrderBytes=(cov_7ffl2vh04.s[1293]++,await ctx.stub.getState('OrderBook'));const bookOrder=(cov_7ffl2vh04.s[1294]++,JSON.parse(bookOrderBytes.toString()));cov_7ffl2vh04.s[1295]++;return bookOrder;}// // We must change this function
// // Order book implementation URL http://web.archive.org/web/20110205154238/http://howtohft.blogspot.com/2011/02/how-to-build-fast-limit-order-book.html
// // This function must be running continuosly in order to determine if there is matching among
// // bid and ask orders
// async Matching(ctx){
//     const bookOrderBytes=await ctx.stub.getState('OrderBook');
//     if (!bookOrderBytes || bookOrderBytes.length === 0){
//         throw new Error(`No order book.`);
//     }
//     const bookOrder=JSON.parse(bookOrderBytes.toString());
//     const asks=bookOrder[1];
//     const bids=bookOrder[0];
//     if (bids.length===0 || asks.length===0){
//         throw new Error(`Ask Orders or Bid Orders have not been submitted`);
//     }
//     let bondsToTransfer;
//     let tokensToTransfer;
//     while (bids[0].Price>=asks[0].Price){
//         switch ((bids[0].Quantity>asks[0].Quantity) ? 0 : ((bids[0].Quantity<asks[0].Quantity) ? 1 : 2)){
//             case 0:
//                 console.log('Case 0');
//                 bondsToTransfer=asks[0].Quantity;
//                 tokensToTransfer=bids[0].Price*asks[0].Quantity
//                 // delivery vs payment
//                 await this._dvp(ctx,bids[0].TokenID,asks[0].TokenID,tokensToTransfer, bondsToTransfer)
//                 // remove order
//                 asks.splice(0, 1);
//             case 1:
//                 console.log('Case 1');
//                 bondsToTransfer=bids[0].Quantity;
//                 tokensToTransfer=bids[0].Quantity*bids[0].Price;
//                 // delivery vs payment
//                 await this._dvp(ctx,bids[0].TokenID,asks[0].TokenID,tokensToTransfer, bondsToTransfer)
//                 // remove order
//                 bids.splice(0,1);
//             case 2:
//                 console.log('Case 2');
//                 bondsToTransfer=bids[0].Quantity;
//                 tokensToTransfer=bids[0].Quantity*bids[0].Price;
//                 // delivery vs payment
//                 await this._dvp(ctx,bids[0].TokenID,asks[0].TokenID,tokensToTransfer, bondsToTransfer)
//                 // remove orders
//                 bids.splice(0,1);
//                 asks.splice(0,1);
//             default:
//                 console.log('No matching possible');
//         }
//     }
// }
// async _dvp(ctx,tokenID,bondID, tokensToTransfer, bondsToTransfer){
//     // console.log('1');
//     const tokenBytes=await ctx.stub.getState(tokenID);
//     if (!tokenBytes || tokenBytes.length === 0) {
//         throw new Error(`Error`);
//     }
//     const token=JSON.parse(tokenBytes.toString());
//     // console.log('2');
//     const bondBytes=await ctx.stub.getState(bondID);
//     if (!bondBytes || bondBytes.length === 0) {
//         throw new Error(`Error`);
//     }
//     const bond=JSON.parse(bondBytes.toString());
//     // console.log('3');
//     const genericID=await ctx.stub.getTxID();
//     // 'user' seria el que recibe el token/bono
//     const key1=await ctx.stub.createCompositeKey('securitizationCoin',['user',genericID]);
//     const key2=await ctx.stub.createCompositeKey('securitizationCoin',['user',genericID]);
//     const bondKey1=await ctx.stub.createCompositeKey('BondToken',['user',genericID]);
//     const bondKey2=await ctx.stub.createCompositeKey('BondToken',['user',genericID]);
//     // console.log('4');
//     const balanceTokens=token.Amount-tokensToTransfer;
//     let utxo1;
//     let utxo2;
//     let typeID;
//     typeID=':1';
//     console.log('5');
//     utxo1={
//         ID: key1+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: token.Owner,
//         // Issuer: token.Issuer,
//         Amount: balanceTokens,
//         CanBeUsed: true
//     };
//     typeID=':0';
//     utxo2={
//         ID: key2+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: bond.Owner,
//         // Issuer: token.Issuer,
//         Amount: tokensToTransfer,
//         CanBeUsed: true
//     };
//     console.log('6');
//     const balanceBonds=bond.Amount-bondsToTransfer;
//     let bond1;
//     let bond2;
//     typeID=':1'
//     bond1={
//         ID: bondKey1+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: token.Owner,
//         Issuer: token.Issuer,
//         Amount: balanceBonds,
//         CanBeUsed: true
//     };
//     typeID=':0'
//     bond2={
//         ID: bondKey2+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: bond.Owner,
//         Issuer: token.Issuer,
//         Amount: bondsToTransfer,
//         CanBeUsed: true
//     };
//     // // No puede ser menor que cero
//     // if (balanceTokens<0){
//     //     throw new Error(`ERROR NEGATIVE TOKENS`);
//     // }else if (balanceTokens>0){
//     // }else{
//     // }
//     // // No puede ser menor que cero
//     // if (balanceBonds<=0){
//     // }else{
//     // }
//     await ctx.stub.deleteState(tokenID);
//     await ctx.stub.deleteState(bondID);
//     console.log('8');
//     await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));
//     await ctx.stub.putState(bond2.ID,Buffer.from(JSON.stringify(bond2)));
//     if (balanceTokens!=0){
//         await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));
//     }
//     if (balanceBonds!=0){
//         await ctx.stub.putState(bond1.ID,Buffer.from(JSON.stringify(bond1)));
//     }
// }
}// module.exports.originationContract=originationContract;
cov_7ffl2vh04.s[1296]++;module.exports.securitizationContext=securitizationContext;cov_7ffl2vh04.s[1297]++;module.exports.servicingContract=servicingContract;cov_7ffl2vh04.s[1298]++;module.exports.ppaContract=ppaContract;cov_7ffl2vh04.s[1299]++;module.exports.commonSecuritizationContract=commonSecuritizationContract;cov_7ffl2vh04.s[1300]++;module.exports.bondIssuanceContract=bondIssuanceContract;