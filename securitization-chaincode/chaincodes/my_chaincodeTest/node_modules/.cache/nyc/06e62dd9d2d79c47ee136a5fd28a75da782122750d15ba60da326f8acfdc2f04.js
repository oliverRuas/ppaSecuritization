'use strict';var cov_1pebg41whg=function(){var path="/home/oliver/go/src/github.com/hyperledger/fabric-samples/securitization-chaincode/chaincodes/my_chaincodeTest/lib/securitizationContract.js";var hash="50425f7b49d9a48dd9fa71b71818f5731ffa5b04";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/oliver/go/src/github.com/hyperledger/fabric-samples/securitization-chaincode/chaincodes/my_chaincodeTest/lib/securitizationContract.js",statementMap:{"0":{start:{line:3,column:26},end:{line:3,column:56}},"1":{start:{line:9,column:8},end:{line:9,column:16}},"2":{start:{line:13,column:8},end:{line:13,column:46}},"3":{start:{line:17,column:8},end:{line:17,column:59}},"4":{start:{line:21,column:8},end:{line:21,column:42}},"5":{start:{line:26,column:8},end:{line:26,column:77}},"6":{start:{line:31,column:8},end:{line:31,column:24}},"7":{start:{line:35,column:8},end:{line:35,column:38}},"8":{start:{line:39,column:8},end:{line:39,column:32}},"9":{start:{line:43,column:8},end:{line:43,column:67}},"10":{start:{line:52,column:8},end:{line:52,column:43}},"11":{start:{line:60,column:8},end:{line:60,column:43}},"12":{start:{line:68,column:21},end:{line:68,column:40}},"13":{start:{line:70,column:17},end:{line:70,column:67}},"14":{start:{line:72,column:8},end:{line:74,column:9}},"15":{start:{line:73,column:12},end:{line:73,column:74}},"16":{start:{line:75,column:16},end:{line:75,column:57}},"17":{start:{line:76,column:19},end:{line:76,column:26}},"18":{start:{line:77,column:20},end:{line:77,column:30}},"19":{start:{line:80,column:8},end:{line:84,column:9}},"20":{start:{line:80,column:19},end:{line:80,column:20}},"21":{start:{line:81,column:12},end:{line:83,column:13}},"22":{start:{line:82,column:16},end:{line:82,column:73}},"23":{start:{line:102,column:27},end:{line:102,column:44}},"24":{start:{line:104,column:18},end:{line:104,column:19}},"25":{start:{line:105,column:8},end:{line:113,column:9}},"26":{start:{line:105,column:18},end:{line:105,column:19}},"27":{start:{line:106,column:12},end:{line:109,column:13}},"28":{start:{line:107,column:16},end:{line:107,column:24}},"29":{start:{line:108,column:16},end:{line:108,column:30}},"30":{start:{line:110,column:12},end:{line:112,column:13}},"31":{start:{line:111,column:16},end:{line:111,column:79}},"32":{start:{line:115,column:8},end:{line:117,column:9}},"33":{start:{line:116,column:12},end:{line:116,column:45}},"34":{start:{line:119,column:8},end:{line:119,column:34}},"35":{start:{line:120,column:8},end:{line:122,column:9}},"36":{start:{line:121,column:12},end:{line:121,column:64}},"37":{start:{line:124,column:8},end:{line:124,column:19}},"38":{start:{line:150,column:24},end:{line:150,column:48}},"39":{start:{line:152,column:19},end:{line:152,column:93}},"40":{start:{line:154,column:8},end:{line:156,column:9}},"41":{start:{line:155,column:12},end:{line:155,column:44}},"42":{start:{line:158,column:19},end:{line:158,column:23}},"43":{start:{line:159,column:19},end:{line:168,column:9}},"44":{start:{line:170,column:8},end:{line:170,column:72}},"45":{start:{line:171,column:8},end:{line:171,column:19}},"46":{start:{line:175,column:21},end:{line:175,column:53}},"47":{start:{line:176,column:21},end:{line:176,column:96}},"48":{start:{line:178,column:23},end:{line:178,column:25}},"49":{start:{line:179,column:20},end:{line:179,column:21}},"50":{start:{line:181,column:8},end:{line:192,column:9}},"51":{start:{line:182,column:12},end:{line:182,column:53}},"52":{start:{line:184,column:12},end:{line:184,column:32}},"53":{start:{line:185,column:12},end:{line:188,column:13}},"54":{start:{line:186,column:16},end:{line:186,column:42}},"55":{start:{line:187,column:16},end:{line:187,column:39}},"56":{start:{line:189,column:12},end:{line:191,column:13}},"57":{start:{line:190,column:16},end:{line:190,column:21}},"58":{start:{line:193,column:8},end:{line:195,column:9}},"59":{start:{line:194,column:12},end:{line:194,column:59}},"60":{start:{line:196,column:16},end:{line:196,column:74}},"61":{start:{line:197,column:8},end:{line:197,column:18}},"62":{start:{line:212,column:18},end:{line:212,column:79}},"63":{start:{line:213,column:8},end:{line:215,column:9}},"64":{start:{line:214,column:12},end:{line:214,column:49}},"65":{start:{line:216,column:8},end:{line:216,column:19}},"66":{start:{line:220,column:19},end:{line:220,column:21}},"67":{start:{line:221,column:12},end:{line:221,column:33}},"68":{start:{line:222,column:2},end:{line:247,column:3}},"69":{start:{line:223,column:3},end:{line:245,column:4}},"70":{start:{line:224,column:18},end:{line:224,column:20}},"71":{start:{line:226,column:4},end:{line:243,column:5}},"72":{start:{line:227,column:5},end:{line:227,column:36}},"73":{start:{line:228,column:5},end:{line:228,column:45}},"74":{start:{line:229,column:5},end:{line:234,column:6}},"75":{start:{line:230,column:6},end:{line:230,column:67}},"76":{start:{line:233,column:6},end:{line:233,column:55}},"77":{start:{line:236,column:5},end:{line:236,column:33}},"78":{start:{line:237,column:5},end:{line:242,column:6}},"79":{start:{line:238,column:6},end:{line:238,column:68}},"80":{start:{line:241,column:6},end:{line:241,column:56}},"81":{start:{line:244,column:4},end:{line:244,column:29}},"82":{start:{line:246,column:3},end:{line:246,column:31}},"83":{start:{line:248,column:2},end:{line:248,column:19}},"84":{start:{line:249,column:2},end:{line:249,column:20}},"85":{start:{line:254,column:18},end:{line:254,column:73}},"86":{start:{line:255,column:30},end:{line:255,column:66}},"87":{start:{line:256,column:16},end:{line:256,column:64}},"88":{start:{line:257,column:2},end:{line:257,column:17}},"89":{start:{line:271,column:8},end:{line:271,column:42}},"90":{start:{line:274,column:24},end:{line:274,column:48}},"91":{start:{line:275,column:22},end:{line:275,column:54}},"92":{start:{line:277,column:18},end:{line:277,column:92}},"93":{start:{line:280,column:8},end:{line:280,column:19}},"94":{start:{line:282,column:34},end:{line:291,column:9}},"95":{start:{line:292,column:8},end:{line:292,column:103}},"96":{start:{line:293,column:8},end:{line:293,column:34}},"97":{start:{line:298,column:23},end:{line:298,column:82}},"98":{start:{line:299,column:20},end:{line:299,column:21}},"99":{start:{line:302,column:8},end:{line:305,column:13}},"100":{start:{line:303,column:12},end:{line:303,column:52}},"101":{start:{line:304,column:12},end:{line:304,column:30}},"102":{start:{line:306,column:8},end:{line:310,column:9}},"103":{start:{line:307,column:12},end:{line:307,column:45}},"104":{start:{line:308,column:14},end:{line:310,column:9}},"105":{start:{line:309,column:12},end:{line:309,column:24}},"106":{start:{line:311,column:8},end:{line:311,column:23}},"107":{start:{line:316,column:21},end:{line:316,column:53}},"108":{start:{line:317,column:23},end:{line:317,column:98}},"109":{start:{line:318,column:22},end:{line:318,column:24}},"110":{start:{line:320,column:8},end:{line:323,column:9}},"111":{start:{line:321,column:12},end:{line:321,column:52}},"112":{start:{line:322,column:12},end:{line:322,column:32}},"113":{start:{line:324,column:8},end:{line:324,column:23}},"114":{start:{line:329,column:21},end:{line:329,column:53}},"115":{start:{line:330,column:23},end:{line:330,column:89}},"116":{start:{line:331,column:22},end:{line:331,column:24}},"117":{start:{line:333,column:8},end:{line:336,column:9}},"118":{start:{line:334,column:12},end:{line:334,column:52}},"119":{start:{line:335,column:12},end:{line:335,column:32}},"120":{start:{line:337,column:8},end:{line:337,column:23}},"121":{start:{line:346,column:8},end:{line:346,column:40}},"122":{start:{line:349,column:8},end:{line:349,column:43}},"123":{start:{line:352,column:22},end:{line:352,column:42}},"124":{start:{line:353,column:8},end:{line:355,column:9}},"125":{start:{line:354,column:12},end:{line:354,column:74}},"126":{start:{line:356,column:21},end:{line:356,column:40}},"127":{start:{line:358,column:8},end:{line:360,column:9}},"128":{start:{line:359,column:12},end:{line:359,column:74}},"129":{start:{line:361,column:8},end:{line:361,column:38}},"130":{start:{line:362,column:16},end:{line:362,column:57}},"131":{start:{line:363,column:19},end:{line:363,column:26}},"132":{start:{line:364,column:20},end:{line:364,column:30}},"133":{start:{line:367,column:8},end:{line:371,column:9}},"134":{start:{line:367,column:19},end:{line:367,column:20}},"135":{start:{line:368,column:12},end:{line:370,column:13}},"136":{start:{line:369,column:16},end:{line:369,column:73}},"137":{start:{line:372,column:20},end:{line:372,column:35}},"138":{start:{line:373,column:8},end:{line:425,column:9}},"139":{start:{line:375,column:16},end:{line:380,column:17}},"140":{start:{line:377,column:20},end:{line:377,column:82}},"141":{start:{line:379,column:20},end:{line:379,column:26}},"142":{start:{line:382,column:16},end:{line:386,column:17}},"143":{start:{line:383,column:20},end:{line:383,column:82}},"144":{start:{line:385,column:20},end:{line:385,column:26}},"145":{start:{line:388,column:16},end:{line:392,column:17}},"146":{start:{line:389,column:20},end:{line:389,column:82}},"147":{start:{line:391,column:20},end:{line:391,column:26}},"148":{start:{line:394,column:16},end:{line:398,column:17}},"149":{start:{line:395,column:20},end:{line:395,column:82}},"150":{start:{line:397,column:20},end:{line:397,column:26}},"151":{start:{line:400,column:16},end:{line:404,column:17}},"152":{start:{line:401,column:20},end:{line:401,column:82}},"153":{start:{line:403,column:20},end:{line:403,column:26}},"154":{start:{line:406,column:16},end:{line:410,column:17}},"155":{start:{line:407,column:20},end:{line:407,column:82}},"156":{start:{line:409,column:20},end:{line:409,column:26}},"157":{start:{line:412,column:16},end:{line:416,column:17}},"158":{start:{line:413,column:20},end:{line:413,column:82}},"159":{start:{line:415,column:20},end:{line:415,column:26}},"160":{start:{line:418,column:16},end:{line:422,column:17}},"161":{start:{line:419,column:20},end:{line:419,column:82}},"162":{start:{line:421,column:20},end:{line:421,column:26}},"163":{start:{line:430,column:15},end:{line:430,column:42}},"164":{start:{line:431,column:8},end:{line:431,column:20}},"165":{start:{line:440,column:23},end:{line:440,column:80}},"166":{start:{line:441,column:20},end:{line:441,column:22}},"167":{start:{line:442,column:8},end:{line:445,column:9}},"168":{start:{line:444,column:12},end:{line:444,column:34}},"169":{start:{line:446,column:8},end:{line:452,column:9}},"170":{start:{line:447,column:12},end:{line:447,column:24}},"171":{start:{line:448,column:14},end:{line:452,column:9}},"172":{start:{line:449,column:12},end:{line:449,column:24}},"173":{start:{line:451,column:12},end:{line:451,column:47}},"174":{start:{line:462,column:23},end:{line:462,column:53}},"175":{start:{line:463,column:8},end:{line:467,column:9}},"176":{start:{line:464,column:12},end:{line:464,column:24}},"177":{start:{line:466,column:12},end:{line:466,column:23}},"178":{start:{line:478,column:23},end:{line:478,column:83}},"179":{start:{line:479,column:20},end:{line:479,column:21}},"180":{start:{line:481,column:8},end:{line:484,column:13}},"181":{start:{line:482,column:12},end:{line:482,column:52}},"182":{start:{line:483,column:12},end:{line:483,column:30}},"183":{start:{line:485,column:8},end:{line:489,column:9}},"184":{start:{line:486,column:12},end:{line:486,column:67}},"185":{start:{line:487,column:14},end:{line:489,column:9}},"186":{start:{line:488,column:12},end:{line:488,column:25}},"187":{start:{line:490,column:8},end:{line:490,column:23}},"188":{start:{line:504,column:23},end:{line:504,column:89}},"189":{start:{line:505,column:20},end:{line:505,column:21}},"190":{start:{line:508,column:8},end:{line:513,column:9}},"191":{start:{line:511,column:12},end:{line:511,column:52}},"192":{start:{line:512,column:12},end:{line:512,column:30}},"193":{start:{line:514,column:8},end:{line:518,column:9}},"194":{start:{line:515,column:12},end:{line:515,column:67}},"195":{start:{line:516,column:14},end:{line:518,column:9}},"196":{start:{line:517,column:12},end:{line:517,column:24}},"197":{start:{line:519,column:8},end:{line:519,column:23}},"198":{start:{line:524,column:21},end:{line:524,column:78}},"199":{start:{line:526,column:8},end:{line:528,column:9}},"200":{start:{line:527,column:12},end:{line:527,column:51}},"201":{start:{line:529,column:8},end:{line:529,column:35}},"202":{start:{line:535,column:17},end:{line:535,column:74}},"203":{start:{line:536,column:16},end:{line:536,column:18}},"204":{start:{line:537,column:8},end:{line:540,column:9}},"205":{start:{line:538,column:12},end:{line:538,column:27}},"206":{start:{line:539,column:12},end:{line:539,column:22}},"207":{start:{line:541,column:29},end:{line:541,column:62}},"208":{start:{line:542,column:8},end:{line:542,column:32}},"209":{start:{line:543,column:8},end:{line:543,column:28}},"210":{start:{line:544,column:8},end:{line:544,column:18}},"211":{start:{line:553,column:21},end:{line:553,column:53}},"212":{start:{line:555,column:8},end:{line:557,column:9}},"213":{start:{line:556,column:12},end:{line:556,column:103}},"214":{start:{line:558,column:8},end:{line:560,column:9}},"215":{start:{line:559,column:12},end:{line:559,column:67}},"216":{start:{line:564,column:24},end:{line:564,column:48}},"217":{start:{line:567,column:20},end:{line:567,column:83}},"218":{start:{line:570,column:34},end:{line:570,column:70}},"219":{start:{line:571,column:8},end:{line:573,column:9}},"220":{start:{line:572,column:12},end:{line:572,column:90}},"221":{start:{line:578,column:18},end:{line:578,column:19}},"222":{start:{line:579,column:20},end:{line:579,column:22}},"223":{start:{line:580,column:20},end:{line:580,column:24}},"224":{start:{line:582,column:38},end:{line:582,column:82}},"225":{start:{line:583,column:29},end:{line:583,column:51}},"226":{start:{line:585,column:23},end:{line:585,column:25}},"227":{start:{line:587,column:28},end:{line:587,column:56}},"228":{start:{line:590,column:22},end:{line:590,column:24}},"229":{start:{line:591,column:20},end:{line:591,column:22}},"230":{start:{line:592,column:22},end:{line:592,column:24}},"231":{start:{line:593,column:29},end:{line:593,column:31}},"232":{start:{line:595,column:34},end:{line:595,column:36}},"233":{start:{line:596,column:25},end:{line:596,column:27}},"234":{start:{line:597,column:33},end:{line:597,column:35}},"235":{start:{line:598,column:33},end:{line:598,column:35}},"236":{start:{line:600,column:31},end:{line:600,column:33}},"237":{start:{line:601,column:59},end:{line:601,column:61}},"238":{start:{line:602,column:36},end:{line:602,column:38}},"239":{start:{line:603,column:36},end:{line:603,column:38}},"240":{start:{line:604,column:69},end:{line:604,column:71}},"241":{start:{line:605,column:48},end:{line:605,column:50}},"242":{start:{line:606,column:37},end:{line:606,column:39}},"243":{start:{line:607,column:30},end:{line:607,column:32}},"244":{start:{line:608,column:29},end:{line:608,column:31}},"245":{start:{line:609,column:33},end:{line:609,column:35}},"246":{start:{line:610,column:25},end:{line:610,column:27}},"247":{start:{line:611,column:33},end:{line:611,column:36}},"248":{start:{line:614,column:41},end:{line:614,column:43}},"249":{start:{line:615,column:45},end:{line:615,column:47}},"250":{start:{line:616,column:30},end:{line:616,column:32}},"251":{start:{line:617,column:35},end:{line:617,column:37}},"252":{start:{line:618,column:34},end:{line:618,column:36}},"253":{start:{line:619,column:39},end:{line:619,column:41}},"254":{start:{line:620,column:43},end:{line:620,column:45}},"255":{start:{line:621,column:33},end:{line:621,column:35}},"256":{start:{line:622,column:43},end:{line:622,column:45}},"257":{start:{line:623,column:44},end:{line:623,column:46}},"258":{start:{line:624,column:32},end:{line:624,column:34}},"259":{start:{line:625,column:42},end:{line:625,column:44}},"260":{start:{line:626,column:35},end:{line:626,column:37}},"261":{start:{line:627,column:33},end:{line:627,column:35}},"262":{start:{line:628,column:37},end:{line:628,column:39}},"263":{start:{line:629,column:34},end:{line:629,column:36}},"264":{start:{line:630,column:39},end:{line:630,column:41}},"265":{start:{line:631,column:51},end:{line:631,column:53}},"266":{start:{line:632,column:35},end:{line:632,column:37}},"267":{start:{line:633,column:36},end:{line:633,column:38}},"268":{start:{line:634,column:49},end:{line:634,column:51}},"269":{start:{line:635,column:44},end:{line:635,column:46}},"270":{start:{line:636,column:37},end:{line:636,column:39}},"271":{start:{line:637,column:38},end:{line:637,column:40}},"272":{start:{line:638,column:41},end:{line:638,column:43}},"273":{start:{line:639,column:51},end:{line:639,column:53}},"274":{start:{line:640,column:34},end:{line:640,column:36}},"275":{start:{line:641,column:30},end:{line:641,column:32}},"276":{start:{line:642,column:38},end:{line:642,column:40}},"277":{start:{line:643,column:42},end:{line:643,column:44}},"278":{start:{line:644,column:34},end:{line:644,column:48}},"279":{start:{line:645,column:38},end:{line:645,column:40}},"280":{start:{line:646,column:24},end:{line:646,column:29}},"281":{start:{line:647,column:33},end:{line:647,column:35}},"282":{start:{line:648,column:34},end:{line:648,column:36}},"283":{start:{line:649,column:36},end:{line:649,column:38}},"284":{start:{line:650,column:37},end:{line:650,column:39}},"285":{start:{line:653,column:18},end:{line:731,column:9}},"286":{start:{line:733,column:28},end:{line:733,column:60}},"287":{start:{line:736,column:8},end:{line:736,column:47}},"288":{start:{line:737,column:8},end:{line:737,column:46}},"289":{start:{line:742,column:8},end:{line:742,column:51}},"290":{start:{line:743,column:8},end:{line:743,column:18}},"291":{start:{line:749,column:21},end:{line:749,column:58}},"292":{start:{line:750,column:22},end:{line:750,column:46}},"293":{start:{line:751,column:15},end:{line:751,column:81}},"294":{start:{line:752,column:28},end:{line:752,column:55}},"295":{start:{line:754,column:8},end:{line:763,column:9}},"296":{start:{line:755,column:12},end:{line:760,column:14}},"297":{start:{line:762,column:12},end:{line:762,column:66}},"298":{start:{line:765,column:28},end:{line:765,column:67}},"299":{start:{line:767,column:8},end:{line:767,column:47}},"300":{start:{line:768,column:8},end:{line:768,column:45}},"301":{start:{line:770,column:8},end:{line:770,column:59}},"302":{start:{line:771,column:8},end:{line:771,column:25}},"303":{start:{line:776,column:21},end:{line:776,column:82}},"304":{start:{line:777,column:20},end:{line:777,column:22}},"305":{start:{line:778,column:8},end:{line:780,column:9}},"306":{start:{line:779,column:12},end:{line:779,column:58}},"307":{start:{line:781,column:8},end:{line:781,column:22}},"308":{start:{line:785,column:22},end:{line:785,column:54}},"309":{start:{line:786,column:23},end:{line:786,column:53}},"310":{start:{line:787,column:8},end:{line:789,column:9}},"311":{start:{line:788,column:12},end:{line:788,column:73}},"312":{start:{line:790,column:18},end:{line:790,column:49}},"313":{start:{line:792,column:8},end:{line:794,column:9}},"314":{start:{line:793,column:12},end:{line:793,column:95}},"315":{start:{line:795,column:8},end:{line:795,column:18}},"316":{start:{line:803,column:22},end:{line:803,column:54}},"317":{start:{line:804,column:23},end:{line:804,column:53}},"318":{start:{line:805,column:8},end:{line:807,column:9}},"319":{start:{line:806,column:12},end:{line:806,column:73}},"320":{start:{line:808,column:18},end:{line:808,column:49}},"321":{start:{line:813,column:8},end:{line:815,column:9}},"322":{start:{line:814,column:12},end:{line:814,column:74}},"323":{start:{line:818,column:8},end:{line:820,column:9}},"324":{start:{line:819,column:12},end:{line:819,column:64}},"325":{start:{line:823,column:8},end:{line:823,column:26}},"326":{start:{line:827,column:8},end:{line:827,column:46}},"327":{start:{line:829,column:28},end:{line:829,column:60}},"328":{start:{line:832,column:8},end:{line:832,column:47}},"329":{start:{line:833,column:8},end:{line:833,column:45}},"330":{start:{line:834,column:8},end:{line:834,column:55}},"331":{start:{line:835,column:8},end:{line:835,column:18}},"332":{start:{line:842,column:24},end:{line:842,column:48}},"333":{start:{line:843,column:23},end:{line:843,column:53}},"334":{start:{line:845,column:8},end:{line:847,column:9}},"335":{start:{line:846,column:12},end:{line:846,column:71}},"336":{start:{line:848,column:18},end:{line:848,column:49}},"337":{start:{line:849,column:22},end:{line:849,column:54}},"338":{start:{line:850,column:8},end:{line:852,column:9}},"339":{start:{line:851,column:9},end:{line:851,column:89}},"340":{start:{line:853,column:8},end:{line:855,column:9}},"341":{start:{line:854,column:12},end:{line:854,column:60}},"342":{start:{line:856,column:8},end:{line:858,column:9}},"343":{start:{line:857,column:12},end:{line:857,column:67}},"344":{start:{line:862,column:27},end:{line:862,column:57}},"345":{start:{line:864,column:8},end:{line:886,column:9}},"346":{start:{line:865,column:12},end:{line:871,column:13}},"347":{start:{line:872,column:12},end:{line:872,column:37}},"348":{start:{line:873,column:12},end:{line:873,column:40}},"349":{start:{line:874,column:12},end:{line:874,column:78}},"350":{start:{line:876,column:12},end:{line:876,column:83}},"351":{start:{line:878,column:12},end:{line:878,column:75}},"352":{start:{line:880,column:12},end:{line:880,column:37}},"353":{start:{line:881,column:12},end:{line:881,column:40}},"354":{start:{line:882,column:12},end:{line:882,column:50}},"355":{start:{line:883,column:12},end:{line:883,column:52}},"356":{start:{line:884,column:12},end:{line:884,column:78}},"357":{start:{line:885,column:12},end:{line:885,column:83}},"358":{start:{line:887,column:24},end:{line:887,column:57}},"359":{start:{line:888,column:8},end:{line:888,column:47}},"360":{start:{line:889,column:8},end:{line:889,column:49}},"361":{start:{line:890,column:8},end:{line:890,column:19}},"362":{start:{line:919,column:30},end:{line:932,column:9}},"363":{start:{line:934,column:21},end:{line:934,column:53}},"364":{start:{line:935,column:23},end:{line:935,column:53}},"365":{start:{line:936,column:8},end:{line:938,column:9}},"366":{start:{line:937,column:12},end:{line:937,column:67}},"367":{start:{line:939,column:18},end:{line:939,column:49}},"368":{start:{line:941,column:8},end:{line:943,column:9}},"369":{start:{line:942,column:12},end:{line:942,column:68}},"370":{start:{line:946,column:8},end:{line:948,column:9}},"371":{start:{line:947,column:12},end:{line:947,column:60}},"372":{start:{line:950,column:8},end:{line:952,column:9}},"373":{start:{line:951,column:12},end:{line:951,column:73}},"374":{start:{line:953,column:23},end:{line:953,column:97}},"375":{start:{line:953,column:56},end:{line:953,column:95}},"376":{start:{line:955,column:8},end:{line:962,column:9}},"377":{start:{line:956,column:12},end:{line:956,column:86}},"378":{start:{line:959,column:12},end:{line:959,column:56}},"379":{start:{line:960,column:12},end:{line:960,column:56}},"380":{start:{line:961,column:12},end:{line:961,column:50}},"381":{start:{line:964,column:8},end:{line:964,column:46}},"382":{start:{line:965,column:8},end:{line:965,column:40}},"383":{start:{line:966,column:8},end:{line:966,column:42}},"384":{start:{line:968,column:28},end:{line:968,column:60}},"385":{start:{line:969,column:8},end:{line:969,column:55}},"386":{start:{line:970,column:8},end:{line:970,column:54}},"387":{start:{line:971,column:8},end:{line:971,column:47}},"388":{start:{line:972,column:8},end:{line:972,column:18}},"389":{start:{line:1022,column:20},end:{line:1022,column:52}},"390":{start:{line:1024,column:23},end:{line:1024,column:53}},"391":{start:{line:1025,column:8},end:{line:1027,column:9}},"392":{start:{line:1026,column:12},end:{line:1026,column:68}},"393":{start:{line:1028,column:16},end:{line:1028,column:47}},"394":{start:{line:1030,column:8},end:{line:1032,column:9}},"395":{start:{line:1031,column:12},end:{line:1031,column:74}},"396":{start:{line:1033,column:8},end:{line:1035,column:9}},"397":{start:{line:1034,column:12},end:{line:1034,column:60}},"398":{start:{line:1037,column:21},end:{line:1037,column:50}},"399":{start:{line:1039,column:8},end:{line:1039,column:46}},"400":{start:{line:1043,column:8},end:{line:1045,column:9}},"401":{start:{line:1044,column:12},end:{line:1044,column:37}},"402":{start:{line:1047,column:8},end:{line:1051,column:9}},"403":{start:{line:1048,column:12},end:{line:1048,column:33}},"404":{start:{line:1050,column:12},end:{line:1050,column:34}},"405":{start:{line:1053,column:8},end:{line:1053,column:43}},"406":{start:{line:1054,column:8},end:{line:1054,column:41}},"407":{start:{line:1055,column:8},end:{line:1055,column:43}},"408":{start:{line:1056,column:8},end:{line:1056,column:44}},"409":{start:{line:1057,column:8},end:{line:1057,column:33}},"410":{start:{line:1058,column:25},end:{line:1058,column:57}},"411":{start:{line:1059,column:8},end:{line:1059,column:53}},"412":{start:{line:1060,column:8},end:{line:1060,column:47}},"413":{start:{line:1061,column:8},end:{line:1061,column:45}},"414":{start:{line:1062,column:8},end:{line:1062,column:18}},"415":{start:{line:1070,column:29},end:{line:1070,column:47}},"416":{start:{line:1071,column:29},end:{line:1071,column:49}},"417":{start:{line:1072,column:29},end:{line:1072,column:47}},"418":{start:{line:1074,column:29},end:{line:1074,column:75}},"419":{start:{line:1076,column:29},end:{line:1076,column:98}},"420":{start:{line:1076,column:56},end:{line:1076,column:97}},"421":{start:{line:1077,column:8},end:{line:1077,column:36}},"422":{start:{line:1086,column:22},end:{line:1086,column:54}},"423":{start:{line:1087,column:27},end:{line:1087,column:106}},"424":{start:{line:1088,column:25},end:{line:1088,column:62}},"425":{start:{line:1089,column:8},end:{line:1091,column:9}},"426":{start:{line:1090,column:12},end:{line:1090,column:82}},"427":{start:{line:1092,column:20},end:{line:1092,column:53}},"428":{start:{line:1094,column:8},end:{line:1096,column:9}},"429":{start:{line:1095,column:12},end:{line:1095,column:164}},"430":{start:{line:1099,column:25},end:{line:1099,column:55}},"431":{start:{line:1101,column:8},end:{line:1103,column:9}},"432":{start:{line:1102,column:12},end:{line:1102,column:67}},"433":{start:{line:1105,column:19},end:{line:1105,column:52}},"434":{start:{line:1108,column:8},end:{line:1110,column:9}},"435":{start:{line:1109,column:12},end:{line:1109,column:74}},"436":{start:{line:1111,column:8},end:{line:1113,column:9}},"437":{start:{line:1112,column:12},end:{line:1112,column:72}},"438":{start:{line:1116,column:26},end:{line:1116,column:40}},"439":{start:{line:1117,column:23},end:{line:1117,column:47}},"440":{start:{line:1119,column:35},end:{line:1119,column:88}},"441":{start:{line:1121,column:24},end:{line:1121,column:83}},"442":{start:{line:1125,column:24},end:{line:1125,column:60}},"443":{start:{line:1126,column:8},end:{line:1128,column:9}},"444":{start:{line:1127,column:12},end:{line:1127,column:50}},"445":{start:{line:1132,column:26},end:{line:1145,column:9}},"446":{start:{line:1134,column:29},end:{line:1134,column:88}},"447":{start:{line:1136,column:32},end:{line:1136,column:51}},"448":{start:{line:1137,column:16},end:{line:1137,column:32}},"449":{start:{line:1140,column:26},end:{line:1140,column:88}},"450":{start:{line:1140,column:72},end:{line:1140,column:85}},"451":{start:{line:1141,column:29},end:{line:1141,column:137}},"452":{start:{line:1142,column:32},end:{line:1142,column:51}},"453":{start:{line:1143,column:16},end:{line:1143,column:32}},"454":{start:{line:1147,column:8},end:{line:1149,column:9}},"455":{start:{line:1148,column:12},end:{line:1148,column:63}},"456":{start:{line:1155,column:8},end:{line:1160,column:9}},"457":{start:{line:1156,column:12},end:{line:1156,column:118}},"458":{start:{line:1159,column:12},end:{line:1159,column:172}},"459":{start:{line:1162,column:21},end:{line:1162,column:36}},"460":{start:{line:1164,column:22},end:{line:1164,column:34}},"461":{start:{line:1165,column:22},end:{line:1165,column:52}},"462":{start:{line:1166,column:8},end:{line:1168,column:9}},"463":{start:{line:1167,column:12},end:{line:1167,column:111}},"464":{start:{line:1170,column:8},end:{line:1170,column:48}},"465":{start:{line:1171,column:8},end:{line:1171,column:46}},"466":{start:{line:1172,column:8},end:{line:1172,column:45}},"467":{start:{line:1173,column:8},end:{line:1173,column:44}},"468":{start:{line:1174,column:8},end:{line:1174,column:34}},"469":{start:{line:1180,column:30},end:{line:1180,column:70}},"470":{start:{line:1181,column:8},end:{line:1184,column:9}},"471":{start:{line:1183,column:12},end:{line:1183,column:31}},"472":{start:{line:1186,column:26},end:{line:1186,column:69}},"473":{start:{line:1196,column:8},end:{line:1202,column:9}},"474":{start:{line:1197,column:12},end:{line:1197,column:77}},"475":{start:{line:1201,column:12},end:{line:1201,column:111}},"476":{start:{line:1208,column:8},end:{line:1208,column:79}},"477":{start:{line:1209,column:8},end:{line:1209,column:18}},"478":{start:{line:1227,column:25},end:{line:1227,column:57}},"479":{start:{line:1228,column:8},end:{line:1230,column:9}},"480":{start:{line:1229,column:12},end:{line:1229,column:77}},"481":{start:{line:1231,column:20},end:{line:1231,column:53}},"482":{start:{line:1233,column:22},end:{line:1233,column:41}},"483":{start:{line:1236,column:21},end:{line:1236,column:47}},"484":{start:{line:1237,column:24},end:{line:1237,column:48}},"485":{start:{line:1239,column:19},end:{line:1239,column:93}},"486":{start:{line:1240,column:19},end:{line:1240,column:97}},"487":{start:{line:1242,column:8},end:{line:1242,column:19}},"488":{start:{line:1243,column:20},end:{line:1252,column:9}},"489":{start:{line:1253,column:8},end:{line:1253,column:20}},"490":{start:{line:1254,column:20},end:{line:1263,column:9}},"491":{start:{line:1265,column:18},end:{line:1265,column:20}},"492":{start:{line:1266,column:8},end:{line:1266,column:45}},"493":{start:{line:1267,column:8},end:{line:1267,column:77}},"494":{start:{line:1268,column:8},end:{line:1275,column:9}},"495":{start:{line:1269,column:12},end:{line:1269,column:81}},"496":{start:{line:1270,column:12},end:{line:1270,column:31}},"497":{start:{line:1271,column:12},end:{line:1271,column:24}},"498":{start:{line:1273,column:12},end:{line:1273,column:25}},"499":{start:{line:1274,column:12},end:{line:1274,column:24}},"500":{start:{line:1281,column:25},end:{line:1281,column:57}},"501":{start:{line:1282,column:8},end:{line:1284,column:9}},"502":{start:{line:1283,column:12},end:{line:1283,column:77}},"503":{start:{line:1285,column:20},end:{line:1285,column:53}},"504":{start:{line:1287,column:22},end:{line:1287,column:41}},"505":{start:{line:1292,column:21},end:{line:1292,column:47}},"506":{start:{line:1293,column:24},end:{line:1293,column:48}},"507":{start:{line:1295,column:19},end:{line:1295,column:93}},"508":{start:{line:1296,column:19},end:{line:1296,column:97}},"509":{start:{line:1298,column:8},end:{line:1298,column:19}},"510":{start:{line:1299,column:20},end:{line:1308,column:9}},"511":{start:{line:1310,column:8},end:{line:1310,column:20}},"512":{start:{line:1311,column:20},end:{line:1320,column:9}},"513":{start:{line:1321,column:8},end:{line:1321,column:20}},"514":{start:{line:1322,column:20},end:{line:1331,column:9}},"515":{start:{line:1334,column:18},end:{line:1334,column:20}},"516":{start:{line:1335,column:8},end:{line:1335,column:45}},"517":{start:{line:1336,column:8},end:{line:1336,column:77}},"518":{start:{line:1337,column:8},end:{line:1337,column:77}},"519":{start:{line:1338,column:8},end:{line:1345,column:9}},"520":{start:{line:1339,column:12},end:{line:1339,column:81}},"521":{start:{line:1340,column:12},end:{line:1340,column:37}},"522":{start:{line:1341,column:12},end:{line:1341,column:24}},"523":{start:{line:1343,column:12},end:{line:1343,column:31}},"524":{start:{line:1344,column:12},end:{line:1344,column:24}},"525":{start:{line:1396,column:8},end:{line:1396,column:41}},"526":{start:{line:1400,column:8},end:{line:1400,column:43}},"527":{start:{line:1405,column:23},end:{line:1405,column:82}},"528":{start:{line:1406,column:20},end:{line:1406,column:21}},"529":{start:{line:1409,column:8},end:{line:1412,column:13}},"530":{start:{line:1410,column:12},end:{line:1410,column:52}},"531":{start:{line:1411,column:12},end:{line:1411,column:30}},"532":{start:{line:1413,column:8},end:{line:1417,column:9}},"533":{start:{line:1414,column:12},end:{line:1414,column:67}},"534":{start:{line:1415,column:14},end:{line:1417,column:9}},"535":{start:{line:1416,column:12},end:{line:1416,column:24}},"536":{start:{line:1418,column:8},end:{line:1418,column:23}},"537":{start:{line:1423,column:22},end:{line:1423,column:36}},"538":{start:{line:1424,column:8},end:{line:1426,column:9}},"539":{start:{line:1425,column:12},end:{line:1425,column:100}},"540":{start:{line:1427,column:21},end:{line:1427,column:40}},"541":{start:{line:1428,column:8},end:{line:1430,column:9}},"542":{start:{line:1429,column:12},end:{line:1429,column:74}},"543":{start:{line:1431,column:8},end:{line:1431,column:38}},"544":{start:{line:1432,column:16},end:{line:1432,column:57}},"545":{start:{line:1433,column:19},end:{line:1433,column:26}},"546":{start:{line:1434,column:19},end:{line:1434,column:29}},"547":{start:{line:1435,column:8},end:{line:1439,column:9}},"548":{start:{line:1435,column:19},end:{line:1435,column:20}},"549":{start:{line:1436,column:12},end:{line:1438,column:13}},"550":{start:{line:1437,column:16},end:{line:1437,column:73}},"551":{start:{line:1440,column:8},end:{line:1495,column:9}},"552":{start:{line:1442,column:16},end:{line:1446,column:17}},"553":{start:{line:1443,column:20},end:{line:1443,column:108}},"554":{start:{line:1445,column:20},end:{line:1445,column:26}},"555":{start:{line:1448,column:16},end:{line:1452,column:17}},"556":{start:{line:1449,column:20},end:{line:1449,column:108}},"557":{start:{line:1451,column:20},end:{line:1451,column:26}},"558":{start:{line:1454,column:16},end:{line:1458,column:17}},"559":{start:{line:1455,column:20},end:{line:1455,column:108}},"560":{start:{line:1457,column:20},end:{line:1457,column:26}},"561":{start:{line:1460,column:16},end:{line:1464,column:17}},"562":{start:{line:1461,column:20},end:{line:1461,column:108}},"563":{start:{line:1463,column:20},end:{line:1463,column:26}},"564":{start:{line:1466,column:16},end:{line:1470,column:17}},"565":{start:{line:1467,column:20},end:{line:1467,column:108}},"566":{start:{line:1469,column:20},end:{line:1469,column:26}},"567":{start:{line:1472,column:16},end:{line:1476,column:17}},"568":{start:{line:1473,column:20},end:{line:1473,column:108}},"569":{start:{line:1475,column:20},end:{line:1475,column:26}},"570":{start:{line:1478,column:16},end:{line:1482,column:17}},"571":{start:{line:1479,column:20},end:{line:1479,column:108}},"572":{start:{line:1481,column:20},end:{line:1481,column:26}},"573":{start:{line:1484,column:16},end:{line:1488,column:17}},"574":{start:{line:1485,column:20},end:{line:1485,column:108}},"575":{start:{line:1487,column:20},end:{line:1487,column:26}},"576":{start:{line:1490,column:16},end:{line:1494,column:17}},"577":{start:{line:1491,column:20},end:{line:1491,column:108}},"578":{start:{line:1493,column:20},end:{line:1493,column:26}},"579":{start:{line:1499,column:18},end:{line:1499,column:45}},"580":{start:{line:1500,column:8},end:{line:1500,column:20}},"581":{start:{line:1509,column:23},end:{line:1509,column:80}},"582":{start:{line:1510,column:20},end:{line:1510,column:22}},"583":{start:{line:1511,column:8},end:{line:1514,column:9}},"584":{start:{line:1513,column:12},end:{line:1513,column:34}},"585":{start:{line:1515,column:8},end:{line:1521,column:9}},"586":{start:{line:1516,column:12},end:{line:1516,column:24}},"587":{start:{line:1517,column:14},end:{line:1521,column:9}},"588":{start:{line:1518,column:12},end:{line:1518,column:24}},"589":{start:{line:1520,column:12},end:{line:1520,column:47}},"590":{start:{line:1532,column:24},end:{line:1532,column:84}},"591":{start:{line:1533,column:20},end:{line:1533,column:21}},"592":{start:{line:1536,column:16},end:{line:1536,column:18}},"593":{start:{line:1537,column:8},end:{line:1540,column:9}},"594":{start:{line:1538,column:12},end:{line:1538,column:52}},"595":{start:{line:1539,column:12},end:{line:1539,column:30}},"596":{start:{line:1542,column:8},end:{line:1553,column:9}},"597":{start:{line:1543,column:12},end:{line:1543,column:26}},"598":{start:{line:1544,column:12},end:{line:1544,column:32}},"599":{start:{line:1545,column:12},end:{line:1545,column:29}},"600":{start:{line:1546,column:12},end:{line:1546,column:23}},"601":{start:{line:1547,column:14},end:{line:1553,column:9}},"602":{start:{line:1548,column:12},end:{line:1548,column:28}},"603":{start:{line:1549,column:12},end:{line:1549,column:32}},"604":{start:{line:1550,column:12},end:{line:1550,column:23}},"605":{start:{line:1552,column:12},end:{line:1552,column:67}},"606":{start:{line:1557,column:17},end:{line:1557,column:76}},"607":{start:{line:1558,column:8},end:{line:1560,column:9}},"608":{start:{line:1559,column:12},end:{line:1559,column:74}},"609":{start:{line:1561,column:8},end:{line:1561,column:22}},"610":{start:{line:1580,column:21},end:{line:1580,column:53}},"611":{start:{line:1582,column:24},end:{line:1582,column:48}},"612":{start:{line:1583,column:24},end:{line:1583,column:90}},"613":{start:{line:1585,column:18},end:{line:1593,column:9}},"614":{start:{line:1595,column:28},end:{line:1595,column:62}},"615":{start:{line:1596,column:8},end:{line:1596,column:55}},"616":{start:{line:1597,column:8},end:{line:1597,column:51}},"617":{start:{line:1598,column:8},end:{line:1598,column:47}},"618":{start:{line:1599,column:8},end:{line:1599,column:20}},"619":{start:{line:1603,column:21},end:{line:1603,column:79}},"620":{start:{line:1605,column:20},end:{line:1605,column:22}},"621":{start:{line:1606,column:8},end:{line:1608,column:9}},"622":{start:{line:1607,column:12},end:{line:1607,column:58}},"623":{start:{line:1609,column:8},end:{line:1609,column:22}},"624":{start:{line:1622,column:21},end:{line:1622,column:53}},"625":{start:{line:1624,column:24},end:{line:1624,column:48}},"626":{start:{line:1625,column:24},end:{line:1625,column:91}},"627":{start:{line:1627,column:18},end:{line:1635,column:9}},"628":{start:{line:1636,column:28},end:{line:1636,column:62}},"629":{start:{line:1637,column:8},end:{line:1637,column:55}},"630":{start:{line:1638,column:8},end:{line:1638,column:52}},"631":{start:{line:1639,column:8},end:{line:1639,column:47}},"632":{start:{line:1640,column:8},end:{line:1640,column:20}},"633":{start:{line:1644,column:21},end:{line:1644,column:80}},"634":{start:{line:1646,column:20},end:{line:1646,column:22}},"635":{start:{line:1647,column:8},end:{line:1649,column:9}},"636":{start:{line:1648,column:12},end:{line:1648,column:58}},"637":{start:{line:1650,column:8},end:{line:1650,column:22}},"638":{start:{line:1654,column:21},end:{line:1654,column:80}},"639":{start:{line:1656,column:20},end:{line:1656,column:22}},"640":{start:{line:1657,column:8},end:{line:1659,column:9}},"641":{start:{line:1658,column:12},end:{line:1658,column:58}},"642":{start:{line:1660,column:8},end:{line:1660,column:22}},"643":{start:{line:1672,column:21},end:{line:1672,column:53}},"644":{start:{line:1674,column:30},end:{line:1674,column:67}},"645":{start:{line:1675,column:8},end:{line:1677,column:9}},"646":{start:{line:1676,column:12},end:{line:1676,column:86}},"647":{start:{line:1678,column:25},end:{line:1678,column:63}},"648":{start:{line:1680,column:8},end:{line:1682,column:9}},"649":{start:{line:1681,column:12},end:{line:1681,column:99}},"650":{start:{line:1690,column:23},end:{line:1690,column:95}},"651":{start:{line:1691,column:25},end:{line:1691,column:65}},"652":{start:{line:1692,column:8},end:{line:1694,column:9}},"653":{start:{line:1693,column:12},end:{line:1693,column:85}},"654":{start:{line:1695,column:22},end:{line:1695,column:55}},"655":{start:{line:1697,column:8},end:{line:1699,column:9}},"656":{start:{line:1698,column:12},end:{line:1698,column:63}},"657":{start:{line:1702,column:8},end:{line:1704,column:9}},"658":{start:{line:1703,column:12},end:{line:1703,column:103}},"659":{start:{line:1707,column:8},end:{line:1707,column:33}},"660":{start:{line:1710,column:31},end:{line:1710,column:69}},"661":{start:{line:1711,column:8},end:{line:1713,column:9}},"662":{start:{line:1712,column:12},end:{line:1712,column:79}},"663":{start:{line:1714,column:24},end:{line:1714,column:63}},"664":{start:{line:1715,column:8},end:{line:1717,column:9}},"665":{start:{line:1716,column:12},end:{line:1716,column:61}},"666":{start:{line:1719,column:8},end:{line:1719,column:45}},"667":{start:{line:1721,column:17},end:{line:1721,column:41}},"668":{start:{line:1723,column:22},end:{line:1728,column:9}},"669":{start:{line:1729,column:25},end:{line:1729,column:39}},"670":{start:{line:1730,column:27},end:{line:1730,column:63}},"671":{start:{line:1731,column:8},end:{line:1731,column:55}},"672":{start:{line:1732,column:8},end:{line:1732,column:51}},"673":{start:{line:1733,column:8},end:{line:1733,column:50}},"674":{start:{line:1734,column:8},end:{line:1734,column:50}},"675":{start:{line:1735,column:8},end:{line:1735,column:47}},"676":{start:{line:1736,column:8},end:{line:1736,column:24}},"677":{start:{line:1741,column:25},end:{line:1741,column:57}},"678":{start:{line:1742,column:8},end:{line:1744,column:9}},"679":{start:{line:1743,column:12},end:{line:1743,column:93}},"680":{start:{line:1745,column:20},end:{line:1745,column:53}},"681":{start:{line:1747,column:28},end:{line:1747,column:63}},"682":{start:{line:1748,column:8},end:{line:1750,column:9}},"683":{start:{line:1749,column:12},end:{line:1749,column:95}},"684":{start:{line:1751,column:23},end:{line:1751,column:59}},"685":{start:{line:1753,column:8},end:{line:1755,column:9}},"686":{start:{line:1754,column:12},end:{line:1754,column:75}},"687":{start:{line:1757,column:24},end:{line:1757,column:48}},"688":{start:{line:1760,column:19},end:{line:1760,column:98}},"689":{start:{line:1761,column:19},end:{line:1761,column:101}},"690":{start:{line:1762,column:27},end:{line:1762,column:92}},"691":{start:{line:1765,column:28},end:{line:1765,column:57}},"692":{start:{line:1771,column:8},end:{line:1771,column:20}},"693":{start:{line:1772,column:8},end:{line:1781,column:10}},"694":{start:{line:1782,column:8},end:{line:1782,column:20}},"695":{start:{line:1783,column:8},end:{line:1791,column:10}},"696":{start:{line:1793,column:8},end:{line:1793,column:37}},"697":{start:{line:1794,column:8},end:{line:1794,column:35}},"698":{start:{line:1796,column:8},end:{line:1796,column:44}},"699":{start:{line:1797,column:8},end:{line:1797,column:47}},"700":{start:{line:1799,column:8},end:{line:1799,column:77}},"701":{start:{line:1800,column:8},end:{line:1800,column:87}},"702":{start:{line:1801,column:8},end:{line:1803,column:9}},"703":{start:{line:1802,column:12},end:{line:1802,column:81}},"704":{start:{line:1816,column:22},end:{line:1816,column:54}},"705":{start:{line:1817,column:25},end:{line:1817,column:63}},"706":{start:{line:1818,column:8},end:{line:1820,column:9}},"707":{start:{line:1819,column:12},end:{line:1819,column:59}},"708":{start:{line:1821,column:20},end:{line:1821,column:53}},"709":{start:{line:1824,column:23},end:{line:1824,column:75}},"710":{start:{line:1825,column:24},end:{line:1825,column:56}},"711":{start:{line:1826,column:8},end:{line:1828,column:9}},"712":{start:{line:1827,column:12},end:{line:1827,column:94}},"713":{start:{line:1830,column:8},end:{line:1833,column:9}},"714":{start:{line:1832,column:12},end:{line:1832,column:73}},"715":{start:{line:1834,column:19},end:{line:1834,column:51}},"716":{start:{line:1835,column:8},end:{line:1838,column:9}},"717":{start:{line:1837,column:12},end:{line:1837,column:74}},"718":{start:{line:1839,column:8},end:{line:1841,column:9}},"719":{start:{line:1840,column:12},end:{line:1840,column:81}},"720":{start:{line:1843,column:8},end:{line:1843,column:40}},"721":{start:{line:1844,column:8},end:{line:1846,column:9}},"722":{start:{line:1845,column:12},end:{line:1845,column:75}},"723":{start:{line:1848,column:8},end:{line:1848,column:78}},"724":{start:{line:1850,column:8},end:{line:1850,column:50}},"725":{start:{line:1858,column:22},end:{line:1858,column:54}},"726":{start:{line:1859,column:24},end:{line:1859,column:55}},"727":{start:{line:1860,column:8},end:{line:1862,column:9}},"728":{start:{line:1861,column:12},end:{line:1861,column:83}},"729":{start:{line:1863,column:18},end:{line:1863,column:70}},"730":{start:{line:1864,column:20},end:{line:1869,column:9}},"731":{start:{line:1870,column:28},end:{line:1870,column:62}},"732":{start:{line:1871,column:8},end:{line:1871,column:50}},"733":{start:{line:1872,column:8},end:{line:1872,column:20}},"734":{start:{line:1878,column:22},end:{line:1878,column:54}},"735":{start:{line:1880,column:27},end:{line:1880,column:60}},"736":{start:{line:1881,column:8},end:{line:1883,column:9}},"737":{start:{line:1882,column:12},end:{line:1882,column:58}},"738":{start:{line:1884,column:21},end:{line:1884,column:55}},"739":{start:{line:1885,column:21},end:{line:1885,column:36}},"740":{start:{line:1886,column:24},end:{line:1886,column:55}},"741":{start:{line:1887,column:8},end:{line:1889,column:9}},"742":{start:{line:1888,column:12},end:{line:1888,column:81}},"743":{start:{line:1890,column:19},end:{line:1890,column:51}},"744":{start:{line:1891,column:8},end:{line:1893,column:9}},"745":{start:{line:1892,column:12},end:{line:1892,column:67}},"746":{start:{line:1897,column:24},end:{line:1897,column:48}},"747":{start:{line:1898,column:18},end:{line:1898,column:83}},"748":{start:{line:1900,column:23},end:{line:1906,column:9}},"749":{start:{line:1908,column:21},end:{line:1908,column:25}},"750":{start:{line:1909,column:21},end:{line:1909,column:31}},"751":{start:{line:1914,column:24},end:{line:1930,column:9}},"752":{start:{line:1931,column:24},end:{line:1931,column:62}},"753":{start:{line:1932,column:8},end:{line:1932,column:53}},"754":{start:{line:1933,column:8},end:{line:1933,column:43}},"755":{start:{line:1934,column:8},end:{line:1934,column:82}},"756":{start:{line:1935,column:8},end:{line:1935,column:48}},"757":{start:{line:1936,column:8},end:{line:1936,column:47}},"758":{start:{line:1937,column:8},end:{line:1937,column:27}},"759":{start:{line:1950,column:8},end:{line:1950,column:46}},"760":{start:{line:1954,column:8},end:{line:1954,column:43}},"761":{start:{line:1959,column:22},end:{line:1959,column:36}},"762":{start:{line:1960,column:8},end:{line:1962,column:9}},"763":{start:{line:1961,column:12},end:{line:1961,column:100}},"764":{start:{line:1963,column:21},end:{line:1963,column:40}},"765":{start:{line:1965,column:8},end:{line:1967,column:9}},"766":{start:{line:1966,column:12},end:{line:1966,column:74}},"767":{start:{line:1968,column:8},end:{line:1968,column:38}},"768":{start:{line:1969,column:16},end:{line:1969,column:51}},"769":{start:{line:1970,column:19},end:{line:1970,column:26}},"770":{start:{line:1971,column:19},end:{line:1971,column:29}},"771":{start:{line:1972,column:8},end:{line:1976,column:9}},"772":{start:{line:1972,column:19},end:{line:1972,column:20}},"773":{start:{line:1973,column:12},end:{line:1975,column:13}},"774":{start:{line:1974,column:16},end:{line:1974,column:92}},"775":{start:{line:1978,column:8},end:{line:2035,column:9}},"776":{start:{line:1980,column:16},end:{line:1984,column:17}},"777":{start:{line:1981,column:20},end:{line:1981,column:108}},"778":{start:{line:1983,column:20},end:{line:1983,column:26}},"779":{start:{line:1986,column:16},end:{line:1990,column:17}},"780":{start:{line:1987,column:20},end:{line:1987,column:108}},"781":{start:{line:1989,column:20},end:{line:1989,column:26}},"782":{start:{line:1992,column:16},end:{line:1996,column:17}},"783":{start:{line:1993,column:20},end:{line:1993,column:108}},"784":{start:{line:1995,column:20},end:{line:1995,column:26}},"785":{start:{line:1998,column:16},end:{line:2002,column:17}},"786":{start:{line:1999,column:20},end:{line:1999,column:108}},"787":{start:{line:2001,column:20},end:{line:2001,column:26}},"788":{start:{line:2010,column:16},end:{line:2014,column:17}},"789":{start:{line:2011,column:20},end:{line:2011,column:108}},"790":{start:{line:2013,column:20},end:{line:2013,column:26}},"791":{start:{line:2028,column:16},end:{line:2032,column:17}},"792":{start:{line:2029,column:20},end:{line:2029,column:108}},"793":{start:{line:2031,column:20},end:{line:2031,column:26}},"794":{start:{line:2039,column:18},end:{line:2039,column:45}},"795":{start:{line:2040,column:8},end:{line:2040,column:20}},"796":{start:{line:2046,column:23},end:{line:2046,column:82}},"797":{start:{line:2047,column:20},end:{line:2047,column:21}},"798":{start:{line:2050,column:8},end:{line:2053,column:13}},"799":{start:{line:2051,column:12},end:{line:2051,column:52}},"800":{start:{line:2052,column:12},end:{line:2052,column:30}},"801":{start:{line:2054,column:8},end:{line:2058,column:9}},"802":{start:{line:2055,column:12},end:{line:2055,column:89}},"803":{start:{line:2056,column:14},end:{line:2058,column:9}},"804":{start:{line:2057,column:12},end:{line:2057,column:24}},"805":{start:{line:2059,column:8},end:{line:2059,column:23}},"806":{start:{line:2064,column:24},end:{line:2064,column:48}},"807":{start:{line:2066,column:19},end:{line:2066,column:84}},"808":{start:{line:2068,column:8},end:{line:2070,column:9}},"809":{start:{line:2069,column:12},end:{line:2069,column:44}},"810":{start:{line:2072,column:19},end:{line:2072,column:23}},"811":{start:{line:2073,column:24},end:{line:2089,column:9}},"812":{start:{line:2091,column:30},end:{line:2091,column:68}},"813":{start:{line:2092,column:8},end:{line:2092,column:54}},"814":{start:{line:2093,column:8},end:{line:2093,column:24}},"815":{start:{line:2098,column:22},end:{line:2098,column:54}},"816":{start:{line:2099,column:23},end:{line:2099,column:89}},"817":{start:{line:2101,column:23},end:{line:2101,column:25}},"818":{start:{line:2102,column:20},end:{line:2102,column:21}},"819":{start:{line:2105,column:8},end:{line:2115,column:9}},"820":{start:{line:2106,column:12},end:{line:2106,column:53}},"821":{start:{line:2107,column:12},end:{line:2107,column:32}},"822":{start:{line:2108,column:12},end:{line:2111,column:13}},"823":{start:{line:2109,column:16},end:{line:2109,column:42}},"824":{start:{line:2110,column:16},end:{line:2110,column:39}},"825":{start:{line:2112,column:12},end:{line:2114,column:13}},"826":{start:{line:2113,column:16},end:{line:2113,column:21}},"827":{start:{line:2117,column:8},end:{line:2120,column:9}},"828":{start:{line:2118,column:12},end:{line:2118,column:59}},"829":{start:{line:2121,column:16},end:{line:2121,column:73}},"830":{start:{line:2122,column:8},end:{line:2122,column:18}},"831":{start:{line:2140,column:27},end:{line:2140,column:44}},"832":{start:{line:2142,column:18},end:{line:2142,column:19}},"833":{start:{line:2143,column:8},end:{line:2151,column:9}},"834":{start:{line:2143,column:18},end:{line:2143,column:19}},"835":{start:{line:2144,column:12},end:{line:2147,column:13}},"836":{start:{line:2145,column:16},end:{line:2145,column:24}},"837":{start:{line:2146,column:16},end:{line:2146,column:30}},"838":{start:{line:2148,column:12},end:{line:2150,column:13}},"839":{start:{line:2149,column:16},end:{line:2149,column:79}},"840":{start:{line:2153,column:8},end:{line:2155,column:9}},"841":{start:{line:2154,column:12},end:{line:2154,column:45}},"842":{start:{line:2157,column:8},end:{line:2157,column:34}},"843":{start:{line:2158,column:8},end:{line:2160,column:9}},"844":{start:{line:2159,column:12},end:{line:2159,column:64}},"845":{start:{line:2162,column:8},end:{line:2162,column:19}},"846":{start:{line:2173,column:22},end:{line:2173,column:54}},"847":{start:{line:2174,column:25},end:{line:2174,column:57}},"848":{start:{line:2175,column:8},end:{line:2177,column:9}},"849":{start:{line:2176,column:12},end:{line:2176,column:93}},"850":{start:{line:2178,column:20},end:{line:2178,column:53}},"851":{start:{line:2180,column:8},end:{line:2182,column:9}},"852":{start:{line:2181,column:12},end:{line:2181,column:99}},"853":{start:{line:2187,column:8},end:{line:2189,column:9}},"854":{start:{line:2188,column:12},end:{line:2188,column:71}},"855":{start:{line:2191,column:22},end:{line:2191,column:41}},"856":{start:{line:2193,column:24},end:{line:2193,column:48}},"857":{start:{line:2194,column:19},end:{line:2194,column:93}},"858":{start:{line:2195,column:19},end:{line:2195,column:93}},"859":{start:{line:2198,column:8},end:{line:2198,column:19}},"860":{start:{line:2199,column:20},end:{line:2207,column:9}},"861":{start:{line:2208,column:8},end:{line:2208,column:20}},"862":{start:{line:2209,column:20},end:{line:2217,column:9}},"863":{start:{line:2219,column:8},end:{line:2219,column:45}},"864":{start:{line:2220,column:8},end:{line:2220,column:77}},"865":{start:{line:2221,column:8},end:{line:2223,column:9}},"866":{start:{line:2222,column:12},end:{line:2222,column:81}},"867":{start:{line:2225,column:8},end:{line:2225,column:23}},"868":{start:{line:2230,column:22},end:{line:2230,column:54}},"869":{start:{line:2231,column:24},end:{line:2231,column:55}},"870":{start:{line:2232,column:8},end:{line:2234,column:9}},"871":{start:{line:2233,column:12},end:{line:2233,column:91}},"872":{start:{line:2235,column:19},end:{line:2235,column:57}},"873":{start:{line:2237,column:8},end:{line:2239,column:9}},"874":{start:{line:2238,column:12},end:{line:2238,column:104}},"875":{start:{line:2240,column:8},end:{line:2242,column:9}},"876":{start:{line:2241,column:12},end:{line:2241,column:80}},"877":{start:{line:2244,column:22},end:{line:2244,column:40}},"878":{start:{line:2246,column:24},end:{line:2246,column:42}},"879":{start:{line:2247,column:19},end:{line:2247,column:88}},"880":{start:{line:2249,column:8},end:{line:2249,column:19}},"881":{start:{line:2250,column:8},end:{line:2250,column:27}},"882":{start:{line:2252,column:20},end:{line:2268,column:9}},"883":{start:{line:2270,column:8},end:{line:2297,column:9}},"884":{start:{line:2271,column:23},end:{line:2271,column:88}},"885":{start:{line:2272,column:12},end:{line:2272,column:24}},"886":{start:{line:2273,column:12},end:{line:2273,column:31}},"887":{start:{line:2274,column:24},end:{line:2290,column:13}},"888":{start:{line:2291,column:12},end:{line:2291,column:48}},"889":{start:{line:2292,column:12},end:{line:2292,column:79}},"890":{start:{line:2293,column:12},end:{line:2293,column:79}},"891":{start:{line:2295,column:12},end:{line:2295,column:48}},"892":{start:{line:2296,column:12},end:{line:2296,column:79}},"893":{start:{line:2298,column:8},end:{line:2298,column:23}},"894":{start:{line:2304,column:8},end:{line:2304,column:217}},"895":{start:{line:2304,column:39},end:{line:2304,column:215}},"896":{start:{line:2305,column:8},end:{line:2305,column:120}},"897":{start:{line:2305,column:39},end:{line:2305,column:118}},"898":{start:{line:2306,column:8},end:{line:2306,column:115}},"899":{start:{line:2306,column:39},end:{line:2306,column:113}},"900":{start:{line:2307,column:8},end:{line:2307,column:25}},"901":{start:{line:2313,column:8},end:{line:2313,column:217}},"902":{start:{line:2313,column:39},end:{line:2313,column:215}},"903":{start:{line:2314,column:8},end:{line:2314,column:120}},"904":{start:{line:2314,column:39},end:{line:2314,column:118}},"905":{start:{line:2315,column:8},end:{line:2315,column:115}},"906":{start:{line:2315,column:39},end:{line:2315,column:113}},"907":{start:{line:2316,column:8},end:{line:2316,column:25}},"908":{start:{line:2326,column:8},end:{line:2326,column:49}},"909":{start:{line:2327,column:19},end:{line:2327,column:51}},"910":{start:{line:2328,column:8},end:{line:2328,column:29}},"911":{start:{line:2330,column:8},end:{line:2330,column:30}},"912":{start:{line:2333,column:27},end:{line:2333,column:68}},"913":{start:{line:2334,column:8},end:{line:2337,column:9}},"914":{start:{line:2335,column:12},end:{line:2335,column:41}},"915":{start:{line:2336,column:12},end:{line:2336,column:37}},"916":{start:{line:2339,column:8},end:{line:2339,column:29}},"917":{start:{line:2340,column:22},end:{line:2340,column:59}},"918":{start:{line:2344,column:8},end:{line:2344,column:29}},"919":{start:{line:2345,column:21},end:{line:2345,column:23}},"920":{start:{line:2346,column:23},end:{line:2346,column:25}},"921":{start:{line:2347,column:24},end:{line:2347,column:26}},"922":{start:{line:2348,column:33},end:{line:2348,column:35}},"923":{start:{line:2349,column:33},end:{line:2349,column:35}},"924":{start:{line:2350,column:33},end:{line:2350,column:35}},"925":{start:{line:2351,column:18},end:{line:2351,column:19}},"926":{start:{line:2352,column:28},end:{line:2352,column:30}},"927":{start:{line:2353,column:19},end:{line:2353,column:20}},"928":{start:{line:2357,column:26},end:{line:2357,column:50}},"929":{start:{line:2359,column:8},end:{line:2359,column:29}},"930":{start:{line:2360,column:28},end:{line:2376,column:9}},"931":{start:{line:2378,column:17},end:{line:2378,column:29}},"932":{start:{line:2379,column:17},end:{line:2379,column:29}},"933":{start:{line:2381,column:8},end:{line:2381,column:29}},"934":{start:{line:2388,column:27},end:{line:2388,column:29}},"935":{start:{line:2390,column:8},end:{line:2502,column:9}},"936":{start:{line:2390,column:19},end:{line:2390,column:20}},"937":{start:{line:2391,column:24},end:{line:2391,column:25}},"938":{start:{line:2392,column:12},end:{line:2392,column:48}},"939":{start:{line:2393,column:12},end:{line:2393,column:38}},"940":{start:{line:2394,column:28},end:{line:2394,column:48}},"941":{start:{line:2395,column:12},end:{line:2395,column:36}},"942":{start:{line:2396,column:35},end:{line:2396,column:61}},"943":{start:{line:2397,column:12},end:{line:2397,column:44}},"944":{start:{line:2398,column:12},end:{line:2401,column:13}},"945":{start:{line:2399,column:16},end:{line:2399,column:39}},"946":{start:{line:2400,column:16},end:{line:2400,column:41}},"947":{start:{line:2402,column:12},end:{line:2402,column:68}},"948":{start:{line:2403,column:12},end:{line:2407,column:13}},"949":{start:{line:2404,column:16},end:{line:2404,column:60}},"950":{start:{line:2406,column:16},end:{line:2406,column:63}},"951":{start:{line:2412,column:27},end:{line:2412,column:63}},"952":{start:{line:2413,column:12},end:{line:2415,column:13}},"953":{start:{line:2414,column:16},end:{line:2414,column:56}},"954":{start:{line:2422,column:12},end:{line:2422,column:52}},"955":{start:{line:2424,column:31},end:{line:2424,column:42}},"956":{start:{line:2426,column:12},end:{line:2426,column:41}},"957":{start:{line:2427,column:12},end:{line:2427,column:39}},"958":{start:{line:2428,column:12},end:{line:2428,column:43}},"959":{start:{line:2429,column:12},end:{line:2429,column:62}},"960":{start:{line:2430,column:33},end:{line:2430,column:70}},"961":{start:{line:2431,column:12},end:{line:2431,column:33}},"962":{start:{line:2432,column:12},end:{line:2432,column:59}},"963":{start:{line:2436,column:12},end:{line:2455,column:13}},"964":{start:{line:2437,column:16},end:{line:2437,column:51}},"965":{start:{line:2438,column:16},end:{line:2438,column:47}},"966":{start:{line:2439,column:16},end:{line:2439,column:39}},"967":{start:{line:2440,column:16},end:{line:2440,column:53}},"968":{start:{line:2441,column:16},end:{line:2441,column:40}},"969":{start:{line:2442,column:16},end:{line:2442,column:56}},"970":{start:{line:2443,column:16},end:{line:2443,column:77}},"971":{start:{line:2444,column:16},end:{line:2444,column:62}},"972":{start:{line:2448,column:16},end:{line:2448,column:53}},"973":{start:{line:2449,column:16},end:{line:2449,column:41}},"974":{start:{line:2450,column:16},end:{line:2450,column:39}},"975":{start:{line:2451,column:16},end:{line:2451,column:84}},"976":{start:{line:2452,column:16},end:{line:2452,column:87}},"977":{start:{line:2453,column:16},end:{line:2453,column:108}},"978":{start:{line:2454,column:16},end:{line:2454,column:93}},"979":{start:{line:2457,column:12},end:{line:2457,column:58}},"980":{start:{line:2464,column:12},end:{line:2464,column:30}},"981":{start:{line:2465,column:12},end:{line:2465,column:30}},"982":{start:{line:2466,column:28},end:{line:2466,column:36}},"983":{start:{line:2467,column:12},end:{line:2497,column:13}},"984":{start:{line:2468,column:16},end:{line:2468,column:39}},"985":{start:{line:2469,column:16},end:{line:2469,column:52}},"986":{start:{line:2470,column:26},end:{line:2470,column:77}},"987":{start:{line:2470,column:51},end:{line:2470,column:76}},"988":{start:{line:2471,column:16},end:{line:2471,column:38}},"989":{start:{line:2474,column:16},end:{line:2474,column:39}},"990":{start:{line:2475,column:26},end:{line:2475,column:77}},"991":{start:{line:2475,column:51},end:{line:2475,column:76}},"992":{start:{line:2476,column:16},end:{line:2476,column:34}},"993":{start:{line:2477,column:16},end:{line:2477,column:47}},"994":{start:{line:2478,column:16},end:{line:2478,column:36}},"995":{start:{line:2479,column:16},end:{line:2479,column:34}},"996":{start:{line:2480,column:16},end:{line:2482,column:17}},"997":{start:{line:2481,column:20},end:{line:2481,column:44}},"998":{start:{line:2483,column:16},end:{line:2483,column:37}},"999":{start:{line:2484,column:16},end:{line:2484,column:33}},"1000":{start:{line:2485,column:16},end:{line:2485,column:63}},"1001":{start:{line:2486,column:16},end:{line:2486,column:35}},"1002":{start:{line:2487,column:16},end:{line:2487,column:70}},"1003":{start:{line:2488,column:16},end:{line:2488,column:44}},"1004":{start:{line:2493,column:16},end:{line:2493,column:32}},"1005":{start:{line:2494,column:16},end:{line:2494,column:53}},"1006":{start:{line:2495,column:16},end:{line:2495,column:37}},"1007":{start:{line:2498,column:12},end:{line:2498,column:54}},"1008":{start:{line:2499,column:12},end:{line:2499,column:39}},"1009":{start:{line:2504,column:8},end:{line:2504,column:41}},"1010":{start:{line:2505,column:8},end:{line:2505,column:39}},"1011":{start:{line:2506,column:8},end:{line:2529,column:9}},"1012":{start:{line:2506,column:19},end:{line:2506,column:20}},"1013":{start:{line:2507,column:12},end:{line:2507,column:59}},"1014":{start:{line:2511,column:12},end:{line:2511,column:125}},"1015":{start:{line:2512,column:12},end:{line:2512,column:50}},"1016":{start:{line:2514,column:12},end:{line:2514,column:48}},"1017":{start:{line:2515,column:12},end:{line:2515,column:48}},"1018":{start:{line:2520,column:39},end:{line:2520,column:83}},"1019":{start:{line:2521,column:12},end:{line:2521,column:77}},"1020":{start:{line:2537,column:8},end:{line:2537,column:26}},"1021":{start:{line:2538,column:8},end:{line:2538,column:26}},"1022":{start:{line:2541,column:24},end:{line:2541,column:56}},"1023":{start:{line:2543,column:8},end:{line:2543,column:58}},"1024":{start:{line:2544,column:32},end:{line:2553,column:9}},"1025":{start:{line:2554,column:25},end:{line:2554,column:73}},"1026":{start:{line:2555,column:28},end:{line:2555,column:40}},"1027":{start:{line:2556,column:8},end:{line:2556,column:39}},"1028":{start:{line:2557,column:8},end:{line:2557,column:36}},"1029":{start:{line:2558,column:8},end:{line:2558,column:29}},"1030":{start:{line:2559,column:8},end:{line:2559,column:30}},"1031":{start:{line:2560,column:8},end:{line:2593,column:9}},"1032":{start:{line:2561,column:12},end:{line:2561,column:33}},"1033":{start:{line:2562,column:36},end:{line:2571,column:13}},"1034":{start:{line:2572,column:12},end:{line:2572,column:46}},"1035":{start:{line:2573,column:12},end:{line:2573,column:44}},"1036":{start:{line:2574,column:12},end:{line:2574,column:46}},"1037":{start:{line:2575,column:12},end:{line:2575,column:44}},"1038":{start:{line:2576,column:12},end:{line:2576,column:51}},"1039":{start:{line:2577,column:12},end:{line:2577,column:52}},"1040":{start:{line:2578,column:12},end:{line:2578,column:56}},"1041":{start:{line:2579,column:12},end:{line:2579,column:42}},"1042":{start:{line:2580,column:12},end:{line:2580,column:39}},"1043":{start:{line:2581,column:24},end:{line:2581,column:70}},"1044":{start:{line:2581,column:49},end:{line:2581,column:69}},"1045":{start:{line:2582,column:23},end:{line:2582,column:44}},"1046":{start:{line:2583,column:12},end:{line:2583,column:33}},"1047":{start:{line:2584,column:12},end:{line:2584,column:33}},"1048":{start:{line:2585,column:29},end:{line:2585,column:77}},"1049":{start:{line:2586,column:12},end:{line:2586,column:74}},"1050":{start:{line:2587,column:12},end:{line:2587,column:73}},"1051":{start:{line:2590,column:12},end:{line:2590,column:46}},"1052":{start:{line:2591,column:12},end:{line:2591,column:44}},"1053":{start:{line:2592,column:12},end:{line:2592,column:73}},"1054":{start:{line:2595,column:8},end:{line:2597,column:9}},"1055":{start:{line:2596,column:12},end:{line:2596,column:36}},"1056":{start:{line:2598,column:8},end:{line:2598,column:60}},"1057":{start:{line:2599,column:8},end:{line:2599,column:60}},"1058":{start:{line:2601,column:8},end:{line:2601,column:29}},"1059":{start:{line:2605,column:8},end:{line:2605,column:24}},"1060":{start:{line:2609,column:8},end:{line:2609,column:45}},"1061":{start:{line:2610,column:19},end:{line:2610,column:51}},"1062":{start:{line:2611,column:25},end:{line:2611,column:92}},"1063":{start:{line:2612,column:16},end:{line:2612,column:35}},"1064":{start:{line:2613,column:8},end:{line:2613,column:24}},"1065":{start:{line:2614,column:27},end:{line:2614,column:55}},"1066":{start:{line:2615,column:8},end:{line:2617,column:9}},"1067":{start:{line:2616,column:12},end:{line:2616,column:72}},"1068":{start:{line:2618,column:8},end:{line:2618,column:42}},"1069":{start:{line:2619,column:22},end:{line:2619,column:59}},"1070":{start:{line:2625,column:8},end:{line:2625,column:42}},"1071":{start:{line:2626,column:8},end:{line:2626,column:30}},"1072":{start:{line:2627,column:8},end:{line:2629,column:9}},"1073":{start:{line:2628,column:12},end:{line:2628,column:56}},"1074":{start:{line:2630,column:8},end:{line:2630,column:41}},"1075":{start:{line:2631,column:24},end:{line:2631,column:40}},"1076":{start:{line:2634,column:28},end:{line:2634,column:30}},"1077":{start:{line:2635,column:29},end:{line:2635,column:31}},"1078":{start:{line:2636,column:25},end:{line:2636,column:27}},"1079":{start:{line:2637,column:23},end:{line:2637,column:25}},"1080":{start:{line:2638,column:18},end:{line:2638,column:19}},"1081":{start:{line:2644,column:22},end:{line:2644,column:114}},"1082":{start:{line:2645,column:21},end:{line:2645,column:95}},"1083":{start:{line:2646,column:8},end:{line:2646,column:31}},"1084":{start:{line:2647,column:8},end:{line:2647,column:30}},"1085":{start:{line:2650,column:8},end:{line:2672,column:9}},"1086":{start:{line:2651,column:12},end:{line:2651,column:42}},"1087":{start:{line:2652,column:12},end:{line:2652,column:57}},"1088":{start:{line:2654,column:12},end:{line:2654,column:39}},"1089":{start:{line:2655,column:12},end:{line:2655,column:41}},"1090":{start:{line:2656,column:12},end:{line:2656,column:36}},"1091":{start:{line:2657,column:12},end:{line:2661,column:13}},"1092":{start:{line:2658,column:16},end:{line:2658,column:44}},"1093":{start:{line:2659,column:16},end:{line:2659,column:46}},"1094":{start:{line:2660,column:16},end:{line:2660,column:29}},"1095":{start:{line:2662,column:12},end:{line:2671,column:13}},"1096":{start:{line:2663,column:16},end:{line:2663,column:58}},"1097":{start:{line:2664,column:16},end:{line:2664,column:52}},"1098":{start:{line:2665,column:16},end:{line:2665,column:24}},"1099":{start:{line:2667,column:16},end:{line:2667,column:51}},"1100":{start:{line:2668,column:16},end:{line:2668,column:48}},"1101":{start:{line:2669,column:16},end:{line:2669,column:47}},"1102":{start:{line:2670,column:16},end:{line:2670,column:21}},"1103":{start:{line:2673,column:8},end:{line:2673,column:34}},"1104":{start:{line:2675,column:8},end:{line:2677,column:9}},"1105":{start:{line:2676,column:12},end:{line:2676,column:58}},"1106":{start:{line:2678,column:8},end:{line:2678,column:37}},"1107":{start:{line:2679,column:8},end:{line:2679,column:35}},"1108":{start:{line:2680,column:8},end:{line:2680,column:37}},"1109":{start:{line:2681,column:8},end:{line:2681,column:35}},"1110":{start:{line:2683,column:22},end:{line:2683,column:46}},"1111":{start:{line:2684,column:19},end:{line:2684,column:23}},"1112":{start:{line:2685,column:8},end:{line:2700,column:9}},"1113":{start:{line:2687,column:12},end:{line:2687,column:44}},"1114":{start:{line:2688,column:12},end:{line:2688,column:115}},"1115":{start:{line:2689,column:12},end:{line:2689,column:35}},"1116":{start:{line:2690,column:12},end:{line:2690,column:42}},"1117":{start:{line:2691,column:12},end:{line:2691,column:52}},"1118":{start:{line:2693,column:12},end:{line:2693,column:35}},"1119":{start:{line:2694,column:12},end:{line:2694,column:34}},"1120":{start:{line:2695,column:12},end:{line:2695,column:42}},"1121":{start:{line:2696,column:12},end:{line:2696,column:66}},"1122":{start:{line:2697,column:12},end:{line:2697,column:125}},"1123":{start:{line:2698,column:28},end:{line:2698,column:66}},"1124":{start:{line:2699,column:12},end:{line:2699,column:61}},"1125":{start:{line:2702,column:8},end:{line:2702,column:48}},"1126":{start:{line:2703,column:25},end:{line:2703,column:34}},"1127":{start:{line:2704,column:8},end:{line:2704,column:41}},"1128":{start:{line:2705,column:8},end:{line:2705,column:68}},"1129":{start:{line:2706,column:8},end:{line:2706,column:70}},"1130":{start:{line:2708,column:8},end:{line:2708,column:111}},"1131":{start:{line:2710,column:32},end:{line:2710,column:73}},"1132":{start:{line:2711,column:8},end:{line:2711,column:69}},"1133":{start:{line:2712,column:8},end:{line:2712,column:27}},"1134":{start:{line:2719,column:8},end:{line:2719,column:49}},"1135":{start:{line:2721,column:36},end:{line:2721,column:77}},"1136":{start:{line:2722,column:8},end:{line:2724,column:9}},"1137":{start:{line:2723,column:12},end:{line:2723,column:36}},"1138":{start:{line:2725,column:31},end:{line:2725,column:77}},"1139":{start:{line:2726,column:20},end:{line:2726,column:45}},"1140":{start:{line:2727,column:8},end:{line:2727,column:42}},"1141":{start:{line:2729,column:19},end:{line:2729,column:51}},"1142":{start:{line:2730,column:21},end:{line:2730,column:23}},"1143":{start:{line:2732,column:23},end:{line:2732,column:25}},"1144":{start:{line:2733,column:24},end:{line:2733,column:26}},"1145":{start:{line:2734,column:33},end:{line:2734,column:35}},"1146":{start:{line:2735,column:33},end:{line:2735,column:35}},"1147":{start:{line:2736,column:18},end:{line:2736,column:19}},"1148":{start:{line:2737,column:28},end:{line:2737,column:30}},"1149":{start:{line:2738,column:19},end:{line:2738,column:20}},"1150":{start:{line:2742,column:26},end:{line:2742,column:50}},"1151":{start:{line:2744,column:37},end:{line:2753,column:9}},"1152":{start:{line:2754,column:17},end:{line:2754,column:29}},"1153":{start:{line:2755,column:17},end:{line:2755,column:29}},"1154":{start:{line:2761,column:27},end:{line:2761,column:29}},"1155":{start:{line:2763,column:8},end:{line:2861,column:9}},"1156":{start:{line:2763,column:19},end:{line:2763,column:20}},"1157":{start:{line:2764,column:12},end:{line:2764,column:44}},"1158":{start:{line:2765,column:12},end:{line:2765,column:37}},"1159":{start:{line:2768,column:24},end:{line:2768,column:25}},"1160":{start:{line:2769,column:23},end:{line:2769,column:43}},"1161":{start:{line:2770,column:12},end:{line:2770,column:31}},"1162":{start:{line:2771,column:35},end:{line:2771,column:61}},"1163":{start:{line:2772,column:12},end:{line:2772,column:43}},"1164":{start:{line:2773,column:12},end:{line:2776,column:13}},"1165":{start:{line:2774,column:16},end:{line:2774,column:45}},"1166":{start:{line:2775,column:16},end:{line:2775,column:40}},"1167":{start:{line:2781,column:27},end:{line:2781,column:58}},"1168":{start:{line:2784,column:12},end:{line:2784,column:68}},"1169":{start:{line:2785,column:12},end:{line:2789,column:13}},"1170":{start:{line:2786,column:16},end:{line:2786,column:41}},"1171":{start:{line:2788,column:16},end:{line:2788,column:44}},"1172":{start:{line:2793,column:12},end:{line:2793,column:52}},"1173":{start:{line:2794,column:26},end:{line:2794,column:37}},"1174":{start:{line:2795,column:12},end:{line:2795,column:37}},"1175":{start:{line:2796,column:12},end:{line:2796,column:35}},"1176":{start:{line:2797,column:12},end:{line:2797,column:33}},"1177":{start:{line:2798,column:12},end:{line:2798,column:55}},"1178":{start:{line:2799,column:12},end:{line:2815,column:13}},"1179":{start:{line:2800,column:16},end:{line:2800,column:51}},"1180":{start:{line:2801,column:16},end:{line:2801,column:43}},"1181":{start:{line:2802,column:16},end:{line:2802,column:39}},"1182":{start:{line:2803,column:16},end:{line:2803,column:72}},"1183":{start:{line:2804,column:16},end:{line:2804,column:56}},"1184":{start:{line:2805,column:16},end:{line:2805,column:81}},"1185":{start:{line:2809,column:16},end:{line:2809,column:53}},"1186":{start:{line:2810,column:16},end:{line:2810,column:41}},"1187":{start:{line:2811,column:16},end:{line:2811,column:39}},"1188":{start:{line:2812,column:16},end:{line:2812,column:98}},"1189":{start:{line:2813,column:16},end:{line:2813,column:82}},"1190":{start:{line:2814,column:16},end:{line:2814,column:107}},"1191":{start:{line:2818,column:12},end:{line:2818,column:39}},"1192":{start:{line:2824,column:12},end:{line:2824,column:30}},"1193":{start:{line:2825,column:12},end:{line:2825,column:30}},"1194":{start:{line:2826,column:28},end:{line:2826,column:36}},"1195":{start:{line:2827,column:12},end:{line:2859,column:13}},"1196":{start:{line:2828,column:16},end:{line:2828,column:52}},"1197":{start:{line:2829,column:26},end:{line:2829,column:77}},"1198":{start:{line:2829,column:51},end:{line:2829,column:76}},"1199":{start:{line:2830,column:16},end:{line:2830,column:38}},"1200":{start:{line:2833,column:26},end:{line:2833,column:77}},"1201":{start:{line:2833,column:51},end:{line:2833,column:76}},"1202":{start:{line:2834,column:16},end:{line:2837,column:17}},"1203":{start:{line:2835,column:20},end:{line:2835,column:49}},"1204":{start:{line:2836,column:20},end:{line:2836,column:44}},"1205":{start:{line:2839,column:16},end:{line:2839,column:37}},"1206":{start:{line:2840,column:16},end:{line:2840,column:40}},"1207":{start:{line:2841,column:16},end:{line:2841,column:38}},"1208":{start:{line:2842,column:16},end:{line:2842,column:33}},"1209":{start:{line:2843,column:16},end:{line:2843,column:44}},"1210":{start:{line:2844,column:16},end:{line:2844,column:67}},"1211":{start:{line:2845,column:16},end:{line:2845,column:39}},"1212":{start:{line:2846,column:16},end:{line:2846,column:74}},"1213":{start:{line:2851,column:16},end:{line:2851,column:32}},"1214":{start:{line:2852,column:16},end:{line:2852,column:53}},"1215":{start:{line:2853,column:16},end:{line:2853,column:37}},"1216":{start:{line:2860,column:12},end:{line:2860,column:39}},"1217":{start:{line:2863,column:8},end:{line:2891,column:9}},"1218":{start:{line:2863,column:19},end:{line:2863,column:20}},"1219":{start:{line:2864,column:12},end:{line:2864,column:59}},"1220":{start:{line:2869,column:12},end:{line:2869,column:152}},"1221":{start:{line:2870,column:12},end:{line:2870,column:59}},"1222":{start:{line:2872,column:12},end:{line:2872,column:57}},"1223":{start:{line:2877,column:12},end:{line:2877,column:56}},"1224":{start:{line:2881,column:48},end:{line:2881,column:101}},"1225":{start:{line:2882,column:12},end:{line:2882,column:95}},"1226":{start:{line:2897,column:8},end:{line:2897,column:50}},"1227":{start:{line:2899,column:8},end:{line:2899,column:26}},"1228":{start:{line:2900,column:8},end:{line:2900,column:26}},"1229":{start:{line:2901,column:24},end:{line:2901,column:56}},"1230":{start:{line:2903,column:23},end:{line:2919,column:9}},"1231":{start:{line:2920,column:25},end:{line:2920,column:64}},"1232":{start:{line:2921,column:28},end:{line:2921,column:40}},"1233":{start:{line:2922,column:8},end:{line:2922,column:39}},"1234":{start:{line:2923,column:8},end:{line:2923,column:37}},"1235":{start:{line:2924,column:8},end:{line:2924,column:29}},"1236":{start:{line:2926,column:8},end:{line:2969,column:9}},"1237":{start:{line:2927,column:12},end:{line:2927,column:33}},"1238":{start:{line:2929,column:27},end:{line:2945,column:13}},"1239":{start:{line:2946,column:12},end:{line:2946,column:38}},"1240":{start:{line:2947,column:12},end:{line:2947,column:35}},"1241":{start:{line:2948,column:12},end:{line:2948,column:37}},"1242":{start:{line:2949,column:12},end:{line:2949,column:35}},"1243":{start:{line:2950,column:12},end:{line:2950,column:42}},"1244":{start:{line:2951,column:12},end:{line:2951,column:55}},"1245":{start:{line:2952,column:12},end:{line:2952,column:59}},"1246":{start:{line:2953,column:12},end:{line:2953,column:45}},"1247":{start:{line:2954,column:12},end:{line:2954,column:39}},"1248":{start:{line:2955,column:24},end:{line:2955,column:70}},"1249":{start:{line:2955,column:49},end:{line:2955,column:69}},"1250":{start:{line:2956,column:23},end:{line:2956,column:44}},"1251":{start:{line:2957,column:12},end:{line:2957,column:33}},"1252":{start:{line:2958,column:12},end:{line:2958,column:33}},"1253":{start:{line:2960,column:29},end:{line:2960,column:68}},"1254":{start:{line:2961,column:12},end:{line:2961,column:65}},"1255":{start:{line:2962,column:12},end:{line:2962,column:64}},"1256":{start:{line:2964,column:12},end:{line:2964,column:37}},"1257":{start:{line:2965,column:12},end:{line:2965,column:35}},"1258":{start:{line:2968,column:12},end:{line:2968,column:64}},"1259":{start:{line:2971,column:8},end:{line:2973,column:9}},"1260":{start:{line:2972,column:12},end:{line:2972,column:36}},"1261":{start:{line:2974,column:24},end:{line:2974,column:62}},"1262":{start:{line:2975,column:8},end:{line:2975,column:57}},"1263":{start:{line:2976,column:8},end:{line:2976,column:24}},"1264":{start:{line:2981,column:8},end:{line:2981,column:29}},"1265":{start:{line:2983,column:8},end:{line:2983,column:41}},"1266":{start:{line:2984,column:8},end:{line:2984,column:32}},"1267":{start:{line:2985,column:8},end:{line:2985,column:34}},"1268":{start:{line:2990,column:22},end:{line:2990,column:54}},"1269":{start:{line:2994,column:29},end:{line:2994,column:65}},"1270":{start:{line:2996,column:8},end:{line:3000,column:9}},"1271":{start:{line:2997,column:12},end:{line:2997,column:30}},"1272":{start:{line:2999,column:12},end:{line:2999,column:60}},"1273":{start:{line:3003,column:18},end:{line:3003,column:90}},"1274":{start:{line:3004,column:8},end:{line:3004,column:35}},"1275":{start:{line:3005,column:25},end:{line:3005,column:55}},"1276":{start:{line:3007,column:8},end:{line:3007,column:29}},"1277":{start:{line:3009,column:8},end:{line:3011,column:9}},"1278":{start:{line:3010,column:12},end:{line:3010,column:93}},"1279":{start:{line:3012,column:21},end:{line:3012,column:54}},"1280":{start:{line:3013,column:8},end:{line:3015,column:9}},"1281":{start:{line:3014,column:12},end:{line:3014,column:111}},"1282":{start:{line:3016,column:24},end:{line:3016,column:48}},"1283":{start:{line:3017,column:22},end:{line:3017,column:79}},"1284":{start:{line:3020,column:20},end:{line:3020,column:32}},"1285":{start:{line:3022,column:25},end:{line:3035,column:9}},"1286":{start:{line:3040,column:17},end:{line:3040,column:29}},"1287":{start:{line:3041,column:17},end:{line:3041,column:29}},"1288":{start:{line:3043,column:8},end:{line:3043,column:29}},"1289":{start:{line:3045,column:8},end:{line:3068,column:9}},"1290":{start:{line:3046,column:12},end:{line:3046,column:35}},"1291":{start:{line:3047,column:22},end:{line:3047,column:64}},"1292":{start:{line:3048,column:24},end:{line:3061,column:13}},"1293":{start:{line:3062,column:12},end:{line:3062,column:37}},"1294":{start:{line:3064,column:23},end:{line:3064,column:69}},"1295":{start:{line:3065,column:12},end:{line:3065,column:42}},"1296":{start:{line:3066,column:12},end:{line:3066,column:89}},"1297":{start:{line:3067,column:12},end:{line:3067,column:28}},"1298":{start:{line:3070,column:8},end:{line:3070,column:29}},"1299":{start:{line:3072,column:25},end:{line:3072,column:37}},"1300":{start:{line:3074,column:30},end:{line:3074,column:32}},"1301":{start:{line:3075,column:28},end:{line:3075,column:30}},"1302":{start:{line:3076,column:20},end:{line:3076,column:41}},"1303":{start:{line:3077,column:20},end:{line:3077,column:21}},"1304":{start:{line:3078,column:24},end:{line:3078,column:25}},"1305":{start:{line:3079,column:26},end:{line:3079,column:38}},"1306":{start:{line:3080,column:26},end:{line:3080,column:27}},"1307":{start:{line:3081,column:21},end:{line:3081,column:22}},"1308":{start:{line:3082,column:8},end:{line:3082,column:29}},"1309":{start:{line:3085,column:8},end:{line:3121,column:9}},"1310":{start:{line:3086,column:12},end:{line:3086,column:47}},"1311":{start:{line:3087,column:12},end:{line:3087,column:35}},"1312":{start:{line:3088,column:12},end:{line:3120,column:13}},"1313":{start:{line:3089,column:16},end:{line:3089,column:39}},"1314":{start:{line:3090,column:16},end:{line:3090,column:45}},"1315":{start:{line:3091,column:16},end:{line:3091,column:45}},"1316":{start:{line:3092,column:16},end:{line:3092,column:69}},"1317":{start:{line:3093,column:16},end:{line:3093,column:69}},"1318":{start:{line:3095,column:16},end:{line:3117,column:17}},"1319":{start:{line:3096,column:20},end:{line:3096,column:47}},"1320":{start:{line:3098,column:20},end:{line:3098,column:51}},"1321":{start:{line:3099,column:20},end:{line:3099,column:39}},"1322":{start:{line:3100,column:20},end:{line:3100,column:43}},"1323":{start:{line:3101,column:20},end:{line:3101,column:46}},"1324":{start:{line:3102,column:20},end:{line:3102,column:56}},"1325":{start:{line:3103,column:20},end:{line:3103,column:74}},"1326":{start:{line:3104,column:20},end:{line:3104,column:42}},"1327":{start:{line:3106,column:20},end:{line:3106,column:47}},"1328":{start:{line:3109,column:20},end:{line:3109,column:40}},"1329":{start:{line:3110,column:20},end:{line:3110,column:42}},"1330":{start:{line:3111,column:20},end:{line:3111,column:46}},"1331":{start:{line:3112,column:20},end:{line:3112,column:56}},"1332":{start:{line:3113,column:20},end:{line:3113,column:46}},"1333":{start:{line:3114,column:20},end:{line:3114,column:74}},"1334":{start:{line:3115,column:20},end:{line:3115,column:37}},"1335":{start:{line:3119,column:16},end:{line:3119,column:24}},"1336":{start:{line:3122,column:8},end:{line:3122,column:29}},"1337":{start:{line:3125,column:8},end:{line:3125,column:29}},"1338":{start:{line:3126,column:8},end:{line:3126,column:42}},"1339":{start:{line:3128,column:8},end:{line:3156,column:9}},"1340":{start:{line:3129,column:12},end:{line:3129,column:35}},"1341":{start:{line:3132,column:12},end:{line:3132,column:42}},"1342":{start:{line:3133,column:12},end:{line:3133,column:40}},"1343":{start:{line:3134,column:12},end:{line:3134,column:45}},"1344":{start:{line:3135,column:12},end:{line:3135,column:61}},"1345":{start:{line:3137,column:14},end:{line:3156,column:9}},"1346":{start:{line:3138,column:12},end:{line:3138,column:35}},"1347":{start:{line:3141,column:12},end:{line:3141,column:42}},"1348":{start:{line:3142,column:12},end:{line:3142,column:41}},"1349":{start:{line:3143,column:12},end:{line:3143,column:44}},"1350":{start:{line:3144,column:12},end:{line:3144,column:48}},"1351":{start:{line:3145,column:12},end:{line:3145,column:32}},"1352":{start:{line:3149,column:12},end:{line:3149,column:35}},"1353":{start:{line:3152,column:12},end:{line:3152,column:61}},"1354":{start:{line:3153,column:12},end:{line:3153,column:39}},"1355":{start:{line:3154,column:12},end:{line:3154,column:41}},"1356":{start:{line:3155,column:12},end:{line:3155,column:44}},"1357":{start:{line:3157,column:8},end:{line:3157,column:40}},"1358":{start:{line:3161,column:22},end:{line:3161,column:68}},"1359":{start:{line:3162,column:22},end:{line:3162,column:68}},"1360":{start:{line:3163,column:8},end:{line:3163,column:36}},"1361":{start:{line:3164,column:8},end:{line:3164,column:29}},"1362":{start:{line:3167,column:8},end:{line:3167,column:28}},"1363":{start:{line:3168,column:8},end:{line:3168,column:36}},"1364":{start:{line:3169,column:8},end:{line:3169,column:33}},"1365":{start:{line:3170,column:8},end:{line:3187,column:9}},"1366":{start:{line:3172,column:29},end:{line:3175,column:13}},"1367":{start:{line:3183,column:12},end:{line:3183,column:102}},"1368":{start:{line:3188,column:8},end:{line:3188,column:85}},"1369":{start:{line:3189,column:8},end:{line:3189,column:44}},"1370":{start:{line:3190,column:8},end:{line:3190,column:74}},"1371":{start:{line:3192,column:8},end:{line:3192,column:29}},"1372":{start:{line:3193,column:8},end:{line:3193,column:24}},"1373":{start:{line:3201,column:8},end:{line:3201,column:29}},"1374":{start:{line:3202,column:8},end:{line:3202,column:41}},"1375":{start:{line:3204,column:21},end:{line:3204,column:53}},"1376":{start:{line:3205,column:8},end:{line:3205,column:32}},"1377":{start:{line:3206,column:8},end:{line:3206,column:32}},"1378":{start:{line:3207,column:8},end:{line:3207,column:34}},"1379":{start:{line:3208,column:18},end:{line:3208,column:80}},"1380":{start:{line:3209,column:8},end:{line:3209,column:34}},"1381":{start:{line:3210,column:24},end:{line:3210,column:54}},"1382":{start:{line:3213,column:8},end:{line:3215,column:9}},"1383":{start:{line:3214,column:12},end:{line:3214,column:82}},"1384":{start:{line:3216,column:19},end:{line:3216,column:51}},"1385":{start:{line:3217,column:8},end:{line:3219,column:9}},"1386":{start:{line:3218,column:12},end:{line:3218,column:108}},"1387":{start:{line:3220,column:8},end:{line:3222,column:9}},"1388":{start:{line:3221,column:12},end:{line:3221,column:64}},"1389":{start:{line:3223,column:29},end:{line:3223,column:65}},"1390":{start:{line:3225,column:8},end:{line:3229,column:9}},"1391":{start:{line:3226,column:12},end:{line:3226,column:30}},"1392":{start:{line:3228,column:12},end:{line:3228,column:60}},"1393":{start:{line:3232,column:8},end:{line:3232,column:29}},"1394":{start:{line:3233,column:24},end:{line:3233,column:48}},"1395":{start:{line:3234,column:22},end:{line:3234,column:79}},"1396":{start:{line:3235,column:25},end:{line:3248,column:9}},"1397":{start:{line:3250,column:17},end:{line:3250,column:29}},"1398":{start:{line:3251,column:17},end:{line:3251,column:29}},"1399":{start:{line:3253,column:8},end:{line:3253,column:29}},"1400":{start:{line:3255,column:8},end:{line:3282,column:9}},"1401":{start:{line:3256,column:12},end:{line:3256,column:35}},"1402":{start:{line:3257,column:22},end:{line:3257,column:64}},"1403":{start:{line:3259,column:24},end:{line:3272,column:13}},"1404":{start:{line:3274,column:12},end:{line:3274,column:37}},"1405":{start:{line:3276,column:21},end:{line:3276,column:67}},"1406":{start:{line:3278,column:12},end:{line:3278,column:42}},"1407":{start:{line:3279,column:12},end:{line:3279,column:89}},"1408":{start:{line:3281,column:12},end:{line:3281,column:28}},"1409":{start:{line:3284,column:8},end:{line:3284,column:29}},"1410":{start:{line:3285,column:27},end:{line:3285,column:39}},"1411":{start:{line:3286,column:31},end:{line:3286,column:33}},"1412":{start:{line:3287,column:28},end:{line:3287,column:30}},"1413":{start:{line:3288,column:38},end:{line:3288,column:40}},"1414":{start:{line:3289,column:20},end:{line:3289,column:41}},"1415":{start:{line:3290,column:24},end:{line:3290,column:25}},"1416":{start:{line:3291,column:20},end:{line:3291,column:21}},"1417":{start:{line:3292,column:21},end:{line:3292,column:22}},"1418":{start:{line:3294,column:8},end:{line:3333,column:9}},"1419":{start:{line:3295,column:12},end:{line:3332,column:13}},"1420":{start:{line:3296,column:16},end:{line:3296,column:39}},"1421":{start:{line:3297,column:16},end:{line:3297,column:45}},"1422":{start:{line:3298,column:16},end:{line:3298,column:45}},"1423":{start:{line:3299,column:16},end:{line:3325,column:17}},"1424":{start:{line:3300,column:20},end:{line:3300,column:45}},"1425":{start:{line:3301,column:20},end:{line:3301,column:39}},"1426":{start:{line:3302,column:20},end:{line:3302,column:43}},"1427":{start:{line:3303,column:20},end:{line:3303,column:51}},"1428":{start:{line:3306,column:20},end:{line:3306,column:52}},"1429":{start:{line:3307,column:20},end:{line:3307,column:46}},"1430":{start:{line:3308,column:20},end:{line:3308,column:65}},"1431":{start:{line:3309,column:20},end:{line:3309,column:74}},"1432":{start:{line:3310,column:20},end:{line:3310,column:42}},"1433":{start:{line:3313,column:20},end:{line:3313,column:45}},"1434":{start:{line:3314,column:20},end:{line:3314,column:40}},"1435":{start:{line:3315,column:20},end:{line:3315,column:42}},"1436":{start:{line:3316,column:20},end:{line:3316,column:46}},"1437":{start:{line:3317,column:20},end:{line:3317,column:54}},"1438":{start:{line:3320,column:20},end:{line:3320,column:52}},"1439":{start:{line:3321,column:20},end:{line:3321,column:46}},"1440":{start:{line:3322,column:20},end:{line:3322,column:73}},"1441":{start:{line:3323,column:20},end:{line:3323,column:74}},"1442":{start:{line:3324,column:20},end:{line:3324,column:37}},"1443":{start:{line:3330,column:16},end:{line:3330,column:39}},"1444":{start:{line:3331,column:16},end:{line:3331,column:24}},"1445":{start:{line:3336,column:8},end:{line:3336,column:29}},"1446":{start:{line:3337,column:8},end:{line:3337,column:29}},"1447":{start:{line:3338,column:8},end:{line:3338,column:42}},"1448":{start:{line:3342,column:8},end:{line:3369,column:9}},"1449":{start:{line:3343,column:12},end:{line:3343,column:35}},"1450":{start:{line:3346,column:12},end:{line:3346,column:41}},"1451":{start:{line:3347,column:12},end:{line:3347,column:40}},"1452":{start:{line:3348,column:12},end:{line:3348,column:45}},"1453":{start:{line:3349,column:12},end:{line:3349,column:61}},"1454":{start:{line:3351,column:14},end:{line:3369,column:9}},"1455":{start:{line:3354,column:12},end:{line:3354,column:35}},"1456":{start:{line:3355,column:12},end:{line:3355,column:41}},"1457":{start:{line:3356,column:12},end:{line:3356,column:41}},"1458":{start:{line:3357,column:12},end:{line:3357,column:44}},"1459":{start:{line:3358,column:12},end:{line:3358,column:48}},"1460":{start:{line:3364,column:12},end:{line:3364,column:61}},"1461":{start:{line:3365,column:12},end:{line:3365,column:35}},"1462":{start:{line:3366,column:12},end:{line:3366,column:39}},"1463":{start:{line:3367,column:12},end:{line:3367,column:41}},"1464":{start:{line:3368,column:12},end:{line:3368,column:45}},"1465":{start:{line:3370,column:8},end:{line:3370,column:40}},"1466":{start:{line:3371,column:8},end:{line:3371,column:34}},"1467":{start:{line:3376,column:20},end:{line:3376,column:66}},"1468":{start:{line:3377,column:20},end:{line:3377,column:66}},"1469":{start:{line:3378,column:8},end:{line:3378,column:36}},"1470":{start:{line:3384,column:8},end:{line:3384,column:29}},"1471":{start:{line:3387,column:8},end:{line:3403,column:9}},"1472":{start:{line:3388,column:12},end:{line:3388,column:36}},"1473":{start:{line:3389,column:29},end:{line:3392,column:13}},"1474":{start:{line:3399,column:12},end:{line:3399,column:102}},"1475":{start:{line:3404,column:8},end:{line:3404,column:44}},"1476":{start:{line:3405,column:8},end:{line:3405,column:74}},"1477":{start:{line:3406,column:8},end:{line:3406,column:85}},"1478":{start:{line:3407,column:8},end:{line:3407,column:29}},"1479":{start:{line:3409,column:8},end:{line:3409,column:24}},"1480":{start:{line:3416,column:8},end:{line:3416,column:32}},"1481":{start:{line:3417,column:8},end:{line:3419,column:9}},"1482":{start:{line:3418,column:12},end:{line:3418,column:64}},"1483":{start:{line:3420,column:22},end:{line:3420,column:54}},"1484":{start:{line:3422,column:18},end:{line:3422,column:80}},"1485":{start:{line:3423,column:8},end:{line:3423,column:34}},"1486":{start:{line:3424,column:24},end:{line:3424,column:54}},"1487":{start:{line:3425,column:8},end:{line:3427,column:9}},"1488":{start:{line:3426,column:12},end:{line:3426,column:83}},"1489":{start:{line:3430,column:19},end:{line:3430,column:51}},"1490":{start:{line:3431,column:8},end:{line:3433,column:9}},"1491":{start:{line:3432,column:12},end:{line:3432,column:108}},"1492":{start:{line:3434,column:8},end:{line:3436,column:9}},"1493":{start:{line:3435,column:12},end:{line:3435,column:63}},"1494":{start:{line:3438,column:29},end:{line:3438,column:65}},"1495":{start:{line:3440,column:8},end:{line:3444,column:9}},"1496":{start:{line:3441,column:12},end:{line:3441,column:61}},"1497":{start:{line:3443,column:12},end:{line:3443,column:60}},"1498":{start:{line:3447,column:24},end:{line:3447,column:48}},"1499":{start:{line:3449,column:22},end:{line:3449,column:79}},"1500":{start:{line:3450,column:25},end:{line:3463,column:9}},"1501":{start:{line:3465,column:17},end:{line:3465,column:29}},"1502":{start:{line:3466,column:17},end:{line:3466,column:29}},"1503":{start:{line:3475,column:27},end:{line:3475,column:39}},"1504":{start:{line:3476,column:31},end:{line:3476,column:33}},"1505":{start:{line:3477,column:28},end:{line:3477,column:30}},"1506":{start:{line:3478,column:38},end:{line:3478,column:40}},"1507":{start:{line:3479,column:20},end:{line:3479,column:41}},"1508":{start:{line:3480,column:24},end:{line:3480,column:25}},"1509":{start:{line:3481,column:20},end:{line:3481,column:21}},"1510":{start:{line:3485,column:8},end:{line:3536,column:9}},"1511":{start:{line:3486,column:12},end:{line:3534,column:13}},"1512":{start:{line:3488,column:16},end:{line:3488,column:45}},"1513":{start:{line:3489,column:16},end:{line:3489,column:45}},"1514":{start:{line:3490,column:16},end:{line:3518,column:17}},"1515":{start:{line:3492,column:20},end:{line:3492,column:39}},"1516":{start:{line:3493,column:20},end:{line:3493,column:43}},"1517":{start:{line:3494,column:20},end:{line:3494,column:51}},"1518":{start:{line:3497,column:20},end:{line:3497,column:52}},"1519":{start:{line:3498,column:20},end:{line:3498,column:46}},"1520":{start:{line:3499,column:20},end:{line:3499,column:65}},"1521":{start:{line:3500,column:20},end:{line:3500,column:74}},"1522":{start:{line:3501,column:23},end:{line:3518,column:17}},"1523":{start:{line:3503,column:20},end:{line:3503,column:40}},"1524":{start:{line:3504,column:20},end:{line:3504,column:42}},"1525":{start:{line:3505,column:20},end:{line:3505,column:46}},"1526":{start:{line:3506,column:20},end:{line:3506,column:54}},"1527":{start:{line:3509,column:20},end:{line:3509,column:52}},"1528":{start:{line:3510,column:20},end:{line:3510,column:46}},"1529":{start:{line:3511,column:20},end:{line:3511,column:73}},"1530":{start:{line:3512,column:20},end:{line:3512,column:74}},"1531":{start:{line:3513,column:20},end:{line:3513,column:30}},"1532":{start:{line:3514,column:20},end:{line:3514,column:25}},"1533":{start:{line:3516,column:20},end:{line:3516,column:29}},"1534":{start:{line:3517,column:20},end:{line:3517,column:25}},"1535":{start:{line:3533,column:16},end:{line:3533,column:24}},"1536":{start:{line:3538,column:18},end:{line:3538,column:60}},"1537":{start:{line:3542,column:8},end:{line:3542,column:35}},"1538":{start:{line:3543,column:8},end:{line:3543,column:36}},"1539":{start:{line:3544,column:8},end:{line:3544,column:41}},"1540":{start:{line:3545,column:8},end:{line:3545,column:65}},"1541":{start:{line:3564,column:8},end:{line:3564,column:40}},"1542":{start:{line:3566,column:20},end:{line:3566,column:66}},"1543":{start:{line:3567,column:20},end:{line:3567,column:66}},"1544":{start:{line:3568,column:8},end:{line:3568,column:36}},"1545":{start:{line:3569,column:8},end:{line:3583,column:9}},"1546":{start:{line:3571,column:29},end:{line:3574,column:13}},"1547":{start:{line:3579,column:12},end:{line:3579,column:102}},"1548":{start:{line:3584,column:8},end:{line:3584,column:84}},"1549":{start:{line:3585,column:8},end:{line:3585,column:44}},"1550":{start:{line:3586,column:8},end:{line:3586,column:74}},"1551":{start:{line:3589,column:8},end:{line:3589,column:24}},"1552":{start:{line:3596,column:8},end:{line:3598,column:9}},"1553":{start:{line:3597,column:12},end:{line:3597,column:64}},"1554":{start:{line:3599,column:22},end:{line:3599,column:54}},"1555":{start:{line:3602,column:18},end:{line:3602,column:90}},"1556":{start:{line:3603,column:8},end:{line:3603,column:35}},"1557":{start:{line:3604,column:25},end:{line:3604,column:55}},"1558":{start:{line:3605,column:8},end:{line:3607,column:9}},"1559":{start:{line:3606,column:12},end:{line:3606,column:84}},"1560":{start:{line:3608,column:21},end:{line:3608,column:54}},"1561":{start:{line:3609,column:8},end:{line:3611,column:9}},"1562":{start:{line:3610,column:12},end:{line:3610,column:111}},"1563":{start:{line:3614,column:29},end:{line:3614,column:65}},"1564":{start:{line:3616,column:8},end:{line:3621,column:9}},"1565":{start:{line:3617,column:12},end:{line:3617,column:59}},"1566":{start:{line:3620,column:12},end:{line:3620,column:60}},"1567":{start:{line:3624,column:24},end:{line:3624,column:48}},"1568":{start:{line:3625,column:22},end:{line:3625,column:79}},"1569":{start:{line:3626,column:25},end:{line:3639,column:9}},"1570":{start:{line:3641,column:17},end:{line:3641,column:29}},"1571":{start:{line:3642,column:17},end:{line:3642,column:29}},"1572":{start:{line:3651,column:25},end:{line:3651,column:37}},"1573":{start:{line:3653,column:30},end:{line:3653,column:32}},"1574":{start:{line:3654,column:28},end:{line:3654,column:30}},"1575":{start:{line:3655,column:20},end:{line:3655,column:41}},"1576":{start:{line:3656,column:20},end:{line:3656,column:21}},"1577":{start:{line:3657,column:24},end:{line:3657,column:25}},"1578":{start:{line:3658,column:26},end:{line:3658,column:38}},"1579":{start:{line:3659,column:26},end:{line:3659,column:27}},"1580":{start:{line:3664,column:8},end:{line:3722,column:9}},"1581":{start:{line:3665,column:12},end:{line:3721,column:13}},"1582":{start:{line:3667,column:16},end:{line:3667,column:45}},"1583":{start:{line:3668,column:16},end:{line:3668,column:45}},"1584":{start:{line:3669,column:16},end:{line:3669,column:69}},"1585":{start:{line:3670,column:16},end:{line:3670,column:69}},"1586":{start:{line:3671,column:16},end:{line:3718,column:17}},"1587":{start:{line:3673,column:35},end:{line:3673,column:70}},"1588":{start:{line:3674,column:20},end:{line:3674,column:48}},"1589":{start:{line:3675,column:20},end:{line:3675,column:56}},"1590":{start:{line:3676,column:20},end:{line:3676,column:40}},"1591":{start:{line:3677,column:20},end:{line:3677,column:42}},"1592":{start:{line:3680,column:20},end:{line:3680,column:46}},"1593":{start:{line:3681,column:20},end:{line:3681,column:56}},"1594":{start:{line:3682,column:20},end:{line:3682,column:66}},"1595":{start:{line:3684,column:20},end:{line:3684,column:56}},"1596":{start:{line:3685,column:20},end:{line:3685,column:46}},"1597":{start:{line:3686,column:20},end:{line:3686,column:74}},"1598":{start:{line:3687,column:20},end:{line:3687,column:30}},"1599":{start:{line:3688,column:20},end:{line:3688,column:25}},"1600":{start:{line:3691,column:20},end:{line:3717,column:21}},"1601":{start:{line:3694,column:24},end:{line:3694,column:55}},"1602":{start:{line:3695,column:24},end:{line:3695,column:43}},"1603":{start:{line:3696,column:24},end:{line:3696,column:47}},"1604":{start:{line:3699,column:24},end:{line:3699,column:50}},"1605":{start:{line:3700,column:24},end:{line:3700,column:60}},"1606":{start:{line:3701,column:24},end:{line:3701,column:78}},"1607":{start:{line:3706,column:24},end:{line:3706,column:44}},"1608":{start:{line:3707,column:24},end:{line:3707,column:46}},"1609":{start:{line:3708,column:24},end:{line:3708,column:50}},"1610":{start:{line:3709,column:24},end:{line:3709,column:58}},"1611":{start:{line:3712,column:24},end:{line:3712,column:60}},"1612":{start:{line:3713,column:24},end:{line:3713,column:50}},"1613":{start:{line:3714,column:24},end:{line:3714,column:78}},"1614":{start:{line:3715,column:24},end:{line:3715,column:34}},"1615":{start:{line:3716,column:24},end:{line:3716,column:29}},"1616":{start:{line:3720,column:16},end:{line:3720,column:24}},"1617":{start:{line:3727,column:18},end:{line:3727,column:66}},"1618":{start:{line:3731,column:8},end:{line:3731,column:35}},"1619":{start:{line:3732,column:8},end:{line:3732,column:36}},"1620":{start:{line:3733,column:8},end:{line:3733,column:41}},"1621":{start:{line:3735,column:8},end:{line:3735,column:65}},"1622":{start:{line:3757,column:8},end:{line:3757,column:40}},"1623":{start:{line:3759,column:22},end:{line:3759,column:68}},"1624":{start:{line:3760,column:22},end:{line:3760,column:68}},"1625":{start:{line:3761,column:8},end:{line:3761,column:36}},"1626":{start:{line:3764,column:8},end:{line:3771,column:9}},"1627":{start:{line:3766,column:29},end:{line:3769,column:13}},"1628":{start:{line:3770,column:12},end:{line:3770,column:102}},"1629":{start:{line:3772,column:8},end:{line:3772,column:85}},"1630":{start:{line:3775,column:8},end:{line:3775,column:44}},"1631":{start:{line:3776,column:8},end:{line:3776,column:74}},"1632":{start:{line:3779,column:8},end:{line:3779,column:24}},"1633":{start:{line:4048,column:29},end:{line:4048,column:65}},"1634":{start:{line:4049,column:8},end:{line:4051,column:9}},"1635":{start:{line:4050,column:12},end:{line:4050,column:57}},"1636":{start:{line:4052,column:24},end:{line:4052,column:61}},"1637":{start:{line:4053,column:8},end:{line:4053,column:24}},"1638":{start:{line:4066,column:0},end:{line:4066,column:59}},"1639":{start:{line:4067,column:0},end:{line:4067,column:51}},"1640":{start:{line:4068,column:0},end:{line:4068,column:39}},"1641":{start:{line:4069,column:0},end:{line:4069,column:73}},"1642":{start:{line:4070,column:0},end:{line:4070,column:57}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:18},end:{line:10,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:14},end:{line:14,column:5}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:16,column:4},end:{line:16,column:5}},loc:{start:{line:16,column:26},end:{line:18,column:5}},line:16},"3":{name:"(anonymous_3)",decl:{start:{line:20,column:4},end:{line:20,column:5}},loc:{start:{line:20,column:20},end:{line:22,column:5}},line:20},"4":{name:"(anonymous_4)",decl:{start:{line:25,column:4},end:{line:25,column:5}},loc:{start:{line:25,column:13},end:{line:27,column:5}},line:25},"5":{name:"(anonymous_5)",decl:{start:{line:30,column:4},end:{line:30,column:5}},loc:{start:{line:30,column:19},end:{line:32,column:5}},line:30},"6":{name:"(anonymous_6)",decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:33},end:{line:36,column:5}},line:34},"7":{name:"(anonymous_7)",decl:{start:{line:38,column:4},end:{line:38,column:5}},loc:{start:{line:38,column:27},end:{line:40,column:5}},line:38},"8":{name:"(anonymous_8)",decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:21},end:{line:44,column:5}},line:42},"9":{name:"(anonymous_9)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:18},end:{line:53,column:5}},line:50},"10":{name:"(anonymous_10)",decl:{start:{line:59,column:4},end:{line:59,column:5}},loc:{start:{line:59,column:20},end:{line:61,column:5}},line:59},"11":{name:"(anonymous_11)",decl:{start:{line:63,column:4},end:{line:63,column:5}},loc:{start:{line:63,column:33},end:{line:85,column:5}},line:63},"12":{name:"(anonymous_12)",decl:{start:{line:89,column:4},end:{line:89,column:5}},loc:{start:{line:89,column:32},end:{line:125,column:5}},line:89},"13":{name:"(anonymous_13)",decl:{start:{line:149,column:4},end:{line:149,column:5}},loc:{start:{line:149,column:52},end:{line:172,column:5}},line:149},"14":{name:"(anonymous_14)",decl:{start:{line:174,column:4},end:{line:174,column:5}},loc:{start:{line:174,column:24},end:{line:198,column:5}},line:174},"15":{name:"(anonymous_15)",decl:{start:{line:209,column:4},end:{line:209,column:5}},loc:{start:{line:209,column:30},end:{line:217,column:5}},line:209},"16":{name:"(anonymous_16)",decl:{start:{line:219,column:4},end:{line:219,column:5}},loc:{start:{line:219,column:46},end:{line:250,column:2}},line:219},"17":{name:"(anonymous_17)",decl:{start:{line:253,column:4},end:{line:253,column:5}},loc:{start:{line:253,column:44},end:{line:258,column:5}},line:253},"18":{name:"(anonymous_18)",decl:{start:{line:266,column:4},end:{line:266,column:5}},loc:{start:{line:266,column:26},end:{line:294,column:5}},line:266},"19":{name:"(anonymous_19)",decl:{start:{line:297,column:4},end:{line:297,column:5}},loc:{start:{line:297,column:61},end:{line:312,column:5}},line:297},"20":{name:"(anonymous_20)",decl:{start:{line:315,column:4},end:{line:315,column:5}},loc:{start:{line:315,column:27},end:{line:325,column:5}},line:315},"21":{name:"(anonymous_21)",decl:{start:{line:328,column:4},end:{line:328,column:5}},loc:{start:{line:328,column:26},end:{line:338,column:5}},line:328},"22":{name:"(anonymous_22)",decl:{start:{line:344,column:4},end:{line:344,column:5}},loc:{start:{line:344,column:18},end:{line:347,column:5}},line:344},"23":{name:"(anonymous_23)",decl:{start:{line:348,column:4},end:{line:348,column:5}},loc:{start:{line:348,column:20},end:{line:350,column:5}},line:348},"24":{name:"(anonymous_24)",decl:{start:{line:351,column:4},end:{line:351,column:5}},loc:{start:{line:351,column:33},end:{line:426,column:5}},line:351},"25":{name:"(anonymous_25)",decl:{start:{line:429,column:4},end:{line:429,column:5}},loc:{start:{line:429,column:31},end:{line:432,column:5}},line:429},"26":{name:"(anonymous_26)",decl:{start:{line:439,column:5},end:{line:439,column:6}},loc:{start:{line:439,column:39},end:{line:453,column:5}},line:439},"27":{name:"(anonymous_27)",decl:{start:{line:461,column:4},end:{line:461,column:5}},loc:{start:{line:461,column:35},end:{line:468,column:5}},line:461},"28":{name:"(anonymous_28)",decl:{start:{line:477,column:4},end:{line:477,column:5}},loc:{start:{line:477,column:62},end:{line:491,column:5}},line:477},"29":{name:"(anonymous_29)",decl:{start:{line:503,column:4},end:{line:503,column:5}},loc:{start:{line:503,column:68},end:{line:520,column:5}},line:503},"30":{name:"(anonymous_30)",decl:{start:{line:523,column:4},end:{line:523,column:5}},loc:{start:{line:523,column:44},end:{line:530,column:5}},line:523},"31":{name:"(anonymous_31)",decl:{start:{line:534,column:4},end:{line:534,column:5}},loc:{start:{line:534,column:33},end:{line:545,column:5}},line:534},"32":{name:"(anonymous_32)",decl:{start:{line:551,column:4},end:{line:551,column:5}},loc:{start:{line:551,column:50},end:{line:744,column:5}},line:551},"33":{name:"(anonymous_33)",decl:{start:{line:748,column:4},end:{line:748,column:5}},loc:{start:{line:748,column:38},end:{line:772,column:5}},line:748},"34":{name:"(anonymous_34)",decl:{start:{line:775,column:4},end:{line:775,column:5}},loc:{start:{line:775,column:30},end:{line:782,column:5}},line:775},"35":{name:"(anonymous_35)",decl:{start:{line:784,column:4},end:{line:784,column:5}},loc:{start:{line:784,column:31},end:{line:796,column:5}},line:784},"36":{name:"(anonymous_36)",decl:{start:{line:801,column:4},end:{line:801,column:5}},loc:{start:{line:801,column:35},end:{line:836,column:5}},line:801},"37":{name:"(anonymous_37)",decl:{start:{line:841,column:4},end:{line:841,column:5}},loc:{start:{line:841,column:33},end:{line:891,column:5}},line:841},"38":{name:"(anonymous_38)",decl:{start:{line:918,column:4},end:{line:918,column:5}},loc:{start:{line:918,column:76},end:{line:973,column:5}},line:918},"39":{name:"(anonymous_39)",decl:{start:{line:953,column:45},end:{line:953,column:46}},loc:{start:{line:953,column:56},end:{line:953,column:95}},line:953},"40":{name:"(anonymous_40)",decl:{start:{line:1021,column:4},end:{line:1021,column:5}},loc:{start:{line:1021,column:67},end:{line:1063,column:5}},line:1021},"41":{name:"(anonymous_41)",decl:{start:{line:1069,column:4},end:{line:1069,column:5}},loc:{start:{line:1069,column:60},end:{line:1078,column:5}},line:1069},"42":{name:"(anonymous_42)",decl:{start:{line:1076,column:51},end:{line:1076,column:52}},loc:{start:{line:1076,column:56},end:{line:1076,column:97}},line:1076},"43":{name:"(anonymous_43)",decl:{start:{line:1082,column:4},end:{line:1082,column:5}},loc:{start:{line:1082,column:61},end:{line:1210,column:5}},line:1082},"44":{name:"(anonymous_44)",decl:{start:{line:1133,column:34},end:{line:1133,column:35}},loc:{start:{line:1133,column:98},end:{line:1138,column:13}},line:1133},"45":{name:"(anonymous_45)",decl:{start:{line:1139,column:38},end:{line:1139,column:39}},loc:{start:{line:1139,column:150},end:{line:1144,column:13}},line:1139},"46":{name:"(anonymous_46)",decl:{start:{line:1140,column:56},end:{line:1140,column:57}},loc:{start:{line:1140,column:70},end:{line:1140,column:87}},line:1140},"47":{name:"(anonymous_47)",decl:{start:{line:1224,column:4},end:{line:1224,column:5}},loc:{start:{line:1224,column:64},end:{line:1276,column:5}},line:1224},"48":{name:"(anonymous_48)",decl:{start:{line:1278,column:4},end:{line:1278,column:5}},loc:{start:{line:1278,column:98},end:{line:1346,column:5}},line:1278},"49":{name:"(anonymous_49)",decl:{start:{line:1395,column:4},end:{line:1395,column:5}},loc:{start:{line:1395,column:18},end:{line:1397,column:5}},line:1395},"50":{name:"(anonymous_50)",decl:{start:{line:1399,column:4},end:{line:1399,column:5}},loc:{start:{line:1399,column:20},end:{line:1401,column:5}},line:1399},"51":{name:"(anonymous_51)",decl:{start:{line:1404,column:4},end:{line:1404,column:5}},loc:{start:{line:1404,column:61},end:{line:1419,column:5}},line:1404},"52":{name:"(anonymous_52)",decl:{start:{line:1422,column:4},end:{line:1422,column:5}},loc:{start:{line:1422,column:33},end:{line:1496,column:5}},line:1422},"53":{name:"(anonymous_53)",decl:{start:{line:1498,column:4},end:{line:1498,column:5}},loc:{start:{line:1498,column:31},end:{line:1501,column:5}},line:1498},"54":{name:"(anonymous_54)",decl:{start:{line:1508,column:4},end:{line:1508,column:5}},loc:{start:{line:1508,column:38},end:{line:1522,column:5}},line:1508},"55":{name:"(anonymous_55)",decl:{start:{line:1531,column:4},end:{line:1531,column:5}},loc:{start:{line:1531,column:62},end:{line:1554,column:5}},line:1531},"56":{name:"(anonymous_56)",decl:{start:{line:1556,column:4},end:{line:1556,column:5}},loc:{start:{line:1556,column:33},end:{line:1562,column:5}},line:1556},"57":{name:"(anonymous_57)",decl:{start:{line:1574,column:4},end:{line:1574,column:5}},loc:{start:{line:1574,column:38},end:{line:1600,column:5}},line:1574},"58":{name:"(anonymous_58)",decl:{start:{line:1602,column:4},end:{line:1602,column:5}},loc:{start:{line:1602,column:30},end:{line:1611,column:5}},line:1602},"59":{name:"(anonymous_59)",decl:{start:{line:1621,column:4},end:{line:1621,column:5}},loc:{start:{line:1621,column:41},end:{line:1641,column:5}},line:1621},"60":{name:"(anonymous_60)",decl:{start:{line:1643,column:4},end:{line:1643,column:5}},loc:{start:{line:1643,column:31},end:{line:1651,column:5}},line:1643},"61":{name:"(anonymous_61)",decl:{start:{line:1653,column:4},end:{line:1653,column:5}},loc:{start:{line:1653,column:31},end:{line:1662,column:5}},line:1653},"62":{name:"(anonymous_62)",decl:{start:{line:1671,column:4},end:{line:1671,column:5}},loc:{start:{line:1671,column:126},end:{line:1737,column:5}},line:1671},"63":{name:"(anonymous_63)",decl:{start:{line:1740,column:4},end:{line:1740,column:5}},loc:{start:{line:1740,column:56},end:{line:1805,column:5}},line:1740},"64":{name:"(anonymous_64)",decl:{start:{line:1815,column:4},end:{line:1815,column:5}},loc:{start:{line:1815,column:119},end:{line:1851,column:5}},line:1815},"65":{name:"(anonymous_65)",decl:{start:{line:1857,column:4},end:{line:1857,column:5}},loc:{start:{line:1857,column:28},end:{line:1873,column:5}},line:1857},"66":{name:"(anonymous_66)",decl:{start:{line:1877,column:4},end:{line:1877,column:5}},loc:{start:{line:1877,column:35},end:{line:1938,column:5}},line:1877},"67":{name:"(anonymous_67)",decl:{start:{line:1948,column:4},end:{line:1948,column:5}},loc:{start:{line:1948,column:18},end:{line:1951,column:5}},line:1948},"68":{name:"(anonymous_68)",decl:{start:{line:1953,column:4},end:{line:1953,column:5}},loc:{start:{line:1953,column:20},end:{line:1955,column:5}},line:1953},"69":{name:"(anonymous_69)",decl:{start:{line:1958,column:4},end:{line:1958,column:5}},loc:{start:{line:1958,column:33},end:{line:2036,column:5}},line:1958},"70":{name:"(anonymous_70)",decl:{start:{line:2038,column:4},end:{line:2038,column:5}},loc:{start:{line:2038,column:31},end:{line:2041,column:5}},line:2038},"71":{name:"(anonymous_71)",decl:{start:{line:2045,column:4},end:{line:2045,column:5}},loc:{start:{line:2045,column:61},end:{line:2060,column:5}},line:2045},"72":{name:"(anonymous_72)",decl:{start:{line:2063,column:4},end:{line:2063,column:5}},loc:{start:{line:2063,column:51},end:{line:2094,column:5}},line:2063},"73":{name:"(anonymous_73)",decl:{start:{line:2097,column:4},end:{line:2097,column:5}},loc:{start:{line:2097,column:23},end:{line:2123,column:5}},line:2097},"74":{name:"(anonymous_74)",decl:{start:{line:2127,column:4},end:{line:2127,column:5}},loc:{start:{line:2127,column:32},end:{line:2163,column:5}},line:2127},"75":{name:"(anonymous_75)",decl:{start:{line:2172,column:4},end:{line:2172,column:5}},loc:{start:{line:2172,column:42},end:{line:2226,column:5}},line:2172},"76":{name:"(anonymous_76)",decl:{start:{line:2229,column:4},end:{line:2229,column:5}},loc:{start:{line:2229,column:42},end:{line:2299,column:5}},line:2229},"77":{name:"(anonymous_77)",decl:{start:{line:2303,column:4},end:{line:2303,column:5}},loc:{start:{line:2303,column:44},end:{line:2308,column:5}},line:2303},"78":{name:"(anonymous_78)",decl:{start:{line:2304,column:30},end:{line:2304,column:31}},loc:{start:{line:2304,column:39},end:{line:2304,column:215}},line:2304},"79":{name:"(anonymous_79)",decl:{start:{line:2305,column:30},end:{line:2305,column:31}},loc:{start:{line:2305,column:39},end:{line:2305,column:118}},line:2305},"80":{name:"(anonymous_80)",decl:{start:{line:2306,column:30},end:{line:2306,column:31}},loc:{start:{line:2306,column:39},end:{line:2306,column:113}},line:2306},"81":{name:"(anonymous_81)",decl:{start:{line:2312,column:4},end:{line:2312,column:5}},loc:{start:{line:2312,column:45},end:{line:2317,column:5}},line:2312},"82":{name:"(anonymous_82)",decl:{start:{line:2313,column:30},end:{line:2313,column:31}},loc:{start:{line:2313,column:39},end:{line:2313,column:215}},line:2313},"83":{name:"(anonymous_83)",decl:{start:{line:2314,column:30},end:{line:2314,column:31}},loc:{start:{line:2314,column:39},end:{line:2314,column:118}},line:2314},"84":{name:"(anonymous_84)",decl:{start:{line:2315,column:30},end:{line:2315,column:31}},loc:{start:{line:2315,column:39},end:{line:2315,column:113}},line:2315},"85":{name:"(anonymous_85)",decl:{start:{line:2324,column:4},end:{line:2324,column:5}},loc:{start:{line:2324,column:63},end:{line:2606,column:5}},line:2324},"86":{name:"(anonymous_86)",decl:{start:{line:2470,column:44},end:{line:2470,column:45}},loc:{start:{line:2470,column:51},end:{line:2470,column:76}},line:2470},"87":{name:"(anonymous_87)",decl:{start:{line:2475,column:44},end:{line:2475,column:45}},loc:{start:{line:2475,column:51},end:{line:2475,column:76}},line:2475},"88":{name:"(anonymous_88)",decl:{start:{line:2581,column:42},end:{line:2581,column:43}},loc:{start:{line:2581,column:49},end:{line:2581,column:69}},line:2581},"89":{name:"(anonymous_89)",decl:{start:{line:2608,column:4},end:{line:2608,column:5}},loc:{start:{line:2608,column:57},end:{line:2713,column:5}},line:2608},"90":{name:"(anonymous_90)",decl:{start:{line:2717,column:4},end:{line:2717,column:5}},loc:{start:{line:2717,column:64},end:{line:2977,column:5}},line:2717},"91":{name:"(anonymous_91)",decl:{start:{line:2829,column:44},end:{line:2829,column:45}},loc:{start:{line:2829,column:51},end:{line:2829,column:76}},line:2829},"92":{name:"(anonymous_92)",decl:{start:{line:2833,column:44},end:{line:2833,column:45}},loc:{start:{line:2833,column:51},end:{line:2833,column:76}},line:2833},"93":{name:"(anonymous_93)",decl:{start:{line:2955,column:42},end:{line:2955,column:43}},loc:{start:{line:2955,column:49},end:{line:2955,column:69}},line:2955},"94":{name:"(anonymous_94)",decl:{start:{line:2980,column:4},end:{line:2980,column:5}},loc:{start:{line:2980,column:66},end:{line:3195,column:5}},line:2980},"95":{name:"(anonymous_95)",decl:{start:{line:3200,column:4},end:{line:3200,column:5}},loc:{start:{line:3200,column:63},end:{line:3410,column:5}},line:3200},"96":{name:"(anonymous_96)",decl:{start:{line:3415,column:4},end:{line:3415,column:5}},loc:{start:{line:3415,column:63},end:{line:3590,column:5}},line:3415},"97":{name:"(anonymous_97)",decl:{start:{line:3595,column:4},end:{line:3595,column:5}},loc:{start:{line:3595,column:65},end:{line:3780,column:5}},line:3595},"98":{name:"(anonymous_98)",decl:{start:{line:4047,column:4},end:{line:4047,column:5}},loc:{start:{line:4047,column:29},end:{line:4054,column:5}},line:4047}},branchMap:{"0":{loc:{start:{line:72,column:8},end:{line:74,column:9}},type:"if",locations:[{start:{line:72,column:8},end:{line:74,column:9}},{start:{line:72,column:8},end:{line:74,column:9}}],line:72},"1":{loc:{start:{line:81,column:12},end:{line:83,column:13}},type:"if",locations:[{start:{line:81,column:12},end:{line:83,column:13}},{start:{line:81,column:12},end:{line:83,column:13}}],line:81},"2":{loc:{start:{line:106,column:12},end:{line:109,column:13}},type:"if",locations:[{start:{line:106,column:12},end:{line:109,column:13}},{start:{line:106,column:12},end:{line:109,column:13}}],line:106},"3":{loc:{start:{line:110,column:12},end:{line:112,column:13}},type:"if",locations:[{start:{line:110,column:12},end:{line:112,column:13}},{start:{line:110,column:12},end:{line:112,column:13}}],line:110},"4":{loc:{start:{line:115,column:8},end:{line:117,column:9}},type:"if",locations:[{start:{line:115,column:8},end:{line:117,column:9}},{start:{line:115,column:8},end:{line:117,column:9}}],line:115},"5":{loc:{start:{line:115,column:12},end:{line:115,column:54}},type:"binary-expr",locations:[{start:{line:115,column:12},end:{line:115,column:43}},{start:{line:115,column:47},end:{line:115,column:54}}],line:115},"6":{loc:{start:{line:120,column:8},end:{line:122,column:9}},type:"if",locations:[{start:{line:120,column:8},end:{line:122,column:9}},{start:{line:120,column:8},end:{line:122,column:9}}],line:120},"7":{loc:{start:{line:185,column:12},end:{line:188,column:13}},type:"if",locations:[{start:{line:185,column:12},end:{line:188,column:13}},{start:{line:185,column:12},end:{line:188,column:13}}],line:185},"8":{loc:{start:{line:185,column:16},end:{line:185,column:55}},type:"binary-expr",locations:[{start:{line:185,column:16},end:{line:185,column:31}},{start:{line:185,column:35},end:{line:185,column:55}}],line:185},"9":{loc:{start:{line:189,column:12},end:{line:191,column:13}},type:"if",locations:[{start:{line:189,column:12},end:{line:191,column:13}},{start:{line:189,column:12},end:{line:191,column:13}}],line:189},"10":{loc:{start:{line:193,column:8},end:{line:195,column:9}},type:"if",locations:[{start:{line:193,column:8},end:{line:195,column:9}},{start:{line:193,column:8},end:{line:195,column:9}}],line:193},"11":{loc:{start:{line:193,column:12},end:{line:193,column:60}},type:"binary-expr",locations:[{start:{line:193,column:12},end:{line:193,column:35}},{start:{line:193,column:39},end:{line:193,column:60}}],line:193},"12":{loc:{start:{line:213,column:8},end:{line:215,column:9}},type:"if",locations:[{start:{line:213,column:8},end:{line:215,column:9}},{start:{line:213,column:8},end:{line:215,column:9}}],line:213},"13":{loc:{start:{line:223,column:3},end:{line:245,column:4}},type:"if",locations:[{start:{line:223,column:3},end:{line:245,column:4}},{start:{line:223,column:3},end:{line:245,column:4}}],line:223},"14":{loc:{start:{line:223,column:7},end:{line:223,column:46}},type:"binary-expr",locations:[{start:{line:223,column:7},end:{line:223,column:16}},{start:{line:223,column:20},end:{line:223,column:46}}],line:223},"15":{loc:{start:{line:226,column:4},end:{line:243,column:5}},type:"if",locations:[{start:{line:226,column:4},end:{line:243,column:5}},{start:{line:226,column:4},end:{line:243,column:5}}],line:226},"16":{loc:{start:{line:226,column:8},end:{line:226,column:39}},type:"binary-expr",locations:[{start:{line:226,column:8},end:{line:226,column:17}},{start:{line:226,column:21},end:{line:226,column:39}}],line:226},"17":{loc:{start:{line:306,column:8},end:{line:310,column:9}},type:"if",locations:[{start:{line:306,column:8},end:{line:310,column:9}},{start:{line:306,column:8},end:{line:310,column:9}}],line:306},"18":{loc:{start:{line:308,column:14},end:{line:310,column:9}},type:"if",locations:[{start:{line:308,column:14},end:{line:310,column:9}},{start:{line:308,column:14},end:{line:310,column:9}}],line:308},"19":{loc:{start:{line:353,column:8},end:{line:355,column:9}},type:"if",locations:[{start:{line:353,column:8},end:{line:355,column:9}},{start:{line:353,column:8},end:{line:355,column:9}}],line:353},"20":{loc:{start:{line:353,column:12},end:{line:353,column:66}},type:"binary-expr",locations:[{start:{line:353,column:12},end:{line:353,column:39}},{start:{line:353,column:43},end:{line:353,column:66}}],line:353},"21":{loc:{start:{line:358,column:8},end:{line:360,column:9}},type:"if",locations:[{start:{line:358,column:8},end:{line:360,column:9}},{start:{line:358,column:8},end:{line:360,column:9}}],line:358},"22":{loc:{start:{line:368,column:12},end:{line:370,column:13}},type:"if",locations:[{start:{line:368,column:12},end:{line:370,column:13}},{start:{line:368,column:12},end:{line:370,column:13}}],line:368},"23":{loc:{start:{line:373,column:8},end:{line:425,column:9}},type:"switch",locations:[{start:{line:374,column:12},end:{line:380,column:17}},{start:{line:381,column:12},end:{line:386,column:17}},{start:{line:387,column:12},end:{line:392,column:17}},{start:{line:393,column:12},end:{line:398,column:17}},{start:{line:399,column:12},end:{line:404,column:17}},{start:{line:405,column:12},end:{line:410,column:17}},{start:{line:411,column:12},end:{line:416,column:17}},{start:{line:417,column:12},end:{line:422,column:17}}],line:373},"24":{loc:{start:{line:375,column:16},end:{line:380,column:17}},type:"if",locations:[{start:{line:375,column:16},end:{line:380,column:17}},{start:{line:375,column:16},end:{line:380,column:17}}],line:375},"25":{loc:{start:{line:382,column:16},end:{line:386,column:17}},type:"if",locations:[{start:{line:382,column:16},end:{line:386,column:17}},{start:{line:382,column:16},end:{line:386,column:17}}],line:382},"26":{loc:{start:{line:388,column:16},end:{line:392,column:17}},type:"if",locations:[{start:{line:388,column:16},end:{line:392,column:17}},{start:{line:388,column:16},end:{line:392,column:17}}],line:388},"27":{loc:{start:{line:394,column:16},end:{line:398,column:17}},type:"if",locations:[{start:{line:394,column:16},end:{line:398,column:17}},{start:{line:394,column:16},end:{line:398,column:17}}],line:394},"28":{loc:{start:{line:400,column:16},end:{line:404,column:17}},type:"if",locations:[{start:{line:400,column:16},end:{line:404,column:17}},{start:{line:400,column:16},end:{line:404,column:17}}],line:400},"29":{loc:{start:{line:406,column:16},end:{line:410,column:17}},type:"if",locations:[{start:{line:406,column:16},end:{line:410,column:17}},{start:{line:406,column:16},end:{line:410,column:17}}],line:406},"30":{loc:{start:{line:412,column:16},end:{line:416,column:17}},type:"if",locations:[{start:{line:412,column:16},end:{line:416,column:17}},{start:{line:412,column:16},end:{line:416,column:17}}],line:412},"31":{loc:{start:{line:418,column:16},end:{line:422,column:17}},type:"if",locations:[{start:{line:418,column:16},end:{line:422,column:17}},{start:{line:418,column:16},end:{line:422,column:17}}],line:418},"32":{loc:{start:{line:446,column:8},end:{line:452,column:9}},type:"if",locations:[{start:{line:446,column:8},end:{line:452,column:9}},{start:{line:446,column:8},end:{line:452,column:9}}],line:446},"33":{loc:{start:{line:448,column:14},end:{line:452,column:9}},type:"if",locations:[{start:{line:448,column:14},end:{line:452,column:9}},{start:{line:448,column:14},end:{line:452,column:9}}],line:448},"34":{loc:{start:{line:463,column:8},end:{line:467,column:9}},type:"if",locations:[{start:{line:463,column:8},end:{line:467,column:9}},{start:{line:463,column:8},end:{line:467,column:9}}],line:463},"35":{loc:{start:{line:463,column:12},end:{line:463,column:46}},type:"binary-expr",locations:[{start:{line:463,column:12},end:{line:463,column:21}},{start:{line:463,column:25},end:{line:463,column:46}}],line:463},"36":{loc:{start:{line:485,column:8},end:{line:489,column:9}},type:"if",locations:[{start:{line:485,column:8},end:{line:489,column:9}},{start:{line:485,column:8},end:{line:489,column:9}}],line:485},"37":{loc:{start:{line:487,column:14},end:{line:489,column:9}},type:"if",locations:[{start:{line:487,column:14},end:{line:489,column:9}},{start:{line:487,column:14},end:{line:489,column:9}}],line:487},"38":{loc:{start:{line:514,column:8},end:{line:518,column:9}},type:"if",locations:[{start:{line:514,column:8},end:{line:518,column:9}},{start:{line:514,column:8},end:{line:518,column:9}}],line:514},"39":{loc:{start:{line:516,column:14},end:{line:518,column:9}},type:"if",locations:[{start:{line:516,column:14},end:{line:518,column:9}},{start:{line:516,column:14},end:{line:518,column:9}}],line:516},"40":{loc:{start:{line:537,column:8},end:{line:540,column:9}},type:"if",locations:[{start:{line:537,column:8},end:{line:540,column:9}},{start:{line:537,column:8},end:{line:540,column:9}}],line:537},"41":{loc:{start:{line:537,column:12},end:{line:537,column:38}},type:"binary-expr",locations:[{start:{line:537,column:12},end:{line:537,column:17}},{start:{line:537,column:21},end:{line:537,column:38}}],line:537},"42":{loc:{start:{line:555,column:8},end:{line:557,column:9}},type:"if",locations:[{start:{line:555,column:8},end:{line:557,column:9}},{start:{line:555,column:8},end:{line:557,column:9}}],line:555},"43":{loc:{start:{line:558,column:8},end:{line:560,column:9}},type:"if",locations:[{start:{line:558,column:8},end:{line:560,column:9}},{start:{line:558,column:8},end:{line:560,column:9}}],line:558},"44":{loc:{start:{line:571,column:8},end:{line:573,column:9}},type:"if",locations:[{start:{line:571,column:8},end:{line:573,column:9}},{start:{line:571,column:8},end:{line:573,column:9}}],line:571},"45":{loc:{start:{line:754,column:8},end:{line:763,column:9}},type:"if",locations:[{start:{line:754,column:8},end:{line:763,column:9}},{start:{line:754,column:8},end:{line:763,column:9}}],line:754},"46":{loc:{start:{line:754,column:12},end:{line:754,column:60}},type:"binary-expr",locations:[{start:{line:754,column:12},end:{line:754,column:28}},{start:{line:754,column:32},end:{line:754,column:60}}],line:754},"47":{loc:{start:{line:787,column:8},end:{line:789,column:9}},type:"if",locations:[{start:{line:787,column:8},end:{line:789,column:9}},{start:{line:787,column:8},end:{line:789,column:9}}],line:787},"48":{loc:{start:{line:787,column:12},end:{line:787,column:46}},type:"binary-expr",locations:[{start:{line:787,column:12},end:{line:787,column:21}},{start:{line:787,column:25},end:{line:787,column:46}}],line:787},"49":{loc:{start:{line:792,column:8},end:{line:794,column:9}},type:"if",locations:[{start:{line:792,column:8},end:{line:794,column:9}},{start:{line:792,column:8},end:{line:794,column:9}}],line:792},"50":{loc:{start:{line:805,column:8},end:{line:807,column:9}},type:"if",locations:[{start:{line:805,column:8},end:{line:807,column:9}},{start:{line:805,column:8},end:{line:807,column:9}}],line:805},"51":{loc:{start:{line:805,column:11},end:{line:805,column:45}},type:"binary-expr",locations:[{start:{line:805,column:11},end:{line:805,column:20}},{start:{line:805,column:24},end:{line:805,column:45}}],line:805},"52":{loc:{start:{line:813,column:8},end:{line:815,column:9}},type:"if",locations:[{start:{line:813,column:8},end:{line:815,column:9}},{start:{line:813,column:8},end:{line:815,column:9}}],line:813},"53":{loc:{start:{line:818,column:8},end:{line:820,column:9}},type:"if",locations:[{start:{line:818,column:8},end:{line:820,column:9}},{start:{line:818,column:8},end:{line:820,column:9}}],line:818},"54":{loc:{start:{line:845,column:8},end:{line:847,column:9}},type:"if",locations:[{start:{line:845,column:8},end:{line:847,column:9}},{start:{line:845,column:8},end:{line:847,column:9}}],line:845},"55":{loc:{start:{line:845,column:12},end:{line:845,column:46}},type:"binary-expr",locations:[{start:{line:845,column:12},end:{line:845,column:21}},{start:{line:845,column:25},end:{line:845,column:46}}],line:845},"56":{loc:{start:{line:850,column:8},end:{line:852,column:9}},type:"if",locations:[{start:{line:850,column:8},end:{line:852,column:9}},{start:{line:850,column:8},end:{line:852,column:9}}],line:850},"57":{loc:{start:{line:853,column:8},end:{line:855,column:9}},type:"if",locations:[{start:{line:853,column:8},end:{line:855,column:9}},{start:{line:853,column:8},end:{line:855,column:9}}],line:853},"58":{loc:{start:{line:856,column:8},end:{line:858,column:9}},type:"if",locations:[{start:{line:856,column:8},end:{line:858,column:9}},{start:{line:856,column:8},end:{line:858,column:9}}],line:856},"59":{loc:{start:{line:864,column:8},end:{line:886,column:9}},type:"if",locations:[{start:{line:864,column:8},end:{line:886,column:9}},{start:{line:864,column:8},end:{line:886,column:9}}],line:864},"60":{loc:{start:{line:936,column:8},end:{line:938,column:9}},type:"if",locations:[{start:{line:936,column:8},end:{line:938,column:9}},{start:{line:936,column:8},end:{line:938,column:9}}],line:936},"61":{loc:{start:{line:936,column:12},end:{line:936,column:46}},type:"binary-expr",locations:[{start:{line:936,column:12},end:{line:936,column:21}},{start:{line:936,column:25},end:{line:936,column:46}}],line:936},"62":{loc:{start:{line:941,column:8},end:{line:943,column:9}},type:"if",locations:[{start:{line:941,column:8},end:{line:943,column:9}},{start:{line:941,column:8},end:{line:943,column:9}}],line:941},"63":{loc:{start:{line:946,column:8},end:{line:948,column:9}},type:"if",locations:[{start:{line:946,column:8},end:{line:948,column:9}},{start:{line:946,column:8},end:{line:948,column:9}}],line:946},"64":{loc:{start:{line:950,column:8},end:{line:952,column:9}},type:"if",locations:[{start:{line:950,column:8},end:{line:952,column:9}},{start:{line:950,column:8},end:{line:952,column:9}}],line:950},"65":{loc:{start:{line:955,column:8},end:{line:962,column:9}},type:"if",locations:[{start:{line:955,column:8},end:{line:962,column:9}},{start:{line:955,column:8},end:{line:962,column:9}}],line:955},"66":{loc:{start:{line:1025,column:8},end:{line:1027,column:9}},type:"if",locations:[{start:{line:1025,column:8},end:{line:1027,column:9}},{start:{line:1025,column:8},end:{line:1027,column:9}}],line:1025},"67":{loc:{start:{line:1025,column:11},end:{line:1025,column:45}},type:"binary-expr",locations:[{start:{line:1025,column:11},end:{line:1025,column:20}},{start:{line:1025,column:24},end:{line:1025,column:45}}],line:1025},"68":{loc:{start:{line:1030,column:8},end:{line:1032,column:9}},type:"if",locations:[{start:{line:1030,column:8},end:{line:1032,column:9}},{start:{line:1030,column:8},end:{line:1032,column:9}}],line:1030},"69":{loc:{start:{line:1033,column:8},end:{line:1035,column:9}},type:"if",locations:[{start:{line:1033,column:8},end:{line:1035,column:9}},{start:{line:1033,column:8},end:{line:1035,column:9}}],line:1033},"70":{loc:{start:{line:1043,column:8},end:{line:1045,column:9}},type:"if",locations:[{start:{line:1043,column:8},end:{line:1045,column:9}},{start:{line:1043,column:8},end:{line:1045,column:9}}],line:1043},"71":{loc:{start:{line:1047,column:8},end:{line:1051,column:9}},type:"if",locations:[{start:{line:1047,column:8},end:{line:1051,column:9}},{start:{line:1047,column:8},end:{line:1051,column:9}}],line:1047},"72":{loc:{start:{line:1076,column:56},end:{line:1076,column:97}},type:"binary-expr",locations:[{start:{line:1076,column:56},end:{line:1076,column:77}},{start:{line:1076,column:81},end:{line:1076,column:97}}],line:1076},"73":{loc:{start:{line:1089,column:8},end:{line:1091,column:9}},type:"if",locations:[{start:{line:1089,column:8},end:{line:1091,column:9}},{start:{line:1089,column:8},end:{line:1091,column:9}}],line:1089},"74":{loc:{start:{line:1089,column:12},end:{line:1089,column:50}},type:"binary-expr",locations:[{start:{line:1089,column:12},end:{line:1089,column:23}},{start:{line:1089,column:27},end:{line:1089,column:50}}],line:1089},"75":{loc:{start:{line:1094,column:8},end:{line:1096,column:9}},type:"if",locations:[{start:{line:1094,column:8},end:{line:1096,column:9}},{start:{line:1094,column:8},end:{line:1096,column:9}}],line:1094},"76":{loc:{start:{line:1101,column:8},end:{line:1103,column:9}},type:"if",locations:[{start:{line:1101,column:8},end:{line:1103,column:9}},{start:{line:1101,column:8},end:{line:1103,column:9}}],line:1101},"77":{loc:{start:{line:1101,column:12},end:{line:1101,column:50}},type:"binary-expr",locations:[{start:{line:1101,column:12},end:{line:1101,column:23}},{start:{line:1101,column:27},end:{line:1101,column:50}}],line:1101},"78":{loc:{start:{line:1108,column:8},end:{line:1110,column:9}},type:"if",locations:[{start:{line:1108,column:8},end:{line:1110,column:9}},{start:{line:1108,column:8},end:{line:1110,column:9}}],line:1108},"79":{loc:{start:{line:1111,column:8},end:{line:1113,column:9}},type:"if",locations:[{start:{line:1111,column:8},end:{line:1113,column:9}},{start:{line:1111,column:8},end:{line:1113,column:9}}],line:1111},"80":{loc:{start:{line:1126,column:8},end:{line:1128,column:9}},type:"if",locations:[{start:{line:1126,column:8},end:{line:1128,column:9}},{start:{line:1126,column:8},end:{line:1128,column:9}}],line:1126},"81":{loc:{start:{line:1147,column:8},end:{line:1149,column:9}},type:"if",locations:[{start:{line:1147,column:8},end:{line:1149,column:9}},{start:{line:1147,column:8},end:{line:1149,column:9}}],line:1147},"82":{loc:{start:{line:1155,column:8},end:{line:1160,column:9}},type:"if",locations:[{start:{line:1155,column:8},end:{line:1160,column:9}},{start:{line:1155,column:8},end:{line:1160,column:9}}],line:1155},"83":{loc:{start:{line:1166,column:8},end:{line:1168,column:9}},type:"if",locations:[{start:{line:1166,column:8},end:{line:1168,column:9}},{start:{line:1166,column:8},end:{line:1168,column:9}}],line:1166},"84":{loc:{start:{line:1181,column:8},end:{line:1184,column:9}},type:"if",locations:[{start:{line:1181,column:8},end:{line:1184,column:9}},{start:{line:1181,column:8},end:{line:1184,column:9}}],line:1181},"85":{loc:{start:{line:1181,column:12},end:{line:1181,column:31}},type:"binary-expr",locations:[{start:{line:1181,column:12},end:{line:1181,column:18}},{start:{line:1181,column:22},end:{line:1181,column:31}}],line:1181},"86":{loc:{start:{line:1196,column:8},end:{line:1202,column:9}},type:"if",locations:[{start:{line:1196,column:8},end:{line:1202,column:9}},{start:{line:1196,column:8},end:{line:1202,column:9}}],line:1196},"87":{loc:{start:{line:1228,column:8},end:{line:1230,column:9}},type:"if",locations:[{start:{line:1228,column:8},end:{line:1230,column:9}},{start:{line:1228,column:8},end:{line:1230,column:9}}],line:1228},"88":{loc:{start:{line:1228,column:12},end:{line:1228,column:50}},type:"binary-expr",locations:[{start:{line:1228,column:12},end:{line:1228,column:23}},{start:{line:1228,column:27},end:{line:1228,column:50}}],line:1228},"89":{loc:{start:{line:1268,column:8},end:{line:1275,column:9}},type:"if",locations:[{start:{line:1268,column:8},end:{line:1275,column:9}},{start:{line:1268,column:8},end:{line:1275,column:9}}],line:1268},"90":{loc:{start:{line:1282,column:8},end:{line:1284,column:9}},type:"if",locations:[{start:{line:1282,column:8},end:{line:1284,column:9}},{start:{line:1282,column:8},end:{line:1284,column:9}}],line:1282},"91":{loc:{start:{line:1282,column:12},end:{line:1282,column:50}},type:"binary-expr",locations:[{start:{line:1282,column:12},end:{line:1282,column:23}},{start:{line:1282,column:27},end:{line:1282,column:50}}],line:1282},"92":{loc:{start:{line:1338,column:8},end:{line:1345,column:9}},type:"if",locations:[{start:{line:1338,column:8},end:{line:1345,column:9}},{start:{line:1338,column:8},end:{line:1345,column:9}}],line:1338},"93":{loc:{start:{line:1413,column:8},end:{line:1417,column:9}},type:"if",locations:[{start:{line:1413,column:8},end:{line:1417,column:9}},{start:{line:1413,column:8},end:{line:1417,column:9}}],line:1413},"94":{loc:{start:{line:1415,column:14},end:{line:1417,column:9}},type:"if",locations:[{start:{line:1415,column:14},end:{line:1417,column:9}},{start:{line:1415,column:14},end:{line:1417,column:9}}],line:1415},"95":{loc:{start:{line:1424,column:8},end:{line:1426,column:9}},type:"if",locations:[{start:{line:1424,column:8},end:{line:1426,column:9}},{start:{line:1424,column:8},end:{line:1426,column:9}}],line:1424},"96":{loc:{start:{line:1424,column:12},end:{line:1424,column:96}},type:"binary-expr",locations:[{start:{line:1424,column:12},end:{line:1424,column:39}},{start:{line:1424,column:43},end:{line:1424,column:63}},{start:{line:1424,column:67},end:{line:1424,column:96}}],line:1424},"97":{loc:{start:{line:1428,column:8},end:{line:1430,column:9}},type:"if",locations:[{start:{line:1428,column:8},end:{line:1430,column:9}},{start:{line:1428,column:8},end:{line:1430,column:9}}],line:1428},"98":{loc:{start:{line:1436,column:12},end:{line:1438,column:13}},type:"if",locations:[{start:{line:1436,column:12},end:{line:1438,column:13}},{start:{line:1436,column:12},end:{line:1438,column:13}}],line:1436},"99":{loc:{start:{line:1440,column:8},end:{line:1495,column:9}},type:"switch",locations:[{start:{line:1441,column:12},end:{line:1446,column:17}},{start:{line:1447,column:12},end:{line:1452,column:17}},{start:{line:1453,column:12},end:{line:1458,column:17}},{start:{line:1459,column:12},end:{line:1464,column:17}},{start:{line:1465,column:12},end:{line:1470,column:17}},{start:{line:1471,column:12},end:{line:1476,column:17}},{start:{line:1477,column:12},end:{line:1482,column:17}},{start:{line:1483,column:12},end:{line:1488,column:17}},{start:{line:1489,column:12},end:{line:1494,column:17}}],line:1440},"100":{loc:{start:{line:1442,column:16},end:{line:1446,column:17}},type:"if",locations:[{start:{line:1442,column:16},end:{line:1446,column:17}},{start:{line:1442,column:16},end:{line:1446,column:17}}],line:1442},"101":{loc:{start:{line:1448,column:16},end:{line:1452,column:17}},type:"if",locations:[{start:{line:1448,column:16},end:{line:1452,column:17}},{start:{line:1448,column:16},end:{line:1452,column:17}}],line:1448},"102":{loc:{start:{line:1454,column:16},end:{line:1458,column:17}},type:"if",locations:[{start:{line:1454,column:16},end:{line:1458,column:17}},{start:{line:1454,column:16},end:{line:1458,column:17}}],line:1454},"103":{loc:{start:{line:1460,column:16},end:{line:1464,column:17}},type:"if",locations:[{start:{line:1460,column:16},end:{line:1464,column:17}},{start:{line:1460,column:16},end:{line:1464,column:17}}],line:1460},"104":{loc:{start:{line:1466,column:16},end:{line:1470,column:17}},type:"if",locations:[{start:{line:1466,column:16},end:{line:1470,column:17}},{start:{line:1466,column:16},end:{line:1470,column:17}}],line:1466},"105":{loc:{start:{line:1472,column:16},end:{line:1476,column:17}},type:"if",locations:[{start:{line:1472,column:16},end:{line:1476,column:17}},{start:{line:1472,column:16},end:{line:1476,column:17}}],line:1472},"106":{loc:{start:{line:1478,column:16},end:{line:1482,column:17}},type:"if",locations:[{start:{line:1478,column:16},end:{line:1482,column:17}},{start:{line:1478,column:16},end:{line:1482,column:17}}],line:1478},"107":{loc:{start:{line:1484,column:16},end:{line:1488,column:17}},type:"if",locations:[{start:{line:1484,column:16},end:{line:1488,column:17}},{start:{line:1484,column:16},end:{line:1488,column:17}}],line:1484},"108":{loc:{start:{line:1490,column:16},end:{line:1494,column:17}},type:"if",locations:[{start:{line:1490,column:16},end:{line:1494,column:17}},{start:{line:1490,column:16},end:{line:1494,column:17}}],line:1490},"109":{loc:{start:{line:1515,column:8},end:{line:1521,column:9}},type:"if",locations:[{start:{line:1515,column:8},end:{line:1521,column:9}},{start:{line:1515,column:8},end:{line:1521,column:9}}],line:1515},"110":{loc:{start:{line:1517,column:14},end:{line:1521,column:9}},type:"if",locations:[{start:{line:1517,column:14},end:{line:1521,column:9}},{start:{line:1517,column:14},end:{line:1521,column:9}}],line:1517},"111":{loc:{start:{line:1542,column:8},end:{line:1553,column:9}},type:"if",locations:[{start:{line:1542,column:8},end:{line:1553,column:9}},{start:{line:1542,column:8},end:{line:1553,column:9}}],line:1542},"112":{loc:{start:{line:1547,column:14},end:{line:1553,column:9}},type:"if",locations:[{start:{line:1547,column:14},end:{line:1553,column:9}},{start:{line:1547,column:14},end:{line:1553,column:9}}],line:1547},"113":{loc:{start:{line:1558,column:8},end:{line:1560,column:9}},type:"if",locations:[{start:{line:1558,column:8},end:{line:1560,column:9}},{start:{line:1558,column:8},end:{line:1560,column:9}}],line:1558},"114":{loc:{start:{line:1558,column:12},end:{line:1558,column:39}},type:"binary-expr",locations:[{start:{line:1558,column:12},end:{line:1558,column:20}},{start:{line:1558,column:24},end:{line:1558,column:39}}],line:1558},"115":{loc:{start:{line:1675,column:8},end:{line:1677,column:9}},type:"if",locations:[{start:{line:1675,column:8},end:{line:1677,column:9}},{start:{line:1675,column:8},end:{line:1677,column:9}}],line:1675},"116":{loc:{start:{line:1675,column:12},end:{line:1675,column:60}},type:"binary-expr",locations:[{start:{line:1675,column:12},end:{line:1675,column:28}},{start:{line:1675,column:32},end:{line:1675,column:60}}],line:1675},"117":{loc:{start:{line:1680,column:8},end:{line:1682,column:9}},type:"if",locations:[{start:{line:1680,column:8},end:{line:1682,column:9}},{start:{line:1680,column:8},end:{line:1682,column:9}}],line:1680},"118":{loc:{start:{line:1692,column:8},end:{line:1694,column:9}},type:"if",locations:[{start:{line:1692,column:8},end:{line:1694,column:9}},{start:{line:1692,column:8},end:{line:1694,column:9}}],line:1692},"119":{loc:{start:{line:1692,column:12},end:{line:1692,column:50}},type:"binary-expr",locations:[{start:{line:1692,column:12},end:{line:1692,column:23}},{start:{line:1692,column:27},end:{line:1692,column:50}}],line:1692},"120":{loc:{start:{line:1697,column:8},end:{line:1699,column:9}},type:"if",locations:[{start:{line:1697,column:8},end:{line:1699,column:9}},{start:{line:1697,column:8},end:{line:1699,column:9}}],line:1697},"121":{loc:{start:{line:1702,column:8},end:{line:1704,column:9}},type:"if",locations:[{start:{line:1702,column:8},end:{line:1704,column:9}},{start:{line:1702,column:8},end:{line:1704,column:9}}],line:1702},"122":{loc:{start:{line:1711,column:8},end:{line:1713,column:9}},type:"if",locations:[{start:{line:1711,column:8},end:{line:1713,column:9}},{start:{line:1711,column:8},end:{line:1713,column:9}}],line:1711},"123":{loc:{start:{line:1711,column:12},end:{line:1711,column:62}},type:"binary-expr",locations:[{start:{line:1711,column:12},end:{line:1711,column:29}},{start:{line:1711,column:33},end:{line:1711,column:62}}],line:1711},"124":{loc:{start:{line:1715,column:8},end:{line:1717,column:9}},type:"if",locations:[{start:{line:1715,column:8},end:{line:1717,column:9}},{start:{line:1715,column:8},end:{line:1717,column:9}}],line:1715},"125":{loc:{start:{line:1715,column:13},end:{line:1715,column:145}},type:"binary-expr",locations:[{start:{line:1715,column:13},end:{line:1715,column:59}},{start:{line:1715,column:63},end:{line:1715,column:105}},{start:{line:1715,column:109},end:{line:1715,column:145}}],line:1715},"126":{loc:{start:{line:1742,column:8},end:{line:1744,column:9}},type:"if",locations:[{start:{line:1742,column:8},end:{line:1744,column:9}},{start:{line:1742,column:8},end:{line:1744,column:9}}],line:1742},"127":{loc:{start:{line:1742,column:12},end:{line:1742,column:50}},type:"binary-expr",locations:[{start:{line:1742,column:12},end:{line:1742,column:23}},{start:{line:1742,column:27},end:{line:1742,column:50}}],line:1742},"128":{loc:{start:{line:1748,column:8},end:{line:1750,column:9}},type:"if",locations:[{start:{line:1748,column:8},end:{line:1750,column:9}},{start:{line:1748,column:8},end:{line:1750,column:9}}],line:1748},"129":{loc:{start:{line:1748,column:12},end:{line:1748,column:56}},type:"binary-expr",locations:[{start:{line:1748,column:12},end:{line:1748,column:26}},{start:{line:1748,column:30},end:{line:1748,column:56}}],line:1748},"130":{loc:{start:{line:1753,column:8},end:{line:1755,column:9}},type:"if",locations:[{start:{line:1753,column:8},end:{line:1755,column:9}},{start:{line:1753,column:8},end:{line:1755,column:9}}],line:1753},"131":{loc:{start:{line:1753,column:11},end:{line:1753,column:50}},type:"binary-expr",locations:[{start:{line:1753,column:11},end:{line:1753,column:30}},{start:{line:1753,column:34},end:{line:1753,column:50}}],line:1753},"132":{loc:{start:{line:1801,column:8},end:{line:1803,column:9}},type:"if",locations:[{start:{line:1801,column:8},end:{line:1803,column:9}},{start:{line:1801,column:8},end:{line:1803,column:9}}],line:1801},"133":{loc:{start:{line:1818,column:8},end:{line:1820,column:9}},type:"if",locations:[{start:{line:1818,column:8},end:{line:1820,column:9}},{start:{line:1818,column:8},end:{line:1820,column:9}}],line:1818},"134":{loc:{start:{line:1818,column:11},end:{line:1818,column:49}},type:"binary-expr",locations:[{start:{line:1818,column:11},end:{line:1818,column:22}},{start:{line:1818,column:26},end:{line:1818,column:49}}],line:1818},"135":{loc:{start:{line:1826,column:8},end:{line:1828,column:9}},type:"if",locations:[{start:{line:1826,column:8},end:{line:1828,column:9}},{start:{line:1826,column:8},end:{line:1828,column:9}}],line:1826},"136":{loc:{start:{line:1826,column:12},end:{line:1826,column:48}},type:"binary-expr",locations:[{start:{line:1826,column:12},end:{line:1826,column:22}},{start:{line:1826,column:26},end:{line:1826,column:48}}],line:1826},"137":{loc:{start:{line:1830,column:8},end:{line:1833,column:9}},type:"if",locations:[{start:{line:1830,column:8},end:{line:1833,column:9}},{start:{line:1830,column:8},end:{line:1833,column:9}}],line:1830},"138":{loc:{start:{line:1835,column:8},end:{line:1838,column:9}},type:"if",locations:[{start:{line:1835,column:8},end:{line:1838,column:9}},{start:{line:1835,column:8},end:{line:1838,column:9}}],line:1835},"139":{loc:{start:{line:1839,column:8},end:{line:1841,column:9}},type:"if",locations:[{start:{line:1839,column:8},end:{line:1841,column:9}},{start:{line:1839,column:8},end:{line:1841,column:9}}],line:1839},"140":{loc:{start:{line:1844,column:8},end:{line:1846,column:9}},type:"if",locations:[{start:{line:1844,column:8},end:{line:1846,column:9}},{start:{line:1844,column:8},end:{line:1846,column:9}}],line:1844},"141":{loc:{start:{line:1844,column:12},end:{line:1844,column:165}},type:"binary-expr",locations:[{start:{line:1844,column:12},end:{line:1844,column:62}},{start:{line:1844,column:66},end:{line:1844,column:118}},{start:{line:1844,column:122},end:{line:1844,column:165}}],line:1844},"142":{loc:{start:{line:1860,column:8},end:{line:1862,column:9}},type:"if",locations:[{start:{line:1860,column:8},end:{line:1862,column:9}},{start:{line:1860,column:8},end:{line:1862,column:9}}],line:1860},"143":{loc:{start:{line:1860,column:12},end:{line:1860,column:48}},type:"binary-expr",locations:[{start:{line:1860,column:12},end:{line:1860,column:22}},{start:{line:1860,column:26},end:{line:1860,column:48}}],line:1860},"144":{loc:{start:{line:1881,column:8},end:{line:1883,column:9}},type:"if",locations:[{start:{line:1881,column:8},end:{line:1883,column:9}},{start:{line:1881,column:8},end:{line:1883,column:9}}],line:1881},"145":{loc:{start:{line:1881,column:12},end:{line:1881,column:52}},type:"binary-expr",locations:[{start:{line:1881,column:12},end:{line:1881,column:24}},{start:{line:1881,column:28},end:{line:1881,column:52}}],line:1881},"146":{loc:{start:{line:1887,column:8},end:{line:1889,column:9}},type:"if",locations:[{start:{line:1887,column:8},end:{line:1889,column:9}},{start:{line:1887,column:8},end:{line:1889,column:9}}],line:1887},"147":{loc:{start:{line:1887,column:12},end:{line:1887,column:48}},type:"binary-expr",locations:[{start:{line:1887,column:12},end:{line:1887,column:22}},{start:{line:1887,column:26},end:{line:1887,column:48}}],line:1887},"148":{loc:{start:{line:1891,column:8},end:{line:1893,column:9}},type:"if",locations:[{start:{line:1891,column:8},end:{line:1893,column:9}},{start:{line:1891,column:8},end:{line:1893,column:9}}],line:1891},"149":{loc:{start:{line:1960,column:8},end:{line:1962,column:9}},type:"if",locations:[{start:{line:1960,column:8},end:{line:1962,column:9}},{start:{line:1960,column:8},end:{line:1962,column:9}}],line:1960},"150":{loc:{start:{line:1960,column:12},end:{line:1960,column:94}},type:"binary-expr",locations:[{start:{line:1960,column:12},end:{line:1960,column:37}},{start:{line:1960,column:41},end:{line:1960,column:61}},{start:{line:1960,column:65},end:{line:1960,column:94}}],line:1960},"151":{loc:{start:{line:1965,column:8},end:{line:1967,column:9}},type:"if",locations:[{start:{line:1965,column:8},end:{line:1967,column:9}},{start:{line:1965,column:8},end:{line:1967,column:9}}],line:1965},"152":{loc:{start:{line:1973,column:12},end:{line:1975,column:13}},type:"if",locations:[{start:{line:1973,column:12},end:{line:1975,column:13}},{start:{line:1973,column:12},end:{line:1975,column:13}}],line:1973},"153":{loc:{start:{line:1978,column:8},end:{line:2035,column:9}},type:"switch",locations:[{start:{line:1979,column:12},end:{line:1984,column:17}},{start:{line:1985,column:12},end:{line:1990,column:17}},{start:{line:1991,column:12},end:{line:1996,column:17}},{start:{line:1997,column:12},end:{line:2002,column:17}},{start:{line:2009,column:12},end:{line:2014,column:17}},{start:{line:2027,column:12},end:{line:2032,column:17}}],line:1978},"154":{loc:{start:{line:1980,column:16},end:{line:1984,column:17}},type:"if",locations:[{start:{line:1980,column:16},end:{line:1984,column:17}},{start:{line:1980,column:16},end:{line:1984,column:17}}],line:1980},"155":{loc:{start:{line:1986,column:16},end:{line:1990,column:17}},type:"if",locations:[{start:{line:1986,column:16},end:{line:1990,column:17}},{start:{line:1986,column:16},end:{line:1990,column:17}}],line:1986},"156":{loc:{start:{line:1992,column:16},end:{line:1996,column:17}},type:"if",locations:[{start:{line:1992,column:16},end:{line:1996,column:17}},{start:{line:1992,column:16},end:{line:1996,column:17}}],line:1992},"157":{loc:{start:{line:1998,column:16},end:{line:2002,column:17}},type:"if",locations:[{start:{line:1998,column:16},end:{line:2002,column:17}},{start:{line:1998,column:16},end:{line:2002,column:17}}],line:1998},"158":{loc:{start:{line:2010,column:16},end:{line:2014,column:17}},type:"if",locations:[{start:{line:2010,column:16},end:{line:2014,column:17}},{start:{line:2010,column:16},end:{line:2014,column:17}}],line:2010},"159":{loc:{start:{line:2010,column:20},end:{line:2010,column:69}},type:"binary-expr",locations:[{start:{line:2010,column:20},end:{line:2010,column:45}},{start:{line:2010,column:49},end:{line:2010,column:69}}],line:2010},"160":{loc:{start:{line:2028,column:16},end:{line:2032,column:17}},type:"if",locations:[{start:{line:2028,column:16},end:{line:2032,column:17}},{start:{line:2028,column:16},end:{line:2032,column:17}}],line:2028},"161":{loc:{start:{line:2028,column:20},end:{line:2028,column:69}},type:"binary-expr",locations:[{start:{line:2028,column:20},end:{line:2028,column:45}},{start:{line:2028,column:49},end:{line:2028,column:69}}],line:2028},"162":{loc:{start:{line:2054,column:8},end:{line:2058,column:9}},type:"if",locations:[{start:{line:2054,column:8},end:{line:2058,column:9}},{start:{line:2054,column:8},end:{line:2058,column:9}}],line:2054},"163":{loc:{start:{line:2056,column:14},end:{line:2058,column:9}},type:"if",locations:[{start:{line:2056,column:14},end:{line:2058,column:9}},{start:{line:2056,column:14},end:{line:2058,column:9}}],line:2056},"164":{loc:{start:{line:2108,column:12},end:{line:2111,column:13}},type:"if",locations:[{start:{line:2108,column:12},end:{line:2111,column:13}},{start:{line:2108,column:12},end:{line:2111,column:13}}],line:2108},"165":{loc:{start:{line:2112,column:12},end:{line:2114,column:13}},type:"if",locations:[{start:{line:2112,column:12},end:{line:2114,column:13}},{start:{line:2112,column:12},end:{line:2114,column:13}}],line:2112},"166":{loc:{start:{line:2117,column:8},end:{line:2120,column:9}},type:"if",locations:[{start:{line:2117,column:8},end:{line:2120,column:9}},{start:{line:2117,column:8},end:{line:2120,column:9}}],line:2117},"167":{loc:{start:{line:2117,column:12},end:{line:2117,column:60}},type:"binary-expr",locations:[{start:{line:2117,column:12},end:{line:2117,column:35}},{start:{line:2117,column:39},end:{line:2117,column:60}}],line:2117},"168":{loc:{start:{line:2144,column:12},end:{line:2147,column:13}},type:"if",locations:[{start:{line:2144,column:12},end:{line:2147,column:13}},{start:{line:2144,column:12},end:{line:2147,column:13}}],line:2144},"169":{loc:{start:{line:2148,column:12},end:{line:2150,column:13}},type:"if",locations:[{start:{line:2148,column:12},end:{line:2150,column:13}},{start:{line:2148,column:12},end:{line:2150,column:13}}],line:2148},"170":{loc:{start:{line:2153,column:8},end:{line:2155,column:9}},type:"if",locations:[{start:{line:2153,column:8},end:{line:2155,column:9}},{start:{line:2153,column:8},end:{line:2155,column:9}}],line:2153},"171":{loc:{start:{line:2153,column:12},end:{line:2153,column:54}},type:"binary-expr",locations:[{start:{line:2153,column:12},end:{line:2153,column:43}},{start:{line:2153,column:47},end:{line:2153,column:54}}],line:2153},"172":{loc:{start:{line:2158,column:8},end:{line:2160,column:9}},type:"if",locations:[{start:{line:2158,column:8},end:{line:2160,column:9}},{start:{line:2158,column:8},end:{line:2160,column:9}}],line:2158},"173":{loc:{start:{line:2175,column:8},end:{line:2177,column:9}},type:"if",locations:[{start:{line:2175,column:8},end:{line:2177,column:9}},{start:{line:2175,column:8},end:{line:2177,column:9}}],line:2175},"174":{loc:{start:{line:2175,column:12},end:{line:2175,column:50}},type:"binary-expr",locations:[{start:{line:2175,column:12},end:{line:2175,column:23}},{start:{line:2175,column:27},end:{line:2175,column:50}}],line:2175},"175":{loc:{start:{line:2180,column:8},end:{line:2182,column:9}},type:"if",locations:[{start:{line:2180,column:8},end:{line:2182,column:9}},{start:{line:2180,column:8},end:{line:2182,column:9}}],line:2180},"176":{loc:{start:{line:2187,column:8},end:{line:2189,column:9}},type:"if",locations:[{start:{line:2187,column:8},end:{line:2189,column:9}},{start:{line:2187,column:8},end:{line:2189,column:9}}],line:2187},"177":{loc:{start:{line:2221,column:8},end:{line:2223,column:9}},type:"if",locations:[{start:{line:2221,column:8},end:{line:2223,column:9}},{start:{line:2221,column:8},end:{line:2223,column:9}}],line:2221},"178":{loc:{start:{line:2232,column:8},end:{line:2234,column:9}},type:"if",locations:[{start:{line:2232,column:8},end:{line:2234,column:9}},{start:{line:2232,column:8},end:{line:2234,column:9}}],line:2232},"179":{loc:{start:{line:2232,column:12},end:{line:2232,column:48}},type:"binary-expr",locations:[{start:{line:2232,column:12},end:{line:2232,column:22}},{start:{line:2232,column:26},end:{line:2232,column:48}}],line:2232},"180":{loc:{start:{line:2237,column:8},end:{line:2239,column:9}},type:"if",locations:[{start:{line:2237,column:8},end:{line:2239,column:9}},{start:{line:2237,column:8},end:{line:2239,column:9}}],line:2237},"181":{loc:{start:{line:2240,column:8},end:{line:2242,column:9}},type:"if",locations:[{start:{line:2240,column:8},end:{line:2242,column:9}},{start:{line:2240,column:8},end:{line:2242,column:9}}],line:2240},"182":{loc:{start:{line:2270,column:8},end:{line:2297,column:9}},type:"if",locations:[{start:{line:2270,column:8},end:{line:2297,column:9}},{start:{line:2270,column:8},end:{line:2297,column:9}}],line:2270},"183":{loc:{start:{line:2304,column:39},end:{line:2304,column:215}},type:"cond-expr",locations:[{start:{line:2304,column:123},end:{line:2304,column:124}},{start:{line:2304,column:127},end:{line:2304,column:215}}],line:2304},"184":{loc:{start:{line:2304,column:40},end:{line:2304,column:119}},type:"binary-expr",locations:[{start:{line:2304,column:40},end:{line:2304,column:53}},{start:{line:2304,column:57},end:{line:2304,column:69}},{start:{line:2304,column:73},end:{line:2304,column:85}},{start:{line:2304,column:89},end:{line:2304,column:102}},{start:{line:2304,column:106},end:{line:2304,column:119}}],line:2304},"185":{loc:{start:{line:2304,column:127},end:{line:2304,column:215}},type:"cond-expr",locations:[{start:{line:2304,column:210},end:{line:2304,column:212}},{start:{line:2304,column:214},end:{line:2304,column:215}}],line:2304},"186":{loc:{start:{line:2304,column:128},end:{line:2304,column:207}},type:"binary-expr",locations:[{start:{line:2304,column:128},end:{line:2304,column:141}},{start:{line:2304,column:145},end:{line:2304,column:157}},{start:{line:2304,column:161},end:{line:2304,column:173}},{start:{line:2304,column:177},end:{line:2304,column:190}},{start:{line:2304,column:194},end:{line:2304,column:207}}],line:2304},"187":{loc:{start:{line:2305,column:39},end:{line:2305,column:118}},type:"cond-expr",locations:[{start:{line:2305,column:61},end:{line:2305,column:62}},{start:{line:2305,column:66},end:{line:2305,column:117}}],line:2305},"188":{loc:{start:{line:2305,column:66},end:{line:2305,column:117}},type:"cond-expr",locations:[{start:{line:2305,column:88},end:{line:2305,column:90}},{start:{line:2305,column:93},end:{line:2305,column:117}}],line:2305},"189":{loc:{start:{line:2305,column:93},end:{line:2305,column:117}},type:"cond-expr",locations:[{start:{line:2305,column:111},end:{line:2305,column:112}},{start:{line:2305,column:115},end:{line:2305,column:117}}],line:2305},"190":{loc:{start:{line:2306,column:39},end:{line:2306,column:113}},type:"cond-expr",locations:[{start:{line:2306,column:71},end:{line:2306,column:73}},{start:{line:2306,column:76},end:{line:2306,column:112}}],line:2306},"191":{loc:{start:{line:2306,column:40},end:{line:2306,column:67}},type:"binary-expr",locations:[{start:{line:2306,column:40},end:{line:2306,column:52}},{start:{line:2306,column:56},end:{line:2306,column:67}}],line:2306},"192":{loc:{start:{line:2306,column:76},end:{line:2306,column:112}},type:"cond-expr",locations:[{start:{line:2306,column:106},end:{line:2306,column:108}},{start:{line:2306,column:111},end:{line:2306,column:112}}],line:2306},"193":{loc:{start:{line:2306,column:76},end:{line:2306,column:103}},type:"binary-expr",locations:[{start:{line:2306,column:76},end:{line:2306,column:88}},{start:{line:2306,column:92},end:{line:2306,column:103}}],line:2306},"194":{loc:{start:{line:2313,column:39},end:{line:2313,column:215}},type:"cond-expr",locations:[{start:{line:2313,column:123},end:{line:2313,column:124}},{start:{line:2313,column:127},end:{line:2313,column:215}}],line:2313},"195":{loc:{start:{line:2313,column:40},end:{line:2313,column:119}},type:"binary-expr",locations:[{start:{line:2313,column:40},end:{line:2313,column:53}},{start:{line:2313,column:57},end:{line:2313,column:69}},{start:{line:2313,column:73},end:{line:2313,column:85}},{start:{line:2313,column:89},end:{line:2313,column:102}},{start:{line:2313,column:106},end:{line:2313,column:119}}],line:2313},"196":{loc:{start:{line:2313,column:127},end:{line:2313,column:215}},type:"cond-expr",locations:[{start:{line:2313,column:210},end:{line:2313,column:212}},{start:{line:2313,column:214},end:{line:2313,column:215}}],line:2313},"197":{loc:{start:{line:2313,column:128},end:{line:2313,column:207}},type:"binary-expr",locations:[{start:{line:2313,column:128},end:{line:2313,column:141}},{start:{line:2313,column:145},end:{line:2313,column:157}},{start:{line:2313,column:161},end:{line:2313,column:173}},{start:{line:2313,column:177},end:{line:2313,column:190}},{start:{line:2313,column:194},end:{line:2313,column:207}}],line:2313},"198":{loc:{start:{line:2314,column:39},end:{line:2314,column:118}},type:"cond-expr",locations:[{start:{line:2314,column:61},end:{line:2314,column:63}},{start:{line:2314,column:67},end:{line:2314,column:117}}],line:2314},"199":{loc:{start:{line:2314,column:67},end:{line:2314,column:117}},type:"cond-expr",locations:[{start:{line:2314,column:89},end:{line:2314,column:90}},{start:{line:2314,column:93},end:{line:2314,column:117}}],line:2314},"200":{loc:{start:{line:2314,column:93},end:{line:2314,column:117}},type:"cond-expr",locations:[{start:{line:2314,column:111},end:{line:2314,column:112}},{start:{line:2314,column:115},end:{line:2314,column:117}}],line:2314},"201":{loc:{start:{line:2315,column:39},end:{line:2315,column:113}},type:"cond-expr",locations:[{start:{line:2315,column:71},end:{line:2315,column:73}},{start:{line:2315,column:76},end:{line:2315,column:112}}],line:2315},"202":{loc:{start:{line:2315,column:40},end:{line:2315,column:67}},type:"binary-expr",locations:[{start:{line:2315,column:40},end:{line:2315,column:52}},{start:{line:2315,column:56},end:{line:2315,column:67}}],line:2315},"203":{loc:{start:{line:2315,column:76},end:{line:2315,column:112}},type:"cond-expr",locations:[{start:{line:2315,column:106},end:{line:2315,column:108}},{start:{line:2315,column:111},end:{line:2315,column:112}}],line:2315},"204":{loc:{start:{line:2315,column:76},end:{line:2315,column:103}},type:"binary-expr",locations:[{start:{line:2315,column:76},end:{line:2315,column:88}},{start:{line:2315,column:92},end:{line:2315,column:103}}],line:2315},"205":{loc:{start:{line:2334,column:8},end:{line:2337,column:9}},type:"if",locations:[{start:{line:2334,column:8},end:{line:2337,column:9}},{start:{line:2334,column:8},end:{line:2337,column:9}}],line:2334},"206":{loc:{start:{line:2334,column:11},end:{line:2334,column:57}},type:"binary-expr",locations:[{start:{line:2334,column:11},end:{line:2334,column:26}},{start:{line:2334,column:30},end:{line:2334,column:57}}],line:2334},"207":{loc:{start:{line:2398,column:12},end:{line:2401,column:13}},type:"if",locations:[{start:{line:2398,column:12},end:{line:2401,column:13}},{start:{line:2398,column:12},end:{line:2401,column:13}}],line:2398},"208":{loc:{start:{line:2403,column:12},end:{line:2407,column:13}},type:"if",locations:[{start:{line:2403,column:12},end:{line:2407,column:13}},{start:{line:2403,column:12},end:{line:2407,column:13}}],line:2403},"209":{loc:{start:{line:2413,column:12},end:{line:2415,column:13}},type:"if",locations:[{start:{line:2413,column:12},end:{line:2415,column:13}},{start:{line:2413,column:12},end:{line:2415,column:13}}],line:2413},"210":{loc:{start:{line:2413,column:16},end:{line:2413,column:54}},type:"binary-expr",locations:[{start:{line:2413,column:16},end:{line:2413,column:27}},{start:{line:2413,column:31},end:{line:2413,column:54}}],line:2413},"211":{loc:{start:{line:2436,column:12},end:{line:2455,column:13}},type:"if",locations:[{start:{line:2436,column:12},end:{line:2455,column:13}},{start:{line:2436,column:12},end:{line:2455,column:13}}],line:2436},"212":{loc:{start:{line:2467,column:12},end:{line:2497,column:13}},type:"if",locations:[{start:{line:2467,column:12},end:{line:2497,column:13}},{start:{line:2467,column:12},end:{line:2497,column:13}}],line:2467},"213":{loc:{start:{line:2480,column:16},end:{line:2482,column:17}},type:"if",locations:[{start:{line:2480,column:16},end:{line:2482,column:17}},{start:{line:2480,column:16},end:{line:2482,column:17}}],line:2480},"214":{loc:{start:{line:2560,column:8},end:{line:2593,column:9}},type:"if",locations:[{start:{line:2560,column:8},end:{line:2593,column:9}},{start:{line:2560,column:8},end:{line:2593,column:9}}],line:2560},"215":{loc:{start:{line:2595,column:8},end:{line:2597,column:9}},type:"if",locations:[{start:{line:2595,column:8},end:{line:2597,column:9}},{start:{line:2595,column:8},end:{line:2597,column:9}}],line:2595},"216":{loc:{start:{line:2615,column:8},end:{line:2617,column:9}},type:"if",locations:[{start:{line:2615,column:8},end:{line:2617,column:9}},{start:{line:2615,column:8},end:{line:2617,column:9}}],line:2615},"217":{loc:{start:{line:2615,column:12},end:{line:2615,column:58}},type:"binary-expr",locations:[{start:{line:2615,column:12},end:{line:2615,column:27}},{start:{line:2615,column:31},end:{line:2615,column:58}}],line:2615},"218":{loc:{start:{line:2627,column:8},end:{line:2629,column:9}},type:"if",locations:[{start:{line:2627,column:8},end:{line:2629,column:9}},{start:{line:2627,column:8},end:{line:2629,column:9}}],line:2627},"219":{loc:{start:{line:2657,column:12},end:{line:2661,column:13}},type:"if",locations:[{start:{line:2657,column:12},end:{line:2661,column:13}},{start:{line:2657,column:12},end:{line:2661,column:13}}],line:2657},"220":{loc:{start:{line:2657,column:16},end:{line:2657,column:62}},type:"binary-expr",locations:[{start:{line:2657,column:16},end:{line:2657,column:35}},{start:{line:2657,column:39},end:{line:2657,column:62}}],line:2657},"221":{loc:{start:{line:2662,column:12},end:{line:2671,column:13}},type:"if",locations:[{start:{line:2662,column:12},end:{line:2671,column:13}},{start:{line:2662,column:12},end:{line:2671,column:13}}],line:2662},"222":{loc:{start:{line:2675,column:8},end:{line:2677,column:9}},type:"if",locations:[{start:{line:2675,column:8},end:{line:2677,column:9}},{start:{line:2675,column:8},end:{line:2677,column:9}}],line:2675},"223":{loc:{start:{line:2685,column:8},end:{line:2700,column:9}},type:"if",locations:[{start:{line:2685,column:8},end:{line:2700,column:9}},{start:{line:2685,column:8},end:{line:2700,column:9}}],line:2685},"224":{loc:{start:{line:2722,column:8},end:{line:2724,column:9}},type:"if",locations:[{start:{line:2722,column:8},end:{line:2724,column:9}},{start:{line:2722,column:8},end:{line:2724,column:9}}],line:2722},"225":{loc:{start:{line:2722,column:11},end:{line:2722,column:75}},type:"binary-expr",locations:[{start:{line:2722,column:11},end:{line:2722,column:35}},{start:{line:2722,column:39},end:{line:2722,column:75}}],line:2722},"226":{loc:{start:{line:2773,column:12},end:{line:2776,column:13}},type:"if",locations:[{start:{line:2773,column:12},end:{line:2776,column:13}},{start:{line:2773,column:12},end:{line:2776,column:13}}],line:2773},"227":{loc:{start:{line:2785,column:12},end:{line:2789,column:13}},type:"if",locations:[{start:{line:2785,column:12},end:{line:2789,column:13}},{start:{line:2785,column:12},end:{line:2789,column:13}}],line:2785},"228":{loc:{start:{line:2799,column:12},end:{line:2815,column:13}},type:"if",locations:[{start:{line:2799,column:12},end:{line:2815,column:13}},{start:{line:2799,column:12},end:{line:2815,column:13}}],line:2799},"229":{loc:{start:{line:2827,column:12},end:{line:2859,column:13}},type:"if",locations:[{start:{line:2827,column:12},end:{line:2859,column:13}},{start:{line:2827,column:12},end:{line:2859,column:13}}],line:2827},"230":{loc:{start:{line:2834,column:16},end:{line:2837,column:17}},type:"if",locations:[{start:{line:2834,column:16},end:{line:2837,column:17}},{start:{line:2834,column:16},end:{line:2837,column:17}}],line:2834},"231":{loc:{start:{line:2926,column:8},end:{line:2969,column:9}},type:"if",locations:[{start:{line:2926,column:8},end:{line:2969,column:9}},{start:{line:2926,column:8},end:{line:2969,column:9}}],line:2926},"232":{loc:{start:{line:2971,column:8},end:{line:2973,column:9}},type:"if",locations:[{start:{line:2971,column:8},end:{line:2973,column:9}},{start:{line:2971,column:8},end:{line:2973,column:9}}],line:2971},"233":{loc:{start:{line:2996,column:8},end:{line:3000,column:9}},type:"if",locations:[{start:{line:2996,column:8},end:{line:3000,column:9}},{start:{line:2996,column:8},end:{line:3000,column:9}}],line:2996},"234":{loc:{start:{line:2996,column:12},end:{line:2996,column:58}},type:"binary-expr",locations:[{start:{line:2996,column:12},end:{line:2996,column:27}},{start:{line:2996,column:31},end:{line:2996,column:58}}],line:2996},"235":{loc:{start:{line:3009,column:8},end:{line:3011,column:9}},type:"if",locations:[{start:{line:3009,column:8},end:{line:3011,column:9}},{start:{line:3009,column:8},end:{line:3011,column:9}}],line:3009},"236":{loc:{start:{line:3009,column:12},end:{line:3009,column:50}},type:"binary-expr",locations:[{start:{line:3009,column:12},end:{line:3009,column:23}},{start:{line:3009,column:27},end:{line:3009,column:50}}],line:3009},"237":{loc:{start:{line:3013,column:8},end:{line:3015,column:9}},type:"if",locations:[{start:{line:3013,column:8},end:{line:3015,column:9}},{start:{line:3013,column:8},end:{line:3015,column:9}}],line:3013},"238":{loc:{start:{line:3045,column:8},end:{line:3068,column:9}},type:"if",locations:[{start:{line:3045,column:8},end:{line:3068,column:9}},{start:{line:3045,column:8},end:{line:3068,column:9}}],line:3045},"239":{loc:{start:{line:3088,column:12},end:{line:3120,column:13}},type:"if",locations:[{start:{line:3088,column:12},end:{line:3120,column:13}},{start:{line:3088,column:12},end:{line:3120,column:13}}],line:3088},"240":{loc:{start:{line:3088,column:16},end:{line:3088,column:97}},type:"binary-expr",locations:[{start:{line:3088,column:16},end:{line:3088,column:45}},{start:{line:3088,column:49},end:{line:3088,column:63}},{start:{line:3088,column:67},end:{line:3088,column:97}}],line:3088},"241":{loc:{start:{line:3095,column:16},end:{line:3117,column:17}},type:"if",locations:[{start:{line:3095,column:16},end:{line:3117,column:17}},{start:{line:3095,column:16},end:{line:3117,column:17}}],line:3095},"242":{loc:{start:{line:3128,column:8},end:{line:3156,column:9}},type:"if",locations:[{start:{line:3128,column:8},end:{line:3156,column:9}},{start:{line:3128,column:8},end:{line:3156,column:9}}],line:3128},"243":{loc:{start:{line:3137,column:14},end:{line:3156,column:9}},type:"if",locations:[{start:{line:3137,column:14},end:{line:3156,column:9}},{start:{line:3137,column:14},end:{line:3156,column:9}}],line:3137},"244":{loc:{start:{line:3137,column:17},end:{line:3137,column:63}},type:"binary-expr",locations:[{start:{line:3137,column:17},end:{line:3137,column:47}},{start:{line:3137,column:51},end:{line:3137,column:63}}],line:3137},"245":{loc:{start:{line:3170,column:8},end:{line:3187,column:9}},type:"if",locations:[{start:{line:3170,column:8},end:{line:3187,column:9}},{start:{line:3170,column:8},end:{line:3187,column:9}}],line:3170},"246":{loc:{start:{line:3213,column:8},end:{line:3215,column:9}},type:"if",locations:[{start:{line:3213,column:8},end:{line:3215,column:9}},{start:{line:3213,column:8},end:{line:3215,column:9}}],line:3213},"247":{loc:{start:{line:3213,column:12},end:{line:3213,column:48}},type:"binary-expr",locations:[{start:{line:3213,column:12},end:{line:3213,column:22}},{start:{line:3213,column:26},end:{line:3213,column:48}}],line:3213},"248":{loc:{start:{line:3217,column:8},end:{line:3219,column:9}},type:"if",locations:[{start:{line:3217,column:8},end:{line:3219,column:9}},{start:{line:3217,column:8},end:{line:3219,column:9}}],line:3217},"249":{loc:{start:{line:3220,column:8},end:{line:3222,column:9}},type:"if",locations:[{start:{line:3220,column:8},end:{line:3222,column:9}},{start:{line:3220,column:8},end:{line:3222,column:9}}],line:3220},"250":{loc:{start:{line:3225,column:8},end:{line:3229,column:9}},type:"if",locations:[{start:{line:3225,column:8},end:{line:3229,column:9}},{start:{line:3225,column:8},end:{line:3229,column:9}}],line:3225},"251":{loc:{start:{line:3225,column:12},end:{line:3225,column:58}},type:"binary-expr",locations:[{start:{line:3225,column:12},end:{line:3225,column:27}},{start:{line:3225,column:31},end:{line:3225,column:58}}],line:3225},"252":{loc:{start:{line:3255,column:8},end:{line:3282,column:9}},type:"if",locations:[{start:{line:3255,column:8},end:{line:3282,column:9}},{start:{line:3255,column:8},end:{line:3282,column:9}}],line:3255},"253":{loc:{start:{line:3295,column:12},end:{line:3332,column:13}},type:"if",locations:[{start:{line:3295,column:12},end:{line:3332,column:13}},{start:{line:3295,column:12},end:{line:3332,column:13}}],line:3295},"254":{loc:{start:{line:3295,column:16},end:{line:3295,column:97}},type:"binary-expr",locations:[{start:{line:3295,column:16},end:{line:3295,column:45}},{start:{line:3295,column:49},end:{line:3295,column:63}},{start:{line:3295,column:67},end:{line:3295,column:97}}],line:3295},"255":{loc:{start:{line:3299,column:16},end:{line:3325,column:17}},type:"if",locations:[{start:{line:3299,column:16},end:{line:3325,column:17}},{start:{line:3299,column:16},end:{line:3325,column:17}}],line:3299},"256":{loc:{start:{line:3342,column:8},end:{line:3369,column:9}},type:"if",locations:[{start:{line:3342,column:8},end:{line:3369,column:9}},{start:{line:3342,column:8},end:{line:3369,column:9}}],line:3342},"257":{loc:{start:{line:3351,column:14},end:{line:3369,column:9}},type:"if",locations:[{start:{line:3351,column:14},end:{line:3369,column:9}},{start:{line:3351,column:14},end:{line:3369,column:9}}],line:3351},"258":{loc:{start:{line:3351,column:17},end:{line:3351,column:63}},type:"binary-expr",locations:[{start:{line:3351,column:17},end:{line:3351,column:47}},{start:{line:3351,column:51},end:{line:3351,column:63}}],line:3351},"259":{loc:{start:{line:3387,column:8},end:{line:3403,column:9}},type:"if",locations:[{start:{line:3387,column:8},end:{line:3403,column:9}},{start:{line:3387,column:8},end:{line:3403,column:9}}],line:3387},"260":{loc:{start:{line:3417,column:8},end:{line:3419,column:9}},type:"if",locations:[{start:{line:3417,column:8},end:{line:3419,column:9}},{start:{line:3417,column:8},end:{line:3419,column:9}}],line:3417},"261":{loc:{start:{line:3425,column:8},end:{line:3427,column:9}},type:"if",locations:[{start:{line:3425,column:8},end:{line:3427,column:9}},{start:{line:3425,column:8},end:{line:3427,column:9}}],line:3425},"262":{loc:{start:{line:3425,column:12},end:{line:3425,column:48}},type:"binary-expr",locations:[{start:{line:3425,column:12},end:{line:3425,column:22}},{start:{line:3425,column:26},end:{line:3425,column:48}}],line:3425},"263":{loc:{start:{line:3431,column:8},end:{line:3433,column:9}},type:"if",locations:[{start:{line:3431,column:8},end:{line:3433,column:9}},{start:{line:3431,column:8},end:{line:3433,column:9}}],line:3431},"264":{loc:{start:{line:3434,column:8},end:{line:3436,column:9}},type:"if",locations:[{start:{line:3434,column:8},end:{line:3436,column:9}},{start:{line:3434,column:8},end:{line:3436,column:9}}],line:3434},"265":{loc:{start:{line:3440,column:8},end:{line:3444,column:9}},type:"if",locations:[{start:{line:3440,column:8},end:{line:3444,column:9}},{start:{line:3440,column:8},end:{line:3444,column:9}}],line:3440},"266":{loc:{start:{line:3440,column:12},end:{line:3440,column:58}},type:"binary-expr",locations:[{start:{line:3440,column:12},end:{line:3440,column:27}},{start:{line:3440,column:31},end:{line:3440,column:58}}],line:3440},"267":{loc:{start:{line:3486,column:12},end:{line:3534,column:13}},type:"if",locations:[{start:{line:3486,column:12},end:{line:3534,column:13}},{start:{line:3486,column:12},end:{line:3534,column:13}}],line:3486},"268":{loc:{start:{line:3490,column:16},end:{line:3518,column:17}},type:"if",locations:[{start:{line:3490,column:16},end:{line:3518,column:17}},{start:{line:3490,column:16},end:{line:3518,column:17}}],line:3490},"269":{loc:{start:{line:3501,column:23},end:{line:3518,column:17}},type:"if",locations:[{start:{line:3501,column:23},end:{line:3518,column:17}},{start:{line:3501,column:23},end:{line:3518,column:17}}],line:3501},"270":{loc:{start:{line:3501,column:26},end:{line:3501,column:48}},type:"binary-expr",locations:[{start:{line:3501,column:26},end:{line:3501,column:35}},{start:{line:3501,column:39},end:{line:3501,column:48}}],line:3501},"271":{loc:{start:{line:3569,column:8},end:{line:3583,column:9}},type:"if",locations:[{start:{line:3569,column:8},end:{line:3583,column:9}},{start:{line:3569,column:8},end:{line:3583,column:9}}],line:3569},"272":{loc:{start:{line:3596,column:8},end:{line:3598,column:9}},type:"if",locations:[{start:{line:3596,column:8},end:{line:3598,column:9}},{start:{line:3596,column:8},end:{line:3598,column:9}}],line:3596},"273":{loc:{start:{line:3605,column:8},end:{line:3607,column:9}},type:"if",locations:[{start:{line:3605,column:8},end:{line:3607,column:9}},{start:{line:3605,column:8},end:{line:3607,column:9}}],line:3605},"274":{loc:{start:{line:3605,column:12},end:{line:3605,column:50}},type:"binary-expr",locations:[{start:{line:3605,column:12},end:{line:3605,column:23}},{start:{line:3605,column:27},end:{line:3605,column:50}}],line:3605},"275":{loc:{start:{line:3609,column:8},end:{line:3611,column:9}},type:"if",locations:[{start:{line:3609,column:8},end:{line:3611,column:9}},{start:{line:3609,column:8},end:{line:3611,column:9}}],line:3609},"276":{loc:{start:{line:3616,column:8},end:{line:3621,column:9}},type:"if",locations:[{start:{line:3616,column:8},end:{line:3621,column:9}},{start:{line:3616,column:8},end:{line:3621,column:9}}],line:3616},"277":{loc:{start:{line:3616,column:12},end:{line:3616,column:58}},type:"binary-expr",locations:[{start:{line:3616,column:12},end:{line:3616,column:27}},{start:{line:3616,column:31},end:{line:3616,column:58}}],line:3616},"278":{loc:{start:{line:3665,column:12},end:{line:3721,column:13}},type:"if",locations:[{start:{line:3665,column:12},end:{line:3721,column:13}},{start:{line:3665,column:12},end:{line:3721,column:13}}],line:3665},"279":{loc:{start:{line:3671,column:16},end:{line:3718,column:17}},type:"if",locations:[{start:{line:3671,column:16},end:{line:3718,column:17}},{start:{line:3671,column:16},end:{line:3718,column:17}}],line:3671},"280":{loc:{start:{line:3691,column:20},end:{line:3717,column:21}},type:"if",locations:[{start:{line:3691,column:20},end:{line:3717,column:21}},{start:{line:3691,column:20},end:{line:3717,column:21}}],line:3691},"281":{loc:{start:{line:3764,column:8},end:{line:3771,column:9}},type:"if",locations:[{start:{line:3764,column:8},end:{line:3771,column:9}},{start:{line:3764,column:8},end:{line:3771,column:9}}],line:3764},"282":{loc:{start:{line:4049,column:8},end:{line:4051,column:9}},type:"if",locations:[{start:{line:4049,column:8},end:{line:4051,column:9}},{start:{line:4049,column:8},end:{line:4051,column:9}}],line:4049},"283":{loc:{start:{line:4049,column:12},end:{line:4049,column:58}},type:"binary-expr",locations:[{start:{line:4049,column:12},end:{line:4049,column:27}},{start:{line:4049,column:31},end:{line:4049,column:58}}],line:4049}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1509":0,"1510":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1517":0,"1518":0,"1519":0,"1520":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":0,"1526":0,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1550":0,"1551":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1557":0,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1572":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":0,"1581":0,"1582":0,"1583":0,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":0,"1593":0,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":0,"1600":0,"1601":0,"1602":0,"1603":0,"1604":0,"1605":0,"1606":0,"1607":0,"1608":0,"1609":0,"1610":0,"1611":0,"1612":0,"1613":0,"1614":0,"1615":0,"1616":0,"1617":0,"1618":0,"1619":0,"1620":0,"1621":0,"1622":0,"1623":0,"1624":0,"1625":0,"1626":0,"1627":0,"1628":0,"1629":0,"1630":0,"1631":0,"1632":0,"1633":0,"1634":0,"1635":0,"1636":0,"1637":0,"1638":0,"1639":0,"1640":0,"1641":0,"1642":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0,0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0,0],"97":[0,0],"98":[0,0],"99":[0,0,0,0,0,0,0,0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0,0],"151":[0,0],"152":[0,0],"153":[0,0,0,0,0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0,0,0,0],"185":[0,0],"186":[0,0,0,0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0,0,0,0],"196":[0,0],"197":[0,0,0,0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"50425f7b49d9a48dd9fa71b71818f5731ffa5b04"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{Contract,Context}=(cov_1pebg41whg.s[0]++,require('fabric-contract-api'));//const { Buffer } = require('safe-buffer');
class securitizationContext extends Context{constructor(){cov_1pebg41whg.f[0]++;cov_1pebg41whg.s[1]++;super();}//GetMSPID() returns MSP ID of the client digital certificate
GetMSPID(){cov_1pebg41whg.f[1]++;cov_1pebg41whg.s[2]++;return this.clientIdentity.getMSPID();}//GetUserIdentity(value) returns the value of the attribute of the digital certificate 
GetUserIdentity(value){cov_1pebg41whg.f[2]++;cov_1pebg41whg.s[3]++;return this.clientIdentity.getAttributeValue(value);}//GetTxTimestamp() returns server's time
GetTxTimestamp(){cov_1pebg41whg.f[3]++;cov_1pebg41whg.s[4]++;return this.stub.getTxTimestamp();}//GetRole() returns a boolean value depending on the digital certificate role, i.e if client certificate
//has a role of client, it returns true, otherwise false 
GetRole(){cov_1pebg41whg.f[4]++;cov_1pebg41whg.s[5]++;return this.clientIdentity.assertAttributeValue('hf.role','client');}//SetMSPID saves MSPID into ctx module
// SetMSPID provides a value for MSP ID
SetMSPID(mspid){cov_1pebg41whg.f[5]++;cov_1pebg41whg.s[6]++;this.mspid=mspid;}//SetEventPayload(eventPayload) saves eventPayload into ctx module
SetEventPayload(eventPayload){cov_1pebg41whg.f[6]++;cov_1pebg41whg.s[7]++;this.eventPayload=eventPayload;}//SetEventName(eventName) saves eventName into ctx module
SetEventName(eventName){cov_1pebg41whg.f[7]++;cov_1pebg41whg.s[8]++;this.eventName=eventName;}//GetEventPayload submits event and returns it
GetEventPayload(){cov_1pebg41whg.f[8]++;cov_1pebg41whg.s[9]++;return this.stub.setEvent(this.eventName,this.eventPayload);}}//Common classes do not concern about organization membership
class commonSecuritizationContract extends Contract{constructor(){cov_1pebg41whg.f[9]++;cov_1pebg41whg.s[10]++;// Unique namespace when multiple contracts per chaincode file
super('common.securitization.com');}//We use our context shown above
/**
     * Define a custom context for securitization
    */createContext(){cov_1pebg41whg.f[10]++;cov_1pebg41whg.s[11]++;return new securitizationContext();}async beforeTransaction(ctx){cov_1pebg41whg.f[11]++;// let getTxTimestamp=await ctx.GetTxTimestamp();
// //console.log(`txTimeStamp: ${getTxTimestamp}`);
// let getTxDateTimestamp=await ctx.GetTxDateTimestamp();
// //console.log(`txDateTimeStamp: ${txDateTimeStamp}`);
let isClient=(cov_1pebg41whg.s[12]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
let role=(cov_1pebg41whg.s[13]++,await ctx.clientIdentity.getAttributeValue('role'));//console.log(`role: ${role}`)
cov_1pebg41whg.s[14]++;if(!isClient){cov_1pebg41whg.b[0][0]++;cov_1pebg41whg.s[15]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[0][1]++;}let par=(cov_1pebg41whg.s[16]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[17]++,par.fcn);let params=(cov_1pebg41whg.s[18]++,par.params);//console.log(func);
//console.log(params);
cov_1pebg41whg.s[19]++;for(let i=(cov_1pebg41whg.s[20]++,0);i<params.length;i++){cov_1pebg41whg.s[21]++;if(params[i]===''){cov_1pebg41whg.b[1][0]++;cov_1pebg41whg.s[22]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[1][1]++;}}}// Here auxiliary functions
// Our token will have 2 decimals, like fiat currencies
async _checkDecimals(number){cov_1pebg41whg.f[12]++;// In nodejs every atribute is passed as a string
// First check if it is a number
// number.stringify()
// if(typeof number !=='number'){
//     throw new Error('Wrong notation');
// }
// Not necessary, we are working with 2decimal-numbers
// Integer between -2^53-1 and 2^53-1
// if (!Number.isSafeInteger(number)){
//     throw new Error('Wrong number');
// }
// Check if it is a 2decimal-number
const numberString=(cov_1pebg41whg.s[23]++,number.toString());let index;let count=(cov_1pebg41whg.s[24]++,0);cov_1pebg41whg.s[25]++;for(let i=(cov_1pebg41whg.s[26]++,0);i<numberString.length;i++){cov_1pebg41whg.s[27]++;if(numberString[i]==='.'){cov_1pebg41whg.b[2][0]++;cov_1pebg41whg.s[28]++;index=i;cov_1pebg41whg.s[29]++;count=count+1;}else{cov_1pebg41whg.b[2][1]++;}cov_1pebg41whg.s[30]++;if(numberString[i]===','){cov_1pebg41whg.b[3][0]++;cov_1pebg41whg.s[31]++;throw new Error('Wrong format. Try using dot instead of comma');}else{cov_1pebg41whg.b[3][1]++;}}//console.log(`numero de puntos ${count}`);
cov_1pebg41whg.s[32]++;if((cov_1pebg41whg.b[5][0]++,numberString.length-1-index>2)||(cov_1pebg41whg.b[5][1]++,count>1)){cov_1pebg41whg.b[4][0]++;cov_1pebg41whg.s[33]++;throw new Error('Wrong decimals');}else{cov_1pebg41whg.b[4][1]++;}// Check if it is strictly positive
cov_1pebg41whg.s[34]++;number=parseFloat(number);cov_1pebg41whg.s[35]++;if(number<=0){cov_1pebg41whg.b[6][0]++;cov_1pebg41whg.s[36]++;throw new Error('Number must be strictly positive');}else{cov_1pebg41whg.b[6][1]++;}cov_1pebg41whg.s[37]++;return true;}//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//---------------------------------------IMPORTANTE----------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
// Diferenciar 2 casos:
// En cuanto al dinero si es dinero que va destinado al pago de cupones o de principal
// En cuanto a bonos si son del mismo tramo o no (esto de momento nada)
// Funcionan
// Transfer money
async _transferMoney(ctx,userID,amount,keyFrom){cov_1pebg41whg.f[13]++;const genericID=(cov_1pebg41whg.s[38]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[39]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));cov_1pebg41whg.s[40]++;for(const key of keyFrom){cov_1pebg41whg.s[41]++;await ctx.stub.deleteState(key);}let typeID=(cov_1pebg41whg.s[42]++,':0');const utxo=(cov_1pebg41whg.s[43]++,{ID:key1+typeID,GenericID:genericID,Owner:userID,Issuer:await ctx.clientIdentity.getID(),Amount:amount,Factor:100,CanBeUsed:true,TypeID:typeID});cov_1pebg41whg.s[44]++;await ctx.stub.putState(key1,Buffer.from(JSON.stringify(utxo)));cov_1pebg41whg.s[45]++;return utxo;}async PoolMoney(ctx){cov_1pebg41whg.f[14]++;const userID=(cov_1pebg41whg.s[46]++,await ctx.GetUserIdentity('cif'));let iterator=(cov_1pebg41whg.s[47]++,await ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]));let amount;let resultKeys=(cov_1pebg41whg.s[48]++,[]);let counter=(cov_1pebg41whg.s[49]++,0);let value;cov_1pebg41whg.s[50]++;for await(const res of iterator){cov_1pebg41whg.s[51]++;value=JSON.parse(res.value.toString());// //console.log(`value: ${value.Amount}`)
cov_1pebg41whg.s[52]++;amount=value.Amount;cov_1pebg41whg.s[53]++;if((cov_1pebg41whg.b[8][0]++,value.CanBeUsed)&&(cov_1pebg41whg.b[8][1]++,value.Owner===userID)){cov_1pebg41whg.b[7][0]++;cov_1pebg41whg.s[54]++;resultKeys.push(value.ID);cov_1pebg41whg.s[55]++;counter=counter+amount;}else{cov_1pebg41whg.b[7][1]++;}cov_1pebg41whg.s[56]++;if(resultKeys.length===2){cov_1pebg41whg.b[9][0]++;cov_1pebg41whg.s[57]++;break;}else{cov_1pebg41whg.b[9][1]++;}}cov_1pebg41whg.s[58]++;if((cov_1pebg41whg.b[11][0]++,resultKeys.length===0)||(cov_1pebg41whg.b[11][1]++,resultKeys.length===1)){cov_1pebg41whg.b[10][0]++;cov_1pebg41whg.s[59]++;throw new Error('There is nothing left to do');}else{cov_1pebg41whg.b[10][1]++;}let ret=(cov_1pebg41whg.s[60]++,await this._transferMoney(ctx,userID,counter,resultKeys));cov_1pebg41whg.s[61]++;return ret;}// In this scenario, Originator will initiate the securitization lifecycle. This org will propose a PPA to a
// farmer/irrigator. To achieve that it is important for the originator to know (listen to enrollments) which farmers
// have been registered as participants of the network, in order to propose a PPA to a particular irrigator, not to a
// generic farmer
// If we know the User ID, then we can query the PPA asociated with that ID
async QueryPPA(ctx,userID){cov_1pebg41whg.f[15]++;// Prior verificatios deactivated in testing (because of test-network)
// Who can query this data?
const ppa=(cov_1pebg41whg.s[62]++,await this._mygetStateByPartialCompositeKey(ctx,'PPA',userID));cov_1pebg41whg.s[63]++;if(ppa===true){cov_1pebg41whg.b[12][0]++;cov_1pebg41whg.s[64]++;throw new Error('PPA does not exist');}else{cov_1pebg41whg.b[12][1]++;}cov_1pebg41whg.s[65]++;return ppa;}async _getAllResults(iterator,isHistory){cov_1pebg41whg.f[16]++;let allResults=(cov_1pebg41whg.s[66]++,[]);let res=(cov_1pebg41whg.s[67]++,await iterator.next());cov_1pebg41whg.s[68]++;while(!res.done){cov_1pebg41whg.s[69]++;if((cov_1pebg41whg.b[14][0]++,res.value)&&(cov_1pebg41whg.b[14][1]++,res.value.value.toString())){cov_1pebg41whg.b[13][0]++;let jsonRes=(cov_1pebg41whg.s[70]++,{});//console.log(res.value.value.toString('utf8'));
cov_1pebg41whg.s[71]++;if((cov_1pebg41whg.b[16][0]++,isHistory)&&(cov_1pebg41whg.b[16][1]++,isHistory===true)){cov_1pebg41whg.b[15][0]++;cov_1pebg41whg.s[72]++;jsonRes.TxId=res.value.tx_id;cov_1pebg41whg.s[73]++;jsonRes.Timestamp=res.value.timestamp;cov_1pebg41whg.s[74]++;try{cov_1pebg41whg.s[75]++;jsonRes.Value=JSON.parse(res.value.value.toString('utf8'));}catch(err){cov_1pebg41whg.s[76]++;//console.log(err);
jsonRes.Value=res.value.value.toString('utf8');}}else{cov_1pebg41whg.b[15][1]++;cov_1pebg41whg.s[77]++;jsonRes.Key=res.value.key;cov_1pebg41whg.s[78]++;try{cov_1pebg41whg.s[79]++;jsonRes.Record=JSON.parse(res.value.value.toString('utf8'));}catch(err){cov_1pebg41whg.s[80]++;//console.log(err);
jsonRes.Record=res.value.value.toString('utf8');}}cov_1pebg41whg.s[81]++;allResults.push(jsonRes);}else{cov_1pebg41whg.b[13][1]++;}cov_1pebg41whg.s[82]++;res=await iterator.next();}cov_1pebg41whg.s[83]++;iterator.close();cov_1pebg41whg.s[84]++;return allResults;}async QueryPPAHistory(ctx,userID,ppaID){cov_1pebg41whg.f[17]++;const key=(cov_1pebg41whg.s[85]++,await ctx.stub.createCompositeKey('PPA',[userID,ppaID]));let resultsIterator=(cov_1pebg41whg.s[86]++,await ctx.stub.getHistoryForKey(key));let results=(cov_1pebg41whg.s[87]++,await this._getAllResults(resultsIterator,true));cov_1pebg41whg.s[88]++;return results;}// Igual esto tiene que ir en un canal donde esté el/los bancos.
// Esta funcion la tengo que activar para "crear dinero"
// Minting money
async Mint(ctx,amount){cov_1pebg41whg.f[18]++;cov_1pebg41whg.s[89]++;// if (amount==='' || amount==='0'){
//     throw new Error('Please, choose a valid value for this field')
// }
// Checking format
await this._checkDecimals(amount);// Each UTXO will have a unique, free-collision key
const genericID=(cov_1pebg41whg.s[90]++,await ctx.stub.getTxID());const userID=(cov_1pebg41whg.s[91]++,await ctx.GetUserIdentity('cif'));const key=(cov_1pebg41whg.s[92]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));let typeID;cov_1pebg41whg.s[93]++;typeID=':0';//mirar si añadiendo ':0' sigue haciendo bien el query
const securitizationCoin=(cov_1pebg41whg.s[94]++,{ID:key+typeID,GenericID:genericID,TypeID:typeID,Issuer:await ctx.clientIdentity.getID(),Owner:userID,Amount:parseInt(parseFloat(amount)*100),Factor:100,CanBeUsed:true});cov_1pebg41whg.s[95]++;await ctx.stub.putState(securitizationCoin.ID,Buffer.from(JSON.stringify(securitizationCoin)));cov_1pebg41whg.s[96]++;return securitizationCoin;}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[19]++;const iterator=(cov_1pebg41whg.s[97]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[98]++,0);let results;cov_1pebg41whg.s[99]++;for await(const res of iterator){cov_1pebg41whg.s[100]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[101]++;counter=counter+1;}cov_1pebg41whg.s[102]++;if(counter>1){cov_1pebg41whg.b[17][0]++;cov_1pebg41whg.s[103]++;throw new Error('Check this...');}else{cov_1pebg41whg.b[17][1]++;cov_1pebg41whg.s[104]++;if(counter===0){cov_1pebg41whg.b[18][0]++;cov_1pebg41whg.s[105]++;return true;}else{cov_1pebg41whg.b[18][1]++;}}cov_1pebg41whg.s[106]++;return results;}// funciona
async QueryMyCoins(ctx){cov_1pebg41whg.f[20]++;const userID=(cov_1pebg41whg.s[107]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[108]++,await ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]));let results=(cov_1pebg41whg.s[109]++,[]);let valor;cov_1pebg41whg.s[110]++;for await(const res of iterator){cov_1pebg41whg.s[111]++;valor=JSON.parse(res.value.toString());cov_1pebg41whg.s[112]++;results.push(valor);}cov_1pebg41whg.s[113]++;return results;}// funciona
async QueryMyBond(ctx){cov_1pebg41whg.f[21]++;const userID=(cov_1pebg41whg.s[114]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[115]++,await ctx.stub.getStateByPartialCompositeKey('BondToken',[userID]));let results=(cov_1pebg41whg.s[116]++,[]);let valor;cov_1pebg41whg.s[117]++;for await(const res of iterator){cov_1pebg41whg.s[118]++;valor=JSON.parse(res.value.toString());cov_1pebg41whg.s[119]++;results.push(valor);}cov_1pebg41whg.s[120]++;return results;}}class ppaContract extends Contract{constructor(){cov_1pebg41whg.f[22]++;cov_1pebg41whg.s[121]++;// Unique namespace when multiple contracts per chaincode file
super('ppa.securitization.com');}createContext(){cov_1pebg41whg.f[23]++;cov_1pebg41whg.s[122]++;return new securitizationContext();}async beforeTransaction(ctx){cov_1pebg41whg.f[24]++;let userMSPID=(cov_1pebg41whg.s[123]++,await ctx.GetMSPID());cov_1pebg41whg.s[124]++;if((cov_1pebg41whg.b[20][0]++,userMSPID!=='originatorMSP')&&(cov_1pebg41whg.b[20][1]++,userMSPID!=='farmerMSP')){cov_1pebg41whg.b[19][0]++;cov_1pebg41whg.s[125]++;throw new Error('You are not allowed to perform this action');}else{cov_1pebg41whg.b[19][1]++;}let isClient=(cov_1pebg41whg.s[126]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
cov_1pebg41whg.s[127]++;if(!isClient){cov_1pebg41whg.b[21][0]++;cov_1pebg41whg.s[128]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[21][1]++;}cov_1pebg41whg.s[129]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[130]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[131]++,par.fcn);let params=(cov_1pebg41whg.s[132]++,par.params);//console.log(func);
//console.log(params);
cov_1pebg41whg.s[133]++;for(let i=(cov_1pebg41whg.s[134]++,0);i<params.length;i++){cov_1pebg41whg.s[135]++;if(params[i]===''){cov_1pebg41whg.b[22][0]++;cov_1pebg41whg.s[136]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[22][1]++;}}const mspid=(cov_1pebg41whg.s[137]++,await ctx.mspid);cov_1pebg41whg.s[138]++;switch(func){case'PPAProposal':cov_1pebg41whg.b[23][0]++;cov_1pebg41whg.s[139]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[24][0]++;cov_1pebg41whg.s[140]++;//console.log('es este caso');
throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[24][1]++;cov_1pebg41whg.s[141]++;return;}case'AcceptPPA':cov_1pebg41whg.b[23][1]++;cov_1pebg41whg.s[142]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[25][0]++;cov_1pebg41whg.s[143]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[25][1]++;cov_1pebg41whg.s[144]++;return;}case'MintPPA':cov_1pebg41whg.b[23][2]++;cov_1pebg41whg.s[145]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[26][0]++;cov_1pebg41whg.s[146]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[26][1]++;cov_1pebg41whg.s[147]++;return;}case'MaintenanceServiceRequest':cov_1pebg41whg.b[23][3]++;cov_1pebg41whg.s[148]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[27][0]++;cov_1pebg41whg.s[149]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[27][1]++;cov_1pebg41whg.s[150]++;return;}case'EnergyConsumptionPerPPA':cov_1pebg41whg.b[23][4]++;cov_1pebg41whg.s[151]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[28][0]++;cov_1pebg41whg.s[152]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[28][1]++;cov_1pebg41whg.s[153]++;return;}case'MonthlyBillPayout':cov_1pebg41whg.b[23][5]++;cov_1pebg41whg.s[154]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[29][0]++;cov_1pebg41whg.s[155]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[29][1]++;cov_1pebg41whg.s[156]++;return;}case'QueryMyPPA':cov_1pebg41whg.b[23][6]++;cov_1pebg41whg.s[157]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[30][0]++;cov_1pebg41whg.s[158]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[30][1]++;cov_1pebg41whg.s[159]++;return;}case'RequestPPA':cov_1pebg41whg.b[23][7]++;cov_1pebg41whg.s[160]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[31][0]++;cov_1pebg41whg.s[161]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[31][1]++;cov_1pebg41whg.s[162]++;return;}// case 'WriteCommonRealTimeParameters':
}}//afterTransaction will return the event of the transaction
async afterTransaction(ctx){cov_1pebg41whg.f[25]++;let event=(cov_1pebg41whg.s[163]++,await ctx.GetEventPayload());cov_1pebg41whg.s[164]++;return event;}/**
     *
     * @param {*} ctx
     * @returns the size of the pool
     */async _isPoolCreated(ctx,poolName){cov_1pebg41whg.f[26]++;const iterator=(cov_1pebg41whg.s[165]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let results=(cov_1pebg41whg.s[166]++,[]);cov_1pebg41whg.s[167]++;for await(const res of iterator){cov_1pebg41whg.s[168]++;// push key instead of value json
results.push(res.key);}cov_1pebg41whg.s[169]++;if(results.length===0){cov_1pebg41whg.b[32][0]++;cov_1pebg41whg.s[170]++;return false;}else{cov_1pebg41whg.b[32][1]++;cov_1pebg41whg.s[171]++;if(results.length===1){cov_1pebg41whg.b[33][0]++;cov_1pebg41whg.s[172]++;return true;}else{cov_1pebg41whg.b[33][1]++;cov_1pebg41whg.s[173]++;throw new Error(`State not unique`);}}}/**
     *
     * @param {*} ctx
     * @param {*} userID is the ID linked to user (DNI, CIF,...) which is inside his/her ecert
     * @returns the number of PPAs with that partial composite key
     */ // Auxiliary function to query if PPA contract for this userID has already been proposed
async _isPPAProposed(ctx,ppaID){cov_1pebg41whg.f[27]++;const ppaBytes=(cov_1pebg41whg.s[174]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[175]++;if((cov_1pebg41whg.b[35][0]++,!ppaBytes)||(cov_1pebg41whg.b[35][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[34][0]++;cov_1pebg41whg.s[176]++;return false;}else{cov_1pebg41whg.b[34][1]++;cov_1pebg41whg.s[177]++;return true;}}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @returns the state associated with that partial key
     */ // This auxiliary function will only work with those states expected to be unique (POOL, REALTIMEPARAMETERS, RATING...)
async _getPoolStateByPartialCompositeKey(ctx,docTypeName){cov_1pebg41whg.f[28]++;const iterator=(cov_1pebg41whg.s[178]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[]));let counter=(cov_1pebg41whg.s[179]++,0);let results;cov_1pebg41whg.s[180]++;for await(const res of iterator){cov_1pebg41whg.s[181]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[182]++;counter=counter+1;}cov_1pebg41whg.s[183]++;if(counter>1){cov_1pebg41whg.b[36][0]++;cov_1pebg41whg.s[184]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[36][1]++;cov_1pebg41whg.s[185]++;if(counter===0){cov_1pebg41whg.b[37][0]++;cov_1pebg41whg.s[186]++;return false;}else{cov_1pebg41whg.b[37][1]++;}}cov_1pebg41whg.s[187]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @param {*} userID
     * @returns
     */ // Auxiliary function to retrieve a value associated with a partial key. It is expected that
// this value is unique. One partial key may have multiple values associated to itself.
async _mygetStateByPartialCompositeKey(ctx,docTypeName,userID){cov_1pebg41whg.f[29]++;const iterator=(cov_1pebg41whg.s[188]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[userID]));let counter=(cov_1pebg41whg.s[189]++,0);let results;cov_1pebg41whg.s[190]++;for await(const res of iterator){cov_1pebg41whg.s[191]++;// console.log('funciona _mygetStateByPartialCompositeKey en PPA')
// console.log(res)
results=JSON.parse(res.value.toString());cov_1pebg41whg.s[192]++;counter=counter+1;}cov_1pebg41whg.s[193]++;if(counter>1){cov_1pebg41whg.b[38][0]++;cov_1pebg41whg.s[194]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[38][1]++;cov_1pebg41whg.s[195]++;if(counter===0){cov_1pebg41whg.b[39][0]++;cov_1pebg41whg.s[196]++;return true;}else{cov_1pebg41whg.b[39][1]++;}}cov_1pebg41whg.s[197]++;return results;}// returns which proportion is allocated to coupon and which to principal
async _getCouponProportion(ctx,poolName){cov_1pebg41whg.f[30]++;let iterator=(cov_1pebg41whg.s[198]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let result;cov_1pebg41whg.s[199]++;for await(const res of iterator){cov_1pebg41whg.s[200]++;result=JSON.parse(res.value.toString());}cov_1pebg41whg.s[201]++;return result.CouponPortion;}// This auxiliary function will allow us to determine to which identity are we going to pay the bills
async _isPPAinPool(ctx,ppaID){cov_1pebg41whg.f[31]++;let pool=(cov_1pebg41whg.s[202]++,await this._getPoolStateByPartialCompositeKey(ctx,'POOL'));let res=(cov_1pebg41whg.s[203]++,[]);cov_1pebg41whg.s[204]++;if((cov_1pebg41whg.b[41][0]++,!pool)||(cov_1pebg41whg.b[41][1]++,pool.length===0)){cov_1pebg41whg.b[40][0]++;cov_1pebg41whg.s[205]++;res.push(false);cov_1pebg41whg.s[206]++;return res;}else{cov_1pebg41whg.b[40][1]++;}const containsppaID=(cov_1pebg41whg.s[207]++,await pool.ppaIDs.includes(ppaID));cov_1pebg41whg.s[208]++;res.push(containsppaID);cov_1pebg41whg.s[209]++;res.push(pool.Owner);cov_1pebg41whg.s[210]++;return res;}// This function will contain the contractual terms of the physical PPA
// This function will be run by Originator, who will propose a PPA to a particular user, by means
// of his/her user ID. This function will need a myriad of input arguments.
async PPAProposal(ctx,ownerID,customerID,date){cov_1pebg41whg.f[32]++;// Prior verifications
const userID=(cov_1pebg41whg.s[211]++,await ctx.GetUserIdentity('cif'));//console.log(userID);
cov_1pebg41whg.s[212]++;if(userID!==ownerID){cov_1pebg41whg.b[42][0]++;cov_1pebg41whg.s[213]++;throw new Error(`Field ownerID ${ownerID} does not match your user identity of the ecert`);}else{cov_1pebg41whg.b[42][1]++;}cov_1pebg41whg.s[214]++;if(ownerID===customerID){cov_1pebg41whg.b[43][0]++;cov_1pebg41whg.s[215]++;throw new Error(`Check owner and customer identities`);}else{cov_1pebg41whg.b[43][1]++;}// PPA ID will be a "sum" of multiple keys, one of them is a free-collision key, the txID
// This is not necessary, because each user will be subscribed to just one PPA
const genericID=(cov_1pebg41whg.s[216]++,await ctx.stub.getTxID());// Create this composite Key
const ppaID=(cov_1pebg41whg.s[217]++,await ctx.stub.createCompositeKey('PPA',[customerID,genericID]));// We also verify if a farmer/irrigator has already been offered a PPA
const ppaHasBeenProposed=(cov_1pebg41whg.s[218]++,await this._isPPAProposed(ctx,ppaID));cov_1pebg41whg.s[219]++;if(ppaHasBeenProposed){cov_1pebg41whg.b[44][0]++;cov_1pebg41whg.s[220]++;throw new Error(`Error: PPA for user ${customerID} has already been offered`);}else{cov_1pebg41whg.b[44][1]++;}// //console.log('aqui2')
// TODO
// We define parameters of the PPA, just in case these parameters are common parameters.
const day=(cov_1pebg41whg.s[221]++,1);const month=(cov_1pebg41whg.s[222]++,10);const year=(cov_1pebg41whg.s[223]++,2032);const ordinaryTerminationDate=(cov_1pebg41whg.s[224]++,new Date(year,month-1,day).setHours(0,0,0,0));const firstExtension=(cov_1pebg41whg.s[225]++,Date(year,month-2,day));const customer=(cov_1pebg41whg.s[226]++,'');// const customerID='';
const customerEmail=(cov_1pebg41whg.s[227]++,ctx.GetUserIdentity('email'));// Owner is the ecert whose identity has proposed this PPA
// const owner= ctx.clientIdentity.getID();
const system=(cov_1pebg41whg.s[228]++,'');const land=(cov_1pebg41whg.s[229]++,'');const landID=(cov_1pebg41whg.s[230]++,'');const lastingPeriod=(cov_1pebg41whg.s[231]++,'');// const ordinaryTerminationDate= '';
const advancedTerminated=(cov_1pebg41whg.s[232]++,'');const startDate=(cov_1pebg41whg.s[233]++,'');const extendedAgreement=(cov_1pebg41whg.s[234]++,'');const initialExtensions=(cov_1pebg41whg.s[235]++,'');// const firstExtension= '';
const secondExtension=(cov_1pebg41whg.s[236]++,'');const extensionTimePriorToOrdinaryTerminationDate=(cov_1pebg41whg.s[237]++,'');const isExtensionMandatory=(cov_1pebg41whg.s[238]++,'');const additionalExtensions=(cov_1pebg41whg.s[239]++,'');const additionalExtensionTimePriorToLastAdditionalExtension=(cov_1pebg41whg.s[240]++,'');const additionalExtensionContractPrice=(cov_1pebg41whg.s[241]++,'');const isAdditionalExtension=(cov_1pebg41whg.s[242]++,'');const purchaseOption=(cov_1pebg41whg.s[243]++,'');const contractPrice=(cov_1pebg41whg.s[244]++,'');const paymentsFrequency=(cov_1pebg41whg.s[245]++,12);const unitPrice=(cov_1pebg41whg.s[246]++,'');const minimumMonthlyFee=(cov_1pebg41whg.s[247]++,100);// const firstMonthlyPayment= '';
// const succesiveMonthlyPayments= '';
const dismantlingSystemIncluded=(cov_1pebg41whg.s[248]++,'');const settlementBillingBussinesDays=(cov_1pebg41whg.s[249]++,'');const dueAmountsDays=(cov_1pebg41whg.s[250]++,'');const isInterestTriggered=(cov_1pebg41whg.s[251]++,'');const sellToThirdParties=(cov_1pebg41whg.s[252]++,'');const amountPayableToCustomer=(cov_1pebg41whg.s[253]++,'');const settlementAmountPayableDays=(cov_1pebg41whg.s[254]++,'');const amountPayableType=(cov_1pebg41whg.s[255]++,'');const highestEnergyDemandConexion=(cov_1pebg41whg.s[256]++,'');const grantFinancialAidBeneficiary=(cov_1pebg41whg.s[257]++,'');const netAmountSubsidy=(cov_1pebg41whg.s[258]++,'');const reductionContractPriceFees=(cov_1pebg41whg.s[259]++,'');const grantCollectionTime=(cov_1pebg41whg.s[260]++,'');const customerGoodFaith=(cov_1pebg41whg.s[261]++,'');const systemLandMaintenance=(cov_1pebg41whg.s[262]++,'');const maintenanceHistory=(cov_1pebg41whg.s[263]++,'');const powerSupplyInterruption=(cov_1pebg41whg.s[264]++,'');const powerSupplyInterruptionAdvancedTime=(cov_1pebg41whg.s[265]++,'');const anomalyCircumstance=(cov_1pebg41whg.s[266]++,'');const isCustomerAuthorized=(cov_1pebg41whg.s[267]++,'');const additionalPowerSupplyInterruption=(cov_1pebg41whg.s[268]++,'');const powerSupplyInterruptionCause=(cov_1pebg41whg.s[269]++,'');const extraordinaryExpenses=(cov_1pebg41whg.s[270]++,'');const isMaintenanceNecessary=(cov_1pebg41whg.s[271]++,'');const legalObligationSystemLand=(cov_1pebg41whg.s[272]++,'');const measurementEquipementResponsibility=(cov_1pebg41whg.s[273]++,'');const annualAccountsTime=(cov_1pebg41whg.s[274]++,'');const annualAccounts=(cov_1pebg41whg.s[275]++,'');const informationChangedTime=(cov_1pebg41whg.s[276]++,'');const highSpeedInternetConection=(cov_1pebg41whg.s[277]++,'');const lastModificationOn=(cov_1pebg41whg.s[278]++,new Date(date));const lastModificationUserID=(cov_1pebg41whg.s[279]++,'');const isSigned=(cov_1pebg41whg.s[280]++,false);const energyConsumption=(cov_1pebg41whg.s[281]++,[]);const facturacionMensual=(cov_1pebg41whg.s[282]++,[]);const lastEnergyConsumption=(cov_1pebg41whg.s[283]++,'');const lastFacturacionMensual=(cov_1pebg41whg.s[284]++,'');// Defining attributes of the object PPA
const PPA=(cov_1pebg41whg.s[285]++,{docType:'PPA',ppaID:ppaID,Customer:customer,CustomerID:customerID// CustomerEmail: customerEmail,
// OwnerID: ownerID,
// Owner: await ctx.clientIdentity.getID(),
// System: system,
// Land: land,
// LandID: landID,
// LastingPeriod: lastingPeriod,
// OrdinaryTerminationDate: ordinaryTerminationDate,
// AdvancedTerminated: advancedTerminated,
// StartDate: startDate,
// EnergyConsumption: energyConsumption,
// ExtendedAgreement: extendedAgreement,
// InitialExtensions: initialExtensions,
// FirstExtension: firstExtension,
// SecondExtension: secondExtension,
// BillDate: '',
// ExtensionTimePriorToOrdinaryTerminationDate: extensionTimePriorToOrdinaryTerminationDate,
// IsExtensionMandatory: isExtensionMandatory,
// AdditionalExtensions: additionalExtensions,
// AdditionalExtensionTimePriorToLastAdditionalExtension: additionalExtensionTimePriorToLastAdditionalExtension,
// AdditionalExtensionContractPrice: additionalExtensionContractPrice,
// IsAdditionalExtension: isAdditionalExtension,
// PurchaseOption: purchaseOption,
// ContractPrice: contractPrice,
// PaymentsFrequency: paymentsFrequency,
// FacturacionMensual: facturacionMensual,
// LastFacturacionMensual: lastFacturacionMensual,
// LastEnergyConsumption: lastEnergyConsumption,
// EnergyConsumption: energyConsumption,
// UnitPrice: unitPrice,
// MinimumMonthlyFee: minimumMonthlyFee,
// DismantlingSystemIncluded: dismantlingSystemIncluded,
// SettlementBillingBussinesDays: settlementBillingBussinesDays,
// DueAmountsDays: dueAmountsDays,
// IsInterestTriggered: isInterestTriggered,
// SellToThirdParties: sellToThirdParties,
// AmountPayableToCustomer: {
//     myMethod: () => {
//         if (!PPA.SellToThirdParties){
//             return 0
//         }
//         return 100
//     }
// },
// SettlementAmountPayableDays: settlementAmountPayableDays,
// AmountPayableType: amountPayableType,
// HighestEnergyDemandConexion: highestEnergyDemandConexion,
// GrantFinancialAidBeneficiary: grantFinancialAidBeneficiary,
// NetAmountSubsidy: netAmountSubsidy,
// ReductionContractPriceFees: reductionContractPriceFees,
// GrantCollectionTime: grantCollectionTime,
// CustomerGoodFaith: customerGoodFaith,
// SystemLandMaintenance: systemLandMaintenance,
// MaintenanceHistory: maintenanceHistory,
// PowerSupplyInterruption: powerSupplyInterruption,
// PowerSupplyInterruptionAdvancedTime: powerSupplyInterruptionAdvancedTime,
// AnomalyCircumstance: anomalyCircumstance,
// IsCustomerAuthorized: isCustomerAuthorized,
// AdditionalPowerSupplyInterruption: additionalPowerSupplyInterruption,
// PowerSupplyInterruptionCause: powerSupplyInterruptionCause,
// ExtraordinaryExpenses: extraordinaryExpenses,
// IsMaintenanceNecessary: isMaintenanceNecessary,
// LegalObligationSystemLand: legalObligationSystemLand,
// MeasurementEquipementResponsibility: measurementEquipementResponsibility,
// AnnualAccountsTime: annualAccountsTime,
// AnnualAccounts: annualAccounts,
// InformationChangedTime: informationChangedTime,
// HighSpeedInternetConection: highSpeedInternetConection,
// LastModificationOn: lastModificationOn,
// LastModificationUserID: lastModificationUserID,
// IsSigned: isSigned,
// IsServiceMaintenanceOn: false,
// IsLastBillPaid: false,
});const valueBuffer=(cov_1pebg41whg.s[286]++,Buffer.from(JSON.stringify(PPA)));// set event must be inside after transaction
cov_1pebg41whg.s[287]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[288]++;await ctx.SetEventName('PPAproposed');// await ctx.stub.putState('ppa',valueBuffer);
cov_1pebg41whg.s[289]++;await ctx.stub.putState(ppaID,valueBuffer);cov_1pebg41whg.s[290]++;return PPA;}// Irrigator client will submit a request in order to subscribe a PPA
// More arguments should be included
async RequestPPA(ctx,landID,crops){cov_1pebg41whg.f[33]++;const userID=(cov_1pebg41whg.s[291]++,await ctx.clientIdentity.getIDBytes());let requestID=(cov_1pebg41whg.s[292]++,await ctx.stub.getTxID());let ID=(cov_1pebg41whg.s[293]++,await ctx.stub.createCompositeKey('PPARequest',[userID,requestID]));let PPARequestBytes=(cov_1pebg41whg.s[294]++,await ctx.stub.getState(ID));let PPARequest;cov_1pebg41whg.s[295]++;if((cov_1pebg41whg.b[46][0]++,!PPARequestBytes)||(cov_1pebg41whg.b[46][1]++,PPARequestBytes.length===0)){cov_1pebg41whg.b[45][0]++;cov_1pebg41whg.s[296]++;PPARequest={ID:ID,UserID:userID,LandID:landID,Crops:crops};}else{cov_1pebg41whg.b[45][1]++;cov_1pebg41whg.s[297]++;throw new Error(`State with ID ${ID} already exists`);}const valueBuffer=(cov_1pebg41whg.s[298]++,Buffer.from(JSON.stringify(PPARequest)));cov_1pebg41whg.s[299]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[300]++;await ctx.SetEventName('PPARequest');cov_1pebg41whg.s[301]++;await ctx.stub.putState(PPARequest.ID,valueBuffer);cov_1pebg41whg.s[302]++;return PPARequest;}// Originator client queries PPARequests
async QueryPPARequest(ctx){cov_1pebg41whg.f[34]++;let iterator=(cov_1pebg41whg.s[303]++,await ctx.stub.getStateByPartialCompositeKey("PPARequest",[]));let results=(cov_1pebg41whg.s[304]++,[]);cov_1pebg41whg.s[305]++;for await(const res of iterator){cov_1pebg41whg.s[306]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[307]++;return results;}async QueryMyPPA(ctx,ppaID){cov_1pebg41whg.f[35]++;const userID=(cov_1pebg41whg.s[308]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[309]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[310]++;if((cov_1pebg41whg.b[48][0]++,!ppaBytes)||(cov_1pebg41whg.b[48][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[47][0]++;cov_1pebg41whg.s[311]++;throw new Error(`PPA state with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[47][1]++;}const ppa=(cov_1pebg41whg.s[312]++,JSON.parse(ppaBytes.toString()));cov_1pebg41whg.s[313]++;if(userID!==ppa.CustomerID){cov_1pebg41whg.b[49][0]++;cov_1pebg41whg.s[314]++;throw new Error(`Field CustomerID does not match your user identity of the eCert`);}else{cov_1pebg41whg.b[49][1]++;}cov_1pebg41whg.s[315]++;return ppa;}// Farmer/Irrigator will execute this function and by doing that, he/she accepts/signs the PPA
// proposal
async AcceptPPA(ctx,ppaID,date){cov_1pebg41whg.f[36]++;// we retrieve the value associated with this partial key
const userID=(cov_1pebg41whg.s[316]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[317]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[318]++;if((cov_1pebg41whg.b[51][0]++,!ppaBytes)||(cov_1pebg41whg.b[51][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[50][0]++;cov_1pebg41whg.s[319]++;throw new Error(`Error PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[50][1]++;}const ppa=(cov_1pebg41whg.s[320]++,JSON.parse(ppaBytes.toString()));// ppa returns true if no PPA Contract for that userID has been issued.
// ppa returns error if something is wrong with PPA Contract
// Otherwise, ppa returns ppa value for that partial key
cov_1pebg41whg.s[321]++;if(ppa.CustomerID!==userID){cov_1pebg41whg.b[52][0]++;cov_1pebg41whg.s[322]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[52][1]++;}// Check if attribute IsSigned is true
cov_1pebg41whg.s[323]++;if(ppa.IsSigned){cov_1pebg41whg.b[53][0]++;cov_1pebg41whg.s[324]++;throw new Error(`Your PPA has been already signed`);}else{cov_1pebg41whg.b[53][1]++;}// Otherwise, change the IsSigned state.
cov_1pebg41whg.s[325]++;ppa.IsSigned=true;// ppa.Customer=await ctx.clientIdentity.getID();
// Attach current date
cov_1pebg41whg.s[326]++;ppa.LastModificationOn=new Date(date);const valueBuffer=(cov_1pebg41whg.s[327]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[328]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[329]++;await ctx.SetEventName('PPAaccepted');cov_1pebg41whg.s[330]++;await ctx.stub.putState(ppa.ppaID,valueBuffer);cov_1pebg41whg.s[331]++;return ppa;}// If a farmer signs a PPAproposal, originator will receive its event and according to it, will issue a POOL token that
// will record every ppaID. The owner of this Token will receive the payments farmers will do.
// This will be the pool of PPAs
async MintPPA(ctx,ppaID,date){cov_1pebg41whg.f[37]++;const genericID=(cov_1pebg41whg.s[332]++,await ctx.stub.getTxID());const ppaBytes=(cov_1pebg41whg.s[333]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[334]++;if((cov_1pebg41whg.b[55][0]++,!ppaBytes)||(cov_1pebg41whg.b[55][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[54][0]++;cov_1pebg41whg.s[335]++;throw new Error(`Error: no State related to key ${ppaID}`);}else{cov_1pebg41whg.b[54][1]++;}const ppa=(cov_1pebg41whg.s[336]++,JSON.parse(ppaBytes.toString()));const userID=(cov_1pebg41whg.s[337]++,await ctx.GetUserIdentity('cif'));cov_1pebg41whg.s[338]++;if(userID!==ppa.OwnerID){cov_1pebg41whg.b[56][0]++;cov_1pebg41whg.s[339]++;throw new Error(`Field ownerID does not match your user identity of the ecert`);}else{cov_1pebg41whg.b[56][1]++;}cov_1pebg41whg.s[340]++;if(!ppa.IsSigned){cov_1pebg41whg.b[57][0]++;cov_1pebg41whg.s[341]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[57][1]++;}cov_1pebg41whg.s[342]++;if(ppa.IsIssued){cov_1pebg41whg.b[58][0]++;cov_1pebg41whg.s[343]++;throw new Error(`This PPA is already inside the POOL`);}else{cov_1pebg41whg.b[58][1]++;}// Include PPA Key inside Pool of assets
let pool;let hasBeenCreated=(cov_1pebg41whg.s[344]++,await this._isPoolCreated(ctx));cov_1pebg41whg.s[345]++;if(hasBeenCreated===0){cov_1pebg41whg.b[59][0]++;cov_1pebg41whg.s[346]++;pool={poolID:'',ppaIDs:[],OwnerID:'',LastModificationOn:new Date(date),CouponPortion:1};cov_1pebg41whg.s[347]++;pool.OwnerID=ppa.OwnerID;cov_1pebg41whg.s[348]++;pool.ppaIDs.push(ppa.ppaID);cov_1pebg41whg.s[349]++;pool.poolID=await ctx.stub.createCompositeKey('POOL',[genericID]);//console.log(pool);
cov_1pebg41whg.s[350]++;await ctx.stub.putState(pool.poolID,Buffer.from(JSON.stringify(pool)));}else{cov_1pebg41whg.b[59][1]++;cov_1pebg41whg.s[351]++;pool=await this._getPoolStateByPartialCompositeKey(ctx,'POOL');//console.log(pool)
cov_1pebg41whg.s[352]++;pool.OwnerID=ppa.OwnerID;cov_1pebg41whg.s[353]++;pool.ppaIDs.push(ppa.ppaID);cov_1pebg41whg.s[354]++;ppa.LastModificationOn=new Date(date);cov_1pebg41whg.s[355]++;await ctx.stub.deleteState(pool.poolID);cov_1pebg41whg.s[356]++;pool.poolID=await ctx.stub.createCompositeKey('POOL',[genericID]);cov_1pebg41whg.s[357]++;await ctx.stub.putState(pool.poolID,Buffer.from(JSON.stringify(pool)));}let valueBuffer=(cov_1pebg41whg.s[358]++,Buffer.from(JSON.stringify(pool)));cov_1pebg41whg.s[359]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[360]++;await ctx.SetEventName('PPAtokenMinted');cov_1pebg41whg.s[361]++;return pool;}// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ---------------------------------------TODO-----------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
/**
     *
     * @param {Context} ctx
     * @param {string} argtype is the default types of maintenance services originator is
     *  able to provide
     */ // Farmer will execute this function in order to request one of the default maintenance services
// offered by Originator. She/He will record the date request was made, so originator must be listening
// to events of this type if no overexpenses are considered
async MaintenanceServiceRequest(ctx,ppaID,serviceMaintenanceType,date){cov_1pebg41whg.f[38]++;const maintenanceType=(cov_1pebg41whg.s[362]++,[{name:'service1',price:12},{name:'service2',price:12},{name:'service3',price:12}]);const userID=(cov_1pebg41whg.s[363]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[364]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[365]++;if((cov_1pebg41whg.b[61][0]++,!ppaBytes)||(cov_1pebg41whg.b[61][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[60][0]++;cov_1pebg41whg.s[366]++;throw new Error(`PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[60][1]++;}const ppa=(cov_1pebg41whg.s[367]++,JSON.parse(ppaBytes.toString()));// check ID of eCert and ID of PPA customer
cov_1pebg41whg.s[368]++;if(userID!==ppa.CustomerID){cov_1pebg41whg.b[62][0]++;cov_1pebg41whg.s[369]++;throw new Error(`Customer ID and User ID do not match`);}else{cov_1pebg41whg.b[62][1]++;}// We check if it has been signed
cov_1pebg41whg.s[370]++;if(!ppa.IsSigned){cov_1pebg41whg.b[63][0]++;cov_1pebg41whg.s[371]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[63][1]++;}cov_1pebg41whg.s[372]++;if(ppa.IsInDefault){cov_1pebg41whg.b[64][0]++;cov_1pebg41whg.s[373]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[64][1]++;}const solution=(cov_1pebg41whg.s[374]++,maintenanceType.find(service=>{cov_1pebg41whg.f[39]++;cov_1pebg41whg.s[375]++;return service.name===serviceMaintenanceType;}));// Prior input parameters verifications
cov_1pebg41whg.s[376]++;if(solution===undefined){cov_1pebg41whg.b[65][0]++;cov_1pebg41whg.s[377]++;throw new Error(`The ${serviceMaintenanceType} service is not available`);}else{cov_1pebg41whg.b[65][1]++;cov_1pebg41whg.s[378]++;ppa.MaintenanceServiceRequest=solution.name;cov_1pebg41whg.s[379]++;ppa.LastMaintenanceServiceOn=new Date(date);cov_1pebg41whg.s[380]++;ppa.ServiceRequestDate=new Date(date);}cov_1pebg41whg.s[381]++;ppa.LastModificationOn=new Date(date);cov_1pebg41whg.s[382]++;ppa.IsServiceMaintenanceOn=true;cov_1pebg41whg.s[383]++;ppa.LastModificationUserID=userID;// En golang los Bytes de la ID funcionan bien
const valueBuffer=(cov_1pebg41whg.s[384]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[385]++;await ctx.stub.putState(ppa.ppaID,valueBuffer);cov_1pebg41whg.s[386]++;await ctx.SetEventName('MaintenanceRequired');cov_1pebg41whg.s[387]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[388]++;return ppa;}// for simplicity we are not considering a symbiosys between oracles and blockchain
// networks (in this version), so we will introduce that real time parameters as a function
// which will be called beforeTransaction (or not). That parameters state will include current
// electricity price, current payment proportion between principal and coupon...
// async WriteCommonRealTimeParameters(ctx,currentElectricityPrice, paymentProportionAllocated,date){
//     // At the moment no identity verifications
//     // Who can commit this function????
//     // We are going to assign an easy-to-query key
//     const key='RealTimeParameters';
//     // Check if this doc already exists
//     const oldvalueBytes=await ctx.stub.getState(key);
//     let value;
//     if (!oldvalueBytes || oldvalueBytes.length === 0) {
//         value={
//             ID: key,
//             ElectricityPrice: currentElectricityPrice,
//             ProportionAllocated: paymentProportionAllocated,
//             LastModificationOn: new Date(date)
//         };
//         const valueBuffer = Buffer.from(JSON.stringify(value));
//         await ctx.stub.putState(key, valueBuffer);
//     }
//     value= JSON.parse(oldvalueBytes.toString());
//     value.key=key;
//     value.ElectricityPrice=currentElectricityPrice;
//     value.ProportionAllocated=paymentProportionAllocated;
//     value.LastModificationOn= new Date(date);
//     const valueBuffer= Buffer.from(JSON.stringify(value));
//     await ctx.stub.putState(key,valueBuffer);
// }
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// could this function be executed from .job file?
// Originator will execute this function monthly to update the PPA with data about energy
// consumption
async EnergyConsumptionPerPPA(ctx,ppaID,energyConsumption,date){cov_1pebg41whg.f[40]++;let ownerID=(cov_1pebg41whg.s[389]++,await ctx.GetUserIdentity('cif'));// retrieve PPA state
const ppaBytes=(cov_1pebg41whg.s[390]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[391]++;if((cov_1pebg41whg.b[67][0]++,!ppaBytes)||(cov_1pebg41whg.b[67][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[66][0]++;cov_1pebg41whg.s[392]++;throw new Error(`State with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[66][1]++;}let ppa=(cov_1pebg41whg.s[393]++,JSON.parse(ppaBytes.toString()));// check if owner of the PPA (originator) matches the client who executes this function
cov_1pebg41whg.s[394]++;if(ownerID!==ppa.OwnerID){cov_1pebg41whg.b[68][0]++;cov_1pebg41whg.s[395]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[68][1]++;}cov_1pebg41whg.s[396]++;if(!ppa.IsSigned){cov_1pebg41whg.b[69][0]++;cov_1pebg41whg.s[397]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[69][1]++;}const energy=(cov_1pebg41whg.s[398]++,parseFloat(energyConsumption));// update the date
cov_1pebg41whg.s[399]++;ppa.LastModificationOn=new Date(date);// these data will be reset once a year (once its size is equal to 12)
cov_1pebg41whg.s[400]++;if(ppa.EnergyConsumption.length===ppa.PaymentsFrequency){cov_1pebg41whg.b[70][0]++;cov_1pebg41whg.s[401]++;ppa.EnergyConsumption=[];}else{cov_1pebg41whg.b[70][1]++;}cov_1pebg41whg.s[402]++;if(!ppa.IsLastBillPaid){cov_1pebg41whg.b[71][0]++;cov_1pebg41whg.s[403]++;ppa.IsInDefault=true;}else{cov_1pebg41whg.b[71][1]++;cov_1pebg41whg.s[404]++;ppa.IsInDefault=false;}// append data
cov_1pebg41whg.s[405]++;ppa.EnergyConsumption.push(energy);cov_1pebg41whg.s[406]++;ppa.LastEnergyConsumption=energy;cov_1pebg41whg.s[407]++;ppa.LastModificationUserID=ownerID;cov_1pebg41whg.s[408]++;ppa.BillDate=ppa.LastModificationOn;cov_1pebg41whg.s[409]++;ppa.IsLastBillPaid=false;const ppaBuffer=(cov_1pebg41whg.s[410]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[411]++;await ctx.stub.putState(ppa.ppaID,ppaBuffer);cov_1pebg41whg.s[412]++;await ctx.SetEventName('BillDelivered');cov_1pebg41whg.s[413]++;await ctx.SetEventPayload(ppaBuffer);cov_1pebg41whg.s[414]++;return ppa;}// TODO: add non working days
// This auxiliary function serves to compute the time between two dates, including if there are
// non working days in between. It serves to pay bills, to maintenance service request and every function
// which involves a fixed period of time to be executed.
async _checkNonWorkingDays(currentDate,notificationDate){cov_1pebg41whg.f[41]++;const nonWorkingDay1=(cov_1pebg41whg.s[415]++,new Date(2022,0,1));const nonWorkingDay2=(cov_1pebg41whg.s[416]++,new Date(2021,11,25));const nonWorkingDay3=(cov_1pebg41whg.s[417]++,new Date(2022,4,1));const nonWorkingDays=(cov_1pebg41whg.s[418]++,[nonWorkingDay1,nonWorkingDay2,nonWorkingDay3]);const new_resultados=(cov_1pebg41whg.s[419]++,nonWorkingDays.filter(day=>{cov_1pebg41whg.f[42]++;cov_1pebg41whg.s[420]++;return(cov_1pebg41whg.b[72][0]++,day>=notificationDate)&&(cov_1pebg41whg.b[72][1]++,day<=currentDate);}));cov_1pebg41whg.s[421]++;return new_resultados.length;}// Once originator has issued a bill, farmer/irrigator must pay for the consumed energy in a
// certain period of time, otherwise farmer will be considered a defaulter
async MonthlyBillPayout(ctx,ppaID,tokenID,typeID,date){cov_1pebg41whg.f[43]++;// TODO: Igual es necerario que algun dato salga de algun oracle
// retrieve the state of the token
const userID=(cov_1pebg41whg.s[422]++,await ctx.GetUserIdentity('cif'));const compositeKey=(cov_1pebg41whg.s[423]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID,typeID]));const tokenBytes=(cov_1pebg41whg.s[424]++,await ctx.stub.getState(compositeKey));cov_1pebg41whg.s[425]++;if((cov_1pebg41whg.b[74][0]++,!tokenBytes)||(cov_1pebg41whg.b[74][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[73][0]++;cov_1pebg41whg.s[426]++;throw new Error(`Error token with ID ${compositeKey} does not exist`);}else{cov_1pebg41whg.b[73][1]++;}const token=(cov_1pebg41whg.s[427]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[428]++;if(!token.CanBeUsed){cov_1pebg41whg.b[75][0]++;cov_1pebg41whg.s[429]++;throw new Error(`Error, token with ID ${tokenID} is allocated to other services. Try to use another key or cancel whatever your token is allocated to`);}else{cov_1pebg41whg.b[75][1]++;}// Now we retrieve the PPA associated with userDNI
const valueBytes=(cov_1pebg41whg.s[430]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[431]++;if((cov_1pebg41whg.b[77][0]++,!valueBytes)||(cov_1pebg41whg.b[77][1]++,valueBytes.length===0)){cov_1pebg41whg.b[76][0]++;cov_1pebg41whg.s[432]++;throw new Error(`PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[76][1]++;}let value=(cov_1pebg41whg.s[433]++,JSON.parse(valueBytes.toString()));// Check if customer and user who send transaction proposal match
// Not compulsory, we have already checked this with the ppa proposal
cov_1pebg41whg.s[434]++;if(value.CustomerID!==userID){cov_1pebg41whg.b[78][0]++;cov_1pebg41whg.s[435]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[78][1]++;}cov_1pebg41whg.s[436]++;if(!value.IsSigned){cov_1pebg41whg.b[79][0]++;cov_1pebg41whg.s[437]++;throw new Error(`PPA with ID ${ppaID} has not been signed`);}else{cov_1pebg41whg.b[79][1]++;}// Check if there are non working days between these dates
const currentDate=(cov_1pebg41whg.s[438]++,new Date(date));const billDate=(cov_1pebg41whg.s[439]++,new Date(value.BillDate));const numberNonworkingDays=(cov_1pebg41whg.s[440]++,await this._checkNonWorkingDays(currentDate,billDate));const diff_days=(cov_1pebg41whg.s[441]++,(currentDate.getTime()-billDate.getTime())/(1000*3600*24));// TODO: not sure about this. If user wish to pay, should we accept later payments? better than nothing...
// check if current day is inside boudary dates
const limitDate=(cov_1pebg41whg.s[442]++,value.LimitDate+numberNonworkingDays);cov_1pebg41whg.s[443]++;if(diff_days>limitDate){cov_1pebg41whg.b[80][0]++;cov_1pebg41whg.s[444]++;throw new Error(`Try to pay on time`);}else{cov_1pebg41whg.b[80][1]++;}// These functions should be included in the PPA object
// Define functions to determine the price to pay for
const myFunctions=(cov_1pebg41whg.s[445]++,{firstMonthlyPayment:(par_UnitPrice,par_EnergyConsumption,par_MinimumMonthlyFee)=>{cov_1pebg41whg.f[44]++;const values=(cov_1pebg41whg.s[446]++,[par_UnitPrice*par_EnergyConsumption,par_MinimumMonthlyFee]);// const values=[PPA.UnitPrice*PPA.LastEnergyConsumption,PPA.MinimumMonthlyFee];
const resultado=(cov_1pebg41whg.s[447]++,Math.max(...values));cov_1pebg41whg.s[448]++;return resultado;},succesiveMonthlyPayments:(par_LastEnergyConsumption,par_UnitPrice,par_MinimumMonthlyFee,par_EnergyConsumption,par_FacturacionMensual)=>{cov_1pebg41whg.f[45]++;let total=(cov_1pebg41whg.s[449]++,par_FacturacionMensual.reduce(function(a,b){cov_1pebg41whg.f[46]++;cov_1pebg41whg.s[450]++;return a+b;}));const values=(cov_1pebg41whg.s[451]++,[par_LastEnergyConsumption*par_UnitPrice,Math.abs(par_MinimumMonthlyFee*par_EnergyConsumption.length-total)]);const resultado=(cov_1pebg41whg.s[452]++,Math.max(...values));cov_1pebg41whg.s[453]++;return resultado;}});cov_1pebg41whg.s[454]++;if(value.IsLastBillPaid){cov_1pebg41whg.b[81][0]++;cov_1pebg41whg.s[455]++;throw new Error(`You have already paid this bill`);}else{cov_1pebg41whg.b[81][1]++;}// depending on which period we stay, i.e depending on which size energyconsumption has, which
// is our History per year
let bill;cov_1pebg41whg.s[456]++;if(value.EnergyConsumption.length===1){cov_1pebg41whg.b[82][0]++;cov_1pebg41whg.s[457]++;bill=myFunctions.firstMonthlyPayment(value.UnitPrice,value.LastEnergyConsumption,value.MinimumMonthlyFee);}else{cov_1pebg41whg.b[82][1]++;cov_1pebg41whg.s[458]++;// }else if (value.EnergyConsumption.length!==0){
bill=myFunctions.succesiveMonthlyPayments(value.LastEnergyConsumption,value.UnitPrice,value.MinimumMonthlyFee,value.EnergyConsumption,value.FacturacionMensual);}let new_bill=(cov_1pebg41whg.s[459]++,bill.toFixed(2));// Now it is clear how much has the farmer to pay for, it is time to pay (send his/her tokens)
const myMoney=(cov_1pebg41whg.s[460]++,token.Amount);const balance=(cov_1pebg41whg.s[461]++,myMoney-parseInt(new_bill*100));cov_1pebg41whg.s[462]++;if(balance<0){cov_1pebg41whg.b[83][0]++;cov_1pebg41whg.s[463]++;throw new Error(`Please add more coins to your wallet, or pool them. Bill amounts to ${new_bill}`);}else{cov_1pebg41whg.b[83][1]++;}cov_1pebg41whg.s[464]++;value.FacturacionMensual.push(new_bill);cov_1pebg41whg.s[465]++;value.LastFacturacionMensual=new_bill;cov_1pebg41whg.s[466]++;value.LastModificationOn=currentDate;cov_1pebg41whg.s[467]++;value.LastModificationUserID=userID;cov_1pebg41whg.s[468]++;value.IsLastBillPaid=true;// retrieve PPA Pool state in order to allocate tokens to pool owner or to ppa Owner if ppa
// is not inside pool
let[isInside,owner]=(cov_1pebg41whg.s[469]++,await this._isPPAinPool(ctx,value.ppaID));cov_1pebg41whg.s[470]++;if((cov_1pebg41whg.b[85][0]++,!owner)||(cov_1pebg41whg.b[85][1]++,!isInside)){cov_1pebg41whg.b[84][0]++;cov_1pebg41whg.s[471]++;// bill paid to PPA Owner
owner=value.OwnerID;}else{cov_1pebg41whg.b[84][1]++;}let ret;let couponPortion=(cov_1pebg41whg.s[472]++,await this._getCouponProportion(ctx,'POOL'));// Igual asi es mejor 
// if(isInside){
// }else{
// }
// el caso de que no este dentro de la Pool no existiria usando este statement
cov_1pebg41whg.s[473]++;if(couponPortion===1){cov_1pebg41whg.b[86][0]++;cov_1pebg41whg.s[474]++;ret=await this._TransferMoney(ctx,token.ID,new_bill,owner,userID);}else{cov_1pebg41whg.b[86][1]++;cov_1pebg41whg.s[475]++;// else we must allocate p*Bill tokens to Coupon Payments which will be CanBeUsed=true Tokens
// and 1-p tokens to Principal payment which will be CanBeUsed=false Tokens
ret=await this._TransferMoneyToCouponAndPrincipal(ctx,token.ID,new_bill,couponPortion,owner,userID);}// let CouponPortion=await this._isCouponPortion
// if()
// TODO
// tranfer to tokens' owner
// let ret=await this._TransferMoney(ctx,token.ID,new_bill,owner,userID)
cov_1pebg41whg.s[476]++;await ctx.stub.putState(value.ppaID,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[477]++;return ret;}// As a simplicity we will assume that each user will use just one token ID to pay the bill. If a
// user has some IDs that putting together reach the desirable value, the user will
// pool his tokens, otherwise he/she will not commit the tx
/**
     *
     * @param {*} ctx
     * @param {*} tokenID
     * @param {*} amount
     * @param {*} receiverID
     */ // Auxiliary function to transfer the money farmers pay.
async _TransferMoney(ctx,tokenID,amount,receiverID,userID){cov_1pebg41whg.f[47]++;// No prior verifications needed, because they have been checked in main function, which is
// MonthlyPayout
const tokenBytes=(cov_1pebg41whg.s[478]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[479]++;if((cov_1pebg41whg.b[88][0]++,!tokenBytes)||(cov_1pebg41whg.b[88][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[87][0]++;cov_1pebg41whg.s[480]++;throw new Error(`Error: no token associated with ID ${tokenID}`);}else{cov_1pebg41whg.b[87][1]++;}const token=(cov_1pebg41whg.s[481]++,JSON.parse(tokenBytes.toString()));const balance=(cov_1pebg41whg.s[482]++,token.Amount-amount);const issuer=(cov_1pebg41whg.s[483]++,ctx.clientIdentity.getID());const genericID=(cov_1pebg41whg.s[484]++,await ctx.stub.getTxID());let typeID;const key1=(cov_1pebg41whg.s[485]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[486]++,await ctx.stub.createCompositeKey('securitizationCoin',[receiverID,genericID]));cov_1pebg41whg.s[487]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[488]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:issuer,Amount:balance,Factor:100,CanBeUsed:true});cov_1pebg41whg.s[489]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[490]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:amount,CanBeUsed:true});let utxos=(cov_1pebg41whg.s[491]++,[]);cov_1pebg41whg.s[492]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[493]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[494]++;if(balance!==0){cov_1pebg41whg.b[89][0]++;cov_1pebg41whg.s[495]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));cov_1pebg41whg.s[496]++;utxos=[utxo1,utxo2];cov_1pebg41whg.s[497]++;return utxos;}else{cov_1pebg41whg.b[89][1]++;cov_1pebg41whg.s[498]++;utxos=[utxo2];cov_1pebg41whg.s[499]++;return utxos;}}async _TransferMoneyToCouponAndPrincipal(ctx,tokenID,amount,couponPortion,receiverID,userID){cov_1pebg41whg.f[48]++;// No prior verifications needed, because they have been checked in main function, which is
// MonthlyPayout
const tokenBytes=(cov_1pebg41whg.s[500]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[501]++;if((cov_1pebg41whg.b[91][0]++,!tokenBytes)||(cov_1pebg41whg.b[91][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[90][0]++;cov_1pebg41whg.s[502]++;throw new Error(`Error: no token associated with ID ${tokenID}`);}else{cov_1pebg41whg.b[90][1]++;}const token=(cov_1pebg41whg.s[503]++,JSON.parse(tokenBytes.toString()));const balance=(cov_1pebg41whg.s[504]++,token.Amount-amount);//console.log('balance')
//console.log(balance)
const issuer=(cov_1pebg41whg.s[505]++,ctx.clientIdentity.getID());const genericID=(cov_1pebg41whg.s[506]++,await ctx.stub.getTxID());let typeID;const key1=(cov_1pebg41whg.s[507]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[508]++,await ctx.stub.createCompositeKey('securitizationCoin',[receiverID,genericID]));cov_1pebg41whg.s[509]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[510]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:issuer,Amount:balance,Factor:100,CanBeUsed:true});// this utxo2 will be allocated to Coupon
cov_1pebg41whg.s[511]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[512]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:couponPortion*amount,CanBeUsed:true});cov_1pebg41whg.s[513]++;typeID=':2';const utxo3=(cov_1pebg41whg.s[514]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:(1-couponPortion)*amount,CanBeUsed:false});let utxos=(cov_1pebg41whg.s[515]++,[]);cov_1pebg41whg.s[516]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[517]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[518]++;await ctx.stub.putState(utxo3.ID,Buffer.from(JSON.stringify(utxo3)));cov_1pebg41whg.s[519]++;if(balance!==0){cov_1pebg41whg.b[92][0]++;cov_1pebg41whg.s[520]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));cov_1pebg41whg.s[521]++;utxos=[utxo1,utxo2,utxo3];cov_1pebg41whg.s[522]++;return utxos;}else{cov_1pebg41whg.b[92][1]++;cov_1pebg41whg.s[523]++;utxos=[utxo2,utxo3];cov_1pebg41whg.s[524]++;return utxos;}}// // TODO: Who can execute this function??
// /**
//  *
//  * @param {*} ctx
//  * @param {*} userID
//  * @param {*} date
//  */
// // Each period, originator will check how are performing the PPAs he has offered. This will update
// // if some irrigator is a defaulter or not.
// async MonthlyPerformance(ctx, ppaID,date){
//     const ppaBytes=await ctx.stub.getState(ppaID);
//     if (!ppaBytes || ppaBytes.length === 0){
//         throw new Error(`This PPA ID ${ppaID} does not exist`);
//     }
//     let ppa=JSON.parse(ppaBytes.toString())
//     // Now we check its performance and update PPA according to elapsed time between current date
//     // and payment date or other dates
//     const currentlyDate=new Date(DATE)
//     // Were bills paid on time?
//     // Check difference between dates
//     // TODO: the rest of verifications
//     // ppa.LastModificationOn=date;
//     // ppa.LastModificationUserID=userID;
//     const ppaBuffer= Buffer.from(JSON.stringify(ppa));
//     await ctx.stub.putState(ppa.ppaID,ppaBuffer)
// }
// TODO:
// change userID -> ppaID
}// This is another contract which defines a new bussiness: the acquisition of PPA Tokens,
// valuation of the pool on-chain and  transference of the bonds
class bondIssuanceContract extends Contract{constructor(){cov_1pebg41whg.f[49]++;cov_1pebg41whg.s[525]++;super('bonds.securitization.com');}createContext(){cov_1pebg41whg.f[50]++;cov_1pebg41whg.s[526]++;return new securitizationContext();}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[51]++;const iterator=(cov_1pebg41whg.s[527]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[528]++,0);let results;cov_1pebg41whg.s[529]++;for await(const res of iterator){cov_1pebg41whg.s[530]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[531]++;counter=counter+1;}cov_1pebg41whg.s[532]++;if(counter>1){cov_1pebg41whg.b[93][0]++;cov_1pebg41whg.s[533]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[93][1]++;cov_1pebg41whg.s[534]++;if(counter===0){cov_1pebg41whg.b[94][0]++;cov_1pebg41whg.s[535]++;return true;}else{cov_1pebg41whg.b[94][1]++;}}cov_1pebg41whg.s[536]++;return results;}// Prior verifications included in beforeTransaction logic
async beforeTransaction(ctx){cov_1pebg41whg.f[52]++;let userMSPID=(cov_1pebg41whg.s[537]++,ctx.GetMSPID());cov_1pebg41whg.s[538]++;if((cov_1pebg41whg.b[96][0]++,userMSPID!=='originatorMSP')&&(cov_1pebg41whg.b[96][1]++,userMSPID!=='spvMSP')&&(cov_1pebg41whg.b[96][2]++,userMSPID!=='ratingagencyMSP')){cov_1pebg41whg.b[95][0]++;cov_1pebg41whg.s[539]++;throw new Error(`Your organization ${userMSPID} is not allowed to perform this action`);}else{cov_1pebg41whg.b[95][1]++;}let isClient=(cov_1pebg41whg.s[540]++,await ctx.GetRole());cov_1pebg41whg.s[541]++;if(!isClient){cov_1pebg41whg.b[97][0]++;cov_1pebg41whg.s[542]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[97][1]++;}cov_1pebg41whg.s[543]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[544]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[545]++,par.fcn);let params=(cov_1pebg41whg.s[546]++,par.params);cov_1pebg41whg.s[547]++;for(let i=(cov_1pebg41whg.s[548]++,0);i<params.length;i++){cov_1pebg41whg.s[549]++;if(params[i]===''){cov_1pebg41whg.b[98][0]++;cov_1pebg41whg.s[550]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[98][1]++;}}cov_1pebg41whg.s[551]++;switch(func){case'BuyRequest':cov_1pebg41whg.b[99][0]++;cov_1pebg41whg.s[552]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[100][0]++;cov_1pebg41whg.s[553]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[100][1]++;cov_1pebg41whg.s[554]++;return;}case'SellRequest':cov_1pebg41whg.b[99][1]++;cov_1pebg41whg.s[555]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[101][0]++;cov_1pebg41whg.s[556]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[101][1]++;cov_1pebg41whg.s[557]++;return;}case'SignRequestOriginator':cov_1pebg41whg.b[99][2]++;cov_1pebg41whg.s[558]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[102][0]++;cov_1pebg41whg.s[559]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[102][1]++;cov_1pebg41whg.s[560]++;return;}case'SignRequestSPV':cov_1pebg41whg.b[99][3]++;cov_1pebg41whg.s[561]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[103][0]++;cov_1pebg41whg.s[562]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[103][1]++;cov_1pebg41whg.s[563]++;return;}case'Rating':cov_1pebg41whg.b[99][4]++;cov_1pebg41whg.s[564]++;if(ctx.mspid!=='ratingagencyMSP'){cov_1pebg41whg.b[104][0]++;cov_1pebg41whg.s[565]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[104][1]++;cov_1pebg41whg.s[566]++;return;}case'IssueBond':cov_1pebg41whg.b[99][5]++;cov_1pebg41whg.s[567]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[105][0]++;cov_1pebg41whg.s[568]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[105][1]++;cov_1pebg41whg.s[569]++;return;}case'QueryPool':cov_1pebg41whg.b[99][6]++;cov_1pebg41whg.s[570]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[106][0]++;cov_1pebg41whg.s[571]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[106][1]++;cov_1pebg41whg.s[572]++;return;}case'QuerySellRequest':cov_1pebg41whg.b[99][7]++;cov_1pebg41whg.s[573]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[107][0]++;cov_1pebg41whg.s[574]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[107][1]++;cov_1pebg41whg.s[575]++;return;}case'QueryBuyRequest':cov_1pebg41whg.b[99][8]++;cov_1pebg41whg.s[576]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[108][0]++;cov_1pebg41whg.s[577]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[108][1]++;cov_1pebg41whg.s[578]++;return;}}}async afterTransaction(ctx){cov_1pebg41whg.f[53]++;let event=(cov_1pebg41whg.s[579]++,await ctx.GetEventPayload());cov_1pebg41whg.s[580]++;return event;}/**
     *
     * @param {*} ctx
     * @returns the size of the pool
     */async _isPoolCreated(ctx,poolName){cov_1pebg41whg.f[54]++;const iterator=(cov_1pebg41whg.s[581]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let results=(cov_1pebg41whg.s[582]++,[]);cov_1pebg41whg.s[583]++;for await(const res of iterator){cov_1pebg41whg.s[584]++;// push key instead of value json
results.push(res.key);}cov_1pebg41whg.s[585]++;if(results.length===0){cov_1pebg41whg.b[109][0]++;cov_1pebg41whg.s[586]++;return false;}else{cov_1pebg41whg.b[109][1]++;cov_1pebg41whg.s[587]++;if(results.length===1){cov_1pebg41whg.b[110][0]++;cov_1pebg41whg.s[588]++;return true;}else{cov_1pebg41whg.b[110][1]++;cov_1pebg41whg.s[589]++;throw new Error(`State not unique`);}}}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @returns the state associated with that partial key
     */ // This auxiliary function will only work with those states expected to be unique (POOL, REALTIMEPARAMETERS, RATING...)
async _getPoolStateByPartialCompositeKey(ctx,docTypeName){cov_1pebg41whg.f[55]++;const iterator=(cov_1pebg41whg.s[590]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[]));let counter=(cov_1pebg41whg.s[591]++,0);let results;let isCreated;let res=(cov_1pebg41whg.s[592]++,[]);cov_1pebg41whg.s[593]++;for await(const res of iterator){cov_1pebg41whg.s[594]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[595]++;counter=counter+1;}//console.log(`counter: ${counter}`)
cov_1pebg41whg.s[596]++;if(counter===1){cov_1pebg41whg.b[111][0]++;cov_1pebg41whg.s[597]++;isCreated=true;cov_1pebg41whg.s[598]++;res.push(isCreated);cov_1pebg41whg.s[599]++;res.push(results);cov_1pebg41whg.s[600]++;return res;}else{cov_1pebg41whg.b[111][1]++;cov_1pebg41whg.s[601]++;if(counter===0){cov_1pebg41whg.b[112][0]++;cov_1pebg41whg.s[602]++;isCreated=false;cov_1pebg41whg.s[603]++;res.push(isCreated);cov_1pebg41whg.s[604]++;return res;}else{cov_1pebg41whg.b[112][1]++;cov_1pebg41whg.s[605]++;throw new Error('This state-value pair is not unique');}}}async QueryPool(ctx,poolName){cov_1pebg41whg.f[56]++;let pool=(cov_1pebg41whg.s[606]++,await this._getPoolStateByPartialCompositeKey(ctx,poolName));cov_1pebg41whg.s[607]++;if((cov_1pebg41whg.b[114][0]++,!pool[0])&&(cov_1pebg41whg.b[114][1]++,pool.length===1)){cov_1pebg41whg.b[113][0]++;cov_1pebg41whg.s[608]++;throw new Error(`There is no Pool linked to name ${poolName}`);}else{cov_1pebg41whg.b[113][1]++;}cov_1pebg41whg.s[609]++;return pool[1];}/**
     *
     * @param {*} ctx
     * @param {*} amount
     * @param {*} price
     * @param {*} toIdentity
     */ // SPV will want to buy the pool of assets that originator owns, but firstly she/he needs
// to submit a request to buy it.
async BuyRequest(ctx,amount,price){cov_1pebg41whg.f[57]++;// TODO: originator must achieve a certain pool size to sell??
//       what if actual pool size is greater than spv wants
// if (await this._isPoolCreated(ctx,poolName)===false){
//     throw new Error(`Pool still not created`)
// }
const userID=(cov_1pebg41whg.s[610]++,await ctx.GetUserIdentity('cif'));const genericID=(cov_1pebg41whg.s[611]++,await ctx.stub.getTxID());const requestID=(cov_1pebg41whg.s[612]++,await ctx.stub.createCompositeKey('BuyRequest',[userID,genericID]));let value=(cov_1pebg41whg.s[613]++,{ID:requestID,Owner:userID,Receiver:'',Amount:parseInt(amount),Price:parseInt(parseFloat(price)*100),IsSigned:false,Factor:100});const valueBuffer=(cov_1pebg41whg.s[614]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[615]++;await ctx.stub.putState(requestID,valueBuffer);cov_1pebg41whg.s[616]++;await ctx.SetEventName('BuyRequestIssued');cov_1pebg41whg.s[617]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[618]++;return value;}async QueryBuyRequest(ctx){cov_1pebg41whg.f[58]++;let iterator=(cov_1pebg41whg.s[619]++,await ctx.stub.getStateByPartialCompositeKey('BuyRequest'));let results=(cov_1pebg41whg.s[620]++,[]);cov_1pebg41whg.s[621]++;for await(const res of iterator){cov_1pebg41whg.s[622]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[623]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} price
     * @param {*} toIdentity
     */ // Originator submits a sell request to SPV
async SellRequest(ctx,price,poolID){cov_1pebg41whg.f[59]++;const userID=(cov_1pebg41whg.s[624]++,await ctx.GetUserIdentity('cif'));const genericID=(cov_1pebg41whg.s[625]++,await ctx.stub.getTxID());const requestID=(cov_1pebg41whg.s[626]++,await ctx.stub.createCompositeKey('SellRequest',[userID,genericID]));let value=(cov_1pebg41whg.s[627]++,{ID:requestID,Owner:userID,Receiver:'',Price:parseInt(parseFloat(price)*100),Factor:100,IsSigned:false,BackedBy:poolID});const valueBuffer=(cov_1pebg41whg.s[628]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[629]++;await ctx.stub.putState(requestID,valueBuffer);cov_1pebg41whg.s[630]++;await ctx.SetEventName('SellRequestIssued');cov_1pebg41whg.s[631]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[632]++;return value;}async QuerySellRequest(ctx){cov_1pebg41whg.f[60]++;let iterator=(cov_1pebg41whg.s[633]++,await ctx.stub.getStateByPartialCompositeKey('SellRequest'));let results=(cov_1pebg41whg.s[634]++,[]);cov_1pebg41whg.s[635]++;for await(const res of iterator){cov_1pebg41whg.s[636]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[637]++;return results;}async QueryFullRequest(ctx){cov_1pebg41whg.f[61]++;let iterator=(cov_1pebg41whg.s[638]++,await ctx.stub.getStateByPartialCompositeKey('FullRequest'));let results=(cov_1pebg41whg.s[639]++,[]);cov_1pebg41whg.s[640]++;for await(const res of iterator){cov_1pebg41whg.s[641]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[642]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} type
     * @param {*} toIdentity  in real case toIdentity is an attribute linked to certificate
     */ // cash owner must sign first
// SPV accepts request. Check if she/he has enough funds
async SignRequestSPV(ctx,tokenID,typeID,buyRequestID,sellRequestID,sellRequestPrice,sellRequestBackedBy,sellRequestOwner){cov_1pebg41whg.f[62]++;const userID=(cov_1pebg41whg.s[643]++,await ctx.GetUserIdentity('cif'));const buyRequestBytes=(cov_1pebg41whg.s[644]++,await ctx.stub.getState(buyRequestID));cov_1pebg41whg.s[645]++;if((cov_1pebg41whg.b[116][0]++,!buyRequestBytes)||(cov_1pebg41whg.b[116][1]++,buyRequestBytes.length===0)){cov_1pebg41whg.b[115][0]++;cov_1pebg41whg.s[646]++;throw new Error(`Buy request linked to ID ${buyRequestID} does not exist`);}else{cov_1pebg41whg.b[115][1]++;}const buyRequest=(cov_1pebg41whg.s[647]++,JSON.parse(buyRequestBytes.toString()));// Check if this request has been already signed
cov_1pebg41whg.s[648]++;if(buyRequest.IsSigned){cov_1pebg41whg.b[117][0]++;cov_1pebg41whg.s[649]++;throw new Error(`Request has been already signed. Not allowed to perform this action`);}else{cov_1pebg41whg.b[117][1]++;}// As cash owner will signs the request, we must be sure that he is the owner of that amount
// and maybe we should block his/her funds
// I dont think this could be necessary because in the DvP we will execute both actions, and
// if one of them does not succeed, noone will succeed.
// In order to not create false requests we are going to freeze tokens
const token_ID=(cov_1pebg41whg.s[650]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));const tokenBytes=(cov_1pebg41whg.s[651]++,await ctx.stub.getState(token_ID+typeID));cov_1pebg41whg.s[652]++;if((cov_1pebg41whg.b[119][0]++,!tokenBytes)||(cov_1pebg41whg.b[119][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[118][0]++;cov_1pebg41whg.s[653]++;throw new Error(`Error, Token with ID ${tokenID+typeID} does not exist`);}else{cov_1pebg41whg.b[118][1]++;}const myFunds=(cov_1pebg41whg.s[654]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[655]++;if(!myFunds.CanBeUsed){cov_1pebg41whg.b[120][0]++;cov_1pebg41whg.s[656]++;throw new Error(`Your token has been already used`);}else{cov_1pebg41whg.b[120][1]++;}// Check our funds
cov_1pebg41whg.s[657]++;if(buyRequest.Price>myFunds.Amount){cov_1pebg41whg.b[121][0]++;cov_1pebg41whg.s[658]++;throw new Error(`Your token has not enough funds. Try to pool your token or ask for mint`);}else{cov_1pebg41whg.b[121][1]++;}// If we have enough funds, then we can sign the request
cov_1pebg41whg.s[659]++;buyRequest.IsSigned=true;// Retrieve sell request
const sellRequestBytes=(cov_1pebg41whg.s[660]++,await ctx.stub.getState(sellRequestID));cov_1pebg41whg.s[661]++;if((cov_1pebg41whg.b[123][0]++,!sellRequestBytes)||(cov_1pebg41whg.b[123][1]++,sellRequestBytes.length===0)){cov_1pebg41whg.b[122][0]++;cov_1pebg41whg.s[662]++;throw new Error(`Sell Request does not exist or have been removed`);}else{cov_1pebg41whg.b[122][1]++;}let sellRequest=(cov_1pebg41whg.s[663]++,JSON.parse(sellRequestBytes.toString()));cov_1pebg41whg.s[664]++;if((cov_1pebg41whg.b[125][0]++,sellRequest.Price!==parseInt(sellRequestPrice))||(cov_1pebg41whg.b[125][1]++,sellRequest.BackedBy!==sellRequestBackedBy)||(cov_1pebg41whg.b[125][2]++,sellRequest.Owner!==sellRequestOwner)){cov_1pebg41whg.b[124][0]++;cov_1pebg41whg.s[665]++;throw new Error(`Sell Request has been modified`);}else{cov_1pebg41whg.b[124][1]++;}cov_1pebg41whg.s[666]++;buyRequest.Receiver=sellRequestOwner;let txid=(cov_1pebg41whg.s[667]++,await ctx.stub.getTxID());const n_value=(cov_1pebg41whg.s[668]++,{ID:'Request'+txid,buyRequest:buyRequest,sellRequest:sellRequest,TokenID:token_ID+typeID});const n_valueID=(cov_1pebg41whg.s[669]++,'Request'+txid);const valueBuffer=(cov_1pebg41whg.s[670]++,Buffer.from(JSON.stringify(n_value)));cov_1pebg41whg.s[671]++;await ctx.stub.putState(n_valueID,valueBuffer);cov_1pebg41whg.s[672]++;await ctx.stub.deleteState(sellRequest.ID);cov_1pebg41whg.s[673]++;await ctx.stub.deleteState(buyRequest.ID);cov_1pebg41whg.s[674]++;await ctx.SetEventName('SignSellRequest');cov_1pebg41whg.s[675]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[676]++;return n_valueID;}async _dvp(ctx,tokenID,securityID,tokensToTransfer){cov_1pebg41whg.f[63]++;const tokenBytes=(cov_1pebg41whg.s[677]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[678]++;if((cov_1pebg41whg.b[127][0]++,!tokenBytes)||(cov_1pebg41whg.b[127][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[126][0]++;cov_1pebg41whg.s[679]++;throw new Error(`Error, Token state according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[126][1]++;}const token=(cov_1pebg41whg.s[680]++,JSON.parse(tokenBytes.toString()));const securityBytes=(cov_1pebg41whg.s[681]++,await ctx.stub.getState(securityID));cov_1pebg41whg.s[682]++;if((cov_1pebg41whg.b[129][0]++,!securityBytes)||(cov_1pebg41whg.b[129][1]++,securityBytes.length===0)){cov_1pebg41whg.b[128][0]++;cov_1pebg41whg.s[683]++;throw new Error(`Error, Pool state according to key ${securityID} does not exist`);}else{cov_1pebg41whg.b[128][1]++;}const security=(cov_1pebg41whg.s[684]++,JSON.parse(securityBytes.toString()));cov_1pebg41whg.s[685]++;if((cov_1pebg41whg.b[131][0]++,!security.CanBeUsed)||(cov_1pebg41whg.b[131][1]++,!token.CanBeUsed)){cov_1pebg41whg.b[130][0]++;cov_1pebg41whg.s[686]++;throw new Error(`Token and/or security have been already used`);}else{cov_1pebg41whg.b[130][1]++;}const genericID=(cov_1pebg41whg.s[687]++,await ctx.stub.getTxID());// 'user' seria el que recibe el token/bono
const key1=(cov_1pebg41whg.s[688]++,await ctx.stub.createCompositeKey('securitizationCoin',[token.Owner,genericID]));const key2=(cov_1pebg41whg.s[689]++,await ctx.stub.createCompositeKey('securitizationCoin',[security.Owner,genericID]));const securityKey1=(cov_1pebg41whg.s[690]++,await ctx.stub.createCompositeKey('POOL',[token.Owner,genericID]));const balanceTokens=(cov_1pebg41whg.s[691]++,token.Amount-tokensToTransfer);let utxo1;let utxo2;let typeID;cov_1pebg41whg.s[692]++;typeID=':1';cov_1pebg41whg.s[693]++;utxo1={ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balanceTokens,Factor:100,CanBeUsed:true};cov_1pebg41whg.s[694]++;typeID=':0';cov_1pebg41whg.s[695]++;utxo2={ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:security.Owner,Issuer:token.Issuer,Amount:tokensToTransfer,CanBeUsed:true};cov_1pebg41whg.s[696]++;security.poolID=securityKey1;cov_1pebg41whg.s[697]++;security.Owner=token.Owner;cov_1pebg41whg.s[698]++;await ctx.stub.deleteState(tokenID);cov_1pebg41whg.s[699]++;await ctx.stub.deleteState(securityID);cov_1pebg41whg.s[700]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[701]++;await ctx.stub.putState(security.poolID,Buffer.from(JSON.stringify(security)));cov_1pebg41whg.s[702]++;if(balanceTokens!=0){cov_1pebg41whg.b[132][0]++;cov_1pebg41whg.s[703]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_1pebg41whg.b[132][1]++;}}/**
     *
     * @param {*} ctx
     * @param {*} tokenid
     */ // securities owner must sign afterwards
// originator accepts request: enough securities
async SignRequestOriginator(ctx,poolName,poolID,fullRequestID,buyRequestIdentity,buyRequestAmount,buyRequestPrice){cov_1pebg41whg.f[64]++;const userID=(cov_1pebg41whg.s[704]++,await ctx.GetUserIdentity('cif'));const valueBytes=(cov_1pebg41whg.s[705]++,await ctx.stub.getState(fullRequestID));cov_1pebg41whg.s[706]++;if((cov_1pebg41whg.b[134][0]++,!valueBytes)||(cov_1pebg41whg.b[134][1]++,valueBytes.length===0)){cov_1pebg41whg.b[133][0]++;cov_1pebg41whg.s[707]++;throw new Error(`Request State does not exist`);}else{cov_1pebg41whg.b[133][1]++;}const value=(cov_1pebg41whg.s[708]++,JSON.parse(valueBytes.toString()));// Originator in order to sign this request must provide an own PPA pool
const tokenID=(cov_1pebg41whg.s[709]++,await ctx.stub.createCompositeKey(poolName,[poolID]));const poolBytes=(cov_1pebg41whg.s[710]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[711]++;if((cov_1pebg41whg.b[136][0]++,!poolBytes)||(cov_1pebg41whg.b[136][1]++,poolBytes.length===0)){cov_1pebg41whg.b[135][0]++;cov_1pebg41whg.s[712]++;throw new Error(`Error, Pool State does not exist according to the key provided`);}else{cov_1pebg41whg.b[135][1]++;}//console.log(value.buyRequest.Receiver);
cov_1pebg41whg.s[713]++;if(userID!==value.buyRequest.Receiver){cov_1pebg41whg.b[137][0]++;cov_1pebg41whg.s[714]++;//console.log('dentro if1')
throw new Error('You are not allowed to perform this action');}else{cov_1pebg41whg.b[137][1]++;}const pool=(cov_1pebg41whg.s[715]++,JSON.parse(poolBytes.toString()));cov_1pebg41whg.s[716]++;if(pool.Owner!==userID){cov_1pebg41whg.b[138][0]++;cov_1pebg41whg.s[717]++;//console.log('dentro if2')
throw new Error(`User ID ${userID} does not match Pool Owner`);}else{cov_1pebg41whg.b[138][1]++;}cov_1pebg41whg.s[718]++;if(pool.ppaIDs.length!==value.buyRequest.Amount){cov_1pebg41whg.b[139][0]++;cov_1pebg41whg.s[719]++;throw new Error(`Size of Pool and size of Buy Request do not match`);}else{cov_1pebg41whg.b[139][1]++;}cov_1pebg41whg.s[720]++;value.sellRequest.IsSigned=true;cov_1pebg41whg.s[721]++;if((cov_1pebg41whg.b[141][0]++,parseInt(buyRequestPrice)!==value.buyRequest.Price)||(cov_1pebg41whg.b[141][1]++,parseInt(buyRequestAmount)!==value.buyRequest.Amount)||(cov_1pebg41whg.b[141][2]++,buyRequestIdentity!==value.buyRequest.Owner)){cov_1pebg41whg.b[140][0]++;cov_1pebg41whg.s[722]++;throw new Error('Some args of Full Request have been modified');}else{cov_1pebg41whg.b[140][1]++;}// DvP is triggered
cov_1pebg41whg.s[723]++;await this._dvp(ctx,value.TokenID,pool.poolID,value.buyRequest.Price);//console.log('hasta aqui')
cov_1pebg41whg.s[724]++;await ctx.stub.deleteState(fullRequestID);}// TODO
// Once SPV has acquired the Pool of PPAs, rating agency will assess PPA assets in order to
// issue securities backed by the Pool.
async Rating(ctx,poolID){cov_1pebg41whg.f[65]++;const userID=(cov_1pebg41whg.s[725]++,await ctx.GetUserIdentity('cif'));const poolBytes=(cov_1pebg41whg.s[726]++,await ctx.stub.getState(poolID));cov_1pebg41whg.s[727]++;if((cov_1pebg41whg.b[143][0]++,!poolBytes)||(cov_1pebg41whg.b[143][1]++,poolBytes.length===0)){cov_1pebg41whg.b[142][0]++;cov_1pebg41whg.s[728]++;throw new Error(`Pool does not exist, not possible to attach a rating`);}else{cov_1pebg41whg.b[142][1]++;}const key=(cov_1pebg41whg.s[729]++,await ctx.stub.createCompositeKey('Rating',[poolID]));const value=(cov_1pebg41whg.s[730]++,{ID:key,BackedBy:poolID,Owner:userID,RatingArgs:""});const valueBuffer=(cov_1pebg41whg.s[731]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[732]++;await ctx.stub.putState(key,valueBuffer);cov_1pebg41whg.s[733]++;return value;}//check if spv owns every ppa
async IssueBond(ctx,ratingID,p){cov_1pebg41whg.f[66]++;const userID=(cov_1pebg41whg.s[734]++,await ctx.GetUserIdentity('cif'));// We retrieve data from rating
const ratingBytes=(cov_1pebg41whg.s[735]++,await ctx.stub.getState(ratingID));cov_1pebg41whg.s[736]++;if((cov_1pebg41whg.b[145][0]++,!ratingBytes)||(cov_1pebg41whg.b[145][1]++,ratingBytes.length===0)){cov_1pebg41whg.b[144][0]++;cov_1pebg41whg.s[737]++;throw new Error(`Rating still not delivered`);}else{cov_1pebg41whg.b[144][1]++;}const rating=(cov_1pebg41whg.s[738]++,JSON.parse(ratingBytes.toString()));const poolID=(cov_1pebg41whg.s[739]++,rating.BackedBy);const poolBytes=(cov_1pebg41whg.s[740]++,await ctx.stub.getState(poolID));cov_1pebg41whg.s[741]++;if((cov_1pebg41whg.b[147][0]++,!poolBytes)||(cov_1pebg41whg.b[147][1]++,poolBytes.length===0)){cov_1pebg41whg.b[146][0]++;cov_1pebg41whg.s[742]++;throw new Error(`Error, Pool State does not match Pool ID provided`);}else{cov_1pebg41whg.b[146][1]++;}const pool=(cov_1pebg41whg.s[743]++,JSON.parse(poolBytes.toString()));cov_1pebg41whg.s[744]++;if(pool.Owner!==userID){cov_1pebg41whg.b[148][0]++;cov_1pebg41whg.s[745]++;throw new Error(`User ID ${userID} does not own Pool`);}else{cov_1pebg41whg.b[148][1]++;}// Rating State will provide some attributes bons must have.
const genericID=(cov_1pebg41whg.s[746]++,await ctx.stub.getTxID());const key=(cov_1pebg41whg.s[747]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));const new_pool=(cov_1pebg41whg.s[748]++,{ppaIDs:pool.ppaIDs,Owner:pool.Owner,ID:pool.Name+genericID,Name:pool.Name,CouponPortion:p});const typeID=(cov_1pebg41whg.s[749]++,':0');const bondID=(cov_1pebg41whg.s[750]++,key+typeID);// TODO: every time there is an attribute namely Issuer, should it be
// ctx.clientIdentity.getID() or ctx.clientIdentity.getIDBytes();
const bondToken=(cov_1pebg41whg.s[751]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:"",CouponRate:"",MaturityDate:"",Issuer:userID,Owner:userID,Pool:"",AmountPaid:"",OriginalValue:"",MonthlyPayout:"",RemainingPayments:"",Amount:100000,CanBeUsed:true});let valueBuffer=(cov_1pebg41whg.s[752]++,Buffer.from(JSON.stringify(bondToken)));cov_1pebg41whg.s[753]++;await ctx.stub.putState(bondID,valueBuffer);cov_1pebg41whg.s[754]++;await ctx.stub.deleteState(pool.ID);cov_1pebg41whg.s[755]++;await ctx.stub.putState(new_pool.ID,Buffer.from(JSON.stringify(new_pool)));cov_1pebg41whg.s[756]++;await ctx.SetEventName('BondsIssuance');cov_1pebg41whg.s[757]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[758]++;return bondToken.ID;}}class servicingContract extends Contract{constructor(){cov_1pebg41whg.f[67]++;cov_1pebg41whg.s[759]++;// Unique namespace when multiple contracts per chaincode file
super('servicing.securitization.com');}createContext(){cov_1pebg41whg.f[68]++;cov_1pebg41whg.s[760]++;return new securitizationContext();}// TODO: change which orgs can execute this contract
async beforeTransaction(ctx){cov_1pebg41whg.f[69]++;let userMSPID=(cov_1pebg41whg.s[761]++,ctx.GetMSPID());cov_1pebg41whg.s[762]++;if((cov_1pebg41whg.b[150][0]++,userMSPID!=='investorMSP')&&(cov_1pebg41whg.b[150][1]++,userMSPID!=='spvMSP')&&(cov_1pebg41whg.b[150][2]++,userMSPID!=='ratingagencyMSP')){cov_1pebg41whg.b[149][0]++;cov_1pebg41whg.s[763]++;throw new Error(`Your organization ${userMSPID} is not allowed to perform this action`);}else{cov_1pebg41whg.b[149][1]++;}let isClient=(cov_1pebg41whg.s[764]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
cov_1pebg41whg.s[765]++;if(!isClient){cov_1pebg41whg.b[151][0]++;cov_1pebg41whg.s[766]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[151][1]++;}cov_1pebg41whg.s[767]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[768]++,ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[769]++,par.fcn);let params=(cov_1pebg41whg.s[770]++,par.params);cov_1pebg41whg.s[771]++;for(let i=(cov_1pebg41whg.s[772]++,0);i<params.length;i++){cov_1pebg41whg.s[773]++;if(params[i]===''){cov_1pebg41whg.b[152][0]++;cov_1pebg41whg.s[774]++;throw new Error('There is at least one empty parameter that should not be');}else{cov_1pebg41whg.b[152][1]++;}}cov_1pebg41whg.s[775]++;switch(func){case'AskOrder':cov_1pebg41whg.b[153][0]++;cov_1pebg41whg.s[776]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[154][0]++;cov_1pebg41whg.s[777]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[154][1]++;cov_1pebg41whg.s[778]++;return;}case'AskMarketOrder':cov_1pebg41whg.b[153][1]++;cov_1pebg41whg.s[779]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[155][0]++;cov_1pebg41whg.s[780]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[155][1]++;cov_1pebg41whg.s[781]++;return;}case'BidOrder':cov_1pebg41whg.b[153][2]++;cov_1pebg41whg.s[782]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[156][0]++;cov_1pebg41whg.s[783]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[156][1]++;cov_1pebg41whg.s[784]++;return;}case'BidMarketOrder':cov_1pebg41whg.b[153][3]++;cov_1pebg41whg.s[785]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[157][0]++;cov_1pebg41whg.s[786]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[157][1]++;cov_1pebg41whg.s[787]++;return;}// case 'Matching':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
case'PoolBond':cov_1pebg41whg.b[153][4]++;cov_1pebg41whg.s[788]++;if((cov_1pebg41whg.b[159][0]++,ctx.mspid!=='investorMSP')&&(cov_1pebg41whg.b[159][1]++,ctx.mspid!=='spvMSP')){cov_1pebg41whg.b[158][0]++;cov_1pebg41whg.s[789]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[158][1]++;cov_1pebg41whg.s[790]++;return;}// case 'MatchingBid':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
// case 'MatchingAsk':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
case'TransferCoupons':cov_1pebg41whg.b[153][5]++;cov_1pebg41whg.s[791]++;if((cov_1pebg41whg.b[161][0]++,ctx.mspid!=='investorMSP')&&(cov_1pebg41whg.b[161][1]++,ctx.mspid!=='spvMSP')){cov_1pebg41whg.b[160][0]++;cov_1pebg41whg.s[792]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[160][1]++;cov_1pebg41whg.s[793]++;return;}}}async afterTransaction(ctx){cov_1pebg41whg.f[70]++;let event=(cov_1pebg41whg.s[794]++,await ctx.GetEventPayload());cov_1pebg41whg.s[795]++;return event;}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[71]++;const iterator=(cov_1pebg41whg.s[796]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[797]++,0);let results;cov_1pebg41whg.s[798]++;for await(const res of iterator){cov_1pebg41whg.s[799]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[800]++;counter=counter+1;}cov_1pebg41whg.s[801]++;if(counter>1){cov_1pebg41whg.b[162][0]++;cov_1pebg41whg.s[802]++;throw new Error('Partial Key Uniqueness not provided. Something went wrong');}else{cov_1pebg41whg.b[162][1]++;cov_1pebg41whg.s[803]++;if(counter===0){cov_1pebg41whg.b[163][0]++;cov_1pebg41whg.s[804]++;return true;}else{cov_1pebg41whg.b[163][1]++;}}cov_1pebg41whg.s[805]++;return results;}async _transferBond(ctx,userID,amount,keyFrom){cov_1pebg41whg.f[72]++;const genericID=(cov_1pebg41whg.s[806]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[807]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));cov_1pebg41whg.s[808]++;for(const key of keyFrom){cov_1pebg41whg.s[809]++;await ctx.stub.deleteState(key);}let typeID=(cov_1pebg41whg.s[810]++,':0');const bondToken=(cov_1pebg41whg.s[811]++,{ID:key1+typeID,GenericID:genericID,Rating:"",CouponRate:"",MaturityDate:"",Issuer:"",Owner:userID,Pool:"",AmountPaid:"",OriginalValue:"",MonthlyPayout:"",RemainingPayments:"",Amount:amount,TypeID:typeID,CanBeUsed:true});const bondTokenBuffer=(cov_1pebg41whg.s[812]++,Buffer.from(JSON.stringify(bondToken)));cov_1pebg41whg.s[813]++;await ctx.stub.putState(key1,bondTokenBuffer);cov_1pebg41whg.s[814]++;return bondToken;}async PoolBond(ctx){cov_1pebg41whg.f[73]++;const userID=(cov_1pebg41whg.s[815]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[816]++,await ctx.stub.getStateByPartialCompositeKey('BondToken',[userID]));let amount;let resultKeys=(cov_1pebg41whg.s[817]++,[]);let counter=(cov_1pebg41whg.s[818]++,0);let value;//console.log('before for await')
cov_1pebg41whg.s[819]++;for await(const res of iterator){cov_1pebg41whg.s[820]++;value=JSON.parse(res.value.toString());cov_1pebg41whg.s[821]++;amount=value.Amount;cov_1pebg41whg.s[822]++;if(value.CanBeUsed){cov_1pebg41whg.b[164][0]++;cov_1pebg41whg.s[823]++;resultKeys.push(value.ID);cov_1pebg41whg.s[824]++;counter=counter+amount;}else{cov_1pebg41whg.b[164][1]++;}cov_1pebg41whg.s[825]++;if(resultKeys.length===2){cov_1pebg41whg.b[165][0]++;cov_1pebg41whg.s[826]++;break;}else{cov_1pebg41whg.b[165][1]++;}}//console.log('after for await')
cov_1pebg41whg.s[827]++;if((cov_1pebg41whg.b[167][0]++,resultKeys.length===0)||(cov_1pebg41whg.b[167][1]++,resultKeys.length===1)){cov_1pebg41whg.b[166][0]++;cov_1pebg41whg.s[828]++;throw new Error('There is nothing left to do');// return
}else{cov_1pebg41whg.b[166][1]++;}let ret=(cov_1pebg41whg.s[829]++,await this._transferBond(ctx,userID,counter,resultKeys));cov_1pebg41whg.s[830]++;return ret;}// Our token will have 2 decimals, like fiat currencies
async _checkDecimals(number){cov_1pebg41whg.f[74]++;// In nodejs every atribute is passed as a string
// First check if it is a number
// number.stringify()
// if(typeof number !=='number'){
//     throw new Error('Wrong notation');
// }
// Not necessary, we are working with 2decimal-numbers
// Integer between -2^53-1 and 2^53-1
// if (!Number.isSafeInteger(number)){
//     throw new Error('Wrong number');
// }
// Check if it is a 2decimal-number
const numberString=(cov_1pebg41whg.s[831]++,number.toString());let index;let count=(cov_1pebg41whg.s[832]++,0);cov_1pebg41whg.s[833]++;for(let i=(cov_1pebg41whg.s[834]++,0);i<numberString.length;i++){cov_1pebg41whg.s[835]++;if(numberString[i]==='.'){cov_1pebg41whg.b[168][0]++;cov_1pebg41whg.s[836]++;index=i;cov_1pebg41whg.s[837]++;count=count+1;}else{cov_1pebg41whg.b[168][1]++;}cov_1pebg41whg.s[838]++;if(numberString[i]===','){cov_1pebg41whg.b[169][0]++;cov_1pebg41whg.s[839]++;throw new Error('Wrong format. Try using dot instead of comma');}else{cov_1pebg41whg.b[169][1]++;}}//console.log(`numero de puntos ${count}`);
cov_1pebg41whg.s[840]++;if((cov_1pebg41whg.b[171][0]++,numberString.length-1-index>2)||(cov_1pebg41whg.b[171][1]++,count>1)){cov_1pebg41whg.b[170][0]++;cov_1pebg41whg.s[841]++;throw new Error('Wrong decimals');}else{cov_1pebg41whg.b[170][1]++;}// Check if it is strictly positive
cov_1pebg41whg.s[842]++;number=parseFloat(number);cov_1pebg41whg.s[843]++;if(number<=0){cov_1pebg41whg.b[172][0]++;cov_1pebg41whg.s[844]++;throw new Error('Number must be strictly positive');}else{cov_1pebg41whg.b[172][1]++;}cov_1pebg41whg.s[845]++;return true;}// Bid order will be executed by someone able to buy assets (bonds)
// Auxiliary function to allocate certain amount of money every time a bid order is submitted
async _splitMoney(ctx,tokenID,amount){cov_1pebg41whg.f[75]++;const userID=(cov_1pebg41whg.s[846]++,await ctx.GetUserIdentity('cif'));const tokenBytes=(cov_1pebg41whg.s[847]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[848]++;if((cov_1pebg41whg.b[174][0]++,!tokenBytes)||(cov_1pebg41whg.b[174][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[173][0]++;cov_1pebg41whg.s[849]++;throw new Error(`Error, Token state according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[173][1]++;}const token=(cov_1pebg41whg.s[850]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[851]++;if(token.CanBeUsed===false){cov_1pebg41whg.b[175][0]++;cov_1pebg41whg.s[852]++;throw new Error(`This token ID ${tokenID} has already been used. Try another Token ID`);}else{cov_1pebg41whg.b[175][1]++;}//console.log(`amount: ${amount}`);
//console.log(`token.Amount: ${token.Amount}`);
//console.log(token.Amount-amount);
cov_1pebg41whg.s[853]++;if(token.Amount<amount){cov_1pebg41whg.b[176][0]++;cov_1pebg41whg.s[854]++;throw new Error('Error, token State has not enough funds');}else{cov_1pebg41whg.b[176][1]++;}const balance=(cov_1pebg41whg.s[855]++,token.Amount-amount);const genericID=(cov_1pebg41whg.s[856]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[857]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[858]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));let typeID;cov_1pebg41whg.s[859]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[860]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balance,CanBeUsed:true});cov_1pebg41whg.s[861]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[862]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:amount,CanBeUsed:false});cov_1pebg41whg.s[863]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[864]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[865]++;if(balance>0){cov_1pebg41whg.b[177][0]++;cov_1pebg41whg.s[866]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_1pebg41whg.b[177][1]++;}//console.log(utxo2.ID)
cov_1pebg41whg.s[867]++;return utxo2.ID;}// Auxiliary function to allocate certain amount of bonds every time an ask order is submitted
async _splitBonds(ctx,bondID,amount){cov_1pebg41whg.f[76]++;const userID=(cov_1pebg41whg.s[868]++,await ctx.GetUserIdentity('cif'));const bondBytes=(cov_1pebg41whg.s[869]++,await ctx.stub.getState(bondID));cov_1pebg41whg.s[870]++;if((cov_1pebg41whg.b[179][0]++,!bondBytes)||(cov_1pebg41whg.b[179][1]++,bondBytes.length===0)){cov_1pebg41whg.b[178][0]++;cov_1pebg41whg.s[871]++;throw new Error(`Error, Bond State according to key ${bondID} does not exist`);}else{cov_1pebg41whg.b[178][1]++;}const bond=(cov_1pebg41whg.s[872]++,await JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[873]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[180][0]++;cov_1pebg41whg.s[874]++;throw new Error(`This Bond State with ID ${bondID} has already been used in a prior order`);}else{cov_1pebg41whg.b[180][1]++;}cov_1pebg41whg.s[875]++;if(amount>bond.Amount){cov_1pebg41whg.b[181][0]++;cov_1pebg41whg.s[876]++;throw new Error(`This Bond State has not enough bonds to transfer`);}else{cov_1pebg41whg.b[181][1]++;}const balance=(cov_1pebg41whg.s[877]++,bond.Amount-amount);const genericID=(cov_1pebg41whg.s[878]++,ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[879]++,await ctx.stub.createCompositeKey('BondToken',[bond.Owner,genericID]));let typeID;cov_1pebg41whg.s[880]++;typeID=':0';cov_1pebg41whg.s[881]++;bondID=key1+typeID;const bond1=(cov_1pebg41whg.s[882]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:bond.Rating,CouponRate:bond.CouponRate,MaturityDate:bond.MaturityDate,Issuer:bond.Issuer,Owner:bond.Owner,Pool:bond.Pool,AmountPaid:bond.AmountPaid,OriginalValue:bond.OriginalValue,MonthlyPayout:bond.MonthlyPayout,RemainingPayments:bond.RemainingPayments,Amount:amount,CanBeUsed:false});cov_1pebg41whg.s[883]++;if(balance!==0){cov_1pebg41whg.b[182][0]++;const key2=(cov_1pebg41whg.s[884]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));cov_1pebg41whg.s[885]++;typeID=':1';cov_1pebg41whg.s[886]++;bondID=key2+typeID;const bond2=(cov_1pebg41whg.s[887]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:bond.Rating,CouponRate:bond.CouponRate,MaturityDate:bond.MaturityDate,Issuer:bond.Issuer,Owner:userID,Pool:bond.Pool,AmountPaid:bond.AmountPaid,OriginalValue:bond.OriginalValue,MonthlyPayout:bond.MonthlyPayout,RemainingPayments:bond.RemainingPayments,Amount:balance,CanBeUsed:true});cov_1pebg41whg.s[888]++;await ctx.stub.deleteState(bond.ID);cov_1pebg41whg.s[889]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond1)));cov_1pebg41whg.s[890]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond2)));}else{cov_1pebg41whg.b[182][1]++;cov_1pebg41whg.s[891]++;await ctx.stub.deleteState(bond.ID);cov_1pebg41whg.s[892]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond1)));}cov_1pebg41whg.s[893]++;return bond1.ID;}// Auxiliary function to sort bid orders according to price, if they are limit or market orders and time they were
// submitted
async _sortingBidOrders(ctx,orderArray){cov_1pebg41whg.f[77]++;cov_1pebg41whg.s[894]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[78]++;cov_1pebg41whg.s[895]++;return(cov_1pebg41whg.b[184][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[184][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[184][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[184][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[184][4]++,a.Time<b.Time)?(cov_1pebg41whg.b[183][0]++,1):(cov_1pebg41whg.b[183][1]++,(cov_1pebg41whg.b[186][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[186][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[186][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[186][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[186][4]++,a.Time>b.Time)?(cov_1pebg41whg.b[185][0]++,-1):(cov_1pebg41whg.b[185][1]++,0));});cov_1pebg41whg.s[896]++;await orderArray.sort((b,a)=>{cov_1pebg41whg.f[79]++;cov_1pebg41whg.s[897]++;return a.Price>b.Price?(cov_1pebg41whg.b[187][0]++,1):(cov_1pebg41whg.b[187][1]++,b.Price>a.Price?(cov_1pebg41whg.b[188][0]++,-1):(cov_1pebg41whg.b[188][1]++,a.Time<b.Time?(cov_1pebg41whg.b[189][0]++,1):(cov_1pebg41whg.b[189][1]++,-1)));});cov_1pebg41whg.s[898]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[80]++;cov_1pebg41whg.s[899]++;return(cov_1pebg41whg.b[191][0]++,!a.FullMatch)&&(cov_1pebg41whg.b[191][1]++,b.FullMatch)?(cov_1pebg41whg.b[190][0]++,-1):(cov_1pebg41whg.b[190][1]++,(cov_1pebg41whg.b[193][0]++,!b.FullMatch)&&(cov_1pebg41whg.b[193][1]++,a.FullMatch)?(cov_1pebg41whg.b[192][0]++,-1):(cov_1pebg41whg.b[192][1]++,1));});cov_1pebg41whg.s[900]++;return orderArray;}// Auxiliary function to sort ask orders according to price, if they are limit or market orders and time they were
// submitted
async _sortingAskOrders(ctx,orderArray){cov_1pebg41whg.f[81]++;cov_1pebg41whg.s[901]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[82]++;cov_1pebg41whg.s[902]++;return(cov_1pebg41whg.b[195][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[195][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[195][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[195][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[195][4]++,a.Time<b.Time)?(cov_1pebg41whg.b[194][0]++,1):(cov_1pebg41whg.b[194][1]++,(cov_1pebg41whg.b[197][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[197][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[197][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[197][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[197][4]++,a.Time>b.Time)?(cov_1pebg41whg.b[196][0]++,-1):(cov_1pebg41whg.b[196][1]++,0));});cov_1pebg41whg.s[903]++;await orderArray.sort((b,a)=>{cov_1pebg41whg.f[83]++;cov_1pebg41whg.s[904]++;return a.Price>b.Price?(cov_1pebg41whg.b[198][0]++,-1):(cov_1pebg41whg.b[198][1]++,b.Price>a.Price?(cov_1pebg41whg.b[199][0]++,1):(cov_1pebg41whg.b[199][1]++,b.Time>a.Time?(cov_1pebg41whg.b[200][0]++,1):(cov_1pebg41whg.b[200][1]++,-1)));});cov_1pebg41whg.s[905]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[84]++;cov_1pebg41whg.s[906]++;return(cov_1pebg41whg.b[202][0]++,!a.FullMatch)&&(cov_1pebg41whg.b[202][1]++,b.FullMatch)?(cov_1pebg41whg.b[201][0]++,-1):(cov_1pebg41whg.b[201][1]++,(cov_1pebg41whg.b[204][0]++,!b.FullMatch)&&(cov_1pebg41whg.b[204][1]++,a.FullMatch)?(cov_1pebg41whg.b[203][0]++,-1):(cov_1pebg41whg.b[203][1]++,1));});cov_1pebg41whg.s[907]++;return orderArray;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// 
// Transference triggered due to an Ask Order
async _transferCashTokens(ctx,bidInputs,askInput,orderBook){cov_1pebg41whg.f[85]++;cov_1pebg41whg.s[908]++;//translate into nodejs utxo sample code 
console.log(`Inside _transferCashTokens`);let userID=(cov_1pebg41whg.s[909]++,await ctx.clientIdentity.getID());cov_1pebg41whg.s[910]++;console.log('step 1');cov_1pebg41whg.s[911]++;console.log(bidInputs);let bondTokenBytes=(cov_1pebg41whg.s[912]++,await ctx.stub.getState(askInput.TokenID));cov_1pebg41whg.s[913]++;if((cov_1pebg41whg.b[206][0]++,!bondTokenBytes)||(cov_1pebg41whg.b[206][1]++,bondTokenBytes.length===0)){cov_1pebg41whg.b[205][0]++;cov_1pebg41whg.s[914]++;console.log('inside error 1');cov_1pebg41whg.s[915]++;throw new Error('Error1');}else{cov_1pebg41whg.b[205][1]++;}cov_1pebg41whg.s[916]++;console.log('step 2');let bondToken=(cov_1pebg41whg.s[917]++,JSON.parse(bondTokenBytes.toString()));// let myFunds=bondToken.Amount;
// console.log(`myFunds: ${myFunds}`);
cov_1pebg41whg.s[918]++;console.log('step 3');let usedKeys=(cov_1pebg41whg.s[919]++,[]);let usedOwners=(cov_1pebg41whg.s[920]++,[]);let usedAmounts=(cov_1pebg41whg.s[921]++,[]);let notUsedTokensAmounts=(cov_1pebg41whg.s[922]++,[]);let cashTokensToTransfer=(cov_1pebg41whg.s[923]++,[]);let bondTokensToTransfer=(cov_1pebg41whg.s[924]++,[]);let total=(cov_1pebg41whg.s[925]++,0);let bondsToTransfer=(cov_1pebg41whg.s[926]++,[]);let amount=(cov_1pebg41whg.s[927]++,0);let token;let lastOwner;let transactionID=(cov_1pebg41whg.s[928]++,await ctx.stub.getTxID());cov_1pebg41whg.s[929]++;console.log('step 4');let outputBondToken=(cov_1pebg41whg.s[930]++,{ID:'',GenericID:transactionID,TypeID:':0',Rating:bondToken.Rating,CouponRate:bondToken.CouponRate,MaturityDate:bondToken.MaturityDate,Issuer:bondToken.Issuer,Owner:bondToken.Owner,Pool:bondToken.Pool,AmountPaid:bondToken.AmountPaid,OriginalValue:bondToken.OriginalValue,MonthlyPayout:bondToken.MonthlyPayout,RemainingPayments:bondToken.RemainingPayments,Amount:bondToken.Amount,CanBeUsed:true});let asks=(cov_1pebg41whg.s[931]++,orderBook[1]);let bids=(cov_1pebg41whg.s[932]++,orderBook[0]);cov_1pebg41whg.s[933]++;console.log('step 5');// console.log(bidInputs)
let usedKey;let lastBid;let lastQuantity;let lastRestingQuantity;let lastQuantityMatch;let partialMatched=(cov_1pebg41whg.s[934]++,[]);cov_1pebg41whg.s[935]++;for(let i=(cov_1pebg41whg.s[936]++,0);i<bidInputs.length;i++){let balance=(cov_1pebg41whg.s[937]++,0);cov_1pebg41whg.s[938]++;console.log('inside first for loop');cov_1pebg41whg.s[939]++;console.log(bidInputs[i]);let cashTokenID=(cov_1pebg41whg.s[940]++,bidInputs[i].TokenID);cov_1pebg41whg.s[941]++;console.log(cashTokenID);let quantityToTransfer=(cov_1pebg41whg.s[942]++,bidInputs[i].QuantityMatch);cov_1pebg41whg.s[943]++;console.log(quantityToTransfer);cov_1pebg41whg.s[944]++;if(usedKeys.indexOf(cashTokenID)!==-1){cov_1pebg41whg.b[207][0]++;cov_1pebg41whg.s[945]++;console.log('step 5.1');cov_1pebg41whg.s[946]++;throw new Error('Error2');}else{cov_1pebg41whg.b[207][1]++;}cov_1pebg41whg.s[947]++;balance=bidInputs[i].Quantity-bidInputs[i].QuantityMatch;cov_1pebg41whg.s[948]++;if(balance===0){cov_1pebg41whg.b[208][0]++;cov_1pebg41whg.s[949]++;total+=quantityToTransfer*bidInputs[i].Price;}else{cov_1pebg41whg.b[208][1]++;cov_1pebg41whg.s[950]++;total+=bidInputs[i].Quantity*bidInputs[i].Price;}// let utxoInputCompositeKey=await ctx.stub.createCompositeKey('securitizationCoin', [userID, utxoInputKeys[i]]);
//TODO
//check errors
let valueBytes=(cov_1pebg41whg.s[951]++,await ctx.stub.getState(cashTokenID));cov_1pebg41whg.s[952]++;if((cov_1pebg41whg.b[210][0]++,!valueBytes)||(cov_1pebg41whg.b[210][1]++,valueBytes.length===0)){cov_1pebg41whg.b[209][0]++;cov_1pebg41whg.s[953]++;throw new Error(`state does not exist`);}else{cov_1pebg41whg.b[209][1]++;}//TODO
//check errors
// Error handling not needed since Itoa() was used when setting the utxo amount, guaranteeing it was an integer.
cov_1pebg41whg.s[954]++;token=JSON.parse(valueBytes.toString());let cashTokenOwner=(cov_1pebg41whg.s[955]++,token.Owner);cov_1pebg41whg.s[956]++;console.log('cashtokenowner');cov_1pebg41whg.s[957]++;console.log(cashTokenOwner);cov_1pebg41whg.s[958]++;console.log('cashtoken amount');cov_1pebg41whg.s[959]++;console.log(quantityToTransfer*bidInputs[i].Price);let tokensToTransfer=(cov_1pebg41whg.s[960]++,quantityToTransfer*bidInputs[i].Price);cov_1pebg41whg.s[961]++;console.log('indice');cov_1pebg41whg.s[962]++;console.log(usedOwners.indexOf(cashTokenOwner));// console.log('token Owner')
// console.log(cashTokenOwner)
cov_1pebg41whg.s[963]++;if(usedOwners.indexOf(cashTokenOwner)===-1){cov_1pebg41whg.b[211][0]++;cov_1pebg41whg.s[964]++;console.log('dentro del primer if');cov_1pebg41whg.s[965]++;usedOwners.push(cashTokenOwner);cov_1pebg41whg.s[966]++;console.log(usedOwners);cov_1pebg41whg.s[967]++;usedAmounts.push(quantityToTransfer);cov_1pebg41whg.s[968]++;console.log(usedAmounts);cov_1pebg41whg.s[969]++;notUsedTokensAmounts.push(token.Amount);cov_1pebg41whg.s[970]++;cashTokensToTransfer.push(quantityToTransfer*askInput.Price);cov_1pebg41whg.s[971]++;bondTokensToTransfer.push(quantityToTransfer);// console.log(`quantityToTransfer: ${quantityToTransfer}`)
// bondsToTransfer.append(qu)
}else{cov_1pebg41whg.b[211][1]++;cov_1pebg41whg.s[972]++;console.log('dentro del primer else');cov_1pebg41whg.s[973]++;console.log('usedOwners');cov_1pebg41whg.s[974]++;console.log(usedOwners);cov_1pebg41whg.s[975]++;usedAmounts[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer;cov_1pebg41whg.s[976]++;notUsedTokensAmounts[usedOwners.indexOf(cashTokenOwner)]+=token.Amount;cov_1pebg41whg.s[977]++;cashTokensToTransfer[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer*askInput.Price;cov_1pebg41whg.s[978]++;bondTokensToTransfer[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer;}cov_1pebg41whg.s[979]++;amount+=quantityToTransfer*bidInputs[i].Price;// total+=token.Amount;
//revisar
// if(token.Amount<quantityToTransfer){
//     throw new Error('Error')
// }
let index;cov_1pebg41whg.s[980]++;bids=orderBook[0];cov_1pebg41whg.s[981]++;asks=orderBook[1];let thisTokenID=(cov_1pebg41whg.s[982]++,token.ID);cov_1pebg41whg.s[983]++;if(bidInputs[i].FullMatch){cov_1pebg41whg.b[212][0]++;cov_1pebg41whg.s[984]++;console.log('step 5.2');cov_1pebg41whg.s[985]++;await ctx.stub.deleteState(token.ID);let myBid=(cov_1pebg41whg.s[986]++,await bids.filter(item=>{cov_1pebg41whg.f[86]++;cov_1pebg41whg.s[987]++;return item.ID!==bidInputs[i].ID;}));cov_1pebg41whg.s[988]++;orderBook=[myBid,asks];// console.log(`orderBook: ${orderBook}`)
}else{cov_1pebg41whg.b[212][1]++;cov_1pebg41whg.s[989]++;console.log('step 5.3');let myBid=(cov_1pebg41whg.s[990]++,await bids.filter(item=>{cov_1pebg41whg.f[87]++;cov_1pebg41whg.s[991]++;return item.ID===bidInputs[i].ID;}));cov_1pebg41whg.s[992]++;console.log(myBid);cov_1pebg41whg.s[993]++;index=bids.indexOf(myBid[0]);cov_1pebg41whg.s[994]++;console.log('Index');cov_1pebg41whg.s[995]++;console.log(index);cov_1pebg41whg.s[996]++;if(myBid[0].length>1){cov_1pebg41whg.b[213][0]++;cov_1pebg41whg.s[997]++;throw new Error('Error');}else{cov_1pebg41whg.b[213][1]++;}cov_1pebg41whg.s[998]++;lastOwner=token.Owner;cov_1pebg41whg.s[999]++;lastBid=myBid[0];cov_1pebg41whg.s[1000]++;lastQuantity=myBid.Quantity-myBid.QuantityMatch;cov_1pebg41whg.s[1001]++;lastQuantityMatch=0;cov_1pebg41whg.s[1002]++;lastRestingQuantity=myBid.Quantity-myBid.QuantityMatch;cov_1pebg41whg.s[1003]++;partialMatched.push(lastBid);// New token ID
// myBid[0].TokenID=token.ID;
// myBid[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
cov_1pebg41whg.s[1004]++;usedKey=token.ID;cov_1pebg41whg.s[1005]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[1006]++;orderBook=[bids,asks];// console.log(`orderBook: ${orderBook}`)
}cov_1pebg41whg.s[1007]++;console.log('despues comprobar fullmatch');cov_1pebg41whg.s[1008]++;usedKeys.push(thisTokenID);// usedOwners.push(cashTokenOwner);
}cov_1pebg41whg.s[1009]++;console.log('usedOwners.length');cov_1pebg41whg.s[1010]++;console.log(usedOwners.length);cov_1pebg41whg.s[1011]++;for(let j=(cov_1pebg41whg.s[1012]++,0);j<usedOwners.length;j++){cov_1pebg41whg.s[1013]++;console.log(`creamos estados tipo bond tokens`);//TODO
// check coupons received
cov_1pebg41whg.s[1014]++;outputBondToken.ID=await ctx.stub.createCompositeKey('BondToken',[usedOwners[j],outputBondToken.GenericID,':0']);cov_1pebg41whg.s[1015]++;outputBondToken.Amount=usedAmounts[j];// cashperBond[i]*amountperBond[i];
cov_1pebg41whg.s[1016]++;console.log(outputBondToken.Amount);cov_1pebg41whg.s[1017]++;outputBondToken.Owner=usedOwners[j];// if (usedAmounts[j]!==notUsedTokensAmounts[j]){
//     console.log(`dentro del segundo if`)
//     outputBondToken.Amount=bondTokensToTransfer[j]
let outputBondTokenBuffer=(cov_1pebg41whg.s[1018]++,Buffer.from(JSON.stringify(outputBondToken)));cov_1pebg41whg.s[1019]++;await ctx.stub.putState(outputBondToken.ID,outputBondTokenBuffer);// }else{
//     console.log(`dentro del segundo else`)
//     outputBondToken.Amount=bondTokensToTransfer[j];
//     let outputBondTokenBuffer= Buffer.from(JSON.stringify(outputBondToken))
//     await ctx.stub.putState(outputBondToken.ID,outputBondTokenBuffer)
// }
}// if(amount<total){
//     console.log('step 6: wrong amount')
//     throw new Error('Error')
// }
cov_1pebg41whg.s[1020]++;bids=orderBook[0];cov_1pebg41whg.s[1021]++;asks=orderBook[1];let submitterID=(cov_1pebg41whg.s[1022]++,await ctx.clientIdentity.getID());cov_1pebg41whg.s[1023]++;console.log('creamos los estados de cash tokens');let securitizationCoin1=(cov_1pebg41whg.s[1024]++,{ID:await ctx.stub.createCompositeKey('securitizationCoin',[submitterID,transactionID,':0']),GenericID:transactionID,TypeID:':0',Issuer:await ctx.clientIdentity.getID(),Owner:submitterID,Amount:total,Factor:100,CanBeUsed:true});let valueBuffer1=(cov_1pebg41whg.s[1025]++,Buffer.from(JSON.stringify(securitizationCoin1)));let restingQuantity=(cov_1pebg41whg.s[1026]++,total-amount);cov_1pebg41whg.s[1027]++;console.log('resting quantity');cov_1pebg41whg.s[1028]++;console.log(restingQuantity);cov_1pebg41whg.s[1029]++;console.log('step 7');cov_1pebg41whg.s[1030]++;console.log(lastOwner);cov_1pebg41whg.s[1031]++;if(restingQuantity!==0){cov_1pebg41whg.b[214][0]++;cov_1pebg41whg.s[1032]++;console.log('step 8');let securitizationCoin2=(cov_1pebg41whg.s[1033]++,{ID:await ctx.stub.createCompositeKey('securitizationCoin',[lastOwner,transactionID,':1']),GenericID:transactionID,TypeID:':1',Issuer:await ctx.clientIdentity.getID(),Owner:lastOwner,Amount:restingQuantity,Factor:100,CanBeUsed:true});cov_1pebg41whg.s[1034]++;console.log('securitizationCoin2');cov_1pebg41whg.s[1035]++;console.log(securitizationCoin2);cov_1pebg41whg.s[1036]++;console.log('securitizationCoin1');cov_1pebg41whg.s[1037]++;console.log(securitizationCoin1);cov_1pebg41whg.s[1038]++;lastBid.TokenID=securitizationCoin2.ID;cov_1pebg41whg.s[1039]++;lastBid.QuantityMatch=lastQuantityMatch;cov_1pebg41whg.s[1040]++;lastBid.RestingQuantity=lastRestingQuantity;cov_1pebg41whg.s[1041]++;lastBid.Quantity=lastQuantity;cov_1pebg41whg.s[1042]++;lastBid.PartialMatch=false;let thisBid=(cov_1pebg41whg.s[1043]++,await bids.filter(item=>{cov_1pebg41whg.f[88]++;cov_1pebg41whg.s[1044]++;return item.ID===lastBid.ID;}));let indice=(cov_1pebg41whg.s[1045]++,bids.indexOf(thisBid));cov_1pebg41whg.s[1046]++;bids[indice]=lastBid;cov_1pebg41whg.s[1047]++;orderBook=[bids,asks];let valueBuffer2=(cov_1pebg41whg.s[1048]++,Buffer.from(JSON.stringify(securitizationCoin2)));cov_1pebg41whg.s[1049]++;await ctx.stub.putState(securitizationCoin2.ID,valueBuffer2);cov_1pebg41whg.s[1050]++;await ctx.stub.putState(securitizationCoin1.ID,valueBuffer1);}else{cov_1pebg41whg.b[214][1]++;cov_1pebg41whg.s[1051]++;// create just one state
console.log('securitizationCoin1');cov_1pebg41whg.s[1052]++;console.log(securitizationCoin1);cov_1pebg41whg.s[1053]++;await ctx.stub.putState(securitizationCoin1.ID,valueBuffer1);}cov_1pebg41whg.s[1054]++;if(partialMatched.length>1){cov_1pebg41whg.b[215][0]++;cov_1pebg41whg.s[1055]++;throw new Error('Error');}else{cov_1pebg41whg.b[215][1]++;}cov_1pebg41whg.s[1056]++;asks=await this._sortingAskOrders(ctx,orderBook[1]);cov_1pebg41whg.s[1057]++;bids=await this._sortingBidOrders(ctx,orderBook[0]);cov_1pebg41whg.s[1058]++;orderBook=[bids,asks];// let orderBuffer=Buffer.from(JSON.stringify(orderBook));
// await ctx.stub.putState('OrderBook',orderBuffer);
cov_1pebg41whg.s[1059]++;return orderBook;}async TransferCoupons(ctx,bondTokenID,TypeID,spvID){cov_1pebg41whg.f[89]++;cov_1pebg41whg.s[1060]++;console.log('inside TransferCoupons');let userID=(cov_1pebg41whg.s[1061]++,await ctx.clientIdentity.getID());let bondTokenKey=(cov_1pebg41whg.s[1062]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondTokenID]));let key=(cov_1pebg41whg.s[1063]++,bondTokenKey+TypeID);cov_1pebg41whg.s[1064]++;console.log(key);let bondTokenBytes=(cov_1pebg41whg.s[1065]++,await ctx.stub.getState(key));cov_1pebg41whg.s[1066]++;if((cov_1pebg41whg.b[217][0]++,!bondTokenBytes)||(cov_1pebg41whg.b[217][1]++,bondTokenBytes.length===0)){cov_1pebg41whg.b[216][0]++;cov_1pebg41whg.s[1067]++;throw new Error('There is no state associated to that key');}else{cov_1pebg41whg.b[216][1]++;}cov_1pebg41whg.s[1068]++;console.log('paso primer filtro');let bondToken=(cov_1pebg41whg.s[1069]++,JSON.parse(bondTokenBytes.toString()));// let thisDate=await ctx.stub.getTxTimestamp();
// if (thisDate<bondToken.NextCouponPaymentNotBefore){
//     throw new Error('Error, you cannot still withdraw any coupons')
// }
cov_1pebg41whg.s[1070]++;console.log('paso segundo filtro');cov_1pebg41whg.s[1071]++;console.log(bondToken);cov_1pebg41whg.s[1072]++;if(!bondToken.CanBeUsed){cov_1pebg41whg.b[218][0]++;cov_1pebg41whg.s[1073]++;throw new Error(`Bond token cannot be used`);}else{cov_1pebg41whg.b[218][1]++;}cov_1pebg41whg.s[1074]++;console.log('paso tercer filtro');let bondsAmount=(cov_1pebg41whg.s[1075]++,bondToken.Amount);//or .Quantity
//These are attributes within bondToken state
let couponsReceived=(cov_1pebg41whg.s[1076]++,'');let couponsRemaining=(cov_1pebg41whg.s[1077]++,'');let totalCoupons=(cov_1pebg41whg.s[1078]++,'');let resultKeys=(cov_1pebg41whg.s[1079]++,[]);let total=(cov_1pebg41whg.s[1080]++,0);let amount;let lastCashAmount;let cashDifference;let new_value;let myCoupons=(cov_1pebg41whg.s[1081]++,parseInt(bondToken.Amount*bondToken.CouponRate*bondToken.FaceValue/bondToken.CouponFactor));let iterator=(cov_1pebg41whg.s[1082]++,await ctx.stub.getStateByPartialCompositeKey("securitizationCoin",[spvID]));cov_1pebg41whg.s[1083]++;console.log('iterator');cov_1pebg41whg.s[1084]++;console.log(myCoupons);// console.log(iterator)
// console.log(iterator[1])
cov_1pebg41whg.s[1085]++;for await(const res of iterator){cov_1pebg41whg.s[1086]++;console.log('dentro iterator');cov_1pebg41whg.s[1087]++;new_value=JSON.parse(res.value.toString());// console.log(`value: ${value.Amount}`)
cov_1pebg41whg.s[1088]++;console.log('value.Amount');cov_1pebg41whg.s[1089]++;console.log(new_value.Amount);cov_1pebg41whg.s[1090]++;amount=new_value.Amount;cov_1pebg41whg.s[1091]++;if((cov_1pebg41whg.b[220][0]++,new_value.CanBeUsed)&&(cov_1pebg41whg.b[220][1]++,new_value.Owner===spvID)){cov_1pebg41whg.b[219][0]++;cov_1pebg41whg.s[1092]++;console.log('se puede usar');cov_1pebg41whg.s[1093]++;resultKeys.push(new_value.ID);cov_1pebg41whg.s[1094]++;total+=amount;}else{cov_1pebg41whg.b[219][1]++;}cov_1pebg41whg.s[1095]++;if(total<myCoupons){cov_1pebg41whg.b[221][0]++;cov_1pebg41whg.s[1096]++;console.log('aun no ha llegado al maximo');cov_1pebg41whg.s[1097]++;await ctx.stub.deleteState(res.key);cov_1pebg41whg.s[1098]++;continue;}else{cov_1pebg41whg.b[221][1]++;cov_1pebg41whg.s[1099]++;console.log('ha llegado al maximo');cov_1pebg41whg.s[1100]++;lastCashAmount=new_value.Amount;cov_1pebg41whg.s[1101]++;cashDifference=total-myCoupons;cov_1pebg41whg.s[1102]++;break;}}cov_1pebg41whg.s[1103]++;console.log('fuera bucle');cov_1pebg41whg.s[1104]++;if(total<myCoupons){cov_1pebg41whg.b[222][0]++;cov_1pebg41whg.s[1105]++;throw new Error('There are not enough funds');}else{cov_1pebg41whg.b[222][1]++;}cov_1pebg41whg.s[1106]++;console.log('lastCashAmount');cov_1pebg41whg.s[1107]++;console.log(lastCashAmount);cov_1pebg41whg.s[1108]++;console.log('cashDifference');cov_1pebg41whg.s[1109]++;console.log(cashDifference);let genericID=(cov_1pebg41whg.s[1110]++,await ctx.stub.getTxID());let typeID=(cov_1pebg41whg.s[1111]++,':1');cov_1pebg41whg.s[1112]++;if(cashDifference!==0){cov_1pebg41whg.b[223][0]++;cov_1pebg41whg.s[1113]++;//create 
new_value.Amount=cashDifference;cov_1pebg41whg.s[1114]++;new_value.ID=await ctx.stub.createCompositeKey('securitizationCoin',[new_value.Owner,genericID,typeID]);cov_1pebg41whg.s[1115]++;new_value.TypeID=typeID;cov_1pebg41whg.s[1116]++;new_value.GenericID=genericID;cov_1pebg41whg.s[1117]++;await ctx.stub.deleteState(new_value.ID);}else{cov_1pebg41whg.b[223][1]++;cov_1pebg41whg.s[1118]++;new_value.Amount=total;cov_1pebg41whg.s[1119]++;new_value.TypeID=':0';cov_1pebg41whg.s[1120]++;new_value.GenericID=genericID;cov_1pebg41whg.s[1121]++;new_value.Owner=await ctx.clientIdentity.getIDBytes();cov_1pebg41whg.s[1122]++;new_value.ID=await ctx.stub.createCompositeKey('securitizationCoin',[new_value.Owner,genericID,new_value.TypeID]);let valueBuffer=(cov_1pebg41whg.s[1123]++,Buffer.from(JSON.stringify(new_value)));cov_1pebg41whg.s[1124]++;await ctx.stub.putState(new_value.ID,valueBuffer);}cov_1pebg41whg.s[1125]++;await ctx.stub.deleteState(bondTokenID);let newBondToken=(cov_1pebg41whg.s[1126]++,bondToken);cov_1pebg41whg.s[1127]++;newBondToken.GenericID=genericID;cov_1pebg41whg.s[1128]++;newBondToken.CouponsReceived=newBondToken.CouponsReceived+1;cov_1pebg41whg.s[1129]++;newBondToken.CouponsRemaining=newBondToken.CouponsRemaining-1;cov_1pebg41whg.s[1130]++;newBondToken.NextCouponPaymentNotBefore=newBondToken.CouponDatesNotBefore[newBondToken.CouponsReceived];let newBondTokenBuffer=(cov_1pebg41whg.s[1131]++,Buffer.from(JSON.stringify(newBondToken)));cov_1pebg41whg.s[1132]++;await ctx.stub.putState(newBondToken.ID,newBondTokenBuffer);cov_1pebg41whg.s[1133]++;return newBondToken;}//Transference triggered due to a Bid Order
async _transferBondTokens(ctx,askInputs,bidInput,orderBook){cov_1pebg41whg.f[90]++;cov_1pebg41whg.s[1134]++;// console
console.log('Inside _transferBondTokens');// I retrieve cash token
let securitizationCoinBytes=(cov_1pebg41whg.s[1135]++,await ctx.stub.getState(bidInput.TokenID));cov_1pebg41whg.s[1136]++;if((cov_1pebg41whg.b[225][0]++,!securitizationCoinBytes)||(cov_1pebg41whg.b[225][1]++,securitizationCoinBytes.length===0)){cov_1pebg41whg.b[224][0]++;cov_1pebg41whg.s[1137]++;throw new Error('Error');}else{cov_1pebg41whg.b[224][1]++;}let securitizationCoin=(cov_1pebg41whg.s[1138]++,JSON.parse(securitizationCoinBytes.toString()));let myFunds=(cov_1pebg41whg.s[1139]++,securitizationCoin.Amount);cov_1pebg41whg.s[1140]++;console.log(`myFunds: ${myFunds}`);//translate into nodejs utxo sample code 
let userID=(cov_1pebg41whg.s[1141]++,await ctx.clientIdentity.getID());let usedKeys=(cov_1pebg41whg.s[1142]++,[]);let usedKey,lastOwner;let usedOwners=(cov_1pebg41whg.s[1143]++,[]);let usedAmounts=(cov_1pebg41whg.s[1144]++,[]);let notUsedTokensAmounts=(cov_1pebg41whg.s[1145]++,[]);let cashTokensToTransfer=(cov_1pebg41whg.s[1146]++,[]);let total=(cov_1pebg41whg.s[1147]++,0);let bondsToTransfer=(cov_1pebg41whg.s[1148]++,[]);let amount=(cov_1pebg41whg.s[1149]++,0);let token;// let coupons;
// check all bonds are equal (same coupons)
let transactionID=(cov_1pebg41whg.s[1150]++,await ctx.stub.getTxID());let outputSecuritizationCoin=(cov_1pebg41whg.s[1151]++,{ID:'',GenericID:transactionID,TypeID:':0',Issuer:await ctx.clientIdentity.getID(),Owner:'',Amount:'',Factor:100,CanBeUsed:true});let asks=(cov_1pebg41whg.s[1152]++,orderBook[1]);let bids=(cov_1pebg41whg.s[1153]++,orderBook[0]);let lastAsk;let lastAskQuantity;let lastAskQuantityMatch;let lastAskRestingQuantity;let partialMatched=(cov_1pebg41whg.s[1154]++,[]);cov_1pebg41whg.s[1155]++;for(let i=(cov_1pebg41whg.s[1156]++,0);i<askInputs.length;i++){cov_1pebg41whg.s[1157]++;console.log('inside first loop');cov_1pebg41whg.s[1158]++;console.log(askInputs[i]);// console.log('iteracion numero')
// console.log(i)
let balance=(cov_1pebg41whg.s[1159]++,0);let bondID=(cov_1pebg41whg.s[1160]++,askInputs[i].TokenID);cov_1pebg41whg.s[1161]++;console.log(bondID);let quantityToTransfer=(cov_1pebg41whg.s[1162]++,askInputs[i].QuantityMatch);cov_1pebg41whg.s[1163]++;console.log(quantityToTransfer);cov_1pebg41whg.s[1164]++;if(usedKeys.indexOf(bondID)!==-1){cov_1pebg41whg.b[226][0]++;cov_1pebg41whg.s[1165]++;console.log('inside error 1');cov_1pebg41whg.s[1166]++;throw new Error('Error');}else{cov_1pebg41whg.b[226][1]++;}// let utxoInputCompositeKey=await ctx.stub.createCompositeKey('securitizationCoin', [userID, utxoInputKeys[i]]);
//TODO
//check errors
let valueBytes=(cov_1pebg41whg.s[1167]++,await ctx.stub.getState(bondID));//TODO
//check errors
cov_1pebg41whg.s[1168]++;balance=askInputs[i].Quantity-askInputs[i].QuantityMatch;cov_1pebg41whg.s[1169]++;if(balance===0){cov_1pebg41whg.b[227][0]++;cov_1pebg41whg.s[1170]++;total+=quantityToTransfer;}else{cov_1pebg41whg.b[227][1]++;cov_1pebg41whg.s[1171]++;total+=askInputs[i].Quantity;}// Error handling not needed since Itoa() was used when setting the utxo amount, guaranteeing it was an integer.
cov_1pebg41whg.s[1172]++;token=JSON.parse(valueBytes.toString());let bondOwner=(cov_1pebg41whg.s[1173]++,token.Owner);cov_1pebg41whg.s[1174]++;console.log('bondOwner');cov_1pebg41whg.s[1175]++;console.log(bondOwner);cov_1pebg41whg.s[1176]++;console.log('indice');cov_1pebg41whg.s[1177]++;console.log(usedOwners.indexOf(bondOwner));cov_1pebg41whg.s[1178]++;if(usedOwners.indexOf(bondOwner)===-1){cov_1pebg41whg.b[228][0]++;cov_1pebg41whg.s[1179]++;console.log('dentro del primer if');cov_1pebg41whg.s[1180]++;usedOwners.push(bondOwner);cov_1pebg41whg.s[1181]++;console.log(usedOwners);cov_1pebg41whg.s[1182]++;usedAmounts.push(quantityToTransfer*askInputs[i].Price);cov_1pebg41whg.s[1183]++;notUsedTokensAmounts.push(token.Amount);cov_1pebg41whg.s[1184]++;cashTokensToTransfer.push(quantityToTransfer*askInputs[i].Price);//console.log(`quantityToTransfer: ${quantityToTransfer}`)
// bondsToTransfer.append(qu)
}else{cov_1pebg41whg.b[228][1]++;cov_1pebg41whg.s[1185]++;console.log('dentro del primer else');cov_1pebg41whg.s[1186]++;console.log('usedOwners');cov_1pebg41whg.s[1187]++;console.log(usedOwners);cov_1pebg41whg.s[1188]++;usedAmounts[usedOwners.indexOf(bondOwner)]+=quantityToTransfer*askInputs[i].Price;cov_1pebg41whg.s[1189]++;notUsedTokensAmounts[usedOwners.indexOf(bondOwner)]+=token.Amount;cov_1pebg41whg.s[1190]++;cashTokensToTransfer[usedOwners.indexOf(bondOwner)]+=quantityToTransfer*askInputs[i].Price;}cov_1pebg41whg.s[1191]++;amount+=quantityToTransfer;// total+=token.Amount;
// //revisar
// if(token.Amount<quantityToTransfer){
//     throw new Error('Error')
// }
cov_1pebg41whg.s[1192]++;bids=orderBook[0];cov_1pebg41whg.s[1193]++;asks=orderBook[1];let thisTokenID=(cov_1pebg41whg.s[1194]++,token.ID);cov_1pebg41whg.s[1195]++;if(askInputs[i].FullMatch){cov_1pebg41whg.b[229][0]++;cov_1pebg41whg.s[1196]++;await ctx.stub.deleteState(token.ID);let myAsk=(cov_1pebg41whg.s[1197]++,await asks.filter(item=>{cov_1pebg41whg.f[91]++;cov_1pebg41whg.s[1198]++;return item.ID!==askInputs[i].ID;}));cov_1pebg41whg.s[1199]++;orderBook=[bids,myAsk];//console.log(`orderBook: ${orderBook}`)
}else{cov_1pebg41whg.b[229][1]++;let myAsk=(cov_1pebg41whg.s[1200]++,await asks.filter(item=>{cov_1pebg41whg.f[92]++;cov_1pebg41whg.s[1201]++;return item.ID===askInputs[i].ID;}));cov_1pebg41whg.s[1202]++;if(myAsk.length>1){cov_1pebg41whg.b[230][0]++;cov_1pebg41whg.s[1203]++;console.log('inside error 2');cov_1pebg41whg.s[1204]++;throw new Error('Error');}else{cov_1pebg41whg.b[230][1]++;}// index = asks.indexOf(myAsk[0]);
cov_1pebg41whg.s[1205]++;lastOwner=token.Owner;cov_1pebg41whg.s[1206]++;console.log('lastOwner');cov_1pebg41whg.s[1207]++;console.log(lastOwner);cov_1pebg41whg.s[1208]++;lastAsk=myAsk[0];cov_1pebg41whg.s[1209]++;partialMatched.push(lastAsk);cov_1pebg41whg.s[1210]++;lastAskQuantity=myAsk.Quantity-myAsk.QuantityMatch;cov_1pebg41whg.s[1211]++;lastAskQuantityMatch=0;cov_1pebg41whg.s[1212]++;lastAskRestingQuantity=myAsk.Quantity-myAsk.QuantityMatch;// New token ID
// myBid[0].TokenID=token.ID;
// myBid[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
cov_1pebg41whg.s[1213]++;usedKey=token.ID;cov_1pebg41whg.s[1214]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[1215]++;orderBook=[bids,asks];// myAsk[0].TokenID=token.ID;
// myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
// await ctx.stub.deleteState(token.ID);
//console.log(`orderBook: ${orderBook}`)
}cov_1pebg41whg.s[1216]++;usedKeys.push(thisTokenID);}cov_1pebg41whg.s[1217]++;for(let j=(cov_1pebg41whg.s[1218]++,0);j<usedOwners.length;j++){cov_1pebg41whg.s[1219]++;console.log('creamos estados tipo cash tokens');//console.log(`creamos estados tipo cash tokens`)
//TODO
// check coupons received
cov_1pebg41whg.s[1220]++;outputSecuritizationCoin.ID=await ctx.stub.createCompositeKey('securitizationCoin',[usedOwners[j],outputSecuritizationCoin.GenericID,':0']);cov_1pebg41whg.s[1221]++;outputSecuritizationCoin.Amount=usedAmounts[j];// cashperBond[i]*amountperBond[i];
cov_1pebg41whg.s[1222]++;outputSecuritizationCoin.Owner=usedOwners[j];// let lastOwner=token.Owner;
// let lastQuantity=token.Quantity;
// let lastBalance=
cov_1pebg41whg.s[1223]++;console.log(outputSecuritizationCoin.Amount);// if (usedAmounts[j]!==notUsedTokensAmounts[j]){
//     //console.log(`dentro del segundo if`)
// outputSecuritizationCoin.Amount=cashTokensToTransfer[j]
let outputSecuritizationCoinBuffer=(cov_1pebg41whg.s[1224]++,Buffer.from(JSON.stringify(outputSecuritizationCoin)));cov_1pebg41whg.s[1225]++;await ctx.stub.putState(outputSecuritizationCoin.ID,outputSecuritizationCoinBuffer);// }else{
//     //console.log(`dentro del segundo else`)
//     outputSecuritizationCoin.Amount=cashTokensToTransfer[j];
//     let outputSecuritizationCoinBuffer= Buffer.from(JSON.stringify(outputSecuritizationCoin))
//     await ctx.stub.putState(outputSecuritizationCoin.ID,outputSecuritizationCoinBuffer)
// }
}// await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// if(amount<total){
//     throw new Error('Error')
// }
cov_1pebg41whg.s[1226]++;console.log('creamos estados bond Tokens');cov_1pebg41whg.s[1227]++;bids=orderBook[0];cov_1pebg41whg.s[1228]++;asks=orderBook[1];let invokerCert=(cov_1pebg41whg.s[1229]++,await ctx.clientIdentity.getID());let bondToken1=(cov_1pebg41whg.s[1230]++,{ID:await ctx.stub.createCompositeKey('BondToken',[invokerCert,transactionID,':0']),GenericID:transactionID,TypeID:':0',Rating:token.Rating,CouponRate:token.CouponRate,MaturityDate:token.MaturityDate,Issuer:securitizationCoin.Owner,Owner:securitizationCoin.Owner,Pool:token.Pool,AmountPaid:token.AmountPaid,OriginalValue:token.OriginalValue,MonthlyPayout:token.MonthlyPayout,RemainingPayments:token.RemainingPayments,Amount:amount,CanBeUsed:true});let valueBuffer1=(cov_1pebg41whg.s[1231]++,Buffer.from(JSON.stringify(bondToken1)));let restingQuantity=(cov_1pebg41whg.s[1232]++,total-amount);cov_1pebg41whg.s[1233]++;console.log('resting quantity');cov_1pebg41whg.s[1234]++;console.log(restingQuantity);cov_1pebg41whg.s[1235]++;console.log('step 7');cov_1pebg41whg.s[1236]++;if(restingQuantity!==0){cov_1pebg41whg.b[231][0]++;cov_1pebg41whg.s[1237]++;console.log('step 8');//console.log(`dentro del tercer if`)
let bondToken2=(cov_1pebg41whg.s[1238]++,{ID:await ctx.stub.createCompositeKey('BondToken',[lastOwner,transactionID,':1']),GenericID:transactionID,TypeID:':1',Rating:token.Rating,CouponRate:token.CouponRate,MaturityDate:token.MaturityDate,Issuer:securitizationCoin.Issuer,Owner:securitizationCoin.Owner,Pool:token.Pool,AmountPaid:token.AmountPaid,OriginalValue:token.OriginalValue,MonthlyPayout:token.MonthlyPayout,RemainingPayments:token.RemainingPayments,Amount:restingQuantity,CanBeUsed:true});cov_1pebg41whg.s[1239]++;console.log('bondToken2');cov_1pebg41whg.s[1240]++;console.log(bondToken2);cov_1pebg41whg.s[1241]++;console.log('bondToken1');cov_1pebg41whg.s[1242]++;console.log(bondToken1);cov_1pebg41whg.s[1243]++;lastAsk.TokenID=bondToken2.ID;cov_1pebg41whg.s[1244]++;lastAsk.QuantityMatch=lastAskQuantityMatch;cov_1pebg41whg.s[1245]++;lastAsk.RestingQuantity=lastAskRestingQuantity;cov_1pebg41whg.s[1246]++;lastAsk.Quantity=lastAskQuantity;cov_1pebg41whg.s[1247]++;lastAsk.PartialMatch=false;let thisAsk=(cov_1pebg41whg.s[1248]++,await asks.filter(item=>{cov_1pebg41whg.f[93]++;cov_1pebg41whg.s[1249]++;return item.ID===lastAsk.ID;}));let indice=(cov_1pebg41whg.s[1250]++,asks.indexOf(thisAsk));cov_1pebg41whg.s[1251]++;asks[indice]=lastAsk;cov_1pebg41whg.s[1252]++;orderBook=[bids,asks];let valueBuffer2=(cov_1pebg41whg.s[1253]++,Buffer.from(JSON.stringify(bondToken2)));cov_1pebg41whg.s[1254]++;await ctx.stub.putState(bondToken2.ID,valueBuffer2);cov_1pebg41whg.s[1255]++;await ctx.stub.putState(bondToken1.ID,valueBuffer1);}else{cov_1pebg41whg.b[231][1]++;cov_1pebg41whg.s[1256]++;console.log('bondToken1');cov_1pebg41whg.s[1257]++;console.log(bondToken1);//console.log(`dentro del tercer else`)
// create just one state
cov_1pebg41whg.s[1258]++;await ctx.stub.putState(bondToken1.ID,valueBuffer1);}cov_1pebg41whg.s[1259]++;if(partialMatched.length>1){cov_1pebg41whg.b[232][0]++;cov_1pebg41whg.s[1260]++;throw new Error('Error');}else{cov_1pebg41whg.b[232][1]++;}let orderBuffer=(cov_1pebg41whg.s[1261]++,Buffer.from(JSON.stringify(orderBook)));cov_1pebg41whg.s[1262]++;await ctx.stub.putState('OrderBook',orderBuffer);cov_1pebg41whg.s[1263]++;return orderBook;}// Bid order will be executed by someone whose desire is buying bonds.
async BidOrder(ctx,amount,price,tokenID,identificativo,date){cov_1pebg41whg.f[94]++;cov_1pebg41whg.s[1264]++;console.log('paso 1');// first we check the format of price
cov_1pebg41whg.s[1265]++;await this._checkDecimals(price);cov_1pebg41whg.s[1266]++;price=parseFloat(price);cov_1pebg41whg.s[1267]++;price=parseInt(price*100);// if (amount<=0 || price<=0){
//     throw new Error(`Both Amount and Price arguments must be positive`);
// }
// const userID= await ctx.GetUserIdentity('cif');
const userID=(cov_1pebg41whg.s[1268]++,await ctx.clientIdentity.getID());// retrieve order book if it exists
const bookOrderBytes=(cov_1pebg41whg.s[1269]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1270]++;if((cov_1pebg41whg.b[234][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[234][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[233][0]++;cov_1pebg41whg.s[1271]++;bookOrder=[[],[]];}else{cov_1pebg41whg.b[233][1]++;cov_1pebg41whg.s[1272]++;bookOrder=JSON.parse(bookOrderBytes.toString());}// retrieve token we are going to use to pay for
let myKey=(cov_1pebg41whg.s[1273]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));cov_1pebg41whg.s[1274]++;myKey=myKey+identificativo;const tokenBytes=(cov_1pebg41whg.s[1275]++,await ctx.stub.getState(myKey));cov_1pebg41whg.s[1276]++;console.log('paso 2');// prior verifications are also inside auxiliary function
cov_1pebg41whg.s[1277]++;if((cov_1pebg41whg.b[236][0]++,!tokenBytes)||(cov_1pebg41whg.b[236][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[235][0]++;cov_1pebg41whg.s[1278]++;throw new Error(`Error, Token State according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[235][1]++;}const token=(cov_1pebg41whg.s[1279]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[1280]++;if(!token.CanBeUsed){cov_1pebg41whg.b[237][0]++;cov_1pebg41whg.s[1281]++;throw new Error(`This Token State with ID ${tokenID} has already been used. Try another Token ID`);}else{cov_1pebg41whg.b[237][1]++;}const genericID=(cov_1pebg41whg.s[1282]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1283]++,await ctx.stub.createCompositeKey('BidOrder',[genericID]));// compute how many tokens we will withdraw from our Token State
const total=(cov_1pebg41whg.s[1284]++,amount*price);let currentOrder=(cov_1pebg41whg.s[1285]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:token.ID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Bid',Time:new Date(date).getTime()});//console.log('tiempo dentro del sc')
//console.log(currentOrder.Time)
let asks=(cov_1pebg41whg.s[1286]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1287]++,bookOrder[0]);//console.log(asks)
cov_1pebg41whg.s[1288]++;console.log('paso 3');// If there  is no asks it means we cannot match our bid order
cov_1pebg41whg.s[1289]++;if(asks.length===0){cov_1pebg41whg.b[238][0]++;cov_1pebg41whg.s[1290]++;console.log('paso 3.1');let newID=(cov_1pebg41whg.s[1291]++,await this._splitMoney(ctx,token.ID,total));const order=(cov_1pebg41whg.s[1292]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:newID,Name:'Bid',FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Time:new Date(date).getTime()});cov_1pebg41whg.s[1293]++;bookOrder[0].push(order);const book=(cov_1pebg41whg.s[1294]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1295]++;bookOrder=[book,bookOrder[1]];cov_1pebg41whg.s[1296]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1297]++;return bookOrder;}else{cov_1pebg41whg.b[238][1]++;}cov_1pebg41whg.s[1298]++;console.log('paso 4');let bidReference=(cov_1pebg41whg.s[1299]++,currentOrder);let bondKeyAcumulator=(cov_1pebg41whg.s[1300]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1301]++,[]);let counter=(cov_1pebg41whg.s[1302]++,bidReference.Quantity);let balance=(cov_1pebg41whg.s[1303]++,0);let totalTokens=(cov_1pebg41whg.s[1304]++,0);let tokensCounter=(cov_1pebg41whg.s[1305]++,token.Amount);let balanceTokens=(cov_1pebg41whg.s[1306]++,0);let myTokens=(cov_1pebg41whg.s[1307]++,0);cov_1pebg41whg.s[1308]++;console.log('paso 5');// console.log(bidReference.Price)
// check if there is matching
cov_1pebg41whg.s[1309]++;for await(const ask of asks){cov_1pebg41whg.s[1310]++;console.log('controlando el break');cov_1pebg41whg.s[1311]++;console.log(ask.Price);cov_1pebg41whg.s[1312]++;if((cov_1pebg41whg.b[240][0]++,ask.Price<=bidReference.Price)&&(cov_1pebg41whg.b[240][1]++,!ask.FullMatch)&&(cov_1pebg41whg.b[240][2]++,myTokens<bidReference.Quantity)){cov_1pebg41whg.b[239][0]++;cov_1pebg41whg.s[1313]++;console.log('paso 5.1');cov_1pebg41whg.s[1314]++;counter=counter-ask.Quantity;cov_1pebg41whg.s[1315]++;balance=ask.Quantity+counter;cov_1pebg41whg.s[1316]++;tokensCounter=tokensCounter-ask.Quantity*ask.Price;cov_1pebg41whg.s[1317]++;balanceTokens=ask.Quantity*ask.Price+tokensCounter;// FULL MATCH means that our submitted order with that size has been completed
cov_1pebg41whg.s[1318]++;if(counter>=0){cov_1pebg41whg.b[241][0]++;cov_1pebg41whg.s[1319]++;console.log('paso 5.1.2.1');// FULL MATCH
cov_1pebg41whg.s[1320]++;ask.QuantityMatch=ask.Quantity;cov_1pebg41whg.s[1321]++;ask.FullMatch=true;cov_1pebg41whg.s[1322]++;ask.PartialMatch=false;cov_1pebg41whg.s[1323]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1324]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1325]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1326]++;myTokens+=ask.Quantity;}else{cov_1pebg41whg.b[241][1]++;cov_1pebg41whg.s[1327]++;console.log('paso 5.1.2.2');// PARTIAL MATCH means that our submitted order with that size has been completed partially
// PARTIAL MATCH
cov_1pebg41whg.s[1328]++;ask.FullMatch=false;cov_1pebg41whg.s[1329]++;ask.PartialMatch=true;cov_1pebg41whg.s[1330]++;ask.QuantityMatch=balance;cov_1pebg41whg.s[1331]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1332]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1333]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1334]++;myTokens+=balance;// And finally break, because we read following a prestablished order
}}else{cov_1pebg41whg.b[239][1]++;cov_1pebg41whg.s[1335]++;continue;}}cov_1pebg41whg.s[1336]++;console.log('paso 6');// now we upload our order and the matching state
cov_1pebg41whg.s[1337]++;console.log(myTokens);cov_1pebg41whg.s[1338]++;console.log(bidReference.Quantity);let newID;cov_1pebg41whg.s[1339]++;if(myTokens===bidReference.Quantity){cov_1pebg41whg.b[242][0]++;cov_1pebg41whg.s[1340]++;console.log('paso 7.1');// Full Match
// currentOrder.ID=orderID
cov_1pebg41whg.s[1341]++;currentOrder.TokenID=token.ID;cov_1pebg41whg.s[1342]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1343]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1344]++;currentOrder.QuantityMatch=currentOrder.Quantity;// currentOrder.MatchID=bidReference.MatchID;
}else{cov_1pebg41whg.b[242][1]++;cov_1pebg41whg.s[1345]++;if((cov_1pebg41whg.b[244][0]++,myTokens<bidReference.Quantity)&&(cov_1pebg41whg.b[244][1]++,myTokens!==0)){cov_1pebg41whg.b[243][0]++;cov_1pebg41whg.s[1346]++;console.log('paso 7.2');// Partial Match
// currentOrder.ID=orderID
cov_1pebg41whg.s[1347]++;currentOrder.TokenID=token.ID;cov_1pebg41whg.s[1348]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1349]++;currentOrder.PartialMatch=true;cov_1pebg41whg.s[1350]++;currentOrder.QuantityMatch=myTokens;cov_1pebg41whg.s[1351]++;console.log('final');// currentOrder.Quantity=counter;
// currentOrder.MatchID=bidReference.MatchID;
}else{cov_1pebg41whg.b[243][1]++;cov_1pebg41whg.s[1352]++;console.log('paso 7.3');// No match
// currentOrder.ID=orderID
cov_1pebg41whg.s[1353]++;newID=await this._splitMoney(ctx,token.ID,total);cov_1pebg41whg.s[1354]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1355]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1356]++;currentOrder.PartialMatch=false;}}cov_1pebg41whg.s[1357]++;bookOrder[0].push(currentOrder);//console.log(bookOrder);
const bookBid=(cov_1pebg41whg.s[1358]++,await this._sortingBidOrders(ctx,bookOrder[0]));const bookAsk=(cov_1pebg41whg.s[1359]++,await this._sortingAskOrders(ctx,bookOrder[1]));cov_1pebg41whg.s[1360]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1361]++;console.log('paso 8');//console.log(bookOrder)
// Finally we submit order book and matching state
cov_1pebg41whg.s[1362]++;console.log('match');cov_1pebg41whg.s[1363]++;console.log(tokenAcumulator);cov_1pebg41whg.s[1364]++;console.log(currentOrder);cov_1pebg41whg.s[1365]++;if(bondKeyAcumulator.length>0){cov_1pebg41whg.b[245][0]++;//console.log('paso 8.1')
const orderMatch=(cov_1pebg41whg.s[1366]++,{Orders:tokenAcumulator,Order:currentOrder});// let orderBuffer=Buffer.from(JSON.stringify(orderMatch));
// await ctx.stub.putState('OrderMatch'+genericID, orderBuffer);
// transference triggered
// cash tokens goes from bid uploader to bond owners and bonds
// goes to bid order uploader
// let ITransferCashTokenID=currentOrder.TokenID;
cov_1pebg41whg.s[1367]++;bookOrder=await this._transferBondTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);//console.log(orderMatch)
//console.log(orderMatch.Orders)
//console.log(orderMatch.Order)
}else{cov_1pebg41whg.b[245][1]++;}cov_1pebg41whg.s[1368]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1369]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1370]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1371]++;console.log('paso 9');cov_1pebg41whg.s[1372]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// AskOrder  will be executed by someone able to sell assets at a limit price
async AskOrder(ctx,amount,price,bondID,identificativo,date){cov_1pebg41whg.f[95]++;cov_1pebg41whg.s[1373]++;console.log('paso 1');cov_1pebg41whg.s[1374]++;await this._checkDecimals(price);// const userID=await ctx.GetUserIdentity('cif');
const userID=(cov_1pebg41whg.s[1375]++,await ctx.clientIdentity.getID());cov_1pebg41whg.s[1376]++;amount=parseInt(amount);cov_1pebg41whg.s[1377]++;price=parseFloat(price);cov_1pebg41whg.s[1378]++;price=parseInt(price*100);let myKey=(cov_1pebg41whg.s[1379]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondID]));cov_1pebg41whg.s[1380]++;myKey=myKey+identificativo;const bondBytes=(cov_1pebg41whg.s[1381]++,await ctx.stub.getState(myKey));// These prior verifications are also inside auxiliary function
cov_1pebg41whg.s[1382]++;if((cov_1pebg41whg.b[247][0]++,!bondBytes)||(cov_1pebg41whg.b[247][1]++,bondBytes.length===0)){cov_1pebg41whg.b[246][0]++;cov_1pebg41whg.s[1383]++;throw new Error(`Error, Bond State with ID ${bondID} does not exist`);}else{cov_1pebg41whg.b[246][1]++;}const bond=(cov_1pebg41whg.s[1384]++,JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[1385]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[248][0]++;cov_1pebg41whg.s[1386]++;throw new Error(`This Bond State with ID ${bondID} has already been used. Try another Bond ID`);}else{cov_1pebg41whg.b[248][1]++;}cov_1pebg41whg.s[1387]++;if(bond.Amount<amount){cov_1pebg41whg.b[249][0]++;cov_1pebg41whg.s[1388]++;throw new Error(`You are not supposed to do that.`);}else{cov_1pebg41whg.b[249][1]++;}const bookOrderBytes=(cov_1pebg41whg.s[1389]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1390]++;if((cov_1pebg41whg.b[251][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[251][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[250][0]++;cov_1pebg41whg.s[1391]++;bookOrder=[[],[]];}else{cov_1pebg41whg.b[250][1]++;cov_1pebg41whg.s[1392]++;bookOrder=JSON.parse(bookOrderBytes.toString());}cov_1pebg41whg.s[1393]++;console.log('paso 2');const genericID=(cov_1pebg41whg.s[1394]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1395]++,await ctx.stub.createCompositeKey('AskOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1396]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:bond.ID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1397]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1398]++,bookOrder[0]);cov_1pebg41whg.s[1399]++;console.log('paso 3');// If there is no bids it means we cannot match our ask order so we just submit it
cov_1pebg41whg.s[1400]++;if(bids.length===0){cov_1pebg41whg.b[252][0]++;cov_1pebg41whg.s[1401]++;console.log('paso 3.1');let newID=(cov_1pebg41whg.s[1402]++,await this._splitBonds(ctx,bond.ID,amount));//console.log(newID)
const order=(cov_1pebg41whg.s[1403]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:newID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});//console.log(order);
cov_1pebg41whg.s[1404]++;bookOrder[1].push(order);let book=(cov_1pebg41whg.s[1405]++,await this._sortingAskOrders(ctx,bookOrder[1]));//console.log(book)
cov_1pebg41whg.s[1406]++;bookOrder=[bookOrder[0],book];cov_1pebg41whg.s[1407]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));// //console.log(ret)
cov_1pebg41whg.s[1408]++;return bookOrder;}else{cov_1pebg41whg.b[252][1]++;}cov_1pebg41whg.s[1409]++;console.log('paso 4');const askReference=(cov_1pebg41whg.s[1410]++,currentOrder);let tokenKeyAcumulator=(cov_1pebg41whg.s[1411]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1412]++,[]);let tokenQuantitiesAcumulator=(cov_1pebg41whg.s[1413]++,[]);let counter=(cov_1pebg41whg.s[1414]++,askReference.Quantity);let totalTokens=(cov_1pebg41whg.s[1415]++,0);let balance=(cov_1pebg41whg.s[1416]++,0);let myTokens=(cov_1pebg41whg.s[1417]++,0);// Check if our order can be matched
cov_1pebg41whg.s[1418]++;for await(const bid of bids){cov_1pebg41whg.s[1419]++;if((cov_1pebg41whg.b[254][0]++,bid.Price>=askReference.Price)&&(cov_1pebg41whg.b[254][1]++,!bid.FullMatch)&&(cov_1pebg41whg.b[254][2]++,myTokens<askReference.Quantity)){cov_1pebg41whg.b[253][0]++;cov_1pebg41whg.s[1420]++;console.log('paso 4.1');cov_1pebg41whg.s[1421]++;counter=counter-bid.Quantity;cov_1pebg41whg.s[1422]++;balance=bid.Quantity+counter;cov_1pebg41whg.s[1423]++;if(counter>=0){cov_1pebg41whg.b[255][0]++;cov_1pebg41whg.s[1424]++;console.log('paso 4.1.1');cov_1pebg41whg.s[1425]++;bid.FullMatch=true;cov_1pebg41whg.s[1426]++;bid.PartialMatch=false;cov_1pebg41whg.s[1427]++;bid.QuantityMatch=bid.Quantity;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1428]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1429]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1430]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_1pebg41whg.s[1431]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1432]++;myTokens+=bid.Quantity;// } else if(counter<0 && balance>0){
}else{cov_1pebg41whg.b[255][1]++;cov_1pebg41whg.s[1433]++;console.log('paso 4.1.2');cov_1pebg41whg.s[1434]++;bid.FullMatch=false;cov_1pebg41whg.s[1435]++;bid.PartialMatch=true;cov_1pebg41whg.s[1436]++;bid.QuantityMatch=balance;cov_1pebg41whg.s[1437]++;bid.Quantity=bid.Quantity-balance;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1438]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1439]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1440]++;tokenQuantitiesAcumulator.push(counter+bid.Quantity);cov_1pebg41whg.s[1441]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1442]++;myTokens+=balance;}// else{
//     continue
// }
}else{cov_1pebg41whg.b[253][1]++;cov_1pebg41whg.s[1443]++;console.log('paso 4.2');cov_1pebg41whg.s[1444]++;continue;}}let newID;cov_1pebg41whg.s[1445]++;console.log('paso 5');cov_1pebg41whg.s[1446]++;console.log(myTokens);cov_1pebg41whg.s[1447]++;console.log(askReference.Quantity);//console.log(newID)
//console.log(counter)
// According to what matching situation we are, differents orders will be submitted
cov_1pebg41whg.s[1448]++;if(myTokens===askReference.Quantity){cov_1pebg41whg.b[256][0]++;cov_1pebg41whg.s[1449]++;console.log('paso 5.1');// Full Match
//console.log('case FULLMATCH')
cov_1pebg41whg.s[1450]++;currentOrder.TokenID=bond.ID;cov_1pebg41whg.s[1451]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1452]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1453]++;currentOrder.QuantityMatch=currentOrder.Quantity;// currentOrder.MatchID=askReference.MatchID;
}else{cov_1pebg41whg.b[256][1]++;cov_1pebg41whg.s[1454]++;if((cov_1pebg41whg.b[258][0]++,myTokens<askReference.Quantity)&&(cov_1pebg41whg.b[258][1]++,myTokens!==0)){cov_1pebg41whg.b[257][0]++;cov_1pebg41whg.s[1455]++;// Partial Match
//console.log('PARTIALMATCH')
console.log('paso 5.2');cov_1pebg41whg.s[1456]++;currentOrder.TokenID=bond.ID;cov_1pebg41whg.s[1457]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1458]++;currentOrder.PartialMatch=true;cov_1pebg41whg.s[1459]++;currentOrder.QuantityMatch=myTokens;// currentOrder.Quantity=counter;
// currentOrder.MatchID=askReference.MatchID;
}else{cov_1pebg41whg.b[257][1]++;cov_1pebg41whg.s[1460]++;// No match
//console.log('NOMATCH')
newID=await this._splitBonds(ctx,bond.ID,amount);cov_1pebg41whg.s[1461]++;console.log('paso 5.3');cov_1pebg41whg.s[1462]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1463]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1464]++;currentOrder.PartialMatch=false;}}cov_1pebg41whg.s[1465]++;bookOrder[1].push(currentOrder);cov_1pebg41whg.s[1466]++;console.log('funciona ok');// console.log(bookOrder)
// Sort order book according to prior rules
let bookAsk=(cov_1pebg41whg.s[1467]++,await this._sortingAskOrders(ctx,bookOrder[1]));let bookBid=(cov_1pebg41whg.s[1468]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1469]++;bookOrder=[bookBid,bookAsk];// console.log('bookAsk')
// console.log(bookAsk)
// console.log('bookBid')
// console.log(bookBid)
cov_1pebg41whg.s[1470]++;console.log('paso 6');// console.log(bookOrder)
//console.log(tokenKeyAcumulator)
cov_1pebg41whg.s[1471]++;if(tokenKeyAcumulator.length>0){cov_1pebg41whg.b[259][0]++;cov_1pebg41whg.s[1472]++;console.log('Hay match');const orderMatch=(cov_1pebg41whg.s[1473]++,{Orders:tokenAcumulator,Order:currentOrder});// let orderBookBuffer=Buffer.from(JSON.stringify(bookOrder));
// await ctx.stub.putState('OrderMatch'+genericID, orderBuffer);
// finally we set an event saying that our order has been matched and with which orders
// await ctx.SetEventName('OrderBook');
// await ctx.SetEventPayload(orderBBookBuffer);
cov_1pebg41whg.s[1474]++;bookOrder=await this._transferCashTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);//console.log(orderMatch)
//console.log(orderMatch.Orders)
//console.log(orderMatch.Order)
}else{cov_1pebg41whg.b[259][1]++;}cov_1pebg41whg.s[1475]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1476]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1477]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1478]++;console.log('paso 7');// console.log(bookOrder)
cov_1pebg41whg.s[1479]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// AskMarketOrder will be executed by someone whose desire is selling bonds at market price.
async AskMarketOrder(ctx,amount,bondID,identificativo,date){cov_1pebg41whg.f[96]++;cov_1pebg41whg.s[1480]++;amount=parseInt(amount);cov_1pebg41whg.s[1481]++;if(amount<=0){cov_1pebg41whg.b[260][0]++;cov_1pebg41whg.s[1482]++;throw new Error(`Amount argument must be positive`);}else{cov_1pebg41whg.b[260][1]++;}const userID=(cov_1pebg41whg.s[1483]++,await ctx.GetUserIdentity('cif'));let myKey=(cov_1pebg41whg.s[1484]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondID]));cov_1pebg41whg.s[1485]++;myKey=myKey+identificativo;const bondBytes=(cov_1pebg41whg.s[1486]++,await ctx.stub.getState(myKey));cov_1pebg41whg.s[1487]++;if((cov_1pebg41whg.b[262][0]++,!bondBytes)||(cov_1pebg41whg.b[262][1]++,bondBytes.length===0)){cov_1pebg41whg.b[261][0]++;cov_1pebg41whg.s[1488]++;throw new Error(`Error, Bond State with key ${bondID} does not exist`);}else{cov_1pebg41whg.b[261][1]++;}// These prior verifications are also inside auxiliary function.
const bond=(cov_1pebg41whg.s[1489]++,JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[1490]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[263][0]++;cov_1pebg41whg.s[1491]++;throw new Error(`This Bond State with ID ${bondID} has already been used. Try another bond ID`);}else{cov_1pebg41whg.b[263][1]++;}cov_1pebg41whg.s[1492]++;if(bond.Amount<amount){cov_1pebg41whg.b[264][0]++;cov_1pebg41whg.s[1493]++;throw new Error(`Your token has not enough funds`);}else{cov_1pebg41whg.b[264][1]++;}// retrieve order book if it exists
const bookOrderBytes=(cov_1pebg41whg.s[1494]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1495]++;if((cov_1pebg41whg.b[266][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[266][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[265][0]++;cov_1pebg41whg.s[1496]++;throw new Error(`Order Book still not submitted`);}else{cov_1pebg41whg.b[265][1]++;cov_1pebg41whg.s[1497]++;bookOrder=JSON.parse(bookOrderBytes.toString());}// //console.log('Order book')
// //console.log(bookOrder)
const genericID=(cov_1pebg41whg.s[1498]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1499]++,await ctx.stub.createCompositeKey('AskOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1500]++,{ID:orderID,Quantity:amount,Price:'',MarketPrice:true,TokenID:bond.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:amount,// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1501]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1502]++,bookOrder[0]);// If there is no bids it means we cannot match our ask order
// if (bids.length===0){
//     // For sake of simplicity if there are no asks you cannot submit
//     // a market order
//     throw new Error(`There are no asks submitted.`)
// }
const askReference=(cov_1pebg41whg.s[1503]++,currentOrder);let tokenKeyAcumulator=(cov_1pebg41whg.s[1504]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1505]++,[]);let tokenQuantitiesAcumulator=(cov_1pebg41whg.s[1506]++,[]);let counter=(cov_1pebg41whg.s[1507]++,askReference.Quantity);let totalTokens=(cov_1pebg41whg.s[1508]++,0);let balance=(cov_1pebg41whg.s[1509]++,0);//console.log('askReference.Quantity')
//console.log(askReference.Quantity)
// Check if there is matching
cov_1pebg41whg.s[1510]++;for await(const bid of bids){cov_1pebg41whg.s[1511]++;if(!bid.FullMatch){cov_1pebg41whg.b[267][0]++;cov_1pebg41whg.s[1512]++;//console.log('Paso 1')
counter=counter-bid.Quantity;cov_1pebg41whg.s[1513]++;balance=bid.Quantity+counter;cov_1pebg41whg.s[1514]++;if(counter>=0){cov_1pebg41whg.b[268][0]++;cov_1pebg41whg.s[1515]++;//console.log('Paso 2')
bid.FullMatch=true;cov_1pebg41whg.s[1516]++;bid.PartialMatch=false;cov_1pebg41whg.s[1517]++;bid.QuantityMatch=bid.Quantity;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1518]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1519]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1520]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_1pebg41whg.s[1521]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;}else{cov_1pebg41whg.b[268][1]++;cov_1pebg41whg.s[1522]++;if((cov_1pebg41whg.b[270][0]++,counter<0)&&(cov_1pebg41whg.b[270][1]++,balance>0)){cov_1pebg41whg.b[269][0]++;cov_1pebg41whg.s[1523]++;//console.log('Paso 3')
bid.FullMatch=false;cov_1pebg41whg.s[1524]++;bid.PartialMatch=true;cov_1pebg41whg.s[1525]++;bid.QuantityMatch=balance;cov_1pebg41whg.s[1526]++;bid.Quantity=bid.Quantity-balance;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1527]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1528]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1529]++;tokenQuantitiesAcumulator.push(counter+bid.Quantity);cov_1pebg41whg.s[1530]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1531]++;counter=0;cov_1pebg41whg.s[1532]++;break;}else{cov_1pebg41whg.b[269][1]++;cov_1pebg41whg.s[1533]++;counter=0;cov_1pebg41whg.s[1534]++;break;}}// else{
//     //console.log('Paso 4')
//     bid.FullMatch=true;
//     bid.PartialMatch=false;
//     bid.QuantityMatch=bid.Quantity;
//     // bid.MatchID.push(askReference.ID);
//     // askReference.MatchID.push(bid.ID);
//     tokenKeyAcumulator.push(bid.ID);
//     tokenAcumulator.push(bid);
//     tokenQuantitiesAcumulator.push(bid.Quantity);
//     totalTokens=totalTokens+(bid.Price*bid.QuantityMatch);
//     break
// }
}else{cov_1pebg41whg.b[267][1]++;cov_1pebg41whg.s[1535]++;continue;}}let newID=(cov_1pebg41whg.s[1536]++,await this._splitBonds(ctx,bond.ID,amount));// if (counter===0){
//     // Full Match
cov_1pebg41whg.s[1537]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1538]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1539]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1540]++;currentOrder.QuantityMatch=askReference.Quantity-counter;//     // currentOrder.MatchID=askReference.MatchID;
// }else if(counter!==0 && counter!==askReference.Quantity ){
//    // Partial Match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch= true;
//     currentOrder.QuantityMatch=askReference.Quantity-counter;
//     currentOrder.Quantity=counter;
//     // currentOrder.MatchID=askReference.MatchID;
// }
// else{
//     // No match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch= false;
// }
cov_1pebg41whg.s[1541]++;bookOrder[1].push(currentOrder);let bookAsk=(cov_1pebg41whg.s[1542]++,await this._sortingAskOrders(ctx,bookOrder[1]));let bookBid=(cov_1pebg41whg.s[1543]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1544]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1545]++;if(tokenKeyAcumulator.length>0){cov_1pebg41whg.b[271][0]++;//console.log('Hay match')
const orderMatch=(cov_1pebg41whg.s[1546]++,{Orders:tokenAcumulator,Order:currentOrder});// finally we set an event saying that our order has been matched and with which orders
// await ctx.SetEventName('AskMatched');
// await ctx.SetEventPayload(orderBuffer);
cov_1pebg41whg.s[1547]++;bookOrder=await this._transferCashTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);//console.log(orderMatch)
//console.log(orderMatch.Orders)
//console.log(orderMatch.Order)
}else{cov_1pebg41whg.b[271][1]++;}cov_1pebg41whg.s[1548]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1549]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1550]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1551]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// BidMarketOrder will be executed by someone whose desire is buying bonds at market price.
async BidMarketOrder(ctx,amount,tokenID,identificativo,date){cov_1pebg41whg.f[97]++;cov_1pebg41whg.s[1552]++;if(amount<=0){cov_1pebg41whg.b[272][0]++;cov_1pebg41whg.s[1553]++;throw new Error(`Amount argument must be positive`);}else{cov_1pebg41whg.b[272][1]++;}const userID=(cov_1pebg41whg.s[1554]++,await ctx.GetUserIdentity('cif'));// These prior verifications are also inside auxiliary function
let myKey=(cov_1pebg41whg.s[1555]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));cov_1pebg41whg.s[1556]++;myKey=myKey+identificativo;const tokenBytes=(cov_1pebg41whg.s[1557]++,await ctx.stub.getState(myKey));cov_1pebg41whg.s[1558]++;if((cov_1pebg41whg.b[274][0]++,!tokenBytes)||(cov_1pebg41whg.b[274][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[273][0]++;cov_1pebg41whg.s[1559]++;throw new Error(`Error, Token State with ID ${tokenID} does not exist`);}else{cov_1pebg41whg.b[273][1]++;}const token=(cov_1pebg41whg.s[1560]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[1561]++;if(!token.CanBeUsed){cov_1pebg41whg.b[275][0]++;cov_1pebg41whg.s[1562]++;throw new Error(`This Token State with ID ${tokenID} has already been used. Try another token ID`);}else{cov_1pebg41whg.b[275][1]++;}const bookOrderBytes=(cov_1pebg41whg.s[1563]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1564]++;if((cov_1pebg41whg.b[277][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[277][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[276][0]++;cov_1pebg41whg.s[1565]++;throw new Error(`There are no asks submitted.`);// bookOrder=[[],[]];
}else{cov_1pebg41whg.b[276][1]++;cov_1pebg41whg.s[1566]++;bookOrder=JSON.parse(bookOrderBytes.toString());}const genericID=(cov_1pebg41whg.s[1567]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1568]++,await ctx.stub.createCompositeKey('BidOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1569]++,{ID:orderID,Quantity:parseInt(amount),Price:'',MarketPrice:true,TokenID:token.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Bid',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1570]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1571]++,bookOrder[0]);// If there  is no asks it means we cannot match our bid order, so it has no sense to commit a bid order
// at market price
// if ( asks.length===0){
//     // For sake of simplicity if there are no asks you cannot submit
//     // a market order
//     throw new Error(`There are no asks submitted.`)
// }
let bidReference=(cov_1pebg41whg.s[1572]++,currentOrder);let bondKeyAcumulator=(cov_1pebg41whg.s[1573]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1574]++,[]);let counter=(cov_1pebg41whg.s[1575]++,bidReference.Quantity);let balance=(cov_1pebg41whg.s[1576]++,0);let totalTokens=(cov_1pebg41whg.s[1577]++,0);let tokensCounter=(cov_1pebg41whg.s[1578]++,token.Amount);let balanceTokens=(cov_1pebg41whg.s[1579]++,0);//console.log('tokensCounter')
//console.log(tokensCounter)
//console.log(token)
//console.log('paso 1')
cov_1pebg41whg.s[1580]++;for await(const ask of asks){cov_1pebg41whg.s[1581]++;if(!ask.FullMatch){cov_1pebg41whg.b[278][0]++;cov_1pebg41whg.s[1582]++;//console.log('paso 2')
counter=counter-ask.Quantity;cov_1pebg41whg.s[1583]++;balance=ask.Quantity+counter;cov_1pebg41whg.s[1584]++;tokensCounter=tokensCounter-ask.Quantity*ask.Price;cov_1pebg41whg.s[1585]++;balanceTokens=ask.Quantity*ask.Price+tokensCounter;cov_1pebg41whg.s[1586]++;if(tokensCounter<=0){cov_1pebg41whg.b[279][0]++;//console.log('paso 3')
let amountSol=(cov_1pebg41whg.s[1587]++,Math.floor(balanceTokens/ask.Price));cov_1pebg41whg.s[1588]++;ask.QuantityMatch=amountSol;cov_1pebg41whg.s[1589]++;ask.Quantity=ask.Quantity-amountSol;cov_1pebg41whg.s[1590]++;ask.FullMatch=false;cov_1pebg41whg.s[1591]++;ask.PartialMatch=true;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1592]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1593]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1594]++;totalTokens=totalTokens+ask.Price*amountSol;// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1595]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1596]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1597]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1598]++;counter=0;cov_1pebg41whg.s[1599]++;break;}else{cov_1pebg41whg.b[279][1]++;cov_1pebg41whg.s[1600]++;//console.log('paso 4')
if(counter>=0){cov_1pebg41whg.b[280][0]++;cov_1pebg41whg.s[1601]++;//console.log('paso 4.1')
// FULL MATCH
ask.QuantityMatch=ask.Quantity;cov_1pebg41whg.s[1602]++;ask.FullMatch=true;cov_1pebg41whg.s[1603]++;ask.PartialMatch=false;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1604]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1605]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1606]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;}else{cov_1pebg41whg.b[280][1]++;cov_1pebg41whg.s[1607]++;// else if(counter<0 && balance>0){
//console.log('paso 4.2')
// Partial Match
ask.FullMatch=false;cov_1pebg41whg.s[1608]++;ask.PartialMatch=true;cov_1pebg41whg.s[1609]++;ask.QuantityMatch=balance;cov_1pebg41whg.s[1610]++;ask.Quantity=ask.Quantity-balance;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1611]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1612]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1613]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1614]++;counter=0;cov_1pebg41whg.s[1615]++;break;}}}else{cov_1pebg41whg.b[278][1]++;cov_1pebg41whg.s[1616]++;continue;}}//console.log('tokenAcumulator');
//console.log(tokenAcumulator);
let newID=(cov_1pebg41whg.s[1617]++,await this._splitMoney(ctx,token.ID,totalTokens));// if (counter===0){
//console.log('Full Match')
// Full Match
cov_1pebg41whg.s[1618]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1619]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1620]++;currentOrder.PartialMatch=false;// currentOrder.QuantityMatch=currentOrder.Quantity;
cov_1pebg41whg.s[1621]++;currentOrder.QuantityMatch=bidReference.Quantity-counter;// currentOrder.MatchID=bidReference.MatchID;
// }
// else{ 
// // if(counter!==0 && counter!==bidReference.Quantity){
//     //console.log('Partial Match')
//    // Partial Match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch= true;
//     currentOrder.QuantityMatch=bidReference.Quantity-counter;
//     currentOrder.Quantity=counter;
//     // currentOrder.MatchID=bidReference.MatchID;
// }
// else{
//     //console.log('No Match')
//     // No match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch=false;
// }
cov_1pebg41whg.s[1622]++;bookOrder[0].push(currentOrder);const bookBid=(cov_1pebg41whg.s[1623]++,await this._sortingBidOrders(ctx,bookOrder[0]));const bookAsk=(cov_1pebg41whg.s[1624]++,await this._sortingAskOrders(ctx,bookOrder[1]));cov_1pebg41whg.s[1625]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1626]++;if(tokenAcumulator.length>0){cov_1pebg41whg.b[281][0]++;//console.log('Hay match')
const orderMatch=(cov_1pebg41whg.s[1627]++,{Orders:tokenAcumulator,Order:currentOrder});cov_1pebg41whg.s[1628]++;bookOrder=await this._transferBondTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);}else{cov_1pebg41whg.b[281][1]++;}cov_1pebg41whg.s[1629]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));// let orderBuffer=Buffer.from(JSON.stringify(orderMatch));
// await ctx.stub.putState('OrderMatch'+genericID,orderBuffer);
cov_1pebg41whg.s[1630]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1631]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));// }
cov_1pebg41whg.s[1632]++;return bookOrder;}// // This function will do a delivery versus payment when a Bid Order achieves a match
// // This function will be executed until no state according to that key exists in world state
// async MatchingBid(ctx,orderID){
//     const orderBookBytes=await ctx.stub.getState('OrderBook');
//     if (!orderBookBytes || orderBookBytes.length === 0){
//         throw new Error(`Error, Order Book State does not exist`);
//     }
//     let orderBook=JSON.parse(orderBookBytes.toString());
//     let asks=orderBook[1];
//     let bids=orderBook[0];
//     const orderMatchBytes= await ctx.stub.getState(orderID);
//     if (!orderMatchBytes || orderMatchBytes.length === 0){
//         throw new Error(`Error, Matching Order with ID ${orderID} does not exist`);
//     }
//     let orderMatch=JSON.parse(orderMatchBytes.toString());
//     let order=orderMatch.Order;
//     let orders=orderMatch.Orders[0];
//     let bond=asks.filter(item => item.ID===orders.ID);
//     let token=bids.filter(item=>item.ID===order.ID);
//     let tokenID;
//     let bondID;
//     // delivery vs payment will change the IDs of both token and bond and will be included in order book
//     [tokenID,bondID]=await this._dvp(ctx,bond[0].TokenID,token[0].TokenID, orders.QuantityMatch*order.Price,orders.QuantityMatch);
//     let newCounter=order.QuantityMatch-orders.QuantityMatch;
//     order.TokenID=tokenID;
//     order.QuantityMatch=newCounter;
//     let new_orders=orderMatch.Orders.filter(item => item.ID!==orders.ID);
//     // lo que pasa con el documento de matching: si se han transferido todos, se elimina, en caso contrario solo
//     // se elimina el order del ask
//     // If we have transfered all tokens/bonds we can delete Order Match document from world state
//     if (newCounter===0){
//         await ctx.stub.deleteState(orderID)
//     }else{
//         let match={
//             Orders: new_orders,
//             Order: order,
//         }
//         await ctx.stub.putState(orderID, Buffer.from(JSON.stringify(match)));
//     }
//     // We have to modify order book because orders partially matched have changed their tokens ID
//     // For Ask Orders
//     let myAsk=await asks.filter(item=> item.ID===orders.ID);
//     let index = asks.indexOf(myAsk[0]);
//     myAsk[0].TokenID=bondID;
//     myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
//     if (myAsk[0].RestingQuantity!==0){
//         asks[index]=myAsk[0];
//         orderBook=[bids,asks];
//     }else if (myAsk[0].RestingQuantity===0){
//         myAsk=await asks.filter(item=> item.ID!==orders.ID);
//         orderBook=[bids,myAsk];
//     }
//     asks=orderBook[1];
//     bids=orderBook[0];
//     // For Bid Order
//     let myBid=await bids.filter(item=> item.ID===order.ID);
//     index = bids.indexOf(myBid[0]);
//     myBid[0].TokenID=tokenID;
//     myBid[0].RestingQuantity=myBid[0].RestingQuantity-orders.QuantityMatch;
//     if (myBid[0].RestingQuantity!==0){
//         bids[index]=myBid[0];
//         orderBook=[bids,asks];
//     }else if (myBid[0].RestingQuantity===0){
//         myBid=await bids.filter(item=> item.ID!==order.ID);
//         orderBook=[myBid,asks];
//     }
//     await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// }
// // This function will do a delivery versus payment when an Ask Order achieves a match
// // This function will be executed until no state according to that key exists in world state
// async MatchingAsk(ctx,orderID){
//     const orderBookBytes=await ctx.stub.getState('OrderBook');
//     if (!orderBookBytes || orderBookBytes.length === 0){
//         throw new Error(`Error, Order Book State associated to key ${'OrderBook'} does not exist`);
//     }
//     let orderBook=JSON.parse(orderBookBytes.toString());
//     let asks=orderBook[1];
//     let bids=orderBook[0];
//     // Retrieve order Match State
//     const orderMatchBytes= await ctx.stub.getState(orderID);
//     if (!orderMatchBytes || orderMatchBytes.length === 0){
//         throw new Error(`Error, Matched Order State with ID ${orderID} does not exist`);
//     }
//     const orderMatch=JSON.parse(orderMatchBytes.toString());
//     let order=orderMatch.Order;
//     let orders=orderMatch.Orders[0];
//     let bond=await asks.filter(item => item.ID===order.ID);
//     let token=await bids.filter(item => item.ID===orders.ID);
//     let tokenID;
//     let bondID;
//     // delivery vs payment
//     [tokenID,bondID]=await this._dvp(ctx,bond[0].TokenID,token[0].TokenID, orders.QuantityMatch*orders.Price,orders.QuantityMatch);
//     let newCounter=order.QuantityMatch-orders.QuantityMatch;
//     order.TokenID=tokenID;
//     order.QuantityMatch=newCounter;
//     let new_orders=await orderMatch.Orders.filter(item => item.ID!==orders.ID);
//     // If every Token/Bond have been transfered, we will delete Match Order State
//     if (newCounter===0){
//         await ctx.stub.deleteState(orderID)
//     }else{
//         const match={
//             Orders: new_orders,
//             Order: order,
//         }
//         await ctx.stub.putState(orderID, Buffer.from(JSON.stringify(match)))
//     }
//     let myBid=await bids.filter(item=> item.ID===orders.ID);
//     let index = bids.indexOf(myBid[0]);
//     myBid[0].TokenID=tokenID;
//     myBid[0].RestingQuantity=myBid[0].RestingQuantity-orders.QuantityMatch;
//     if (myBid[0].RestingQuantity!==0){
//         bids[index]=myBid[0];
//         orderBook=[bids,asks];
//     }else if (myBid[0].RestingQuantity===0){
//         myBid=await bids.filter(item=> item.ID!==orders.ID);
//         orderBook=[myBid,asks];
//     }
//     asks=orderBook[1];
//     bids=orderBook[0];
//     let myAsk=await asks.filter(item=> item.ID===order.ID);
//     index = asks.indexOf(myAsk[0]);
//     myAsk[0].TokenID=bondID;
//     myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
//     if (myAsk[0].RestingQuantity!==0){
//         asks[index]=myAsk[0];
//         orderBook=[bids,asks];
//     }else if (myAsk[0].RestingQuantity===0){
//         myAsk=await asks.filter(item=> item.ID!==order.ID);
//         orderBook=[bids,myAsk];
//     }
//     await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// }
// async _dvp(ctx,bondID,tokenID, tokensToTransfer, bondsToTransfer){
//     //console.log('Paso 1')
//     const tokenBytes=await ctx.stub.getState(tokenID);
//     if (!tokenBytes || tokenBytes.length === 0) {
//         throw new Error(`Error, Token State with key ${tokenID} does not exist`);
//     }
//     //console.log('Paso 2')
//     const token=JSON.parse(tokenBytes.toString());
//     const bondBytes=await ctx.stub.getState(bondID);
//     if (!bondBytes || bondBytes.length === 0) {
//         throw new Error(`Error, Bond State with ID ${bondID} does not exist`);
//     }
//     const bond=JSON.parse(bondBytes.toString());
//     const genericID=await ctx.stub.getTxID();
//     const key1=await ctx.stub.createCompositeKey('securitizationCoin',[bond.Owner,genericID]);
//     const key2=await ctx.stub.createCompositeKey('securitizationCoin',[token.Owner,genericID]);
//     const bondKey1=await ctx.stub.createCompositeKey('BondToken',[token.Owner,genericID]);
//     const bondKey2=await ctx.stub.createCompositeKey('BondToken',[bond.Owner,genericID]);
//     const balanceTokens=token.Amount-tokensToTransfer;
//     let utxo1;
//     let utxo2;
//     let typeID;
//     typeID=':1';
//     utxo1={
//         ID: key1+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: token.Owner,
//         Issuer: token.Issuer,
//         Amount: balanceTokens,
//         CanBeUsed: false,
//     };
//     typeID=':0';
//     utxo2={
//         ID: key2+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: bond.Owner,
//         Issuer: token.Issuer,
//         Amount: tokensToTransfer,
//         CanBeUsed: true
//     };
//     const balanceBonds=bond.Amount-bondsToTransfer;
//     let bond1;
//     let bond2;
//     typeID=':1'
//     // TODO:
//     // Bond Arguments.
//     bond1={
//         ID: bondKey1+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: token.Owner,
//         Issuer: token.Issuer,
//         Amount: balanceBonds,
//         CanBeUsed: false,
//     };
//     typeID=':0'
//     bond2={
//         ID: bondKey2+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: bond.Owner,
//         Issuer: token.Issuer,
//         Amount: bondsToTransfer,
//         CanBeUsed: true
//     };
//     await ctx.stub.deleteState(tokenID);
//     await ctx.stub.deleteState(bondID);
//     //console.log(balanceTokens)
//     //console.log(balanceBonds)
//     if (balanceTokens!==0){
//         //console.log('balanceTokens!==0')
//         await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));
//         await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));
//     }else{
//         await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));  
//     }
//     if (balanceBonds!==0){
//         //console.log('balanceBonds!==0')
//         await ctx.stub.putState(bond1.ID,Buffer.from(JSON.stringify(bond1)));
//         await ctx.stub.putState(bond2.ID,Buffer.from(JSON.stringify(bond2)));
//     }else{
//         await ctx.stub.putState(bond2.ID,Buffer.from(JSON.stringify(bond2)));
//     }
//     return [utxo1.ID, bond1.ID]
// }
async QueryOrderBook(ctx){cov_1pebg41whg.f[98]++;const bookOrderBytes=(cov_1pebg41whg.s[1633]++,await ctx.stub.getState('OrderBook'));cov_1pebg41whg.s[1634]++;if((cov_1pebg41whg.b[283][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[283][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[282][0]++;cov_1pebg41whg.s[1635]++;throw new Error(`Order Book does not exist`);}else{cov_1pebg41whg.b[282][1]++;}const bookOrder=(cov_1pebg41whg.s[1636]++,JSON.parse(bookOrderBytes.toString()));cov_1pebg41whg.s[1637]++;return bookOrder;}// // We must change this function
// // Order book implementation URL http://web.archive.org/web/20110205154238/http://howtohft.blogspot.com/2011/02/how-to-build-fast-limit-order-book.html
}// module.exports.originationContract=originationContract;
cov_1pebg41whg.s[1638]++;module.exports.securitizationContext=securitizationContext;cov_1pebg41whg.s[1639]++;module.exports.servicingContract=servicingContract;cov_1pebg41whg.s[1640]++;module.exports.ppaContract=ppaContract;cov_1pebg41whg.s[1641]++;module.exports.commonSecuritizationContract=commonSecuritizationContract;cov_1pebg41whg.s[1642]++;module.exports.bondIssuanceContract=bondIssuanceContract;