'use strict';var cov_1pebg41whg=function(){var path="/home/oliver/go/src/github.com/hyperledger/fabric-samples/securitization-chaincode/chaincodes/my_chaincodeTest/lib/securitizationContract.js";var hash="fd5ea22b2d5c3fea33e13dc6256c8598f3dd5bb1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/oliver/go/src/github.com/hyperledger/fabric-samples/securitization-chaincode/chaincodes/my_chaincodeTest/lib/securitizationContract.js",statementMap:{"0":{start:{line:3,column:26},end:{line:3,column:56}},"1":{start:{line:9,column:8},end:{line:9,column:16}},"2":{start:{line:13,column:8},end:{line:13,column:46}},"3":{start:{line:18,column:8},end:{line:18,column:59}},"4":{start:{line:27,column:8},end:{line:27,column:42}},"5":{start:{line:31,column:8},end:{line:31,column:46}},"6":{start:{line:35,column:8},end:{line:35,column:77}},"7":{start:{line:40,column:8},end:{line:40,column:24}},"8":{start:{line:103,column:8},end:{line:103,column:67}},"9":{start:{line:108,column:8},end:{line:108,column:38}},"10":{start:{line:113,column:8},end:{line:113,column:32}},"11":{start:{line:122,column:8},end:{line:122,column:43}},"12":{start:{line:129,column:8},end:{line:129,column:43}},"13":{start:{line:137,column:21},end:{line:137,column:40}},"14":{start:{line:139,column:17},end:{line:139,column:67}},"15":{start:{line:141,column:8},end:{line:143,column:9}},"16":{start:{line:142,column:12},end:{line:142,column:74}},"17":{start:{line:144,column:16},end:{line:144,column:57}},"18":{start:{line:145,column:19},end:{line:145,column:26}},"19":{start:{line:146,column:20},end:{line:146,column:30}},"20":{start:{line:149,column:8},end:{line:153,column:9}},"21":{start:{line:149,column:19},end:{line:149,column:20}},"22":{start:{line:150,column:12},end:{line:152,column:13}},"23":{start:{line:151,column:16},end:{line:151,column:73}},"24":{start:{line:171,column:27},end:{line:171,column:44}},"25":{start:{line:173,column:18},end:{line:173,column:19}},"26":{start:{line:174,column:8},end:{line:182,column:9}},"27":{start:{line:174,column:18},end:{line:174,column:19}},"28":{start:{line:175,column:12},end:{line:178,column:13}},"29":{start:{line:176,column:16},end:{line:176,column:24}},"30":{start:{line:177,column:16},end:{line:177,column:30}},"31":{start:{line:179,column:12},end:{line:181,column:13}},"32":{start:{line:180,column:16},end:{line:180,column:79}},"33":{start:{line:184,column:8},end:{line:186,column:9}},"34":{start:{line:185,column:12},end:{line:185,column:45}},"35":{start:{line:188,column:8},end:{line:188,column:34}},"36":{start:{line:189,column:8},end:{line:191,column:9}},"37":{start:{line:190,column:12},end:{line:190,column:64}},"38":{start:{line:193,column:8},end:{line:193,column:19}},"39":{start:{line:219,column:24},end:{line:219,column:48}},"40":{start:{line:221,column:19},end:{line:221,column:93}},"41":{start:{line:223,column:8},end:{line:225,column:9}},"42":{start:{line:224,column:12},end:{line:224,column:44}},"43":{start:{line:227,column:19},end:{line:227,column:23}},"44":{start:{line:228,column:19},end:{line:237,column:9}},"45":{start:{line:239,column:8},end:{line:239,column:72}},"46":{start:{line:240,column:8},end:{line:240,column:19}},"47":{start:{line:244,column:21},end:{line:244,column:53}},"48":{start:{line:245,column:21},end:{line:245,column:96}},"49":{start:{line:247,column:23},end:{line:247,column:25}},"50":{start:{line:248,column:20},end:{line:248,column:21}},"51":{start:{line:250,column:8},end:{line:261,column:9}},"52":{start:{line:251,column:12},end:{line:251,column:53}},"53":{start:{line:253,column:12},end:{line:253,column:32}},"54":{start:{line:254,column:12},end:{line:257,column:13}},"55":{start:{line:255,column:16},end:{line:255,column:42}},"56":{start:{line:256,column:16},end:{line:256,column:39}},"57":{start:{line:258,column:12},end:{line:260,column:13}},"58":{start:{line:259,column:16},end:{line:259,column:21}},"59":{start:{line:262,column:8},end:{line:264,column:9}},"60":{start:{line:263,column:12},end:{line:263,column:59}},"61":{start:{line:265,column:16},end:{line:265,column:74}},"62":{start:{line:266,column:8},end:{line:266,column:18}},"63":{start:{line:281,column:18},end:{line:281,column:79}},"64":{start:{line:282,column:8},end:{line:284,column:9}},"65":{start:{line:283,column:12},end:{line:283,column:49}},"66":{start:{line:285,column:8},end:{line:285,column:19}},"67":{start:{line:289,column:19},end:{line:289,column:21}},"68":{start:{line:290,column:12},end:{line:290,column:33}},"69":{start:{line:291,column:2},end:{line:316,column:3}},"70":{start:{line:292,column:3},end:{line:314,column:4}},"71":{start:{line:293,column:18},end:{line:293,column:20}},"72":{start:{line:295,column:4},end:{line:312,column:5}},"73":{start:{line:296,column:5},end:{line:296,column:36}},"74":{start:{line:297,column:5},end:{line:297,column:45}},"75":{start:{line:298,column:5},end:{line:303,column:6}},"76":{start:{line:299,column:6},end:{line:299,column:67}},"77":{start:{line:302,column:6},end:{line:302,column:55}},"78":{start:{line:305,column:5},end:{line:305,column:33}},"79":{start:{line:306,column:5},end:{line:311,column:6}},"80":{start:{line:307,column:6},end:{line:307,column:68}},"81":{start:{line:310,column:6},end:{line:310,column:56}},"82":{start:{line:313,column:4},end:{line:313,column:29}},"83":{start:{line:315,column:3},end:{line:315,column:31}},"84":{start:{line:317,column:2},end:{line:317,column:19}},"85":{start:{line:318,column:2},end:{line:318,column:20}},"86":{start:{line:323,column:18},end:{line:323,column:73}},"87":{start:{line:324,column:30},end:{line:324,column:66}},"88":{start:{line:325,column:16},end:{line:325,column:64}},"89":{start:{line:326,column:2},end:{line:326,column:17}},"90":{start:{line:340,column:8},end:{line:340,column:42}},"91":{start:{line:343,column:24},end:{line:343,column:48}},"92":{start:{line:344,column:22},end:{line:344,column:54}},"93":{start:{line:346,column:18},end:{line:346,column:92}},"94":{start:{line:349,column:8},end:{line:349,column:19}},"95":{start:{line:351,column:34},end:{line:360,column:9}},"96":{start:{line:361,column:8},end:{line:361,column:103}},"97":{start:{line:362,column:8},end:{line:362,column:34}},"98":{start:{line:367,column:23},end:{line:367,column:82}},"99":{start:{line:368,column:20},end:{line:368,column:21}},"100":{start:{line:371,column:8},end:{line:374,column:13}},"101":{start:{line:372,column:12},end:{line:372,column:52}},"102":{start:{line:373,column:12},end:{line:373,column:30}},"103":{start:{line:375,column:8},end:{line:379,column:9}},"104":{start:{line:376,column:12},end:{line:376,column:45}},"105":{start:{line:377,column:14},end:{line:379,column:9}},"106":{start:{line:378,column:12},end:{line:378,column:24}},"107":{start:{line:380,column:8},end:{line:380,column:23}},"108":{start:{line:385,column:21},end:{line:385,column:53}},"109":{start:{line:386,column:23},end:{line:386,column:98}},"110":{start:{line:387,column:22},end:{line:387,column:24}},"111":{start:{line:389,column:8},end:{line:392,column:9}},"112":{start:{line:390,column:12},end:{line:390,column:52}},"113":{start:{line:391,column:12},end:{line:391,column:32}},"114":{start:{line:393,column:8},end:{line:393,column:23}},"115":{start:{line:398,column:21},end:{line:398,column:53}},"116":{start:{line:399,column:23},end:{line:399,column:89}},"117":{start:{line:400,column:22},end:{line:400,column:24}},"118":{start:{line:402,column:8},end:{line:405,column:9}},"119":{start:{line:403,column:12},end:{line:403,column:52}},"120":{start:{line:404,column:12},end:{line:404,column:32}},"121":{start:{line:406,column:8},end:{line:406,column:23}},"122":{start:{line:415,column:8},end:{line:415,column:40}},"123":{start:{line:418,column:8},end:{line:418,column:43}},"124":{start:{line:421,column:22},end:{line:421,column:42}},"125":{start:{line:422,column:8},end:{line:424,column:9}},"126":{start:{line:423,column:12},end:{line:423,column:74}},"127":{start:{line:425,column:21},end:{line:425,column:40}},"128":{start:{line:427,column:8},end:{line:429,column:9}},"129":{start:{line:428,column:12},end:{line:428,column:74}},"130":{start:{line:430,column:8},end:{line:430,column:38}},"131":{start:{line:431,column:16},end:{line:431,column:57}},"132":{start:{line:432,column:19},end:{line:432,column:26}},"133":{start:{line:433,column:20},end:{line:433,column:30}},"134":{start:{line:436,column:8},end:{line:440,column:9}},"135":{start:{line:436,column:19},end:{line:436,column:20}},"136":{start:{line:437,column:12},end:{line:439,column:13}},"137":{start:{line:438,column:16},end:{line:438,column:73}},"138":{start:{line:441,column:20},end:{line:441,column:35}},"139":{start:{line:442,column:8},end:{line:488,column:9}},"140":{start:{line:444,column:16},end:{line:449,column:17}},"141":{start:{line:446,column:20},end:{line:446,column:82}},"142":{start:{line:448,column:20},end:{line:448,column:26}},"143":{start:{line:451,column:16},end:{line:455,column:17}},"144":{start:{line:452,column:20},end:{line:452,column:82}},"145":{start:{line:454,column:20},end:{line:454,column:26}},"146":{start:{line:457,column:16},end:{line:461,column:17}},"147":{start:{line:458,column:20},end:{line:458,column:82}},"148":{start:{line:460,column:20},end:{line:460,column:26}},"149":{start:{line:463,column:16},end:{line:467,column:17}},"150":{start:{line:464,column:20},end:{line:464,column:82}},"151":{start:{line:466,column:20},end:{line:466,column:26}},"152":{start:{line:469,column:16},end:{line:473,column:17}},"153":{start:{line:470,column:20},end:{line:470,column:82}},"154":{start:{line:472,column:20},end:{line:472,column:26}},"155":{start:{line:475,column:16},end:{line:479,column:17}},"156":{start:{line:476,column:20},end:{line:476,column:82}},"157":{start:{line:478,column:20},end:{line:478,column:26}},"158":{start:{line:481,column:16},end:{line:485,column:17}},"159":{start:{line:482,column:20},end:{line:482,column:82}},"160":{start:{line:484,column:20},end:{line:484,column:26}},"161":{start:{line:493,column:15},end:{line:493,column:42}},"162":{start:{line:494,column:8},end:{line:494,column:20}},"163":{start:{line:503,column:23},end:{line:503,column:80}},"164":{start:{line:504,column:20},end:{line:504,column:22}},"165":{start:{line:505,column:8},end:{line:508,column:9}},"166":{start:{line:507,column:12},end:{line:507,column:34}},"167":{start:{line:509,column:8},end:{line:515,column:9}},"168":{start:{line:510,column:12},end:{line:510,column:24}},"169":{start:{line:511,column:14},end:{line:515,column:9}},"170":{start:{line:512,column:12},end:{line:512,column:24}},"171":{start:{line:514,column:12},end:{line:514,column:47}},"172":{start:{line:525,column:23},end:{line:525,column:53}},"173":{start:{line:526,column:8},end:{line:530,column:9}},"174":{start:{line:527,column:12},end:{line:527,column:24}},"175":{start:{line:529,column:12},end:{line:529,column:23}},"176":{start:{line:541,column:23},end:{line:541,column:83}},"177":{start:{line:542,column:20},end:{line:542,column:21}},"178":{start:{line:544,column:8},end:{line:547,column:13}},"179":{start:{line:545,column:12},end:{line:545,column:52}},"180":{start:{line:546,column:12},end:{line:546,column:30}},"181":{start:{line:548,column:8},end:{line:552,column:9}},"182":{start:{line:549,column:12},end:{line:549,column:67}},"183":{start:{line:550,column:14},end:{line:552,column:9}},"184":{start:{line:551,column:12},end:{line:551,column:25}},"185":{start:{line:553,column:8},end:{line:553,column:23}},"186":{start:{line:567,column:23},end:{line:567,column:89}},"187":{start:{line:568,column:20},end:{line:568,column:21}},"188":{start:{line:571,column:8},end:{line:576,column:9}},"189":{start:{line:574,column:12},end:{line:574,column:52}},"190":{start:{line:575,column:12},end:{line:575,column:30}},"191":{start:{line:577,column:8},end:{line:581,column:9}},"192":{start:{line:578,column:12},end:{line:578,column:67}},"193":{start:{line:579,column:14},end:{line:581,column:9}},"194":{start:{line:580,column:12},end:{line:580,column:24}},"195":{start:{line:582,column:8},end:{line:582,column:23}},"196":{start:{line:587,column:21},end:{line:587,column:78}},"197":{start:{line:589,column:8},end:{line:591,column:9}},"198":{start:{line:590,column:12},end:{line:590,column:51}},"199":{start:{line:592,column:8},end:{line:592,column:35}},"200":{start:{line:598,column:17},end:{line:598,column:74}},"201":{start:{line:599,column:16},end:{line:599,column:18}},"202":{start:{line:600,column:8},end:{line:603,column:9}},"203":{start:{line:601,column:12},end:{line:601,column:27}},"204":{start:{line:602,column:12},end:{line:602,column:22}},"205":{start:{line:604,column:29},end:{line:604,column:62}},"206":{start:{line:605,column:8},end:{line:605,column:32}},"207":{start:{line:606,column:8},end:{line:606,column:28}},"208":{start:{line:607,column:8},end:{line:607,column:18}},"209":{start:{line:616,column:21},end:{line:616,column:53}},"210":{start:{line:618,column:8},end:{line:620,column:9}},"211":{start:{line:619,column:12},end:{line:619,column:103}},"212":{start:{line:621,column:8},end:{line:623,column:9}},"213":{start:{line:622,column:12},end:{line:622,column:67}},"214":{start:{line:627,column:24},end:{line:627,column:48}},"215":{start:{line:630,column:20},end:{line:630,column:83}},"216":{start:{line:633,column:34},end:{line:633,column:70}},"217":{start:{line:634,column:8},end:{line:636,column:9}},"218":{start:{line:635,column:12},end:{line:635,column:90}},"219":{start:{line:641,column:18},end:{line:641,column:19}},"220":{start:{line:642,column:20},end:{line:642,column:22}},"221":{start:{line:643,column:20},end:{line:643,column:24}},"222":{start:{line:645,column:38},end:{line:645,column:82}},"223":{start:{line:646,column:29},end:{line:646,column:51}},"224":{start:{line:648,column:23},end:{line:648,column:25}},"225":{start:{line:650,column:28},end:{line:650,column:56}},"226":{start:{line:653,column:22},end:{line:653,column:24}},"227":{start:{line:654,column:20},end:{line:654,column:22}},"228":{start:{line:655,column:22},end:{line:655,column:24}},"229":{start:{line:656,column:29},end:{line:656,column:31}},"230":{start:{line:658,column:34},end:{line:658,column:36}},"231":{start:{line:659,column:25},end:{line:659,column:27}},"232":{start:{line:660,column:33},end:{line:660,column:35}},"233":{start:{line:661,column:33},end:{line:661,column:35}},"234":{start:{line:663,column:31},end:{line:663,column:33}},"235":{start:{line:664,column:59},end:{line:664,column:61}},"236":{start:{line:665,column:36},end:{line:665,column:38}},"237":{start:{line:666,column:36},end:{line:666,column:38}},"238":{start:{line:667,column:69},end:{line:667,column:71}},"239":{start:{line:668,column:48},end:{line:668,column:50}},"240":{start:{line:669,column:37},end:{line:669,column:39}},"241":{start:{line:670,column:30},end:{line:670,column:32}},"242":{start:{line:671,column:29},end:{line:671,column:31}},"243":{start:{line:672,column:33},end:{line:672,column:35}},"244":{start:{line:673,column:25},end:{line:673,column:27}},"245":{start:{line:674,column:33},end:{line:674,column:36}},"246":{start:{line:677,column:41},end:{line:677,column:43}},"247":{start:{line:678,column:45},end:{line:678,column:47}},"248":{start:{line:679,column:30},end:{line:679,column:32}},"249":{start:{line:680,column:35},end:{line:680,column:37}},"250":{start:{line:681,column:34},end:{line:681,column:36}},"251":{start:{line:682,column:39},end:{line:682,column:41}},"252":{start:{line:683,column:43},end:{line:683,column:45}},"253":{start:{line:684,column:33},end:{line:684,column:35}},"254":{start:{line:685,column:43},end:{line:685,column:45}},"255":{start:{line:686,column:44},end:{line:686,column:46}},"256":{start:{line:687,column:32},end:{line:687,column:34}},"257":{start:{line:688,column:42},end:{line:688,column:44}},"258":{start:{line:689,column:35},end:{line:689,column:37}},"259":{start:{line:690,column:33},end:{line:690,column:35}},"260":{start:{line:691,column:37},end:{line:691,column:39}},"261":{start:{line:692,column:34},end:{line:692,column:36}},"262":{start:{line:693,column:39},end:{line:693,column:41}},"263":{start:{line:694,column:51},end:{line:694,column:53}},"264":{start:{line:695,column:35},end:{line:695,column:37}},"265":{start:{line:696,column:36},end:{line:696,column:38}},"266":{start:{line:697,column:49},end:{line:697,column:51}},"267":{start:{line:698,column:44},end:{line:698,column:46}},"268":{start:{line:699,column:37},end:{line:699,column:39}},"269":{start:{line:700,column:38},end:{line:700,column:40}},"270":{start:{line:701,column:41},end:{line:701,column:43}},"271":{start:{line:702,column:51},end:{line:702,column:53}},"272":{start:{line:703,column:34},end:{line:703,column:36}},"273":{start:{line:704,column:30},end:{line:704,column:32}},"274":{start:{line:705,column:38},end:{line:705,column:40}},"275":{start:{line:706,column:42},end:{line:706,column:44}},"276":{start:{line:707,column:34},end:{line:707,column:48}},"277":{start:{line:708,column:38},end:{line:708,column:40}},"278":{start:{line:709,column:24},end:{line:709,column:29}},"279":{start:{line:710,column:33},end:{line:710,column:35}},"280":{start:{line:711,column:34},end:{line:711,column:36}},"281":{start:{line:712,column:36},end:{line:712,column:38}},"282":{start:{line:713,column:37},end:{line:713,column:39}},"283":{start:{line:716,column:18},end:{line:794,column:9}},"284":{start:{line:796,column:28},end:{line:796,column:60}},"285":{start:{line:799,column:8},end:{line:799,column:47}},"286":{start:{line:800,column:8},end:{line:800,column:46}},"287":{start:{line:805,column:8},end:{line:805,column:51}},"288":{start:{line:806,column:8},end:{line:806,column:18}},"289":{start:{line:810,column:22},end:{line:810,column:54}},"290":{start:{line:811,column:22},end:{line:811,column:46}},"291":{start:{line:812,column:23},end:{line:817,column:9}},"292":{start:{line:818,column:28},end:{line:818,column:67}},"293":{start:{line:821,column:8},end:{line:821,column:47}},"294":{start:{line:822,column:8},end:{line:822,column:47}},"295":{start:{line:824,column:8},end:{line:824,column:59}},"296":{start:{line:825,column:8},end:{line:825,column:25}},"297":{start:{line:829,column:22},end:{line:829,column:54}},"298":{start:{line:830,column:23},end:{line:830,column:53}},"299":{start:{line:831,column:8},end:{line:833,column:9}},"300":{start:{line:832,column:12},end:{line:832,column:73}},"301":{start:{line:834,column:18},end:{line:834,column:49}},"302":{start:{line:836,column:8},end:{line:838,column:9}},"303":{start:{line:837,column:12},end:{line:837,column:95}},"304":{start:{line:839,column:8},end:{line:839,column:18}},"305":{start:{line:847,column:22},end:{line:847,column:54}},"306":{start:{line:848,column:23},end:{line:848,column:53}},"307":{start:{line:849,column:8},end:{line:851,column:9}},"308":{start:{line:850,column:12},end:{line:850,column:73}},"309":{start:{line:852,column:18},end:{line:852,column:49}},"310":{start:{line:857,column:8},end:{line:859,column:9}},"311":{start:{line:858,column:12},end:{line:858,column:74}},"312":{start:{line:862,column:8},end:{line:864,column:9}},"313":{start:{line:863,column:12},end:{line:863,column:64}},"314":{start:{line:867,column:8},end:{line:867,column:26}},"315":{start:{line:871,column:8},end:{line:871,column:46}},"316":{start:{line:873,column:28},end:{line:873,column:60}},"317":{start:{line:876,column:8},end:{line:876,column:47}},"318":{start:{line:877,column:8},end:{line:877,column:45}},"319":{start:{line:878,column:8},end:{line:878,column:55}},"320":{start:{line:879,column:8},end:{line:879,column:18}},"321":{start:{line:886,column:24},end:{line:886,column:48}},"322":{start:{line:887,column:23},end:{line:887,column:53}},"323":{start:{line:889,column:8},end:{line:891,column:9}},"324":{start:{line:890,column:12},end:{line:890,column:71}},"325":{start:{line:892,column:18},end:{line:892,column:49}},"326":{start:{line:893,column:22},end:{line:893,column:54}},"327":{start:{line:894,column:8},end:{line:896,column:9}},"328":{start:{line:895,column:9},end:{line:895,column:89}},"329":{start:{line:897,column:8},end:{line:899,column:9}},"330":{start:{line:898,column:12},end:{line:898,column:60}},"331":{start:{line:900,column:8},end:{line:902,column:9}},"332":{start:{line:901,column:12},end:{line:901,column:67}},"333":{start:{line:906,column:27},end:{line:906,column:57}},"334":{start:{line:908,column:8},end:{line:930,column:9}},"335":{start:{line:909,column:12},end:{line:915,column:13}},"336":{start:{line:916,column:12},end:{line:916,column:37}},"337":{start:{line:917,column:12},end:{line:917,column:40}},"338":{start:{line:918,column:12},end:{line:918,column:78}},"339":{start:{line:920,column:12},end:{line:920,column:83}},"340":{start:{line:922,column:12},end:{line:922,column:75}},"341":{start:{line:924,column:12},end:{line:924,column:37}},"342":{start:{line:925,column:12},end:{line:925,column:40}},"343":{start:{line:926,column:12},end:{line:926,column:50}},"344":{start:{line:927,column:12},end:{line:927,column:52}},"345":{start:{line:928,column:12},end:{line:928,column:78}},"346":{start:{line:929,column:12},end:{line:929,column:83}},"347":{start:{line:931,column:24},end:{line:931,column:57}},"348":{start:{line:932,column:8},end:{line:932,column:47}},"349":{start:{line:933,column:8},end:{line:933,column:49}},"350":{start:{line:934,column:8},end:{line:934,column:19}},"351":{start:{line:963,column:30},end:{line:976,column:9}},"352":{start:{line:978,column:21},end:{line:978,column:53}},"353":{start:{line:979,column:23},end:{line:979,column:53}},"354":{start:{line:980,column:8},end:{line:982,column:9}},"355":{start:{line:981,column:12},end:{line:981,column:67}},"356":{start:{line:983,column:18},end:{line:983,column:49}},"357":{start:{line:985,column:8},end:{line:987,column:9}},"358":{start:{line:986,column:12},end:{line:986,column:68}},"359":{start:{line:990,column:8},end:{line:992,column:9}},"360":{start:{line:991,column:12},end:{line:991,column:60}},"361":{start:{line:994,column:8},end:{line:996,column:9}},"362":{start:{line:995,column:12},end:{line:995,column:73}},"363":{start:{line:997,column:23},end:{line:997,column:97}},"364":{start:{line:997,column:56},end:{line:997,column:95}},"365":{start:{line:999,column:8},end:{line:1006,column:9}},"366":{start:{line:1000,column:12},end:{line:1000,column:86}},"367":{start:{line:1003,column:12},end:{line:1003,column:56}},"368":{start:{line:1004,column:12},end:{line:1004,column:56}},"369":{start:{line:1005,column:12},end:{line:1005,column:50}},"370":{start:{line:1008,column:8},end:{line:1008,column:46}},"371":{start:{line:1009,column:8},end:{line:1009,column:40}},"372":{start:{line:1010,column:8},end:{line:1010,column:42}},"373":{start:{line:1012,column:28},end:{line:1012,column:60}},"374":{start:{line:1013,column:8},end:{line:1013,column:55}},"375":{start:{line:1014,column:8},end:{line:1014,column:54}},"376":{start:{line:1015,column:8},end:{line:1015,column:47}},"377":{start:{line:1016,column:8},end:{line:1016,column:18}},"378":{start:{line:1066,column:20},end:{line:1066,column:52}},"379":{start:{line:1068,column:23},end:{line:1068,column:53}},"380":{start:{line:1069,column:8},end:{line:1071,column:9}},"381":{start:{line:1070,column:12},end:{line:1070,column:68}},"382":{start:{line:1072,column:16},end:{line:1072,column:47}},"383":{start:{line:1074,column:8},end:{line:1076,column:9}},"384":{start:{line:1075,column:12},end:{line:1075,column:74}},"385":{start:{line:1077,column:8},end:{line:1079,column:9}},"386":{start:{line:1078,column:12},end:{line:1078,column:60}},"387":{start:{line:1081,column:21},end:{line:1081,column:50}},"388":{start:{line:1083,column:8},end:{line:1083,column:46}},"389":{start:{line:1087,column:8},end:{line:1089,column:9}},"390":{start:{line:1088,column:12},end:{line:1088,column:37}},"391":{start:{line:1091,column:8},end:{line:1095,column:9}},"392":{start:{line:1092,column:12},end:{line:1092,column:33}},"393":{start:{line:1094,column:12},end:{line:1094,column:34}},"394":{start:{line:1097,column:8},end:{line:1097,column:43}},"395":{start:{line:1098,column:8},end:{line:1098,column:41}},"396":{start:{line:1099,column:8},end:{line:1099,column:43}},"397":{start:{line:1100,column:8},end:{line:1100,column:44}},"398":{start:{line:1101,column:8},end:{line:1101,column:33}},"399":{start:{line:1102,column:25},end:{line:1102,column:57}},"400":{start:{line:1103,column:8},end:{line:1103,column:53}},"401":{start:{line:1104,column:8},end:{line:1104,column:47}},"402":{start:{line:1105,column:8},end:{line:1105,column:45}},"403":{start:{line:1106,column:8},end:{line:1106,column:18}},"404":{start:{line:1114,column:29},end:{line:1114,column:47}},"405":{start:{line:1115,column:29},end:{line:1115,column:49}},"406":{start:{line:1116,column:29},end:{line:1116,column:47}},"407":{start:{line:1118,column:29},end:{line:1118,column:75}},"408":{start:{line:1120,column:29},end:{line:1120,column:98}},"409":{start:{line:1120,column:56},end:{line:1120,column:97}},"410":{start:{line:1121,column:8},end:{line:1121,column:36}},"411":{start:{line:1130,column:22},end:{line:1130,column:54}},"412":{start:{line:1131,column:27},end:{line:1131,column:106}},"413":{start:{line:1132,column:25},end:{line:1132,column:62}},"414":{start:{line:1133,column:8},end:{line:1135,column:9}},"415":{start:{line:1134,column:12},end:{line:1134,column:82}},"416":{start:{line:1136,column:20},end:{line:1136,column:53}},"417":{start:{line:1138,column:8},end:{line:1140,column:9}},"418":{start:{line:1139,column:12},end:{line:1139,column:164}},"419":{start:{line:1143,column:25},end:{line:1143,column:55}},"420":{start:{line:1145,column:8},end:{line:1147,column:9}},"421":{start:{line:1146,column:12},end:{line:1146,column:67}},"422":{start:{line:1149,column:19},end:{line:1149,column:52}},"423":{start:{line:1152,column:8},end:{line:1154,column:9}},"424":{start:{line:1153,column:12},end:{line:1153,column:74}},"425":{start:{line:1155,column:8},end:{line:1157,column:9}},"426":{start:{line:1156,column:12},end:{line:1156,column:72}},"427":{start:{line:1160,column:26},end:{line:1160,column:40}},"428":{start:{line:1161,column:23},end:{line:1161,column:47}},"429":{start:{line:1163,column:35},end:{line:1163,column:88}},"430":{start:{line:1165,column:24},end:{line:1165,column:83}},"431":{start:{line:1169,column:24},end:{line:1169,column:60}},"432":{start:{line:1170,column:8},end:{line:1172,column:9}},"433":{start:{line:1171,column:12},end:{line:1171,column:50}},"434":{start:{line:1176,column:26},end:{line:1189,column:9}},"435":{start:{line:1178,column:29},end:{line:1178,column:88}},"436":{start:{line:1180,column:32},end:{line:1180,column:51}},"437":{start:{line:1181,column:16},end:{line:1181,column:32}},"438":{start:{line:1184,column:26},end:{line:1184,column:88}},"439":{start:{line:1184,column:72},end:{line:1184,column:85}},"440":{start:{line:1185,column:29},end:{line:1185,column:137}},"441":{start:{line:1186,column:32},end:{line:1186,column:51}},"442":{start:{line:1187,column:16},end:{line:1187,column:32}},"443":{start:{line:1191,column:8},end:{line:1193,column:9}},"444":{start:{line:1192,column:12},end:{line:1192,column:63}},"445":{start:{line:1199,column:8},end:{line:1204,column:9}},"446":{start:{line:1200,column:12},end:{line:1200,column:118}},"447":{start:{line:1203,column:12},end:{line:1203,column:172}},"448":{start:{line:1206,column:21},end:{line:1206,column:36}},"449":{start:{line:1208,column:22},end:{line:1208,column:34}},"450":{start:{line:1209,column:22},end:{line:1209,column:52}},"451":{start:{line:1210,column:8},end:{line:1212,column:9}},"452":{start:{line:1211,column:12},end:{line:1211,column:111}},"453":{start:{line:1214,column:8},end:{line:1214,column:48}},"454":{start:{line:1215,column:8},end:{line:1215,column:46}},"455":{start:{line:1216,column:8},end:{line:1216,column:45}},"456":{start:{line:1217,column:8},end:{line:1217,column:44}},"457":{start:{line:1218,column:8},end:{line:1218,column:34}},"458":{start:{line:1224,column:30},end:{line:1224,column:70}},"459":{start:{line:1225,column:8},end:{line:1228,column:9}},"460":{start:{line:1227,column:12},end:{line:1227,column:31}},"461":{start:{line:1230,column:26},end:{line:1230,column:69}},"462":{start:{line:1240,column:8},end:{line:1246,column:9}},"463":{start:{line:1241,column:12},end:{line:1241,column:77}},"464":{start:{line:1245,column:12},end:{line:1245,column:111}},"465":{start:{line:1252,column:8},end:{line:1252,column:79}},"466":{start:{line:1253,column:8},end:{line:1253,column:18}},"467":{start:{line:1271,column:25},end:{line:1271,column:57}},"468":{start:{line:1272,column:8},end:{line:1274,column:9}},"469":{start:{line:1273,column:12},end:{line:1273,column:77}},"470":{start:{line:1275,column:20},end:{line:1275,column:53}},"471":{start:{line:1277,column:22},end:{line:1277,column:41}},"472":{start:{line:1280,column:21},end:{line:1280,column:47}},"473":{start:{line:1281,column:24},end:{line:1281,column:48}},"474":{start:{line:1283,column:19},end:{line:1283,column:93}},"475":{start:{line:1284,column:19},end:{line:1284,column:97}},"476":{start:{line:1286,column:8},end:{line:1286,column:19}},"477":{start:{line:1287,column:20},end:{line:1296,column:9}},"478":{start:{line:1297,column:8},end:{line:1297,column:20}},"479":{start:{line:1298,column:20},end:{line:1307,column:9}},"480":{start:{line:1309,column:18},end:{line:1309,column:20}},"481":{start:{line:1310,column:8},end:{line:1310,column:45}},"482":{start:{line:1311,column:8},end:{line:1311,column:77}},"483":{start:{line:1312,column:8},end:{line:1319,column:9}},"484":{start:{line:1313,column:12},end:{line:1313,column:81}},"485":{start:{line:1314,column:12},end:{line:1314,column:31}},"486":{start:{line:1315,column:12},end:{line:1315,column:24}},"487":{start:{line:1317,column:12},end:{line:1317,column:25}},"488":{start:{line:1318,column:12},end:{line:1318,column:24}},"489":{start:{line:1325,column:25},end:{line:1325,column:57}},"490":{start:{line:1326,column:8},end:{line:1328,column:9}},"491":{start:{line:1327,column:12},end:{line:1327,column:77}},"492":{start:{line:1329,column:20},end:{line:1329,column:53}},"493":{start:{line:1331,column:22},end:{line:1331,column:41}},"494":{start:{line:1336,column:21},end:{line:1336,column:47}},"495":{start:{line:1337,column:24},end:{line:1337,column:48}},"496":{start:{line:1339,column:19},end:{line:1339,column:93}},"497":{start:{line:1340,column:19},end:{line:1340,column:97}},"498":{start:{line:1342,column:8},end:{line:1342,column:19}},"499":{start:{line:1343,column:20},end:{line:1352,column:9}},"500":{start:{line:1354,column:8},end:{line:1354,column:20}},"501":{start:{line:1355,column:20},end:{line:1364,column:9}},"502":{start:{line:1365,column:8},end:{line:1365,column:20}},"503":{start:{line:1366,column:20},end:{line:1375,column:9}},"504":{start:{line:1378,column:18},end:{line:1378,column:20}},"505":{start:{line:1379,column:8},end:{line:1379,column:45}},"506":{start:{line:1380,column:8},end:{line:1380,column:77}},"507":{start:{line:1381,column:8},end:{line:1381,column:77}},"508":{start:{line:1382,column:8},end:{line:1389,column:9}},"509":{start:{line:1383,column:12},end:{line:1383,column:81}},"510":{start:{line:1384,column:12},end:{line:1384,column:37}},"511":{start:{line:1385,column:12},end:{line:1385,column:24}},"512":{start:{line:1387,column:12},end:{line:1387,column:31}},"513":{start:{line:1388,column:12},end:{line:1388,column:24}},"514":{start:{line:1440,column:8},end:{line:1440,column:41}},"515":{start:{line:1444,column:8},end:{line:1444,column:43}},"516":{start:{line:1449,column:23},end:{line:1449,column:82}},"517":{start:{line:1450,column:20},end:{line:1450,column:21}},"518":{start:{line:1453,column:8},end:{line:1456,column:13}},"519":{start:{line:1454,column:12},end:{line:1454,column:52}},"520":{start:{line:1455,column:12},end:{line:1455,column:30}},"521":{start:{line:1457,column:8},end:{line:1461,column:9}},"522":{start:{line:1458,column:12},end:{line:1458,column:67}},"523":{start:{line:1459,column:14},end:{line:1461,column:9}},"524":{start:{line:1460,column:12},end:{line:1460,column:24}},"525":{start:{line:1462,column:8},end:{line:1462,column:23}},"526":{start:{line:1467,column:22},end:{line:1467,column:36}},"527":{start:{line:1468,column:8},end:{line:1470,column:9}},"528":{start:{line:1469,column:12},end:{line:1469,column:100}},"529":{start:{line:1471,column:21},end:{line:1471,column:40}},"530":{start:{line:1472,column:8},end:{line:1474,column:9}},"531":{start:{line:1473,column:12},end:{line:1473,column:74}},"532":{start:{line:1475,column:8},end:{line:1475,column:38}},"533":{start:{line:1476,column:16},end:{line:1476,column:57}},"534":{start:{line:1477,column:19},end:{line:1477,column:26}},"535":{start:{line:1478,column:19},end:{line:1478,column:29}},"536":{start:{line:1479,column:8},end:{line:1483,column:9}},"537":{start:{line:1479,column:19},end:{line:1479,column:20}},"538":{start:{line:1480,column:12},end:{line:1482,column:13}},"539":{start:{line:1481,column:16},end:{line:1481,column:73}},"540":{start:{line:1484,column:8},end:{line:1539,column:9}},"541":{start:{line:1486,column:16},end:{line:1490,column:17}},"542":{start:{line:1487,column:20},end:{line:1487,column:108}},"543":{start:{line:1489,column:20},end:{line:1489,column:26}},"544":{start:{line:1492,column:16},end:{line:1496,column:17}},"545":{start:{line:1493,column:20},end:{line:1493,column:108}},"546":{start:{line:1495,column:20},end:{line:1495,column:26}},"547":{start:{line:1498,column:16},end:{line:1502,column:17}},"548":{start:{line:1499,column:20},end:{line:1499,column:108}},"549":{start:{line:1501,column:20},end:{line:1501,column:26}},"550":{start:{line:1504,column:16},end:{line:1508,column:17}},"551":{start:{line:1505,column:20},end:{line:1505,column:108}},"552":{start:{line:1507,column:20},end:{line:1507,column:26}},"553":{start:{line:1510,column:16},end:{line:1514,column:17}},"554":{start:{line:1511,column:20},end:{line:1511,column:108}},"555":{start:{line:1513,column:20},end:{line:1513,column:26}},"556":{start:{line:1516,column:16},end:{line:1520,column:17}},"557":{start:{line:1517,column:20},end:{line:1517,column:108}},"558":{start:{line:1519,column:20},end:{line:1519,column:26}},"559":{start:{line:1522,column:16},end:{line:1526,column:17}},"560":{start:{line:1523,column:20},end:{line:1523,column:108}},"561":{start:{line:1525,column:20},end:{line:1525,column:26}},"562":{start:{line:1528,column:16},end:{line:1532,column:17}},"563":{start:{line:1529,column:20},end:{line:1529,column:108}},"564":{start:{line:1531,column:20},end:{line:1531,column:26}},"565":{start:{line:1534,column:16},end:{line:1538,column:17}},"566":{start:{line:1535,column:20},end:{line:1535,column:108}},"567":{start:{line:1537,column:20},end:{line:1537,column:26}},"568":{start:{line:1543,column:18},end:{line:1543,column:45}},"569":{start:{line:1544,column:8},end:{line:1544,column:20}},"570":{start:{line:1553,column:23},end:{line:1553,column:80}},"571":{start:{line:1554,column:20},end:{line:1554,column:22}},"572":{start:{line:1555,column:8},end:{line:1558,column:9}},"573":{start:{line:1557,column:12},end:{line:1557,column:34}},"574":{start:{line:1559,column:8},end:{line:1565,column:9}},"575":{start:{line:1560,column:12},end:{line:1560,column:24}},"576":{start:{line:1561,column:14},end:{line:1565,column:9}},"577":{start:{line:1562,column:12},end:{line:1562,column:24}},"578":{start:{line:1564,column:12},end:{line:1564,column:47}},"579":{start:{line:1576,column:24},end:{line:1576,column:84}},"580":{start:{line:1577,column:20},end:{line:1577,column:21}},"581":{start:{line:1580,column:16},end:{line:1580,column:18}},"582":{start:{line:1581,column:8},end:{line:1584,column:9}},"583":{start:{line:1582,column:12},end:{line:1582,column:52}},"584":{start:{line:1583,column:12},end:{line:1583,column:30}},"585":{start:{line:1586,column:8},end:{line:1597,column:9}},"586":{start:{line:1587,column:12},end:{line:1587,column:26}},"587":{start:{line:1588,column:12},end:{line:1588,column:32}},"588":{start:{line:1589,column:12},end:{line:1589,column:29}},"589":{start:{line:1590,column:12},end:{line:1590,column:23}},"590":{start:{line:1591,column:14},end:{line:1597,column:9}},"591":{start:{line:1592,column:12},end:{line:1592,column:28}},"592":{start:{line:1593,column:12},end:{line:1593,column:32}},"593":{start:{line:1594,column:12},end:{line:1594,column:23}},"594":{start:{line:1596,column:12},end:{line:1596,column:67}},"595":{start:{line:1601,column:17},end:{line:1601,column:76}},"596":{start:{line:1602,column:8},end:{line:1604,column:9}},"597":{start:{line:1603,column:12},end:{line:1603,column:74}},"598":{start:{line:1605,column:8},end:{line:1605,column:22}},"599":{start:{line:1624,column:21},end:{line:1624,column:53}},"600":{start:{line:1626,column:24},end:{line:1626,column:48}},"601":{start:{line:1627,column:24},end:{line:1627,column:90}},"602":{start:{line:1629,column:18},end:{line:1637,column:9}},"603":{start:{line:1639,column:28},end:{line:1639,column:62}},"604":{start:{line:1640,column:8},end:{line:1640,column:55}},"605":{start:{line:1641,column:8},end:{line:1641,column:51}},"606":{start:{line:1642,column:8},end:{line:1642,column:47}},"607":{start:{line:1643,column:8},end:{line:1643,column:20}},"608":{start:{line:1647,column:21},end:{line:1647,column:79}},"609":{start:{line:1649,column:20},end:{line:1649,column:22}},"610":{start:{line:1650,column:8},end:{line:1652,column:9}},"611":{start:{line:1651,column:12},end:{line:1651,column:58}},"612":{start:{line:1653,column:8},end:{line:1653,column:22}},"613":{start:{line:1666,column:21},end:{line:1666,column:53}},"614":{start:{line:1668,column:24},end:{line:1668,column:48}},"615":{start:{line:1669,column:24},end:{line:1669,column:91}},"616":{start:{line:1671,column:18},end:{line:1679,column:9}},"617":{start:{line:1680,column:28},end:{line:1680,column:62}},"618":{start:{line:1681,column:8},end:{line:1681,column:55}},"619":{start:{line:1682,column:8},end:{line:1682,column:52}},"620":{start:{line:1683,column:8},end:{line:1683,column:47}},"621":{start:{line:1684,column:8},end:{line:1684,column:20}},"622":{start:{line:1688,column:21},end:{line:1688,column:80}},"623":{start:{line:1690,column:20},end:{line:1690,column:22}},"624":{start:{line:1691,column:8},end:{line:1693,column:9}},"625":{start:{line:1692,column:12},end:{line:1692,column:58}},"626":{start:{line:1694,column:8},end:{line:1694,column:22}},"627":{start:{line:1698,column:21},end:{line:1698,column:80}},"628":{start:{line:1700,column:20},end:{line:1700,column:22}},"629":{start:{line:1701,column:8},end:{line:1703,column:9}},"630":{start:{line:1702,column:12},end:{line:1702,column:58}},"631":{start:{line:1704,column:8},end:{line:1704,column:22}},"632":{start:{line:1716,column:21},end:{line:1716,column:53}},"633":{start:{line:1718,column:30},end:{line:1718,column:67}},"634":{start:{line:1719,column:8},end:{line:1721,column:9}},"635":{start:{line:1720,column:12},end:{line:1720,column:86}},"636":{start:{line:1722,column:25},end:{line:1722,column:63}},"637":{start:{line:1724,column:8},end:{line:1726,column:9}},"638":{start:{line:1725,column:12},end:{line:1725,column:99}},"639":{start:{line:1734,column:23},end:{line:1734,column:95}},"640":{start:{line:1735,column:25},end:{line:1735,column:65}},"641":{start:{line:1736,column:8},end:{line:1738,column:9}},"642":{start:{line:1737,column:12},end:{line:1737,column:85}},"643":{start:{line:1739,column:22},end:{line:1739,column:55}},"644":{start:{line:1741,column:8},end:{line:1743,column:9}},"645":{start:{line:1742,column:12},end:{line:1742,column:63}},"646":{start:{line:1746,column:8},end:{line:1748,column:9}},"647":{start:{line:1747,column:12},end:{line:1747,column:103}},"648":{start:{line:1751,column:8},end:{line:1751,column:33}},"649":{start:{line:1754,column:31},end:{line:1754,column:69}},"650":{start:{line:1755,column:8},end:{line:1757,column:9}},"651":{start:{line:1756,column:12},end:{line:1756,column:79}},"652":{start:{line:1758,column:24},end:{line:1758,column:63}},"653":{start:{line:1759,column:8},end:{line:1761,column:9}},"654":{start:{line:1760,column:12},end:{line:1760,column:61}},"655":{start:{line:1763,column:8},end:{line:1763,column:45}},"656":{start:{line:1765,column:17},end:{line:1765,column:41}},"657":{start:{line:1767,column:22},end:{line:1772,column:9}},"658":{start:{line:1773,column:25},end:{line:1773,column:39}},"659":{start:{line:1774,column:27},end:{line:1774,column:63}},"660":{start:{line:1775,column:8},end:{line:1775,column:55}},"661":{start:{line:1776,column:8},end:{line:1776,column:51}},"662":{start:{line:1777,column:8},end:{line:1777,column:50}},"663":{start:{line:1778,column:8},end:{line:1778,column:50}},"664":{start:{line:1779,column:8},end:{line:1779,column:47}},"665":{start:{line:1780,column:8},end:{line:1780,column:24}},"666":{start:{line:1785,column:25},end:{line:1785,column:57}},"667":{start:{line:1786,column:8},end:{line:1788,column:9}},"668":{start:{line:1787,column:12},end:{line:1787,column:93}},"669":{start:{line:1789,column:20},end:{line:1789,column:53}},"670":{start:{line:1791,column:28},end:{line:1791,column:63}},"671":{start:{line:1792,column:8},end:{line:1794,column:9}},"672":{start:{line:1793,column:12},end:{line:1793,column:95}},"673":{start:{line:1795,column:23},end:{line:1795,column:59}},"674":{start:{line:1797,column:8},end:{line:1799,column:9}},"675":{start:{line:1798,column:12},end:{line:1798,column:75}},"676":{start:{line:1801,column:24},end:{line:1801,column:48}},"677":{start:{line:1804,column:19},end:{line:1804,column:98}},"678":{start:{line:1805,column:19},end:{line:1805,column:101}},"679":{start:{line:1806,column:27},end:{line:1806,column:92}},"680":{start:{line:1809,column:28},end:{line:1809,column:57}},"681":{start:{line:1815,column:8},end:{line:1815,column:20}},"682":{start:{line:1816,column:8},end:{line:1825,column:10}},"683":{start:{line:1826,column:8},end:{line:1826,column:20}},"684":{start:{line:1827,column:8},end:{line:1835,column:10}},"685":{start:{line:1837,column:8},end:{line:1837,column:37}},"686":{start:{line:1838,column:8},end:{line:1838,column:35}},"687":{start:{line:1840,column:8},end:{line:1840,column:44}},"688":{start:{line:1841,column:8},end:{line:1841,column:47}},"689":{start:{line:1843,column:8},end:{line:1843,column:77}},"690":{start:{line:1844,column:8},end:{line:1844,column:87}},"691":{start:{line:1845,column:8},end:{line:1847,column:9}},"692":{start:{line:1846,column:12},end:{line:1846,column:81}},"693":{start:{line:1860,column:22},end:{line:1860,column:54}},"694":{start:{line:1861,column:25},end:{line:1861,column:63}},"695":{start:{line:1862,column:8},end:{line:1864,column:9}},"696":{start:{line:1863,column:12},end:{line:1863,column:59}},"697":{start:{line:1865,column:20},end:{line:1865,column:53}},"698":{start:{line:1868,column:23},end:{line:1868,column:75}},"699":{start:{line:1869,column:24},end:{line:1869,column:56}},"700":{start:{line:1870,column:8},end:{line:1872,column:9}},"701":{start:{line:1871,column:12},end:{line:1871,column:94}},"702":{start:{line:1874,column:8},end:{line:1877,column:9}},"703":{start:{line:1876,column:12},end:{line:1876,column:73}},"704":{start:{line:1878,column:19},end:{line:1878,column:51}},"705":{start:{line:1879,column:8},end:{line:1882,column:9}},"706":{start:{line:1881,column:12},end:{line:1881,column:74}},"707":{start:{line:1883,column:8},end:{line:1885,column:9}},"708":{start:{line:1884,column:12},end:{line:1884,column:81}},"709":{start:{line:1887,column:8},end:{line:1887,column:40}},"710":{start:{line:1888,column:8},end:{line:1890,column:9}},"711":{start:{line:1889,column:12},end:{line:1889,column:75}},"712":{start:{line:1892,column:8},end:{line:1892,column:78}},"713":{start:{line:1894,column:8},end:{line:1894,column:50}},"714":{start:{line:1902,column:22},end:{line:1902,column:54}},"715":{start:{line:1903,column:24},end:{line:1903,column:55}},"716":{start:{line:1904,column:8},end:{line:1906,column:9}},"717":{start:{line:1905,column:12},end:{line:1905,column:83}},"718":{start:{line:1907,column:18},end:{line:1907,column:70}},"719":{start:{line:1908,column:20},end:{line:1913,column:9}},"720":{start:{line:1914,column:28},end:{line:1914,column:62}},"721":{start:{line:1915,column:8},end:{line:1915,column:50}},"722":{start:{line:1916,column:8},end:{line:1916,column:20}},"723":{start:{line:1922,column:22},end:{line:1922,column:54}},"724":{start:{line:1924,column:27},end:{line:1924,column:60}},"725":{start:{line:1925,column:8},end:{line:1927,column:9}},"726":{start:{line:1926,column:12},end:{line:1926,column:58}},"727":{start:{line:1928,column:21},end:{line:1928,column:55}},"728":{start:{line:1929,column:21},end:{line:1929,column:36}},"729":{start:{line:1930,column:24},end:{line:1930,column:55}},"730":{start:{line:1931,column:8},end:{line:1933,column:9}},"731":{start:{line:1932,column:12},end:{line:1932,column:81}},"732":{start:{line:1934,column:19},end:{line:1934,column:51}},"733":{start:{line:1935,column:8},end:{line:1937,column:9}},"734":{start:{line:1936,column:12},end:{line:1936,column:67}},"735":{start:{line:1941,column:24},end:{line:1941,column:48}},"736":{start:{line:1942,column:18},end:{line:1942,column:83}},"737":{start:{line:1944,column:23},end:{line:1950,column:9}},"738":{start:{line:1952,column:21},end:{line:1952,column:25}},"739":{start:{line:1953,column:21},end:{line:1953,column:31}},"740":{start:{line:1958,column:24},end:{line:1974,column:9}},"741":{start:{line:1975,column:24},end:{line:1975,column:62}},"742":{start:{line:1976,column:8},end:{line:1976,column:53}},"743":{start:{line:1977,column:8},end:{line:1977,column:43}},"744":{start:{line:1978,column:8},end:{line:1978,column:82}},"745":{start:{line:1979,column:8},end:{line:1979,column:48}},"746":{start:{line:1980,column:8},end:{line:1980,column:47}},"747":{start:{line:1981,column:8},end:{line:1981,column:27}},"748":{start:{line:1994,column:8},end:{line:1994,column:46}},"749":{start:{line:1998,column:8},end:{line:1998,column:43}},"750":{start:{line:2003,column:22},end:{line:2003,column:36}},"751":{start:{line:2004,column:8},end:{line:2006,column:9}},"752":{start:{line:2005,column:12},end:{line:2005,column:100}},"753":{start:{line:2007,column:21},end:{line:2007,column:40}},"754":{start:{line:2009,column:8},end:{line:2011,column:9}},"755":{start:{line:2010,column:12},end:{line:2010,column:74}},"756":{start:{line:2012,column:8},end:{line:2012,column:38}},"757":{start:{line:2013,column:16},end:{line:2013,column:51}},"758":{start:{line:2014,column:19},end:{line:2014,column:26}},"759":{start:{line:2015,column:19},end:{line:2015,column:29}},"760":{start:{line:2016,column:8},end:{line:2020,column:9}},"761":{start:{line:2016,column:19},end:{line:2016,column:20}},"762":{start:{line:2017,column:12},end:{line:2019,column:13}},"763":{start:{line:2018,column:16},end:{line:2018,column:92}},"764":{start:{line:2022,column:8},end:{line:2079,column:9}},"765":{start:{line:2024,column:16},end:{line:2028,column:17}},"766":{start:{line:2025,column:20},end:{line:2025,column:108}},"767":{start:{line:2027,column:20},end:{line:2027,column:26}},"768":{start:{line:2030,column:16},end:{line:2034,column:17}},"769":{start:{line:2031,column:20},end:{line:2031,column:108}},"770":{start:{line:2033,column:20},end:{line:2033,column:26}},"771":{start:{line:2036,column:16},end:{line:2040,column:17}},"772":{start:{line:2037,column:20},end:{line:2037,column:108}},"773":{start:{line:2039,column:20},end:{line:2039,column:26}},"774":{start:{line:2042,column:16},end:{line:2046,column:17}},"775":{start:{line:2043,column:20},end:{line:2043,column:108}},"776":{start:{line:2045,column:20},end:{line:2045,column:26}},"777":{start:{line:2054,column:16},end:{line:2058,column:17}},"778":{start:{line:2055,column:20},end:{line:2055,column:108}},"779":{start:{line:2057,column:20},end:{line:2057,column:26}},"780":{start:{line:2072,column:16},end:{line:2076,column:17}},"781":{start:{line:2073,column:20},end:{line:2073,column:108}},"782":{start:{line:2075,column:20},end:{line:2075,column:26}},"783":{start:{line:2083,column:18},end:{line:2083,column:45}},"784":{start:{line:2084,column:8},end:{line:2084,column:20}},"785":{start:{line:2090,column:23},end:{line:2090,column:82}},"786":{start:{line:2091,column:20},end:{line:2091,column:21}},"787":{start:{line:2094,column:8},end:{line:2097,column:13}},"788":{start:{line:2095,column:12},end:{line:2095,column:52}},"789":{start:{line:2096,column:12},end:{line:2096,column:30}},"790":{start:{line:2098,column:8},end:{line:2102,column:9}},"791":{start:{line:2099,column:12},end:{line:2099,column:89}},"792":{start:{line:2100,column:14},end:{line:2102,column:9}},"793":{start:{line:2101,column:12},end:{line:2101,column:24}},"794":{start:{line:2103,column:8},end:{line:2103,column:23}},"795":{start:{line:2108,column:24},end:{line:2108,column:48}},"796":{start:{line:2110,column:19},end:{line:2110,column:84}},"797":{start:{line:2112,column:8},end:{line:2114,column:9}},"798":{start:{line:2113,column:12},end:{line:2113,column:44}},"799":{start:{line:2116,column:19},end:{line:2116,column:23}},"800":{start:{line:2117,column:24},end:{line:2133,column:9}},"801":{start:{line:2135,column:30},end:{line:2135,column:68}},"802":{start:{line:2136,column:8},end:{line:2136,column:54}},"803":{start:{line:2137,column:8},end:{line:2137,column:24}},"804":{start:{line:2142,column:22},end:{line:2142,column:54}},"805":{start:{line:2143,column:23},end:{line:2143,column:89}},"806":{start:{line:2145,column:23},end:{line:2145,column:25}},"807":{start:{line:2146,column:20},end:{line:2146,column:21}},"808":{start:{line:2149,column:8},end:{line:2159,column:9}},"809":{start:{line:2150,column:12},end:{line:2150,column:53}},"810":{start:{line:2151,column:12},end:{line:2151,column:32}},"811":{start:{line:2152,column:12},end:{line:2155,column:13}},"812":{start:{line:2153,column:16},end:{line:2153,column:42}},"813":{start:{line:2154,column:16},end:{line:2154,column:39}},"814":{start:{line:2156,column:12},end:{line:2158,column:13}},"815":{start:{line:2157,column:16},end:{line:2157,column:21}},"816":{start:{line:2161,column:8},end:{line:2164,column:9}},"817":{start:{line:2162,column:12},end:{line:2162,column:59}},"818":{start:{line:2165,column:16},end:{line:2165,column:73}},"819":{start:{line:2166,column:8},end:{line:2166,column:18}},"820":{start:{line:2184,column:27},end:{line:2184,column:44}},"821":{start:{line:2186,column:18},end:{line:2186,column:19}},"822":{start:{line:2187,column:8},end:{line:2195,column:9}},"823":{start:{line:2187,column:18},end:{line:2187,column:19}},"824":{start:{line:2188,column:12},end:{line:2191,column:13}},"825":{start:{line:2189,column:16},end:{line:2189,column:24}},"826":{start:{line:2190,column:16},end:{line:2190,column:30}},"827":{start:{line:2192,column:12},end:{line:2194,column:13}},"828":{start:{line:2193,column:16},end:{line:2193,column:79}},"829":{start:{line:2197,column:8},end:{line:2199,column:9}},"830":{start:{line:2198,column:12},end:{line:2198,column:45}},"831":{start:{line:2201,column:8},end:{line:2201,column:34}},"832":{start:{line:2202,column:8},end:{line:2204,column:9}},"833":{start:{line:2203,column:12},end:{line:2203,column:64}},"834":{start:{line:2206,column:8},end:{line:2206,column:19}},"835":{start:{line:2217,column:22},end:{line:2217,column:54}},"836":{start:{line:2218,column:25},end:{line:2218,column:57}},"837":{start:{line:2219,column:8},end:{line:2221,column:9}},"838":{start:{line:2220,column:12},end:{line:2220,column:93}},"839":{start:{line:2222,column:20},end:{line:2222,column:53}},"840":{start:{line:2224,column:8},end:{line:2226,column:9}},"841":{start:{line:2225,column:12},end:{line:2225,column:99}},"842":{start:{line:2231,column:8},end:{line:2233,column:9}},"843":{start:{line:2232,column:12},end:{line:2232,column:71}},"844":{start:{line:2235,column:22},end:{line:2235,column:41}},"845":{start:{line:2237,column:24},end:{line:2237,column:48}},"846":{start:{line:2238,column:19},end:{line:2238,column:93}},"847":{start:{line:2239,column:19},end:{line:2239,column:93}},"848":{start:{line:2242,column:8},end:{line:2242,column:19}},"849":{start:{line:2243,column:20},end:{line:2251,column:9}},"850":{start:{line:2252,column:8},end:{line:2252,column:20}},"851":{start:{line:2253,column:20},end:{line:2261,column:9}},"852":{start:{line:2263,column:8},end:{line:2263,column:45}},"853":{start:{line:2264,column:8},end:{line:2264,column:77}},"854":{start:{line:2265,column:8},end:{line:2267,column:9}},"855":{start:{line:2266,column:12},end:{line:2266,column:81}},"856":{start:{line:2269,column:8},end:{line:2269,column:23}},"857":{start:{line:2274,column:22},end:{line:2274,column:54}},"858":{start:{line:2275,column:24},end:{line:2275,column:55}},"859":{start:{line:2276,column:8},end:{line:2278,column:9}},"860":{start:{line:2277,column:12},end:{line:2277,column:91}},"861":{start:{line:2279,column:19},end:{line:2279,column:57}},"862":{start:{line:2281,column:8},end:{line:2283,column:9}},"863":{start:{line:2282,column:12},end:{line:2282,column:104}},"864":{start:{line:2284,column:8},end:{line:2286,column:9}},"865":{start:{line:2285,column:12},end:{line:2285,column:80}},"866":{start:{line:2288,column:22},end:{line:2288,column:40}},"867":{start:{line:2290,column:24},end:{line:2290,column:42}},"868":{start:{line:2291,column:19},end:{line:2291,column:88}},"869":{start:{line:2293,column:8},end:{line:2293,column:19}},"870":{start:{line:2294,column:8},end:{line:2294,column:27}},"871":{start:{line:2296,column:20},end:{line:2312,column:9}},"872":{start:{line:2314,column:8},end:{line:2341,column:9}},"873":{start:{line:2315,column:23},end:{line:2315,column:88}},"874":{start:{line:2316,column:12},end:{line:2316,column:24}},"875":{start:{line:2317,column:12},end:{line:2317,column:31}},"876":{start:{line:2318,column:24},end:{line:2334,column:13}},"877":{start:{line:2335,column:12},end:{line:2335,column:48}},"878":{start:{line:2336,column:12},end:{line:2336,column:79}},"879":{start:{line:2337,column:12},end:{line:2337,column:79}},"880":{start:{line:2339,column:12},end:{line:2339,column:48}},"881":{start:{line:2340,column:12},end:{line:2340,column:79}},"882":{start:{line:2342,column:8},end:{line:2342,column:23}},"883":{start:{line:2348,column:8},end:{line:2348,column:217}},"884":{start:{line:2348,column:39},end:{line:2348,column:215}},"885":{start:{line:2349,column:8},end:{line:2349,column:120}},"886":{start:{line:2349,column:39},end:{line:2349,column:118}},"887":{start:{line:2350,column:8},end:{line:2350,column:115}},"888":{start:{line:2350,column:39},end:{line:2350,column:113}},"889":{start:{line:2351,column:8},end:{line:2351,column:25}},"890":{start:{line:2357,column:8},end:{line:2357,column:217}},"891":{start:{line:2357,column:39},end:{line:2357,column:215}},"892":{start:{line:2358,column:8},end:{line:2358,column:120}},"893":{start:{line:2358,column:39},end:{line:2358,column:118}},"894":{start:{line:2359,column:8},end:{line:2359,column:115}},"895":{start:{line:2359,column:39},end:{line:2359,column:113}},"896":{start:{line:2360,column:8},end:{line:2360,column:25}},"897":{start:{line:2370,column:8},end:{line:2370,column:49}},"898":{start:{line:2371,column:19},end:{line:2371,column:51}},"899":{start:{line:2372,column:8},end:{line:2372,column:29}},"900":{start:{line:2374,column:27},end:{line:2374,column:68}},"901":{start:{line:2375,column:8},end:{line:2377,column:9}},"902":{start:{line:2376,column:12},end:{line:2376,column:37}},"903":{start:{line:2379,column:8},end:{line:2379,column:29}},"904":{start:{line:2380,column:22},end:{line:2380,column:59}},"905":{start:{line:2381,column:20},end:{line:2381,column:36}},"906":{start:{line:2382,column:8},end:{line:2382,column:43}},"907":{start:{line:2384,column:8},end:{line:2384,column:29}},"908":{start:{line:2385,column:21},end:{line:2385,column:23}},"909":{start:{line:2386,column:23},end:{line:2386,column:25}},"910":{start:{line:2387,column:24},end:{line:2387,column:26}},"911":{start:{line:2388,column:33},end:{line:2388,column:35}},"912":{start:{line:2389,column:33},end:{line:2389,column:35}},"913":{start:{line:2390,column:33},end:{line:2390,column:35}},"914":{start:{line:2391,column:18},end:{line:2391,column:19}},"915":{start:{line:2392,column:28},end:{line:2392,column:30}},"916":{start:{line:2393,column:19},end:{line:2393,column:20}},"917":{start:{line:2397,column:26},end:{line:2397,column:50}},"918":{start:{line:2399,column:8},end:{line:2399,column:29}},"919":{start:{line:2400,column:28},end:{line:2416,column:9}},"920":{start:{line:2418,column:17},end:{line:2418,column:29}},"921":{start:{line:2419,column:17},end:{line:2419,column:29}},"922":{start:{line:2421,column:8},end:{line:2421,column:29}},"923":{start:{line:2422,column:8},end:{line:2422,column:30}},"924":{start:{line:2428,column:27},end:{line:2428,column:29}},"925":{start:{line:2430,column:8},end:{line:2532,column:9}},"926":{start:{line:2430,column:19},end:{line:2430,column:20}},"927":{start:{line:2431,column:24},end:{line:2431,column:25}},"928":{start:{line:2432,column:12},end:{line:2432,column:48}},"929":{start:{line:2433,column:12},end:{line:2433,column:38}},"930":{start:{line:2434,column:28},end:{line:2434,column:48}},"931":{start:{line:2435,column:12},end:{line:2435,column:36}},"932":{start:{line:2436,column:35},end:{line:2436,column:61}},"933":{start:{line:2437,column:12},end:{line:2437,column:44}},"934":{start:{line:2438,column:12},end:{line:2441,column:13}},"935":{start:{line:2439,column:16},end:{line:2439,column:39}},"936":{start:{line:2440,column:16},end:{line:2440,column:41}},"937":{start:{line:2442,column:12},end:{line:2442,column:68}},"938":{start:{line:2443,column:12},end:{line:2447,column:13}},"939":{start:{line:2444,column:16},end:{line:2444,column:60}},"940":{start:{line:2446,column:16},end:{line:2446,column:63}},"941":{start:{line:2452,column:27},end:{line:2452,column:63}},"942":{start:{line:2453,column:12},end:{line:2455,column:13}},"943":{start:{line:2454,column:16},end:{line:2454,column:56}},"944":{start:{line:2462,column:12},end:{line:2462,column:52}},"945":{start:{line:2464,column:31},end:{line:2464,column:42}},"946":{start:{line:2466,column:12},end:{line:2466,column:41}},"947":{start:{line:2467,column:12},end:{line:2467,column:39}},"948":{start:{line:2468,column:12},end:{line:2468,column:43}},"949":{start:{line:2469,column:12},end:{line:2469,column:37}},"950":{start:{line:2471,column:12},end:{line:2488,column:13}},"951":{start:{line:2472,column:16},end:{line:2472,column:51}},"952":{start:{line:2473,column:16},end:{line:2473,column:48}},"953":{start:{line:2474,column:16},end:{line:2474,column:39}},"954":{start:{line:2475,column:16},end:{line:2475,column:53}},"955":{start:{line:2476,column:16},end:{line:2476,column:40}},"956":{start:{line:2477,column:16},end:{line:2477,column:56}},"957":{start:{line:2478,column:16},end:{line:2478,column:77}},"958":{start:{line:2479,column:16},end:{line:2479,column:62}},"959":{start:{line:2483,column:16},end:{line:2483,column:53}},"960":{start:{line:2484,column:16},end:{line:2484,column:84}},"961":{start:{line:2485,column:16},end:{line:2485,column:87}},"962":{start:{line:2486,column:16},end:{line:2486,column:108}},"963":{start:{line:2487,column:16},end:{line:2487,column:93}},"964":{start:{line:2490,column:12},end:{line:2490,column:33}},"965":{start:{line:2493,column:12},end:{line:2495,column:13}},"966":{start:{line:2494,column:16},end:{line:2494,column:40}},"967":{start:{line:2497,column:12},end:{line:2497,column:30}},"968":{start:{line:2498,column:12},end:{line:2498,column:30}},"969":{start:{line:2499,column:12},end:{line:2529,column:13}},"970":{start:{line:2500,column:16},end:{line:2500,column:39}},"971":{start:{line:2501,column:16},end:{line:2501,column:52}},"972":{start:{line:2502,column:26},end:{line:2502,column:77}},"973":{start:{line:2502,column:51},end:{line:2502,column:76}},"974":{start:{line:2503,column:16},end:{line:2503,column:38}},"975":{start:{line:2506,column:16},end:{line:2506,column:39}},"976":{start:{line:2507,column:26},end:{line:2507,column:77}},"977":{start:{line:2507,column:51},end:{line:2507,column:76}},"978":{start:{line:2508,column:16},end:{line:2508,column:34}},"979":{start:{line:2509,column:16},end:{line:2509,column:47}},"980":{start:{line:2510,column:16},end:{line:2510,column:36}},"981":{start:{line:2511,column:16},end:{line:2511,column:34}},"982":{start:{line:2512,column:16},end:{line:2514,column:17}},"983":{start:{line:2513,column:20},end:{line:2513,column:44}},"984":{start:{line:2515,column:16},end:{line:2515,column:37}},"985":{start:{line:2516,column:16},end:{line:2516,column:33}},"986":{start:{line:2517,column:16},end:{line:2517,column:63}},"987":{start:{line:2518,column:16},end:{line:2518,column:35}},"988":{start:{line:2519,column:16},end:{line:2519,column:70}},"989":{start:{line:2520,column:16},end:{line:2520,column:44}},"990":{start:{line:2525,column:16},end:{line:2525,column:32}},"991":{start:{line:2526,column:16},end:{line:2526,column:53}},"992":{start:{line:2527,column:16},end:{line:2527,column:37}},"993":{start:{line:2530,column:12},end:{line:2530,column:54}},"994":{start:{line:2531,column:12},end:{line:2531,column:36}},"995":{start:{line:2534,column:8},end:{line:2534,column:41}},"996":{start:{line:2535,column:8},end:{line:2535,column:39}},"997":{start:{line:2536,column:8},end:{line:2558,column:9}},"998":{start:{line:2536,column:19},end:{line:2536,column:20}},"999":{start:{line:2537,column:12},end:{line:2537,column:59}},"1000":{start:{line:2541,column:12},end:{line:2541,column:120}},"1001":{start:{line:2542,column:12},end:{line:2542,column:59}},"1002":{start:{line:2544,column:12},end:{line:2544,column:48}},"1003":{start:{line:2546,column:12},end:{line:2557,column:13}},"1004":{start:{line:2547,column:16},end:{line:2547,column:52}},"1005":{start:{line:2548,column:16},end:{line:2548,column:62}},"1006":{start:{line:2549,column:43},end:{line:2549,column:87}},"1007":{start:{line:2550,column:16},end:{line:2550,column:81}},"1008":{start:{line:2553,column:16},end:{line:2553,column:54}},"1009":{start:{line:2554,column:16},end:{line:2554,column:63}},"1010":{start:{line:2555,column:43},end:{line:2555,column:87}},"1011":{start:{line:2556,column:16},end:{line:2556,column:81}},"1012":{start:{line:2566,column:8},end:{line:2566,column:26}},"1013":{start:{line:2567,column:8},end:{line:2567,column:26}},"1014":{start:{line:2570,column:24},end:{line:2570,column:56}},"1015":{start:{line:2572,column:32},end:{line:2581,column:9}},"1016":{start:{line:2582,column:25},end:{line:2582,column:73}},"1017":{start:{line:2583,column:28},end:{line:2583,column:40}},"1018":{start:{line:2584,column:8},end:{line:2584,column:39}},"1019":{start:{line:2585,column:8},end:{line:2585,column:36}},"1020":{start:{line:2586,column:8},end:{line:2586,column:29}},"1021":{start:{line:2587,column:8},end:{line:2587,column:30}},"1022":{start:{line:2588,column:8},end:{line:2622,column:9}},"1023":{start:{line:2589,column:12},end:{line:2589,column:33}},"1024":{start:{line:2590,column:36},end:{line:2599,column:13}},"1025":{start:{line:2600,column:12},end:{line:2600,column:46}},"1026":{start:{line:2601,column:12},end:{line:2601,column:44}},"1027":{start:{line:2602,column:12},end:{line:2602,column:46}},"1028":{start:{line:2603,column:12},end:{line:2603,column:44}},"1029":{start:{line:2604,column:12},end:{line:2604,column:51}},"1030":{start:{line:2605,column:12},end:{line:2605,column:52}},"1031":{start:{line:2606,column:12},end:{line:2606,column:56}},"1032":{start:{line:2607,column:12},end:{line:2607,column:42}},"1033":{start:{line:2608,column:12},end:{line:2608,column:39}},"1034":{start:{line:2609,column:24},end:{line:2609,column:70}},"1035":{start:{line:2609,column:49},end:{line:2609,column:69}},"1036":{start:{line:2610,column:23},end:{line:2610,column:44}},"1037":{start:{line:2611,column:12},end:{line:2611,column:33}},"1038":{start:{line:2612,column:12},end:{line:2612,column:33}},"1039":{start:{line:2614,column:29},end:{line:2614,column:77}},"1040":{start:{line:2615,column:12},end:{line:2615,column:74}},"1041":{start:{line:2616,column:12},end:{line:2616,column:73}},"1042":{start:{line:2619,column:12},end:{line:2619,column:46}},"1043":{start:{line:2620,column:12},end:{line:2620,column:44}},"1044":{start:{line:2621,column:12},end:{line:2621,column:73}},"1045":{start:{line:2624,column:8},end:{line:2626,column:9}},"1046":{start:{line:2625,column:12},end:{line:2625,column:36}},"1047":{start:{line:2628,column:24},end:{line:2628,column:62}},"1048":{start:{line:2629,column:8},end:{line:2629,column:57}},"1049":{start:{line:2630,column:8},end:{line:2630,column:24}},"1050":{start:{line:2634,column:8},end:{line:2634,column:45}},"1051":{start:{line:2635,column:27},end:{line:2635,column:63}},"1052":{start:{line:2636,column:8},end:{line:2638,column:9}},"1053":{start:{line:2637,column:12},end:{line:2637,column:72}},"1054":{start:{line:2639,column:8},end:{line:2639,column:42}},"1055":{start:{line:2640,column:22},end:{line:2640,column:59}},"1056":{start:{line:2641,column:21},end:{line:2641,column:52}},"1057":{start:{line:2643,column:8},end:{line:2645,column:9}},"1058":{start:{line:2644,column:12},end:{line:2644,column:75}},"1059":{start:{line:2646,column:8},end:{line:2646,column:42}},"1060":{start:{line:2648,column:8},end:{line:2650,column:9}},"1061":{start:{line:2649,column:12},end:{line:2649,column:56}},"1062":{start:{line:2651,column:8},end:{line:2651,column:41}},"1063":{start:{line:2652,column:24},end:{line:2652,column:40}},"1064":{start:{line:2655,column:28},end:{line:2655,column:30}},"1065":{start:{line:2656,column:29},end:{line:2656,column:31}},"1066":{start:{line:2657,column:25},end:{line:2657,column:27}},"1067":{start:{line:2658,column:23},end:{line:2658,column:25}},"1068":{start:{line:2659,column:18},end:{line:2659,column:19}},"1069":{start:{line:2665,column:22},end:{line:2665,column:114}},"1070":{start:{line:2666,column:21},end:{line:2666,column:95}},"1071":{start:{line:2667,column:8},end:{line:2667,column:31}},"1072":{start:{line:2668,column:8},end:{line:2668,column:30}},"1073":{start:{line:2671,column:8},end:{line:2693,column:9}},"1074":{start:{line:2672,column:12},end:{line:2672,column:42}},"1075":{start:{line:2673,column:12},end:{line:2673,column:57}},"1076":{start:{line:2675,column:12},end:{line:2675,column:39}},"1077":{start:{line:2676,column:12},end:{line:2676,column:41}},"1078":{start:{line:2677,column:12},end:{line:2677,column:36}},"1079":{start:{line:2678,column:12},end:{line:2682,column:13}},"1080":{start:{line:2679,column:16},end:{line:2679,column:44}},"1081":{start:{line:2680,column:16},end:{line:2680,column:46}},"1082":{start:{line:2681,column:16},end:{line:2681,column:29}},"1083":{start:{line:2683,column:12},end:{line:2692,column:13}},"1084":{start:{line:2684,column:16},end:{line:2684,column:58}},"1085":{start:{line:2685,column:16},end:{line:2685,column:52}},"1086":{start:{line:2686,column:16},end:{line:2686,column:24}},"1087":{start:{line:2688,column:16},end:{line:2688,column:51}},"1088":{start:{line:2689,column:16},end:{line:2689,column:48}},"1089":{start:{line:2690,column:16},end:{line:2690,column:47}},"1090":{start:{line:2691,column:16},end:{line:2691,column:21}},"1091":{start:{line:2694,column:8},end:{line:2694,column:34}},"1092":{start:{line:2696,column:8},end:{line:2698,column:9}},"1093":{start:{line:2697,column:12},end:{line:2697,column:58}},"1094":{start:{line:2699,column:8},end:{line:2699,column:37}},"1095":{start:{line:2700,column:8},end:{line:2700,column:35}},"1096":{start:{line:2701,column:8},end:{line:2701,column:37}},"1097":{start:{line:2702,column:8},end:{line:2702,column:35}},"1098":{start:{line:2704,column:22},end:{line:2704,column:46}},"1099":{start:{line:2705,column:19},end:{line:2705,column:23}},"1100":{start:{line:2706,column:8},end:{line:2721,column:9}},"1101":{start:{line:2708,column:12},end:{line:2708,column:44}},"1102":{start:{line:2709,column:12},end:{line:2709,column:115}},"1103":{start:{line:2710,column:12},end:{line:2710,column:35}},"1104":{start:{line:2711,column:12},end:{line:2711,column:42}},"1105":{start:{line:2712,column:12},end:{line:2712,column:52}},"1106":{start:{line:2714,column:12},end:{line:2714,column:35}},"1107":{start:{line:2715,column:12},end:{line:2715,column:34}},"1108":{start:{line:2716,column:12},end:{line:2716,column:42}},"1109":{start:{line:2717,column:12},end:{line:2717,column:66}},"1110":{start:{line:2718,column:12},end:{line:2718,column:125}},"1111":{start:{line:2719,column:28},end:{line:2719,column:66}},"1112":{start:{line:2720,column:12},end:{line:2720,column:61}},"1113":{start:{line:2723,column:8},end:{line:2723,column:48}},"1114":{start:{line:2724,column:25},end:{line:2724,column:34}},"1115":{start:{line:2725,column:8},end:{line:2725,column:41}},"1116":{start:{line:2726,column:8},end:{line:2726,column:68}},"1117":{start:{line:2727,column:8},end:{line:2727,column:70}},"1118":{start:{line:2729,column:8},end:{line:2729,column:111}},"1119":{start:{line:2731,column:32},end:{line:2731,column:73}},"1120":{start:{line:2732,column:8},end:{line:2732,column:69}},"1121":{start:{line:2733,column:8},end:{line:2733,column:27}},"1122":{start:{line:2742,column:36},end:{line:2742,column:77}},"1123":{start:{line:2743,column:8},end:{line:2745,column:9}},"1124":{start:{line:2744,column:12},end:{line:2744,column:36}},"1125":{start:{line:2746,column:31},end:{line:2746,column:77}},"1126":{start:{line:2747,column:20},end:{line:2747,column:47}},"1127":{start:{line:2750,column:19},end:{line:2750,column:51}},"1128":{start:{line:2751,column:21},end:{line:2751,column:23}},"1129":{start:{line:2753,column:23},end:{line:2753,column:25}},"1130":{start:{line:2754,column:24},end:{line:2754,column:26}},"1131":{start:{line:2755,column:33},end:{line:2755,column:35}},"1132":{start:{line:2756,column:33},end:{line:2756,column:35}},"1133":{start:{line:2757,column:18},end:{line:2757,column:19}},"1134":{start:{line:2758,column:28},end:{line:2758,column:30}},"1135":{start:{line:2759,column:19},end:{line:2759,column:20}},"1136":{start:{line:2763,column:26},end:{line:2763,column:50}},"1137":{start:{line:2765,column:37},end:{line:2774,column:9}},"1138":{start:{line:2775,column:17},end:{line:2775,column:29}},"1139":{start:{line:2776,column:17},end:{line:2776,column:29}},"1140":{start:{line:2782,column:27},end:{line:2782,column:29}},"1141":{start:{line:2784,column:8},end:{line:2865,column:9}},"1142":{start:{line:2784,column:19},end:{line:2784,column:20}},"1143":{start:{line:2785,column:24},end:{line:2785,column:25}},"1144":{start:{line:2786,column:23},end:{line:2786,column:43}},"1145":{start:{line:2787,column:35},end:{line:2787,column:61}},"1146":{start:{line:2788,column:12},end:{line:2790,column:13}},"1147":{start:{line:2789,column:16},end:{line:2789,column:40}},"1148":{start:{line:2795,column:27},end:{line:2795,column:58}},"1149":{start:{line:2798,column:12},end:{line:2798,column:68}},"1150":{start:{line:2799,column:12},end:{line:2803,column:13}},"1151":{start:{line:2800,column:16},end:{line:2800,column:60}},"1152":{start:{line:2802,column:16},end:{line:2802,column:63}},"1153":{start:{line:2807,column:12},end:{line:2807,column:52}},"1154":{start:{line:2808,column:26},end:{line:2808,column:37}},"1155":{start:{line:2810,column:12},end:{line:2823,column:13}},"1156":{start:{line:2812,column:16},end:{line:2812,column:43}},"1157":{start:{line:2813,column:16},end:{line:2813,column:53}},"1158":{start:{line:2814,column:16},end:{line:2814,column:56}},"1159":{start:{line:2815,column:16},end:{line:2815,column:81}},"1160":{start:{line:2819,column:16},end:{line:2819,column:53}},"1161":{start:{line:2820,column:16},end:{line:2820,column:79}},"1162":{start:{line:2821,column:16},end:{line:2821,column:82}},"1163":{start:{line:2822,column:16},end:{line:2822,column:107}},"1164":{start:{line:2826,column:12},end:{line:2826,column:39}},"1165":{start:{line:2832,column:12},end:{line:2832,column:30}},"1166":{start:{line:2833,column:12},end:{line:2833,column:30}},"1167":{start:{line:2834,column:12},end:{line:2863,column:13}},"1168":{start:{line:2835,column:16},end:{line:2835,column:52}},"1169":{start:{line:2836,column:26},end:{line:2836,column:77}},"1170":{start:{line:2836,column:51},end:{line:2836,column:76}},"1171":{start:{line:2837,column:16},end:{line:2837,column:38}},"1172":{start:{line:2840,column:26},end:{line:2840,column:77}},"1173":{start:{line:2840,column:51},end:{line:2840,column:76}},"1174":{start:{line:2841,column:16},end:{line:2843,column:17}},"1175":{start:{line:2842,column:20},end:{line:2842,column:44}},"1176":{start:{line:2845,column:16},end:{line:2845,column:37}},"1177":{start:{line:2846,column:16},end:{line:2846,column:33}},"1178":{start:{line:2847,column:16},end:{line:2847,column:44}},"1179":{start:{line:2848,column:16},end:{line:2848,column:67}},"1180":{start:{line:2849,column:16},end:{line:2849,column:39}},"1181":{start:{line:2850,column:16},end:{line:2850,column:74}},"1182":{start:{line:2855,column:16},end:{line:2855,column:32}},"1183":{start:{line:2856,column:16},end:{line:2856,column:53}},"1184":{start:{line:2857,column:16},end:{line:2857,column:37}},"1185":{start:{line:2864,column:12},end:{line:2864,column:36}},"1186":{start:{line:2867,column:8},end:{line:2894,column:9}},"1187":{start:{line:2867,column:18},end:{line:2867,column:19}},"1188":{start:{line:2872,column:12},end:{line:2872,column:152}},"1189":{start:{line:2873,column:12},end:{line:2873,column:70}},"1190":{start:{line:2875,column:12},end:{line:2875,column:57}},"1191":{start:{line:2881,column:12},end:{line:2893,column:13}},"1192":{start:{line:2883,column:16},end:{line:2883,column:71}},"1193":{start:{line:2884,column:52},end:{line:2884,column:105}},"1194":{start:{line:2885,column:16},end:{line:2885,column:99}},"1195":{start:{line:2889,column:16},end:{line:2889,column:72}},"1196":{start:{line:2890,column:52},end:{line:2890,column:105}},"1197":{start:{line:2891,column:16},end:{line:2891,column:99}},"1198":{start:{line:2901,column:8},end:{line:2901,column:26}},"1199":{start:{line:2902,column:8},end:{line:2902,column:26}},"1200":{start:{line:2903,column:24},end:{line:2903,column:56}},"1201":{start:{line:2905,column:23},end:{line:2921,column:9}},"1202":{start:{line:2922,column:25},end:{line:2922,column:64}},"1203":{start:{line:2923,column:28},end:{line:2923,column:40}},"1204":{start:{line:2924,column:8},end:{line:2959,column:9}},"1205":{start:{line:2926,column:27},end:{line:2942,column:13}},"1206":{start:{line:2943,column:12},end:{line:2943,column:45}},"1207":{start:{line:2944,column:12},end:{line:2944,column:55}},"1208":{start:{line:2945,column:12},end:{line:2945,column:59}},"1209":{start:{line:2946,column:12},end:{line:2946,column:45}},"1210":{start:{line:2947,column:12},end:{line:2947,column:39}},"1211":{start:{line:2948,column:24},end:{line:2948,column:70}},"1212":{start:{line:2948,column:49},end:{line:2948,column:69}},"1213":{start:{line:2949,column:23},end:{line:2949,column:44}},"1214":{start:{line:2950,column:12},end:{line:2950,column:33}},"1215":{start:{line:2951,column:12},end:{line:2951,column:33}},"1216":{start:{line:2952,column:29},end:{line:2952,column:68}},"1217":{start:{line:2953,column:12},end:{line:2953,column:65}},"1218":{start:{line:2954,column:12},end:{line:2954,column:64}},"1219":{start:{line:2958,column:12},end:{line:2958,column:64}},"1220":{start:{line:2961,column:8},end:{line:2963,column:9}},"1221":{start:{line:2962,column:12},end:{line:2962,column:36}},"1222":{start:{line:2964,column:24},end:{line:2964,column:62}},"1223":{start:{line:2965,column:8},end:{line:2965,column:57}},"1224":{start:{line:2966,column:8},end:{line:2966,column:24}},"1225":{start:{line:2973,column:8},end:{line:2973,column:41}},"1226":{start:{line:2974,column:8},end:{line:2974,column:32}},"1227":{start:{line:2975,column:8},end:{line:2975,column:34}},"1228":{start:{line:2979,column:22},end:{line:2979,column:54}},"1229":{start:{line:2982,column:29},end:{line:2982,column:65}},"1230":{start:{line:2984,column:8},end:{line:2988,column:9}},"1231":{start:{line:2985,column:12},end:{line:2985,column:30}},"1232":{start:{line:2987,column:12},end:{line:2987,column:60}},"1233":{start:{line:2991,column:18},end:{line:2991,column:90}},"1234":{start:{line:2992,column:8},end:{line:2992,column:35}},"1235":{start:{line:2993,column:25},end:{line:2993,column:55}},"1236":{start:{line:2997,column:8},end:{line:2999,column:9}},"1237":{start:{line:2998,column:12},end:{line:2998,column:93}},"1238":{start:{line:3000,column:21},end:{line:3000,column:54}},"1239":{start:{line:3001,column:8},end:{line:3003,column:9}},"1240":{start:{line:3002,column:12},end:{line:3002,column:111}},"1241":{start:{line:3004,column:24},end:{line:3004,column:48}},"1242":{start:{line:3005,column:22},end:{line:3005,column:79}},"1243":{start:{line:3008,column:20},end:{line:3008,column:32}},"1244":{start:{line:3010,column:25},end:{line:3023,column:9}},"1245":{start:{line:3028,column:17},end:{line:3028,column:29}},"1246":{start:{line:3029,column:17},end:{line:3029,column:29}},"1247":{start:{line:3033,column:8},end:{line:3056,column:9}},"1248":{start:{line:3035,column:22},end:{line:3035,column:64}},"1249":{start:{line:3036,column:24},end:{line:3049,column:13}},"1250":{start:{line:3050,column:12},end:{line:3050,column:37}},"1251":{start:{line:3052,column:23},end:{line:3052,column:69}},"1252":{start:{line:3053,column:12},end:{line:3053,column:42}},"1253":{start:{line:3054,column:12},end:{line:3054,column:89}},"1254":{start:{line:3055,column:12},end:{line:3055,column:28}},"1255":{start:{line:3060,column:25},end:{line:3060,column:37}},"1256":{start:{line:3062,column:30},end:{line:3062,column:32}},"1257":{start:{line:3063,column:28},end:{line:3063,column:30}},"1258":{start:{line:3064,column:20},end:{line:3064,column:41}},"1259":{start:{line:3065,column:20},end:{line:3065,column:21}},"1260":{start:{line:3066,column:24},end:{line:3066,column:25}},"1261":{start:{line:3067,column:26},end:{line:3067,column:38}},"1262":{start:{line:3068,column:26},end:{line:3068,column:27}},"1263":{start:{line:3072,column:8},end:{line:3142,column:9}},"1264":{start:{line:3075,column:12},end:{line:3141,column:13}},"1265":{start:{line:3077,column:16},end:{line:3077,column:45}},"1266":{start:{line:3078,column:16},end:{line:3078,column:45}},"1267":{start:{line:3079,column:16},end:{line:3079,column:69}},"1268":{start:{line:3080,column:16},end:{line:3080,column:69}},"1269":{start:{line:3083,column:16},end:{line:3138,column:17}},"1270":{start:{line:3088,column:35},end:{line:3088,column:42}},"1271":{start:{line:3090,column:20},end:{line:3090,column:48}},"1272":{start:{line:3091,column:20},end:{line:3091,column:56}},"1273":{start:{line:3092,column:20},end:{line:3092,column:39}},"1274":{start:{line:3093,column:20},end:{line:3093,column:43}},"1275":{start:{line:3096,column:20},end:{line:3096,column:46}},"1276":{start:{line:3097,column:20},end:{line:3097,column:56}},"1277":{start:{line:3098,column:20},end:{line:3098,column:66}},"1278":{start:{line:3100,column:20},end:{line:3100,column:56}},"1279":{start:{line:3102,column:20},end:{line:3102,column:74}},"1280":{start:{line:3103,column:20},end:{line:3103,column:30}},"1281":{start:{line:3104,column:20},end:{line:3104,column:25}},"1282":{start:{line:3108,column:20},end:{line:3137,column:21}},"1283":{start:{line:3111,column:24},end:{line:3111,column:55}},"1284":{start:{line:3112,column:24},end:{line:3112,column:43}},"1285":{start:{line:3113,column:24},end:{line:3113,column:47}},"1286":{start:{line:3116,column:24},end:{line:3116,column:50}},"1287":{start:{line:3117,column:24},end:{line:3117,column:60}},"1288":{start:{line:3118,column:24},end:{line:3118,column:78}},"1289":{start:{line:3124,column:24},end:{line:3124,column:44}},"1290":{start:{line:3125,column:24},end:{line:3125,column:46}},"1291":{start:{line:3126,column:24},end:{line:3126,column:50}},"1292":{start:{line:3127,column:24},end:{line:3127,column:58}},"1293":{start:{line:3130,column:24},end:{line:3130,column:60}},"1294":{start:{line:3131,column:24},end:{line:3131,column:50}},"1295":{start:{line:3132,column:24},end:{line:3132,column:78}},"1296":{start:{line:3133,column:24},end:{line:3133,column:34}},"1297":{start:{line:3136,column:24},end:{line:3136,column:29}},"1298":{start:{line:3140,column:16},end:{line:3140,column:24}},"1299":{start:{line:3150,column:18},end:{line:3150,column:60}},"1300":{start:{line:3151,column:8},end:{line:3177,column:9}},"1301":{start:{line:3154,column:12},end:{line:3154,column:35}},"1302":{start:{line:3155,column:12},end:{line:3155,column:39}},"1303":{start:{line:3156,column:12},end:{line:3156,column:40}},"1304":{start:{line:3157,column:12},end:{line:3157,column:45}},"1305":{start:{line:3158,column:12},end:{line:3158,column:61}},"1306":{start:{line:3160,column:14},end:{line:3177,column:9}},"1307":{start:{line:3163,column:12},end:{line:3163,column:35}},"1308":{start:{line:3164,column:12},end:{line:3164,column:39}},"1309":{start:{line:3165,column:12},end:{line:3165,column:41}},"1310":{start:{line:3166,column:12},end:{line:3166,column:44}},"1311":{start:{line:3167,column:12},end:{line:3167,column:69}},"1312":{start:{line:3168,column:12},end:{line:3168,column:42}},"1313":{start:{line:3173,column:12},end:{line:3173,column:35}},"1314":{start:{line:3174,column:12},end:{line:3174,column:39}},"1315":{start:{line:3175,column:12},end:{line:3175,column:41}},"1316":{start:{line:3176,column:12},end:{line:3176,column:44}},"1317":{start:{line:3178,column:8},end:{line:3178,column:40}},"1318":{start:{line:3182,column:22},end:{line:3182,column:68}},"1319":{start:{line:3183,column:22},end:{line:3183,column:68}},"1320":{start:{line:3184,column:8},end:{line:3184,column:36}},"1321":{start:{line:3188,column:8},end:{line:3205,column:9}},"1322":{start:{line:3190,column:29},end:{line:3193,column:13}},"1323":{start:{line:3201,column:12},end:{line:3201,column:102}},"1324":{start:{line:3206,column:8},end:{line:3206,column:85}},"1325":{start:{line:3207,column:8},end:{line:3207,column:44}},"1326":{start:{line:3208,column:8},end:{line:3208,column:74}},"1327":{start:{line:3211,column:8},end:{line:3211,column:24}},"1328":{start:{line:3219,column:8},end:{line:3219,column:41}},"1329":{start:{line:3220,column:21},end:{line:3220,column:53}},"1330":{start:{line:3221,column:8},end:{line:3221,column:32}},"1331":{start:{line:3222,column:8},end:{line:3222,column:32}},"1332":{start:{line:3223,column:8},end:{line:3223,column:34}},"1333":{start:{line:3224,column:18},end:{line:3224,column:80}},"1334":{start:{line:3225,column:8},end:{line:3225,column:34}},"1335":{start:{line:3226,column:24},end:{line:3226,column:54}},"1336":{start:{line:3229,column:8},end:{line:3231,column:9}},"1337":{start:{line:3230,column:12},end:{line:3230,column:82}},"1338":{start:{line:3232,column:19},end:{line:3232,column:51}},"1339":{start:{line:3233,column:8},end:{line:3235,column:9}},"1340":{start:{line:3234,column:12},end:{line:3234,column:108}},"1341":{start:{line:3236,column:8},end:{line:3238,column:9}},"1342":{start:{line:3237,column:12},end:{line:3237,column:64}},"1343":{start:{line:3239,column:29},end:{line:3239,column:65}},"1344":{start:{line:3241,column:8},end:{line:3245,column:9}},"1345":{start:{line:3242,column:12},end:{line:3242,column:30}},"1346":{start:{line:3244,column:12},end:{line:3244,column:60}},"1347":{start:{line:3247,column:24},end:{line:3247,column:48}},"1348":{start:{line:3248,column:22},end:{line:3248,column:79}},"1349":{start:{line:3249,column:25},end:{line:3262,column:9}},"1350":{start:{line:3264,column:17},end:{line:3264,column:29}},"1351":{start:{line:3265,column:17},end:{line:3265,column:29}},"1352":{start:{line:3268,column:8},end:{line:3294,column:9}},"1353":{start:{line:3269,column:22},end:{line:3269,column:64}},"1354":{start:{line:3271,column:24},end:{line:3284,column:13}},"1355":{start:{line:3286,column:12},end:{line:3286,column:37}},"1356":{start:{line:3288,column:21},end:{line:3288,column:67}},"1357":{start:{line:3290,column:12},end:{line:3290,column:42}},"1358":{start:{line:3291,column:12},end:{line:3291,column:89}},"1359":{start:{line:3293,column:12},end:{line:3293,column:28}},"1360":{start:{line:3296,column:27},end:{line:3296,column:39}},"1361":{start:{line:3297,column:31},end:{line:3297,column:33}},"1362":{start:{line:3298,column:28},end:{line:3298,column:30}},"1363":{start:{line:3299,column:38},end:{line:3299,column:40}},"1364":{start:{line:3300,column:20},end:{line:3300,column:41}},"1365":{start:{line:3301,column:24},end:{line:3301,column:25}},"1366":{start:{line:3302,column:20},end:{line:3302,column:21}},"1367":{start:{line:3304,column:8},end:{line:3337,column:9}},"1368":{start:{line:3305,column:12},end:{line:3336,column:13}},"1369":{start:{line:3306,column:16},end:{line:3306,column:45}},"1370":{start:{line:3307,column:16},end:{line:3307,column:45}},"1371":{start:{line:3308,column:16},end:{line:3332,column:17}},"1372":{start:{line:3309,column:20},end:{line:3309,column:39}},"1373":{start:{line:3310,column:20},end:{line:3310,column:43}},"1374":{start:{line:3311,column:20},end:{line:3311,column:51}},"1375":{start:{line:3314,column:20},end:{line:3314,column:52}},"1376":{start:{line:3315,column:20},end:{line:3315,column:46}},"1377":{start:{line:3316,column:20},end:{line:3316,column:65}},"1378":{start:{line:3317,column:20},end:{line:3317,column:74}},"1379":{start:{line:3320,column:20},end:{line:3320,column:40}},"1380":{start:{line:3321,column:20},end:{line:3321,column:42}},"1381":{start:{line:3322,column:20},end:{line:3322,column:46}},"1382":{start:{line:3323,column:20},end:{line:3323,column:54}},"1383":{start:{line:3326,column:20},end:{line:3326,column:52}},"1384":{start:{line:3327,column:20},end:{line:3327,column:46}},"1385":{start:{line:3328,column:20},end:{line:3328,column:73}},"1386":{start:{line:3329,column:20},end:{line:3329,column:74}},"1387":{start:{line:3330,column:20},end:{line:3330,column:30}},"1388":{start:{line:3331,column:20},end:{line:3331,column:25}},"1389":{start:{line:3339,column:18},end:{line:3339,column:60}},"1390":{start:{line:3343,column:8},end:{line:3366,column:9}},"1391":{start:{line:3346,column:12},end:{line:3346,column:41}},"1392":{start:{line:3347,column:12},end:{line:3347,column:40}},"1393":{start:{line:3348,column:12},end:{line:3348,column:45}},"1394":{start:{line:3349,column:12},end:{line:3349,column:61}},"1395":{start:{line:3351,column:14},end:{line:3366,column:9}},"1396":{start:{line:3354,column:12},end:{line:3354,column:41}},"1397":{start:{line:3355,column:12},end:{line:3355,column:41}},"1398":{start:{line:3356,column:12},end:{line:3356,column:44}},"1399":{start:{line:3357,column:12},end:{line:3357,column:69}},"1400":{start:{line:3358,column:12},end:{line:3358,column:42}},"1401":{start:{line:3363,column:12},end:{line:3363,column:39}},"1402":{start:{line:3364,column:12},end:{line:3364,column:41}},"1403":{start:{line:3365,column:12},end:{line:3365,column:45}},"1404":{start:{line:3367,column:8},end:{line:3367,column:40}},"1405":{start:{line:3372,column:20},end:{line:3372,column:66}},"1406":{start:{line:3373,column:20},end:{line:3373,column:66}},"1407":{start:{line:3374,column:8},end:{line:3374,column:36}},"1408":{start:{line:3376,column:8},end:{line:3392,column:9}},"1409":{start:{line:3378,column:29},end:{line:3381,column:13}},"1410":{start:{line:3388,column:12},end:{line:3388,column:102}},"1411":{start:{line:3393,column:8},end:{line:3393,column:44}},"1412":{start:{line:3394,column:8},end:{line:3394,column:74}},"1413":{start:{line:3395,column:8},end:{line:3395,column:85}},"1414":{start:{line:3397,column:8},end:{line:3397,column:24}},"1415":{start:{line:3404,column:8},end:{line:3404,column:32}},"1416":{start:{line:3405,column:8},end:{line:3407,column:9}},"1417":{start:{line:3406,column:12},end:{line:3406,column:64}},"1418":{start:{line:3408,column:22},end:{line:3408,column:54}},"1419":{start:{line:3410,column:18},end:{line:3410,column:80}},"1420":{start:{line:3411,column:8},end:{line:3411,column:34}},"1421":{start:{line:3412,column:24},end:{line:3412,column:54}},"1422":{start:{line:3413,column:8},end:{line:3415,column:9}},"1423":{start:{line:3414,column:12},end:{line:3414,column:83}},"1424":{start:{line:3418,column:19},end:{line:3418,column:51}},"1425":{start:{line:3419,column:8},end:{line:3421,column:9}},"1426":{start:{line:3420,column:12},end:{line:3420,column:108}},"1427":{start:{line:3422,column:8},end:{line:3424,column:9}},"1428":{start:{line:3423,column:12},end:{line:3423,column:63}},"1429":{start:{line:3426,column:29},end:{line:3426,column:65}},"1430":{start:{line:3428,column:8},end:{line:3432,column:9}},"1431":{start:{line:3429,column:12},end:{line:3429,column:61}},"1432":{start:{line:3431,column:12},end:{line:3431,column:60}},"1433":{start:{line:3435,column:24},end:{line:3435,column:48}},"1434":{start:{line:3437,column:22},end:{line:3437,column:79}},"1435":{start:{line:3438,column:25},end:{line:3451,column:9}},"1436":{start:{line:3453,column:17},end:{line:3453,column:29}},"1437":{start:{line:3454,column:17},end:{line:3454,column:29}},"1438":{start:{line:3463,column:27},end:{line:3463,column:39}},"1439":{start:{line:3464,column:31},end:{line:3464,column:33}},"1440":{start:{line:3465,column:28},end:{line:3465,column:30}},"1441":{start:{line:3466,column:38},end:{line:3466,column:40}},"1442":{start:{line:3467,column:20},end:{line:3467,column:41}},"1443":{start:{line:3468,column:24},end:{line:3468,column:25}},"1444":{start:{line:3469,column:20},end:{line:3469,column:21}},"1445":{start:{line:3473,column:8},end:{line:3524,column:9}},"1446":{start:{line:3474,column:12},end:{line:3522,column:13}},"1447":{start:{line:3476,column:16},end:{line:3476,column:45}},"1448":{start:{line:3477,column:16},end:{line:3477,column:45}},"1449":{start:{line:3478,column:16},end:{line:3506,column:17}},"1450":{start:{line:3480,column:20},end:{line:3480,column:39}},"1451":{start:{line:3481,column:20},end:{line:3481,column:43}},"1452":{start:{line:3482,column:20},end:{line:3482,column:51}},"1453":{start:{line:3485,column:20},end:{line:3485,column:52}},"1454":{start:{line:3486,column:20},end:{line:3486,column:46}},"1455":{start:{line:3487,column:20},end:{line:3487,column:65}},"1456":{start:{line:3488,column:20},end:{line:3488,column:74}},"1457":{start:{line:3489,column:23},end:{line:3506,column:17}},"1458":{start:{line:3491,column:20},end:{line:3491,column:40}},"1459":{start:{line:3492,column:20},end:{line:3492,column:42}},"1460":{start:{line:3493,column:20},end:{line:3493,column:46}},"1461":{start:{line:3494,column:20},end:{line:3494,column:54}},"1462":{start:{line:3497,column:20},end:{line:3497,column:52}},"1463":{start:{line:3498,column:20},end:{line:3498,column:46}},"1464":{start:{line:3499,column:20},end:{line:3499,column:73}},"1465":{start:{line:3500,column:20},end:{line:3500,column:74}},"1466":{start:{line:3501,column:20},end:{line:3501,column:30}},"1467":{start:{line:3502,column:20},end:{line:3502,column:25}},"1468":{start:{line:3504,column:20},end:{line:3504,column:29}},"1469":{start:{line:3505,column:20},end:{line:3505,column:25}},"1470":{start:{line:3521,column:16},end:{line:3521,column:24}},"1471":{start:{line:3526,column:18},end:{line:3526,column:60}},"1472":{start:{line:3530,column:8},end:{line:3530,column:35}},"1473":{start:{line:3531,column:8},end:{line:3531,column:36}},"1474":{start:{line:3532,column:8},end:{line:3532,column:41}},"1475":{start:{line:3533,column:8},end:{line:3533,column:65}},"1476":{start:{line:3552,column:8},end:{line:3552,column:40}},"1477":{start:{line:3554,column:20},end:{line:3554,column:66}},"1478":{start:{line:3555,column:20},end:{line:3555,column:66}},"1479":{start:{line:3556,column:8},end:{line:3556,column:36}},"1480":{start:{line:3557,column:8},end:{line:3571,column:9}},"1481":{start:{line:3559,column:29},end:{line:3562,column:13}},"1482":{start:{line:3567,column:12},end:{line:3567,column:102}},"1483":{start:{line:3572,column:8},end:{line:3572,column:84}},"1484":{start:{line:3573,column:8},end:{line:3573,column:44}},"1485":{start:{line:3574,column:8},end:{line:3574,column:74}},"1486":{start:{line:3577,column:8},end:{line:3577,column:24}},"1487":{start:{line:3584,column:8},end:{line:3586,column:9}},"1488":{start:{line:3585,column:12},end:{line:3585,column:64}},"1489":{start:{line:3587,column:22},end:{line:3587,column:54}},"1490":{start:{line:3590,column:18},end:{line:3590,column:90}},"1491":{start:{line:3591,column:8},end:{line:3591,column:35}},"1492":{start:{line:3592,column:25},end:{line:3592,column:55}},"1493":{start:{line:3593,column:8},end:{line:3595,column:9}},"1494":{start:{line:3594,column:12},end:{line:3594,column:84}},"1495":{start:{line:3596,column:21},end:{line:3596,column:54}},"1496":{start:{line:3597,column:8},end:{line:3599,column:9}},"1497":{start:{line:3598,column:12},end:{line:3598,column:111}},"1498":{start:{line:3602,column:29},end:{line:3602,column:65}},"1499":{start:{line:3604,column:8},end:{line:3609,column:9}},"1500":{start:{line:3605,column:12},end:{line:3605,column:59}},"1501":{start:{line:3608,column:12},end:{line:3608,column:60}},"1502":{start:{line:3612,column:24},end:{line:3612,column:48}},"1503":{start:{line:3613,column:22},end:{line:3613,column:79}},"1504":{start:{line:3614,column:25},end:{line:3627,column:9}},"1505":{start:{line:3629,column:17},end:{line:3629,column:29}},"1506":{start:{line:3630,column:17},end:{line:3630,column:29}},"1507":{start:{line:3639,column:25},end:{line:3639,column:37}},"1508":{start:{line:3641,column:30},end:{line:3641,column:32}},"1509":{start:{line:3642,column:28},end:{line:3642,column:30}},"1510":{start:{line:3643,column:20},end:{line:3643,column:41}},"1511":{start:{line:3644,column:20},end:{line:3644,column:21}},"1512":{start:{line:3645,column:24},end:{line:3645,column:25}},"1513":{start:{line:3646,column:26},end:{line:3646,column:38}},"1514":{start:{line:3647,column:26},end:{line:3647,column:27}},"1515":{start:{line:3652,column:8},end:{line:3710,column:9}},"1516":{start:{line:3653,column:12},end:{line:3709,column:13}},"1517":{start:{line:3655,column:16},end:{line:3655,column:45}},"1518":{start:{line:3656,column:16},end:{line:3656,column:45}},"1519":{start:{line:3657,column:16},end:{line:3657,column:69}},"1520":{start:{line:3658,column:16},end:{line:3658,column:69}},"1521":{start:{line:3659,column:16},end:{line:3706,column:17}},"1522":{start:{line:3661,column:35},end:{line:3661,column:70}},"1523":{start:{line:3662,column:20},end:{line:3662,column:48}},"1524":{start:{line:3663,column:20},end:{line:3663,column:56}},"1525":{start:{line:3664,column:20},end:{line:3664,column:40}},"1526":{start:{line:3665,column:20},end:{line:3665,column:42}},"1527":{start:{line:3668,column:20},end:{line:3668,column:46}},"1528":{start:{line:3669,column:20},end:{line:3669,column:56}},"1529":{start:{line:3670,column:20},end:{line:3670,column:66}},"1530":{start:{line:3672,column:20},end:{line:3672,column:56}},"1531":{start:{line:3673,column:20},end:{line:3673,column:46}},"1532":{start:{line:3674,column:20},end:{line:3674,column:74}},"1533":{start:{line:3675,column:20},end:{line:3675,column:30}},"1534":{start:{line:3676,column:20},end:{line:3676,column:25}},"1535":{start:{line:3679,column:20},end:{line:3705,column:21}},"1536":{start:{line:3682,column:24},end:{line:3682,column:55}},"1537":{start:{line:3683,column:24},end:{line:3683,column:43}},"1538":{start:{line:3684,column:24},end:{line:3684,column:47}},"1539":{start:{line:3687,column:24},end:{line:3687,column:50}},"1540":{start:{line:3688,column:24},end:{line:3688,column:60}},"1541":{start:{line:3689,column:24},end:{line:3689,column:78}},"1542":{start:{line:3694,column:24},end:{line:3694,column:44}},"1543":{start:{line:3695,column:24},end:{line:3695,column:46}},"1544":{start:{line:3696,column:24},end:{line:3696,column:50}},"1545":{start:{line:3697,column:24},end:{line:3697,column:58}},"1546":{start:{line:3700,column:24},end:{line:3700,column:60}},"1547":{start:{line:3701,column:24},end:{line:3701,column:50}},"1548":{start:{line:3702,column:24},end:{line:3702,column:78}},"1549":{start:{line:3703,column:24},end:{line:3703,column:34}},"1550":{start:{line:3704,column:24},end:{line:3704,column:29}},"1551":{start:{line:3708,column:16},end:{line:3708,column:24}},"1552":{start:{line:3715,column:18},end:{line:3715,column:66}},"1553":{start:{line:3719,column:8},end:{line:3719,column:35}},"1554":{start:{line:3720,column:8},end:{line:3720,column:36}},"1555":{start:{line:3721,column:8},end:{line:3721,column:41}},"1556":{start:{line:3723,column:8},end:{line:3723,column:65}},"1557":{start:{line:3745,column:8},end:{line:3745,column:40}},"1558":{start:{line:3747,column:22},end:{line:3747,column:68}},"1559":{start:{line:3748,column:22},end:{line:3748,column:68}},"1560":{start:{line:3749,column:8},end:{line:3749,column:36}},"1561":{start:{line:3752,column:8},end:{line:3759,column:9}},"1562":{start:{line:3754,column:29},end:{line:3757,column:13}},"1563":{start:{line:3758,column:12},end:{line:3758,column:102}},"1564":{start:{line:3760,column:8},end:{line:3760,column:85}},"1565":{start:{line:3763,column:8},end:{line:3763,column:44}},"1566":{start:{line:3764,column:8},end:{line:3764,column:74}},"1567":{start:{line:3767,column:8},end:{line:3767,column:24}},"1568":{start:{line:4036,column:29},end:{line:4036,column:65}},"1569":{start:{line:4037,column:8},end:{line:4039,column:9}},"1570":{start:{line:4038,column:12},end:{line:4038,column:57}},"1571":{start:{line:4040,column:24},end:{line:4040,column:61}},"1572":{start:{line:4041,column:8},end:{line:4041,column:24}},"1573":{start:{line:4054,column:0},end:{line:4054,column:59}},"1574":{start:{line:4055,column:0},end:{line:4055,column:51}},"1575":{start:{line:4056,column:0},end:{line:4056,column:39}},"1576":{start:{line:4057,column:0},end:{line:4057,column:73}},"1577":{start:{line:4058,column:0},end:{line:4058,column:57}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:18},end:{line:10,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:14},end:{line:15,column:5}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:26},end:{line:19,column:5}},line:17},"3":{name:"(anonymous_3)",decl:{start:{line:26,column:4},end:{line:26,column:5}},loc:{start:{line:26,column:20},end:{line:28,column:5}},line:26},"4":{name:"(anonymous_4)",decl:{start:{line:30,column:4},end:{line:30,column:5}},loc:{start:{line:30,column:24},end:{line:32,column:5}},line:30},"5":{name:"(anonymous_5)",decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:13},end:{line:36,column:5}},line:34},"6":{name:"(anonymous_6)",decl:{start:{line:39,column:4},end:{line:39,column:5}},loc:{start:{line:39,column:19},end:{line:41,column:5}},line:39},"7":{name:"(anonymous_7)",decl:{start:{line:102,column:4},end:{line:102,column:5}},loc:{start:{line:102,column:21},end:{line:104,column:5}},line:102},"8":{name:"(anonymous_8)",decl:{start:{line:107,column:4},end:{line:107,column:5}},loc:{start:{line:107,column:33},end:{line:109,column:5}},line:107},"9":{name:"(anonymous_9)",decl:{start:{line:112,column:4},end:{line:112,column:5}},loc:{start:{line:112,column:27},end:{line:114,column:5}},line:112},"10":{name:"(anonymous_10)",decl:{start:{line:120,column:4},end:{line:120,column:5}},loc:{start:{line:120,column:18},end:{line:123,column:5}},line:120},"11":{name:"(anonymous_11)",decl:{start:{line:128,column:4},end:{line:128,column:5}},loc:{start:{line:128,column:20},end:{line:130,column:5}},line:128},"12":{name:"(anonymous_12)",decl:{start:{line:132,column:4},end:{line:132,column:5}},loc:{start:{line:132,column:33},end:{line:154,column:5}},line:132},"13":{name:"(anonymous_13)",decl:{start:{line:158,column:4},end:{line:158,column:5}},loc:{start:{line:158,column:32},end:{line:194,column:5}},line:158},"14":{name:"(anonymous_14)",decl:{start:{line:218,column:4},end:{line:218,column:5}},loc:{start:{line:218,column:52},end:{line:241,column:5}},line:218},"15":{name:"(anonymous_15)",decl:{start:{line:243,column:4},end:{line:243,column:5}},loc:{start:{line:243,column:24},end:{line:267,column:5}},line:243},"16":{name:"(anonymous_16)",decl:{start:{line:278,column:4},end:{line:278,column:5}},loc:{start:{line:278,column:30},end:{line:286,column:5}},line:278},"17":{name:"(anonymous_17)",decl:{start:{line:288,column:4},end:{line:288,column:5}},loc:{start:{line:288,column:46},end:{line:319,column:2}},line:288},"18":{name:"(anonymous_18)",decl:{start:{line:322,column:4},end:{line:322,column:5}},loc:{start:{line:322,column:44},end:{line:327,column:5}},line:322},"19":{name:"(anonymous_19)",decl:{start:{line:335,column:4},end:{line:335,column:5}},loc:{start:{line:335,column:26},end:{line:363,column:5}},line:335},"20":{name:"(anonymous_20)",decl:{start:{line:366,column:4},end:{line:366,column:5}},loc:{start:{line:366,column:61},end:{line:381,column:5}},line:366},"21":{name:"(anonymous_21)",decl:{start:{line:384,column:4},end:{line:384,column:5}},loc:{start:{line:384,column:27},end:{line:394,column:5}},line:384},"22":{name:"(anonymous_22)",decl:{start:{line:397,column:4},end:{line:397,column:5}},loc:{start:{line:397,column:26},end:{line:407,column:5}},line:397},"23":{name:"(anonymous_23)",decl:{start:{line:413,column:4},end:{line:413,column:5}},loc:{start:{line:413,column:18},end:{line:416,column:5}},line:413},"24":{name:"(anonymous_24)",decl:{start:{line:417,column:4},end:{line:417,column:5}},loc:{start:{line:417,column:20},end:{line:419,column:5}},line:417},"25":{name:"(anonymous_25)",decl:{start:{line:420,column:4},end:{line:420,column:5}},loc:{start:{line:420,column:33},end:{line:489,column:5}},line:420},"26":{name:"(anonymous_26)",decl:{start:{line:492,column:4},end:{line:492,column:5}},loc:{start:{line:492,column:31},end:{line:495,column:5}},line:492},"27":{name:"(anonymous_27)",decl:{start:{line:502,column:5},end:{line:502,column:6}},loc:{start:{line:502,column:39},end:{line:516,column:5}},line:502},"28":{name:"(anonymous_28)",decl:{start:{line:524,column:4},end:{line:524,column:5}},loc:{start:{line:524,column:35},end:{line:531,column:5}},line:524},"29":{name:"(anonymous_29)",decl:{start:{line:540,column:4},end:{line:540,column:5}},loc:{start:{line:540,column:62},end:{line:554,column:5}},line:540},"30":{name:"(anonymous_30)",decl:{start:{line:566,column:4},end:{line:566,column:5}},loc:{start:{line:566,column:68},end:{line:583,column:5}},line:566},"31":{name:"(anonymous_31)",decl:{start:{line:586,column:4},end:{line:586,column:5}},loc:{start:{line:586,column:44},end:{line:593,column:5}},line:586},"32":{name:"(anonymous_32)",decl:{start:{line:597,column:4},end:{line:597,column:5}},loc:{start:{line:597,column:33},end:{line:608,column:5}},line:597},"33":{name:"(anonymous_33)",decl:{start:{line:614,column:4},end:{line:614,column:5}},loc:{start:{line:614,column:50},end:{line:807,column:5}},line:614},"34":{name:"(anonymous_34)",decl:{start:{line:809,column:4},end:{line:809,column:5}},loc:{start:{line:809,column:38},end:{line:826,column:5}},line:809},"35":{name:"(anonymous_35)",decl:{start:{line:828,column:4},end:{line:828,column:5}},loc:{start:{line:828,column:31},end:{line:840,column:5}},line:828},"36":{name:"(anonymous_36)",decl:{start:{line:845,column:4},end:{line:845,column:5}},loc:{start:{line:845,column:35},end:{line:880,column:5}},line:845},"37":{name:"(anonymous_37)",decl:{start:{line:885,column:4},end:{line:885,column:5}},loc:{start:{line:885,column:33},end:{line:935,column:5}},line:885},"38":{name:"(anonymous_38)",decl:{start:{line:962,column:4},end:{line:962,column:5}},loc:{start:{line:962,column:76},end:{line:1017,column:5}},line:962},"39":{name:"(anonymous_39)",decl:{start:{line:997,column:45},end:{line:997,column:46}},loc:{start:{line:997,column:56},end:{line:997,column:95}},line:997},"40":{name:"(anonymous_40)",decl:{start:{line:1065,column:4},end:{line:1065,column:5}},loc:{start:{line:1065,column:67},end:{line:1107,column:5}},line:1065},"41":{name:"(anonymous_41)",decl:{start:{line:1113,column:4},end:{line:1113,column:5}},loc:{start:{line:1113,column:60},end:{line:1122,column:5}},line:1113},"42":{name:"(anonymous_42)",decl:{start:{line:1120,column:51},end:{line:1120,column:52}},loc:{start:{line:1120,column:56},end:{line:1120,column:97}},line:1120},"43":{name:"(anonymous_43)",decl:{start:{line:1126,column:4},end:{line:1126,column:5}},loc:{start:{line:1126,column:61},end:{line:1254,column:5}},line:1126},"44":{name:"(anonymous_44)",decl:{start:{line:1177,column:34},end:{line:1177,column:35}},loc:{start:{line:1177,column:98},end:{line:1182,column:13}},line:1177},"45":{name:"(anonymous_45)",decl:{start:{line:1183,column:38},end:{line:1183,column:39}},loc:{start:{line:1183,column:150},end:{line:1188,column:13}},line:1183},"46":{name:"(anonymous_46)",decl:{start:{line:1184,column:56},end:{line:1184,column:57}},loc:{start:{line:1184,column:70},end:{line:1184,column:87}},line:1184},"47":{name:"(anonymous_47)",decl:{start:{line:1268,column:4},end:{line:1268,column:5}},loc:{start:{line:1268,column:64},end:{line:1320,column:5}},line:1268},"48":{name:"(anonymous_48)",decl:{start:{line:1322,column:4},end:{line:1322,column:5}},loc:{start:{line:1322,column:98},end:{line:1390,column:5}},line:1322},"49":{name:"(anonymous_49)",decl:{start:{line:1439,column:4},end:{line:1439,column:5}},loc:{start:{line:1439,column:18},end:{line:1441,column:5}},line:1439},"50":{name:"(anonymous_50)",decl:{start:{line:1443,column:4},end:{line:1443,column:5}},loc:{start:{line:1443,column:20},end:{line:1445,column:5}},line:1443},"51":{name:"(anonymous_51)",decl:{start:{line:1448,column:4},end:{line:1448,column:5}},loc:{start:{line:1448,column:61},end:{line:1463,column:5}},line:1448},"52":{name:"(anonymous_52)",decl:{start:{line:1466,column:4},end:{line:1466,column:5}},loc:{start:{line:1466,column:33},end:{line:1540,column:5}},line:1466},"53":{name:"(anonymous_53)",decl:{start:{line:1542,column:4},end:{line:1542,column:5}},loc:{start:{line:1542,column:31},end:{line:1545,column:5}},line:1542},"54":{name:"(anonymous_54)",decl:{start:{line:1552,column:4},end:{line:1552,column:5}},loc:{start:{line:1552,column:38},end:{line:1566,column:5}},line:1552},"55":{name:"(anonymous_55)",decl:{start:{line:1575,column:4},end:{line:1575,column:5}},loc:{start:{line:1575,column:62},end:{line:1598,column:5}},line:1575},"56":{name:"(anonymous_56)",decl:{start:{line:1600,column:4},end:{line:1600,column:5}},loc:{start:{line:1600,column:33},end:{line:1606,column:5}},line:1600},"57":{name:"(anonymous_57)",decl:{start:{line:1618,column:4},end:{line:1618,column:5}},loc:{start:{line:1618,column:38},end:{line:1644,column:5}},line:1618},"58":{name:"(anonymous_58)",decl:{start:{line:1646,column:4},end:{line:1646,column:5}},loc:{start:{line:1646,column:30},end:{line:1655,column:5}},line:1646},"59":{name:"(anonymous_59)",decl:{start:{line:1665,column:4},end:{line:1665,column:5}},loc:{start:{line:1665,column:41},end:{line:1685,column:5}},line:1665},"60":{name:"(anonymous_60)",decl:{start:{line:1687,column:4},end:{line:1687,column:5}},loc:{start:{line:1687,column:31},end:{line:1695,column:5}},line:1687},"61":{name:"(anonymous_61)",decl:{start:{line:1697,column:4},end:{line:1697,column:5}},loc:{start:{line:1697,column:31},end:{line:1706,column:5}},line:1697},"62":{name:"(anonymous_62)",decl:{start:{line:1715,column:4},end:{line:1715,column:5}},loc:{start:{line:1715,column:126},end:{line:1781,column:5}},line:1715},"63":{name:"(anonymous_63)",decl:{start:{line:1784,column:4},end:{line:1784,column:5}},loc:{start:{line:1784,column:56},end:{line:1849,column:5}},line:1784},"64":{name:"(anonymous_64)",decl:{start:{line:1859,column:4},end:{line:1859,column:5}},loc:{start:{line:1859,column:119},end:{line:1895,column:5}},line:1859},"65":{name:"(anonymous_65)",decl:{start:{line:1901,column:4},end:{line:1901,column:5}},loc:{start:{line:1901,column:28},end:{line:1917,column:5}},line:1901},"66":{name:"(anonymous_66)",decl:{start:{line:1921,column:4},end:{line:1921,column:5}},loc:{start:{line:1921,column:35},end:{line:1982,column:5}},line:1921},"67":{name:"(anonymous_67)",decl:{start:{line:1992,column:4},end:{line:1992,column:5}},loc:{start:{line:1992,column:18},end:{line:1995,column:5}},line:1992},"68":{name:"(anonymous_68)",decl:{start:{line:1997,column:4},end:{line:1997,column:5}},loc:{start:{line:1997,column:20},end:{line:1999,column:5}},line:1997},"69":{name:"(anonymous_69)",decl:{start:{line:2002,column:4},end:{line:2002,column:5}},loc:{start:{line:2002,column:33},end:{line:2080,column:5}},line:2002},"70":{name:"(anonymous_70)",decl:{start:{line:2082,column:4},end:{line:2082,column:5}},loc:{start:{line:2082,column:31},end:{line:2085,column:5}},line:2082},"71":{name:"(anonymous_71)",decl:{start:{line:2089,column:4},end:{line:2089,column:5}},loc:{start:{line:2089,column:61},end:{line:2104,column:5}},line:2089},"72":{name:"(anonymous_72)",decl:{start:{line:2107,column:4},end:{line:2107,column:5}},loc:{start:{line:2107,column:51},end:{line:2138,column:5}},line:2107},"73":{name:"(anonymous_73)",decl:{start:{line:2141,column:4},end:{line:2141,column:5}},loc:{start:{line:2141,column:23},end:{line:2167,column:5}},line:2141},"74":{name:"(anonymous_74)",decl:{start:{line:2171,column:4},end:{line:2171,column:5}},loc:{start:{line:2171,column:32},end:{line:2207,column:5}},line:2171},"75":{name:"(anonymous_75)",decl:{start:{line:2216,column:4},end:{line:2216,column:5}},loc:{start:{line:2216,column:42},end:{line:2270,column:5}},line:2216},"76":{name:"(anonymous_76)",decl:{start:{line:2273,column:4},end:{line:2273,column:5}},loc:{start:{line:2273,column:42},end:{line:2343,column:5}},line:2273},"77":{name:"(anonymous_77)",decl:{start:{line:2347,column:4},end:{line:2347,column:5}},loc:{start:{line:2347,column:44},end:{line:2352,column:5}},line:2347},"78":{name:"(anonymous_78)",decl:{start:{line:2348,column:30},end:{line:2348,column:31}},loc:{start:{line:2348,column:39},end:{line:2348,column:215}},line:2348},"79":{name:"(anonymous_79)",decl:{start:{line:2349,column:30},end:{line:2349,column:31}},loc:{start:{line:2349,column:39},end:{line:2349,column:118}},line:2349},"80":{name:"(anonymous_80)",decl:{start:{line:2350,column:30},end:{line:2350,column:31}},loc:{start:{line:2350,column:39},end:{line:2350,column:113}},line:2350},"81":{name:"(anonymous_81)",decl:{start:{line:2356,column:4},end:{line:2356,column:5}},loc:{start:{line:2356,column:45},end:{line:2361,column:5}},line:2356},"82":{name:"(anonymous_82)",decl:{start:{line:2357,column:30},end:{line:2357,column:31}},loc:{start:{line:2357,column:39},end:{line:2357,column:215}},line:2357},"83":{name:"(anonymous_83)",decl:{start:{line:2358,column:30},end:{line:2358,column:31}},loc:{start:{line:2358,column:39},end:{line:2358,column:118}},line:2358},"84":{name:"(anonymous_84)",decl:{start:{line:2359,column:30},end:{line:2359,column:31}},loc:{start:{line:2359,column:39},end:{line:2359,column:113}},line:2359},"85":{name:"(anonymous_85)",decl:{start:{line:2368,column:4},end:{line:2368,column:5}},loc:{start:{line:2368,column:63},end:{line:2631,column:5}},line:2368},"86":{name:"(anonymous_86)",decl:{start:{line:2502,column:44},end:{line:2502,column:45}},loc:{start:{line:2502,column:51},end:{line:2502,column:76}},line:2502},"87":{name:"(anonymous_87)",decl:{start:{line:2507,column:44},end:{line:2507,column:45}},loc:{start:{line:2507,column:51},end:{line:2507,column:76}},line:2507},"88":{name:"(anonymous_88)",decl:{start:{line:2609,column:42},end:{line:2609,column:43}},loc:{start:{line:2609,column:49},end:{line:2609,column:69}},line:2609},"89":{name:"(anonymous_89)",decl:{start:{line:2633,column:4},end:{line:2633,column:5}},loc:{start:{line:2633,column:50},end:{line:2734,column:5}},line:2633},"90":{name:"(anonymous_90)",decl:{start:{line:2738,column:4},end:{line:2738,column:5}},loc:{start:{line:2738,column:64},end:{line:2967,column:5}},line:2738},"91":{name:"(anonymous_91)",decl:{start:{line:2836,column:44},end:{line:2836,column:45}},loc:{start:{line:2836,column:51},end:{line:2836,column:76}},line:2836},"92":{name:"(anonymous_92)",decl:{start:{line:2840,column:44},end:{line:2840,column:45}},loc:{start:{line:2840,column:51},end:{line:2840,column:76}},line:2840},"93":{name:"(anonymous_93)",decl:{start:{line:2948,column:42},end:{line:2948,column:43}},loc:{start:{line:2948,column:49},end:{line:2948,column:69}},line:2948},"94":{name:"(anonymous_94)",decl:{start:{line:2970,column:4},end:{line:2970,column:5}},loc:{start:{line:2970,column:66},end:{line:3213,column:5}},line:2970},"95":{name:"(anonymous_95)",decl:{start:{line:3218,column:4},end:{line:3218,column:5}},loc:{start:{line:3218,column:63},end:{line:3398,column:5}},line:3218},"96":{name:"(anonymous_96)",decl:{start:{line:3403,column:4},end:{line:3403,column:5}},loc:{start:{line:3403,column:63},end:{line:3578,column:5}},line:3403},"97":{name:"(anonymous_97)",decl:{start:{line:3583,column:4},end:{line:3583,column:5}},loc:{start:{line:3583,column:65},end:{line:3768,column:5}},line:3583},"98":{name:"(anonymous_98)",decl:{start:{line:4035,column:4},end:{line:4035,column:5}},loc:{start:{line:4035,column:29},end:{line:4042,column:5}},line:4035}},branchMap:{"0":{loc:{start:{line:141,column:8},end:{line:143,column:9}},type:"if",locations:[{start:{line:141,column:8},end:{line:143,column:9}},{start:{line:141,column:8},end:{line:143,column:9}}],line:141},"1":{loc:{start:{line:150,column:12},end:{line:152,column:13}},type:"if",locations:[{start:{line:150,column:12},end:{line:152,column:13}},{start:{line:150,column:12},end:{line:152,column:13}}],line:150},"2":{loc:{start:{line:175,column:12},end:{line:178,column:13}},type:"if",locations:[{start:{line:175,column:12},end:{line:178,column:13}},{start:{line:175,column:12},end:{line:178,column:13}}],line:175},"3":{loc:{start:{line:179,column:12},end:{line:181,column:13}},type:"if",locations:[{start:{line:179,column:12},end:{line:181,column:13}},{start:{line:179,column:12},end:{line:181,column:13}}],line:179},"4":{loc:{start:{line:184,column:8},end:{line:186,column:9}},type:"if",locations:[{start:{line:184,column:8},end:{line:186,column:9}},{start:{line:184,column:8},end:{line:186,column:9}}],line:184},"5":{loc:{start:{line:184,column:12},end:{line:184,column:54}},type:"binary-expr",locations:[{start:{line:184,column:12},end:{line:184,column:43}},{start:{line:184,column:47},end:{line:184,column:54}}],line:184},"6":{loc:{start:{line:189,column:8},end:{line:191,column:9}},type:"if",locations:[{start:{line:189,column:8},end:{line:191,column:9}},{start:{line:189,column:8},end:{line:191,column:9}}],line:189},"7":{loc:{start:{line:254,column:12},end:{line:257,column:13}},type:"if",locations:[{start:{line:254,column:12},end:{line:257,column:13}},{start:{line:254,column:12},end:{line:257,column:13}}],line:254},"8":{loc:{start:{line:254,column:16},end:{line:254,column:55}},type:"binary-expr",locations:[{start:{line:254,column:16},end:{line:254,column:31}},{start:{line:254,column:35},end:{line:254,column:55}}],line:254},"9":{loc:{start:{line:258,column:12},end:{line:260,column:13}},type:"if",locations:[{start:{line:258,column:12},end:{line:260,column:13}},{start:{line:258,column:12},end:{line:260,column:13}}],line:258},"10":{loc:{start:{line:262,column:8},end:{line:264,column:9}},type:"if",locations:[{start:{line:262,column:8},end:{line:264,column:9}},{start:{line:262,column:8},end:{line:264,column:9}}],line:262},"11":{loc:{start:{line:262,column:12},end:{line:262,column:60}},type:"binary-expr",locations:[{start:{line:262,column:12},end:{line:262,column:35}},{start:{line:262,column:39},end:{line:262,column:60}}],line:262},"12":{loc:{start:{line:282,column:8},end:{line:284,column:9}},type:"if",locations:[{start:{line:282,column:8},end:{line:284,column:9}},{start:{line:282,column:8},end:{line:284,column:9}}],line:282},"13":{loc:{start:{line:292,column:3},end:{line:314,column:4}},type:"if",locations:[{start:{line:292,column:3},end:{line:314,column:4}},{start:{line:292,column:3},end:{line:314,column:4}}],line:292},"14":{loc:{start:{line:292,column:7},end:{line:292,column:46}},type:"binary-expr",locations:[{start:{line:292,column:7},end:{line:292,column:16}},{start:{line:292,column:20},end:{line:292,column:46}}],line:292},"15":{loc:{start:{line:295,column:4},end:{line:312,column:5}},type:"if",locations:[{start:{line:295,column:4},end:{line:312,column:5}},{start:{line:295,column:4},end:{line:312,column:5}}],line:295},"16":{loc:{start:{line:295,column:8},end:{line:295,column:39}},type:"binary-expr",locations:[{start:{line:295,column:8},end:{line:295,column:17}},{start:{line:295,column:21},end:{line:295,column:39}}],line:295},"17":{loc:{start:{line:375,column:8},end:{line:379,column:9}},type:"if",locations:[{start:{line:375,column:8},end:{line:379,column:9}},{start:{line:375,column:8},end:{line:379,column:9}}],line:375},"18":{loc:{start:{line:377,column:14},end:{line:379,column:9}},type:"if",locations:[{start:{line:377,column:14},end:{line:379,column:9}},{start:{line:377,column:14},end:{line:379,column:9}}],line:377},"19":{loc:{start:{line:422,column:8},end:{line:424,column:9}},type:"if",locations:[{start:{line:422,column:8},end:{line:424,column:9}},{start:{line:422,column:8},end:{line:424,column:9}}],line:422},"20":{loc:{start:{line:422,column:12},end:{line:422,column:66}},type:"binary-expr",locations:[{start:{line:422,column:12},end:{line:422,column:39}},{start:{line:422,column:43},end:{line:422,column:66}}],line:422},"21":{loc:{start:{line:427,column:8},end:{line:429,column:9}},type:"if",locations:[{start:{line:427,column:8},end:{line:429,column:9}},{start:{line:427,column:8},end:{line:429,column:9}}],line:427},"22":{loc:{start:{line:437,column:12},end:{line:439,column:13}},type:"if",locations:[{start:{line:437,column:12},end:{line:439,column:13}},{start:{line:437,column:12},end:{line:439,column:13}}],line:437},"23":{loc:{start:{line:442,column:8},end:{line:488,column:9}},type:"switch",locations:[{start:{line:443,column:12},end:{line:449,column:17}},{start:{line:450,column:12},end:{line:455,column:17}},{start:{line:456,column:12},end:{line:461,column:17}},{start:{line:462,column:12},end:{line:467,column:17}},{start:{line:468,column:12},end:{line:473,column:17}},{start:{line:474,column:12},end:{line:479,column:17}},{start:{line:480,column:12},end:{line:485,column:17}}],line:442},"24":{loc:{start:{line:444,column:16},end:{line:449,column:17}},type:"if",locations:[{start:{line:444,column:16},end:{line:449,column:17}},{start:{line:444,column:16},end:{line:449,column:17}}],line:444},"25":{loc:{start:{line:451,column:16},end:{line:455,column:17}},type:"if",locations:[{start:{line:451,column:16},end:{line:455,column:17}},{start:{line:451,column:16},end:{line:455,column:17}}],line:451},"26":{loc:{start:{line:457,column:16},end:{line:461,column:17}},type:"if",locations:[{start:{line:457,column:16},end:{line:461,column:17}},{start:{line:457,column:16},end:{line:461,column:17}}],line:457},"27":{loc:{start:{line:463,column:16},end:{line:467,column:17}},type:"if",locations:[{start:{line:463,column:16},end:{line:467,column:17}},{start:{line:463,column:16},end:{line:467,column:17}}],line:463},"28":{loc:{start:{line:469,column:16},end:{line:473,column:17}},type:"if",locations:[{start:{line:469,column:16},end:{line:473,column:17}},{start:{line:469,column:16},end:{line:473,column:17}}],line:469},"29":{loc:{start:{line:475,column:16},end:{line:479,column:17}},type:"if",locations:[{start:{line:475,column:16},end:{line:479,column:17}},{start:{line:475,column:16},end:{line:479,column:17}}],line:475},"30":{loc:{start:{line:481,column:16},end:{line:485,column:17}},type:"if",locations:[{start:{line:481,column:16},end:{line:485,column:17}},{start:{line:481,column:16},end:{line:485,column:17}}],line:481},"31":{loc:{start:{line:509,column:8},end:{line:515,column:9}},type:"if",locations:[{start:{line:509,column:8},end:{line:515,column:9}},{start:{line:509,column:8},end:{line:515,column:9}}],line:509},"32":{loc:{start:{line:511,column:14},end:{line:515,column:9}},type:"if",locations:[{start:{line:511,column:14},end:{line:515,column:9}},{start:{line:511,column:14},end:{line:515,column:9}}],line:511},"33":{loc:{start:{line:526,column:8},end:{line:530,column:9}},type:"if",locations:[{start:{line:526,column:8},end:{line:530,column:9}},{start:{line:526,column:8},end:{line:530,column:9}}],line:526},"34":{loc:{start:{line:526,column:12},end:{line:526,column:46}},type:"binary-expr",locations:[{start:{line:526,column:12},end:{line:526,column:21}},{start:{line:526,column:25},end:{line:526,column:46}}],line:526},"35":{loc:{start:{line:548,column:8},end:{line:552,column:9}},type:"if",locations:[{start:{line:548,column:8},end:{line:552,column:9}},{start:{line:548,column:8},end:{line:552,column:9}}],line:548},"36":{loc:{start:{line:550,column:14},end:{line:552,column:9}},type:"if",locations:[{start:{line:550,column:14},end:{line:552,column:9}},{start:{line:550,column:14},end:{line:552,column:9}}],line:550},"37":{loc:{start:{line:577,column:8},end:{line:581,column:9}},type:"if",locations:[{start:{line:577,column:8},end:{line:581,column:9}},{start:{line:577,column:8},end:{line:581,column:9}}],line:577},"38":{loc:{start:{line:579,column:14},end:{line:581,column:9}},type:"if",locations:[{start:{line:579,column:14},end:{line:581,column:9}},{start:{line:579,column:14},end:{line:581,column:9}}],line:579},"39":{loc:{start:{line:600,column:8},end:{line:603,column:9}},type:"if",locations:[{start:{line:600,column:8},end:{line:603,column:9}},{start:{line:600,column:8},end:{line:603,column:9}}],line:600},"40":{loc:{start:{line:600,column:12},end:{line:600,column:38}},type:"binary-expr",locations:[{start:{line:600,column:12},end:{line:600,column:17}},{start:{line:600,column:21},end:{line:600,column:38}}],line:600},"41":{loc:{start:{line:618,column:8},end:{line:620,column:9}},type:"if",locations:[{start:{line:618,column:8},end:{line:620,column:9}},{start:{line:618,column:8},end:{line:620,column:9}}],line:618},"42":{loc:{start:{line:621,column:8},end:{line:623,column:9}},type:"if",locations:[{start:{line:621,column:8},end:{line:623,column:9}},{start:{line:621,column:8},end:{line:623,column:9}}],line:621},"43":{loc:{start:{line:634,column:8},end:{line:636,column:9}},type:"if",locations:[{start:{line:634,column:8},end:{line:636,column:9}},{start:{line:634,column:8},end:{line:636,column:9}}],line:634},"44":{loc:{start:{line:831,column:8},end:{line:833,column:9}},type:"if",locations:[{start:{line:831,column:8},end:{line:833,column:9}},{start:{line:831,column:8},end:{line:833,column:9}}],line:831},"45":{loc:{start:{line:831,column:12},end:{line:831,column:46}},type:"binary-expr",locations:[{start:{line:831,column:12},end:{line:831,column:21}},{start:{line:831,column:25},end:{line:831,column:46}}],line:831},"46":{loc:{start:{line:836,column:8},end:{line:838,column:9}},type:"if",locations:[{start:{line:836,column:8},end:{line:838,column:9}},{start:{line:836,column:8},end:{line:838,column:9}}],line:836},"47":{loc:{start:{line:849,column:8},end:{line:851,column:9}},type:"if",locations:[{start:{line:849,column:8},end:{line:851,column:9}},{start:{line:849,column:8},end:{line:851,column:9}}],line:849},"48":{loc:{start:{line:849,column:11},end:{line:849,column:45}},type:"binary-expr",locations:[{start:{line:849,column:11},end:{line:849,column:20}},{start:{line:849,column:24},end:{line:849,column:45}}],line:849},"49":{loc:{start:{line:857,column:8},end:{line:859,column:9}},type:"if",locations:[{start:{line:857,column:8},end:{line:859,column:9}},{start:{line:857,column:8},end:{line:859,column:9}}],line:857},"50":{loc:{start:{line:862,column:8},end:{line:864,column:9}},type:"if",locations:[{start:{line:862,column:8},end:{line:864,column:9}},{start:{line:862,column:8},end:{line:864,column:9}}],line:862},"51":{loc:{start:{line:889,column:8},end:{line:891,column:9}},type:"if",locations:[{start:{line:889,column:8},end:{line:891,column:9}},{start:{line:889,column:8},end:{line:891,column:9}}],line:889},"52":{loc:{start:{line:889,column:12},end:{line:889,column:46}},type:"binary-expr",locations:[{start:{line:889,column:12},end:{line:889,column:21}},{start:{line:889,column:25},end:{line:889,column:46}}],line:889},"53":{loc:{start:{line:894,column:8},end:{line:896,column:9}},type:"if",locations:[{start:{line:894,column:8},end:{line:896,column:9}},{start:{line:894,column:8},end:{line:896,column:9}}],line:894},"54":{loc:{start:{line:897,column:8},end:{line:899,column:9}},type:"if",locations:[{start:{line:897,column:8},end:{line:899,column:9}},{start:{line:897,column:8},end:{line:899,column:9}}],line:897},"55":{loc:{start:{line:900,column:8},end:{line:902,column:9}},type:"if",locations:[{start:{line:900,column:8},end:{line:902,column:9}},{start:{line:900,column:8},end:{line:902,column:9}}],line:900},"56":{loc:{start:{line:908,column:8},end:{line:930,column:9}},type:"if",locations:[{start:{line:908,column:8},end:{line:930,column:9}},{start:{line:908,column:8},end:{line:930,column:9}}],line:908},"57":{loc:{start:{line:980,column:8},end:{line:982,column:9}},type:"if",locations:[{start:{line:980,column:8},end:{line:982,column:9}},{start:{line:980,column:8},end:{line:982,column:9}}],line:980},"58":{loc:{start:{line:980,column:12},end:{line:980,column:46}},type:"binary-expr",locations:[{start:{line:980,column:12},end:{line:980,column:21}},{start:{line:980,column:25},end:{line:980,column:46}}],line:980},"59":{loc:{start:{line:985,column:8},end:{line:987,column:9}},type:"if",locations:[{start:{line:985,column:8},end:{line:987,column:9}},{start:{line:985,column:8},end:{line:987,column:9}}],line:985},"60":{loc:{start:{line:990,column:8},end:{line:992,column:9}},type:"if",locations:[{start:{line:990,column:8},end:{line:992,column:9}},{start:{line:990,column:8},end:{line:992,column:9}}],line:990},"61":{loc:{start:{line:994,column:8},end:{line:996,column:9}},type:"if",locations:[{start:{line:994,column:8},end:{line:996,column:9}},{start:{line:994,column:8},end:{line:996,column:9}}],line:994},"62":{loc:{start:{line:999,column:8},end:{line:1006,column:9}},type:"if",locations:[{start:{line:999,column:8},end:{line:1006,column:9}},{start:{line:999,column:8},end:{line:1006,column:9}}],line:999},"63":{loc:{start:{line:1069,column:8},end:{line:1071,column:9}},type:"if",locations:[{start:{line:1069,column:8},end:{line:1071,column:9}},{start:{line:1069,column:8},end:{line:1071,column:9}}],line:1069},"64":{loc:{start:{line:1069,column:11},end:{line:1069,column:45}},type:"binary-expr",locations:[{start:{line:1069,column:11},end:{line:1069,column:20}},{start:{line:1069,column:24},end:{line:1069,column:45}}],line:1069},"65":{loc:{start:{line:1074,column:8},end:{line:1076,column:9}},type:"if",locations:[{start:{line:1074,column:8},end:{line:1076,column:9}},{start:{line:1074,column:8},end:{line:1076,column:9}}],line:1074},"66":{loc:{start:{line:1077,column:8},end:{line:1079,column:9}},type:"if",locations:[{start:{line:1077,column:8},end:{line:1079,column:9}},{start:{line:1077,column:8},end:{line:1079,column:9}}],line:1077},"67":{loc:{start:{line:1087,column:8},end:{line:1089,column:9}},type:"if",locations:[{start:{line:1087,column:8},end:{line:1089,column:9}},{start:{line:1087,column:8},end:{line:1089,column:9}}],line:1087},"68":{loc:{start:{line:1091,column:8},end:{line:1095,column:9}},type:"if",locations:[{start:{line:1091,column:8},end:{line:1095,column:9}},{start:{line:1091,column:8},end:{line:1095,column:9}}],line:1091},"69":{loc:{start:{line:1120,column:56},end:{line:1120,column:97}},type:"binary-expr",locations:[{start:{line:1120,column:56},end:{line:1120,column:77}},{start:{line:1120,column:81},end:{line:1120,column:97}}],line:1120},"70":{loc:{start:{line:1133,column:8},end:{line:1135,column:9}},type:"if",locations:[{start:{line:1133,column:8},end:{line:1135,column:9}},{start:{line:1133,column:8},end:{line:1135,column:9}}],line:1133},"71":{loc:{start:{line:1133,column:12},end:{line:1133,column:50}},type:"binary-expr",locations:[{start:{line:1133,column:12},end:{line:1133,column:23}},{start:{line:1133,column:27},end:{line:1133,column:50}}],line:1133},"72":{loc:{start:{line:1138,column:8},end:{line:1140,column:9}},type:"if",locations:[{start:{line:1138,column:8},end:{line:1140,column:9}},{start:{line:1138,column:8},end:{line:1140,column:9}}],line:1138},"73":{loc:{start:{line:1145,column:8},end:{line:1147,column:9}},type:"if",locations:[{start:{line:1145,column:8},end:{line:1147,column:9}},{start:{line:1145,column:8},end:{line:1147,column:9}}],line:1145},"74":{loc:{start:{line:1145,column:12},end:{line:1145,column:50}},type:"binary-expr",locations:[{start:{line:1145,column:12},end:{line:1145,column:23}},{start:{line:1145,column:27},end:{line:1145,column:50}}],line:1145},"75":{loc:{start:{line:1152,column:8},end:{line:1154,column:9}},type:"if",locations:[{start:{line:1152,column:8},end:{line:1154,column:9}},{start:{line:1152,column:8},end:{line:1154,column:9}}],line:1152},"76":{loc:{start:{line:1155,column:8},end:{line:1157,column:9}},type:"if",locations:[{start:{line:1155,column:8},end:{line:1157,column:9}},{start:{line:1155,column:8},end:{line:1157,column:9}}],line:1155},"77":{loc:{start:{line:1170,column:8},end:{line:1172,column:9}},type:"if",locations:[{start:{line:1170,column:8},end:{line:1172,column:9}},{start:{line:1170,column:8},end:{line:1172,column:9}}],line:1170},"78":{loc:{start:{line:1191,column:8},end:{line:1193,column:9}},type:"if",locations:[{start:{line:1191,column:8},end:{line:1193,column:9}},{start:{line:1191,column:8},end:{line:1193,column:9}}],line:1191},"79":{loc:{start:{line:1199,column:8},end:{line:1204,column:9}},type:"if",locations:[{start:{line:1199,column:8},end:{line:1204,column:9}},{start:{line:1199,column:8},end:{line:1204,column:9}}],line:1199},"80":{loc:{start:{line:1210,column:8},end:{line:1212,column:9}},type:"if",locations:[{start:{line:1210,column:8},end:{line:1212,column:9}},{start:{line:1210,column:8},end:{line:1212,column:9}}],line:1210},"81":{loc:{start:{line:1225,column:8},end:{line:1228,column:9}},type:"if",locations:[{start:{line:1225,column:8},end:{line:1228,column:9}},{start:{line:1225,column:8},end:{line:1228,column:9}}],line:1225},"82":{loc:{start:{line:1225,column:12},end:{line:1225,column:31}},type:"binary-expr",locations:[{start:{line:1225,column:12},end:{line:1225,column:18}},{start:{line:1225,column:22},end:{line:1225,column:31}}],line:1225},"83":{loc:{start:{line:1240,column:8},end:{line:1246,column:9}},type:"if",locations:[{start:{line:1240,column:8},end:{line:1246,column:9}},{start:{line:1240,column:8},end:{line:1246,column:9}}],line:1240},"84":{loc:{start:{line:1272,column:8},end:{line:1274,column:9}},type:"if",locations:[{start:{line:1272,column:8},end:{line:1274,column:9}},{start:{line:1272,column:8},end:{line:1274,column:9}}],line:1272},"85":{loc:{start:{line:1272,column:12},end:{line:1272,column:50}},type:"binary-expr",locations:[{start:{line:1272,column:12},end:{line:1272,column:23}},{start:{line:1272,column:27},end:{line:1272,column:50}}],line:1272},"86":{loc:{start:{line:1312,column:8},end:{line:1319,column:9}},type:"if",locations:[{start:{line:1312,column:8},end:{line:1319,column:9}},{start:{line:1312,column:8},end:{line:1319,column:9}}],line:1312},"87":{loc:{start:{line:1326,column:8},end:{line:1328,column:9}},type:"if",locations:[{start:{line:1326,column:8},end:{line:1328,column:9}},{start:{line:1326,column:8},end:{line:1328,column:9}}],line:1326},"88":{loc:{start:{line:1326,column:12},end:{line:1326,column:50}},type:"binary-expr",locations:[{start:{line:1326,column:12},end:{line:1326,column:23}},{start:{line:1326,column:27},end:{line:1326,column:50}}],line:1326},"89":{loc:{start:{line:1382,column:8},end:{line:1389,column:9}},type:"if",locations:[{start:{line:1382,column:8},end:{line:1389,column:9}},{start:{line:1382,column:8},end:{line:1389,column:9}}],line:1382},"90":{loc:{start:{line:1457,column:8},end:{line:1461,column:9}},type:"if",locations:[{start:{line:1457,column:8},end:{line:1461,column:9}},{start:{line:1457,column:8},end:{line:1461,column:9}}],line:1457},"91":{loc:{start:{line:1459,column:14},end:{line:1461,column:9}},type:"if",locations:[{start:{line:1459,column:14},end:{line:1461,column:9}},{start:{line:1459,column:14},end:{line:1461,column:9}}],line:1459},"92":{loc:{start:{line:1468,column:8},end:{line:1470,column:9}},type:"if",locations:[{start:{line:1468,column:8},end:{line:1470,column:9}},{start:{line:1468,column:8},end:{line:1470,column:9}}],line:1468},"93":{loc:{start:{line:1468,column:12},end:{line:1468,column:96}},type:"binary-expr",locations:[{start:{line:1468,column:12},end:{line:1468,column:39}},{start:{line:1468,column:43},end:{line:1468,column:63}},{start:{line:1468,column:67},end:{line:1468,column:96}}],line:1468},"94":{loc:{start:{line:1472,column:8},end:{line:1474,column:9}},type:"if",locations:[{start:{line:1472,column:8},end:{line:1474,column:9}},{start:{line:1472,column:8},end:{line:1474,column:9}}],line:1472},"95":{loc:{start:{line:1480,column:12},end:{line:1482,column:13}},type:"if",locations:[{start:{line:1480,column:12},end:{line:1482,column:13}},{start:{line:1480,column:12},end:{line:1482,column:13}}],line:1480},"96":{loc:{start:{line:1484,column:8},end:{line:1539,column:9}},type:"switch",locations:[{start:{line:1485,column:12},end:{line:1490,column:17}},{start:{line:1491,column:12},end:{line:1496,column:17}},{start:{line:1497,column:12},end:{line:1502,column:17}},{start:{line:1503,column:12},end:{line:1508,column:17}},{start:{line:1509,column:12},end:{line:1514,column:17}},{start:{line:1515,column:12},end:{line:1520,column:17}},{start:{line:1521,column:12},end:{line:1526,column:17}},{start:{line:1527,column:12},end:{line:1532,column:17}},{start:{line:1533,column:12},end:{line:1538,column:17}}],line:1484},"97":{loc:{start:{line:1486,column:16},end:{line:1490,column:17}},type:"if",locations:[{start:{line:1486,column:16},end:{line:1490,column:17}},{start:{line:1486,column:16},end:{line:1490,column:17}}],line:1486},"98":{loc:{start:{line:1492,column:16},end:{line:1496,column:17}},type:"if",locations:[{start:{line:1492,column:16},end:{line:1496,column:17}},{start:{line:1492,column:16},end:{line:1496,column:17}}],line:1492},"99":{loc:{start:{line:1498,column:16},end:{line:1502,column:17}},type:"if",locations:[{start:{line:1498,column:16},end:{line:1502,column:17}},{start:{line:1498,column:16},end:{line:1502,column:17}}],line:1498},"100":{loc:{start:{line:1504,column:16},end:{line:1508,column:17}},type:"if",locations:[{start:{line:1504,column:16},end:{line:1508,column:17}},{start:{line:1504,column:16},end:{line:1508,column:17}}],line:1504},"101":{loc:{start:{line:1510,column:16},end:{line:1514,column:17}},type:"if",locations:[{start:{line:1510,column:16},end:{line:1514,column:17}},{start:{line:1510,column:16},end:{line:1514,column:17}}],line:1510},"102":{loc:{start:{line:1516,column:16},end:{line:1520,column:17}},type:"if",locations:[{start:{line:1516,column:16},end:{line:1520,column:17}},{start:{line:1516,column:16},end:{line:1520,column:17}}],line:1516},"103":{loc:{start:{line:1522,column:16},end:{line:1526,column:17}},type:"if",locations:[{start:{line:1522,column:16},end:{line:1526,column:17}},{start:{line:1522,column:16},end:{line:1526,column:17}}],line:1522},"104":{loc:{start:{line:1528,column:16},end:{line:1532,column:17}},type:"if",locations:[{start:{line:1528,column:16},end:{line:1532,column:17}},{start:{line:1528,column:16},end:{line:1532,column:17}}],line:1528},"105":{loc:{start:{line:1534,column:16},end:{line:1538,column:17}},type:"if",locations:[{start:{line:1534,column:16},end:{line:1538,column:17}},{start:{line:1534,column:16},end:{line:1538,column:17}}],line:1534},"106":{loc:{start:{line:1559,column:8},end:{line:1565,column:9}},type:"if",locations:[{start:{line:1559,column:8},end:{line:1565,column:9}},{start:{line:1559,column:8},end:{line:1565,column:9}}],line:1559},"107":{loc:{start:{line:1561,column:14},end:{line:1565,column:9}},type:"if",locations:[{start:{line:1561,column:14},end:{line:1565,column:9}},{start:{line:1561,column:14},end:{line:1565,column:9}}],line:1561},"108":{loc:{start:{line:1586,column:8},end:{line:1597,column:9}},type:"if",locations:[{start:{line:1586,column:8},end:{line:1597,column:9}},{start:{line:1586,column:8},end:{line:1597,column:9}}],line:1586},"109":{loc:{start:{line:1591,column:14},end:{line:1597,column:9}},type:"if",locations:[{start:{line:1591,column:14},end:{line:1597,column:9}},{start:{line:1591,column:14},end:{line:1597,column:9}}],line:1591},"110":{loc:{start:{line:1602,column:8},end:{line:1604,column:9}},type:"if",locations:[{start:{line:1602,column:8},end:{line:1604,column:9}},{start:{line:1602,column:8},end:{line:1604,column:9}}],line:1602},"111":{loc:{start:{line:1602,column:12},end:{line:1602,column:39}},type:"binary-expr",locations:[{start:{line:1602,column:12},end:{line:1602,column:20}},{start:{line:1602,column:24},end:{line:1602,column:39}}],line:1602},"112":{loc:{start:{line:1719,column:8},end:{line:1721,column:9}},type:"if",locations:[{start:{line:1719,column:8},end:{line:1721,column:9}},{start:{line:1719,column:8},end:{line:1721,column:9}}],line:1719},"113":{loc:{start:{line:1719,column:12},end:{line:1719,column:60}},type:"binary-expr",locations:[{start:{line:1719,column:12},end:{line:1719,column:28}},{start:{line:1719,column:32},end:{line:1719,column:60}}],line:1719},"114":{loc:{start:{line:1724,column:8},end:{line:1726,column:9}},type:"if",locations:[{start:{line:1724,column:8},end:{line:1726,column:9}},{start:{line:1724,column:8},end:{line:1726,column:9}}],line:1724},"115":{loc:{start:{line:1736,column:8},end:{line:1738,column:9}},type:"if",locations:[{start:{line:1736,column:8},end:{line:1738,column:9}},{start:{line:1736,column:8},end:{line:1738,column:9}}],line:1736},"116":{loc:{start:{line:1736,column:12},end:{line:1736,column:50}},type:"binary-expr",locations:[{start:{line:1736,column:12},end:{line:1736,column:23}},{start:{line:1736,column:27},end:{line:1736,column:50}}],line:1736},"117":{loc:{start:{line:1741,column:8},end:{line:1743,column:9}},type:"if",locations:[{start:{line:1741,column:8},end:{line:1743,column:9}},{start:{line:1741,column:8},end:{line:1743,column:9}}],line:1741},"118":{loc:{start:{line:1746,column:8},end:{line:1748,column:9}},type:"if",locations:[{start:{line:1746,column:8},end:{line:1748,column:9}},{start:{line:1746,column:8},end:{line:1748,column:9}}],line:1746},"119":{loc:{start:{line:1755,column:8},end:{line:1757,column:9}},type:"if",locations:[{start:{line:1755,column:8},end:{line:1757,column:9}},{start:{line:1755,column:8},end:{line:1757,column:9}}],line:1755},"120":{loc:{start:{line:1755,column:12},end:{line:1755,column:62}},type:"binary-expr",locations:[{start:{line:1755,column:12},end:{line:1755,column:29}},{start:{line:1755,column:33},end:{line:1755,column:62}}],line:1755},"121":{loc:{start:{line:1759,column:8},end:{line:1761,column:9}},type:"if",locations:[{start:{line:1759,column:8},end:{line:1761,column:9}},{start:{line:1759,column:8},end:{line:1761,column:9}}],line:1759},"122":{loc:{start:{line:1759,column:13},end:{line:1759,column:145}},type:"binary-expr",locations:[{start:{line:1759,column:13},end:{line:1759,column:59}},{start:{line:1759,column:63},end:{line:1759,column:105}},{start:{line:1759,column:109},end:{line:1759,column:145}}],line:1759},"123":{loc:{start:{line:1786,column:8},end:{line:1788,column:9}},type:"if",locations:[{start:{line:1786,column:8},end:{line:1788,column:9}},{start:{line:1786,column:8},end:{line:1788,column:9}}],line:1786},"124":{loc:{start:{line:1786,column:12},end:{line:1786,column:50}},type:"binary-expr",locations:[{start:{line:1786,column:12},end:{line:1786,column:23}},{start:{line:1786,column:27},end:{line:1786,column:50}}],line:1786},"125":{loc:{start:{line:1792,column:8},end:{line:1794,column:9}},type:"if",locations:[{start:{line:1792,column:8},end:{line:1794,column:9}},{start:{line:1792,column:8},end:{line:1794,column:9}}],line:1792},"126":{loc:{start:{line:1792,column:12},end:{line:1792,column:56}},type:"binary-expr",locations:[{start:{line:1792,column:12},end:{line:1792,column:26}},{start:{line:1792,column:30},end:{line:1792,column:56}}],line:1792},"127":{loc:{start:{line:1797,column:8},end:{line:1799,column:9}},type:"if",locations:[{start:{line:1797,column:8},end:{line:1799,column:9}},{start:{line:1797,column:8},end:{line:1799,column:9}}],line:1797},"128":{loc:{start:{line:1797,column:11},end:{line:1797,column:50}},type:"binary-expr",locations:[{start:{line:1797,column:11},end:{line:1797,column:30}},{start:{line:1797,column:34},end:{line:1797,column:50}}],line:1797},"129":{loc:{start:{line:1845,column:8},end:{line:1847,column:9}},type:"if",locations:[{start:{line:1845,column:8},end:{line:1847,column:9}},{start:{line:1845,column:8},end:{line:1847,column:9}}],line:1845},"130":{loc:{start:{line:1862,column:8},end:{line:1864,column:9}},type:"if",locations:[{start:{line:1862,column:8},end:{line:1864,column:9}},{start:{line:1862,column:8},end:{line:1864,column:9}}],line:1862},"131":{loc:{start:{line:1862,column:11},end:{line:1862,column:49}},type:"binary-expr",locations:[{start:{line:1862,column:11},end:{line:1862,column:22}},{start:{line:1862,column:26},end:{line:1862,column:49}}],line:1862},"132":{loc:{start:{line:1870,column:8},end:{line:1872,column:9}},type:"if",locations:[{start:{line:1870,column:8},end:{line:1872,column:9}},{start:{line:1870,column:8},end:{line:1872,column:9}}],line:1870},"133":{loc:{start:{line:1870,column:12},end:{line:1870,column:48}},type:"binary-expr",locations:[{start:{line:1870,column:12},end:{line:1870,column:22}},{start:{line:1870,column:26},end:{line:1870,column:48}}],line:1870},"134":{loc:{start:{line:1874,column:8},end:{line:1877,column:9}},type:"if",locations:[{start:{line:1874,column:8},end:{line:1877,column:9}},{start:{line:1874,column:8},end:{line:1877,column:9}}],line:1874},"135":{loc:{start:{line:1879,column:8},end:{line:1882,column:9}},type:"if",locations:[{start:{line:1879,column:8},end:{line:1882,column:9}},{start:{line:1879,column:8},end:{line:1882,column:9}}],line:1879},"136":{loc:{start:{line:1883,column:8},end:{line:1885,column:9}},type:"if",locations:[{start:{line:1883,column:8},end:{line:1885,column:9}},{start:{line:1883,column:8},end:{line:1885,column:9}}],line:1883},"137":{loc:{start:{line:1888,column:8},end:{line:1890,column:9}},type:"if",locations:[{start:{line:1888,column:8},end:{line:1890,column:9}},{start:{line:1888,column:8},end:{line:1890,column:9}}],line:1888},"138":{loc:{start:{line:1888,column:12},end:{line:1888,column:165}},type:"binary-expr",locations:[{start:{line:1888,column:12},end:{line:1888,column:62}},{start:{line:1888,column:66},end:{line:1888,column:118}},{start:{line:1888,column:122},end:{line:1888,column:165}}],line:1888},"139":{loc:{start:{line:1904,column:8},end:{line:1906,column:9}},type:"if",locations:[{start:{line:1904,column:8},end:{line:1906,column:9}},{start:{line:1904,column:8},end:{line:1906,column:9}}],line:1904},"140":{loc:{start:{line:1904,column:12},end:{line:1904,column:48}},type:"binary-expr",locations:[{start:{line:1904,column:12},end:{line:1904,column:22}},{start:{line:1904,column:26},end:{line:1904,column:48}}],line:1904},"141":{loc:{start:{line:1925,column:8},end:{line:1927,column:9}},type:"if",locations:[{start:{line:1925,column:8},end:{line:1927,column:9}},{start:{line:1925,column:8},end:{line:1927,column:9}}],line:1925},"142":{loc:{start:{line:1925,column:12},end:{line:1925,column:52}},type:"binary-expr",locations:[{start:{line:1925,column:12},end:{line:1925,column:24}},{start:{line:1925,column:28},end:{line:1925,column:52}}],line:1925},"143":{loc:{start:{line:1931,column:8},end:{line:1933,column:9}},type:"if",locations:[{start:{line:1931,column:8},end:{line:1933,column:9}},{start:{line:1931,column:8},end:{line:1933,column:9}}],line:1931},"144":{loc:{start:{line:1931,column:12},end:{line:1931,column:48}},type:"binary-expr",locations:[{start:{line:1931,column:12},end:{line:1931,column:22}},{start:{line:1931,column:26},end:{line:1931,column:48}}],line:1931},"145":{loc:{start:{line:1935,column:8},end:{line:1937,column:9}},type:"if",locations:[{start:{line:1935,column:8},end:{line:1937,column:9}},{start:{line:1935,column:8},end:{line:1937,column:9}}],line:1935},"146":{loc:{start:{line:2004,column:8},end:{line:2006,column:9}},type:"if",locations:[{start:{line:2004,column:8},end:{line:2006,column:9}},{start:{line:2004,column:8},end:{line:2006,column:9}}],line:2004},"147":{loc:{start:{line:2004,column:12},end:{line:2004,column:94}},type:"binary-expr",locations:[{start:{line:2004,column:12},end:{line:2004,column:37}},{start:{line:2004,column:41},end:{line:2004,column:61}},{start:{line:2004,column:65},end:{line:2004,column:94}}],line:2004},"148":{loc:{start:{line:2009,column:8},end:{line:2011,column:9}},type:"if",locations:[{start:{line:2009,column:8},end:{line:2011,column:9}},{start:{line:2009,column:8},end:{line:2011,column:9}}],line:2009},"149":{loc:{start:{line:2017,column:12},end:{line:2019,column:13}},type:"if",locations:[{start:{line:2017,column:12},end:{line:2019,column:13}},{start:{line:2017,column:12},end:{line:2019,column:13}}],line:2017},"150":{loc:{start:{line:2022,column:8},end:{line:2079,column:9}},type:"switch",locations:[{start:{line:2023,column:12},end:{line:2028,column:17}},{start:{line:2029,column:12},end:{line:2034,column:17}},{start:{line:2035,column:12},end:{line:2040,column:17}},{start:{line:2041,column:12},end:{line:2046,column:17}},{start:{line:2053,column:12},end:{line:2058,column:17}},{start:{line:2071,column:12},end:{line:2076,column:17}}],line:2022},"151":{loc:{start:{line:2024,column:16},end:{line:2028,column:17}},type:"if",locations:[{start:{line:2024,column:16},end:{line:2028,column:17}},{start:{line:2024,column:16},end:{line:2028,column:17}}],line:2024},"152":{loc:{start:{line:2030,column:16},end:{line:2034,column:17}},type:"if",locations:[{start:{line:2030,column:16},end:{line:2034,column:17}},{start:{line:2030,column:16},end:{line:2034,column:17}}],line:2030},"153":{loc:{start:{line:2036,column:16},end:{line:2040,column:17}},type:"if",locations:[{start:{line:2036,column:16},end:{line:2040,column:17}},{start:{line:2036,column:16},end:{line:2040,column:17}}],line:2036},"154":{loc:{start:{line:2042,column:16},end:{line:2046,column:17}},type:"if",locations:[{start:{line:2042,column:16},end:{line:2046,column:17}},{start:{line:2042,column:16},end:{line:2046,column:17}}],line:2042},"155":{loc:{start:{line:2054,column:16},end:{line:2058,column:17}},type:"if",locations:[{start:{line:2054,column:16},end:{line:2058,column:17}},{start:{line:2054,column:16},end:{line:2058,column:17}}],line:2054},"156":{loc:{start:{line:2054,column:20},end:{line:2054,column:69}},type:"binary-expr",locations:[{start:{line:2054,column:20},end:{line:2054,column:45}},{start:{line:2054,column:49},end:{line:2054,column:69}}],line:2054},"157":{loc:{start:{line:2072,column:16},end:{line:2076,column:17}},type:"if",locations:[{start:{line:2072,column:16},end:{line:2076,column:17}},{start:{line:2072,column:16},end:{line:2076,column:17}}],line:2072},"158":{loc:{start:{line:2072,column:20},end:{line:2072,column:69}},type:"binary-expr",locations:[{start:{line:2072,column:20},end:{line:2072,column:45}},{start:{line:2072,column:49},end:{line:2072,column:69}}],line:2072},"159":{loc:{start:{line:2098,column:8},end:{line:2102,column:9}},type:"if",locations:[{start:{line:2098,column:8},end:{line:2102,column:9}},{start:{line:2098,column:8},end:{line:2102,column:9}}],line:2098},"160":{loc:{start:{line:2100,column:14},end:{line:2102,column:9}},type:"if",locations:[{start:{line:2100,column:14},end:{line:2102,column:9}},{start:{line:2100,column:14},end:{line:2102,column:9}}],line:2100},"161":{loc:{start:{line:2152,column:12},end:{line:2155,column:13}},type:"if",locations:[{start:{line:2152,column:12},end:{line:2155,column:13}},{start:{line:2152,column:12},end:{line:2155,column:13}}],line:2152},"162":{loc:{start:{line:2156,column:12},end:{line:2158,column:13}},type:"if",locations:[{start:{line:2156,column:12},end:{line:2158,column:13}},{start:{line:2156,column:12},end:{line:2158,column:13}}],line:2156},"163":{loc:{start:{line:2161,column:8},end:{line:2164,column:9}},type:"if",locations:[{start:{line:2161,column:8},end:{line:2164,column:9}},{start:{line:2161,column:8},end:{line:2164,column:9}}],line:2161},"164":{loc:{start:{line:2161,column:12},end:{line:2161,column:60}},type:"binary-expr",locations:[{start:{line:2161,column:12},end:{line:2161,column:35}},{start:{line:2161,column:39},end:{line:2161,column:60}}],line:2161},"165":{loc:{start:{line:2188,column:12},end:{line:2191,column:13}},type:"if",locations:[{start:{line:2188,column:12},end:{line:2191,column:13}},{start:{line:2188,column:12},end:{line:2191,column:13}}],line:2188},"166":{loc:{start:{line:2192,column:12},end:{line:2194,column:13}},type:"if",locations:[{start:{line:2192,column:12},end:{line:2194,column:13}},{start:{line:2192,column:12},end:{line:2194,column:13}}],line:2192},"167":{loc:{start:{line:2197,column:8},end:{line:2199,column:9}},type:"if",locations:[{start:{line:2197,column:8},end:{line:2199,column:9}},{start:{line:2197,column:8},end:{line:2199,column:9}}],line:2197},"168":{loc:{start:{line:2197,column:12},end:{line:2197,column:54}},type:"binary-expr",locations:[{start:{line:2197,column:12},end:{line:2197,column:43}},{start:{line:2197,column:47},end:{line:2197,column:54}}],line:2197},"169":{loc:{start:{line:2202,column:8},end:{line:2204,column:9}},type:"if",locations:[{start:{line:2202,column:8},end:{line:2204,column:9}},{start:{line:2202,column:8},end:{line:2204,column:9}}],line:2202},"170":{loc:{start:{line:2219,column:8},end:{line:2221,column:9}},type:"if",locations:[{start:{line:2219,column:8},end:{line:2221,column:9}},{start:{line:2219,column:8},end:{line:2221,column:9}}],line:2219},"171":{loc:{start:{line:2219,column:12},end:{line:2219,column:50}},type:"binary-expr",locations:[{start:{line:2219,column:12},end:{line:2219,column:23}},{start:{line:2219,column:27},end:{line:2219,column:50}}],line:2219},"172":{loc:{start:{line:2224,column:8},end:{line:2226,column:9}},type:"if",locations:[{start:{line:2224,column:8},end:{line:2226,column:9}},{start:{line:2224,column:8},end:{line:2226,column:9}}],line:2224},"173":{loc:{start:{line:2231,column:8},end:{line:2233,column:9}},type:"if",locations:[{start:{line:2231,column:8},end:{line:2233,column:9}},{start:{line:2231,column:8},end:{line:2233,column:9}}],line:2231},"174":{loc:{start:{line:2265,column:8},end:{line:2267,column:9}},type:"if",locations:[{start:{line:2265,column:8},end:{line:2267,column:9}},{start:{line:2265,column:8},end:{line:2267,column:9}}],line:2265},"175":{loc:{start:{line:2276,column:8},end:{line:2278,column:9}},type:"if",locations:[{start:{line:2276,column:8},end:{line:2278,column:9}},{start:{line:2276,column:8},end:{line:2278,column:9}}],line:2276},"176":{loc:{start:{line:2276,column:12},end:{line:2276,column:48}},type:"binary-expr",locations:[{start:{line:2276,column:12},end:{line:2276,column:22}},{start:{line:2276,column:26},end:{line:2276,column:48}}],line:2276},"177":{loc:{start:{line:2281,column:8},end:{line:2283,column:9}},type:"if",locations:[{start:{line:2281,column:8},end:{line:2283,column:9}},{start:{line:2281,column:8},end:{line:2283,column:9}}],line:2281},"178":{loc:{start:{line:2284,column:8},end:{line:2286,column:9}},type:"if",locations:[{start:{line:2284,column:8},end:{line:2286,column:9}},{start:{line:2284,column:8},end:{line:2286,column:9}}],line:2284},"179":{loc:{start:{line:2314,column:8},end:{line:2341,column:9}},type:"if",locations:[{start:{line:2314,column:8},end:{line:2341,column:9}},{start:{line:2314,column:8},end:{line:2341,column:9}}],line:2314},"180":{loc:{start:{line:2348,column:39},end:{line:2348,column:215}},type:"cond-expr",locations:[{start:{line:2348,column:123},end:{line:2348,column:124}},{start:{line:2348,column:127},end:{line:2348,column:215}}],line:2348},"181":{loc:{start:{line:2348,column:40},end:{line:2348,column:119}},type:"binary-expr",locations:[{start:{line:2348,column:40},end:{line:2348,column:53}},{start:{line:2348,column:57},end:{line:2348,column:69}},{start:{line:2348,column:73},end:{line:2348,column:85}},{start:{line:2348,column:89},end:{line:2348,column:102}},{start:{line:2348,column:106},end:{line:2348,column:119}}],line:2348},"182":{loc:{start:{line:2348,column:127},end:{line:2348,column:215}},type:"cond-expr",locations:[{start:{line:2348,column:210},end:{line:2348,column:212}},{start:{line:2348,column:214},end:{line:2348,column:215}}],line:2348},"183":{loc:{start:{line:2348,column:128},end:{line:2348,column:207}},type:"binary-expr",locations:[{start:{line:2348,column:128},end:{line:2348,column:141}},{start:{line:2348,column:145},end:{line:2348,column:157}},{start:{line:2348,column:161},end:{line:2348,column:173}},{start:{line:2348,column:177},end:{line:2348,column:190}},{start:{line:2348,column:194},end:{line:2348,column:207}}],line:2348},"184":{loc:{start:{line:2349,column:39},end:{line:2349,column:118}},type:"cond-expr",locations:[{start:{line:2349,column:61},end:{line:2349,column:62}},{start:{line:2349,column:66},end:{line:2349,column:117}}],line:2349},"185":{loc:{start:{line:2349,column:66},end:{line:2349,column:117}},type:"cond-expr",locations:[{start:{line:2349,column:88},end:{line:2349,column:90}},{start:{line:2349,column:93},end:{line:2349,column:117}}],line:2349},"186":{loc:{start:{line:2349,column:93},end:{line:2349,column:117}},type:"cond-expr",locations:[{start:{line:2349,column:111},end:{line:2349,column:112}},{start:{line:2349,column:115},end:{line:2349,column:117}}],line:2349},"187":{loc:{start:{line:2350,column:39},end:{line:2350,column:113}},type:"cond-expr",locations:[{start:{line:2350,column:71},end:{line:2350,column:73}},{start:{line:2350,column:76},end:{line:2350,column:112}}],line:2350},"188":{loc:{start:{line:2350,column:40},end:{line:2350,column:67}},type:"binary-expr",locations:[{start:{line:2350,column:40},end:{line:2350,column:52}},{start:{line:2350,column:56},end:{line:2350,column:67}}],line:2350},"189":{loc:{start:{line:2350,column:76},end:{line:2350,column:112}},type:"cond-expr",locations:[{start:{line:2350,column:106},end:{line:2350,column:108}},{start:{line:2350,column:111},end:{line:2350,column:112}}],line:2350},"190":{loc:{start:{line:2350,column:76},end:{line:2350,column:103}},type:"binary-expr",locations:[{start:{line:2350,column:76},end:{line:2350,column:88}},{start:{line:2350,column:92},end:{line:2350,column:103}}],line:2350},"191":{loc:{start:{line:2357,column:39},end:{line:2357,column:215}},type:"cond-expr",locations:[{start:{line:2357,column:123},end:{line:2357,column:124}},{start:{line:2357,column:127},end:{line:2357,column:215}}],line:2357},"192":{loc:{start:{line:2357,column:40},end:{line:2357,column:119}},type:"binary-expr",locations:[{start:{line:2357,column:40},end:{line:2357,column:53}},{start:{line:2357,column:57},end:{line:2357,column:69}},{start:{line:2357,column:73},end:{line:2357,column:85}},{start:{line:2357,column:89},end:{line:2357,column:102}},{start:{line:2357,column:106},end:{line:2357,column:119}}],line:2357},"193":{loc:{start:{line:2357,column:127},end:{line:2357,column:215}},type:"cond-expr",locations:[{start:{line:2357,column:210},end:{line:2357,column:212}},{start:{line:2357,column:214},end:{line:2357,column:215}}],line:2357},"194":{loc:{start:{line:2357,column:128},end:{line:2357,column:207}},type:"binary-expr",locations:[{start:{line:2357,column:128},end:{line:2357,column:141}},{start:{line:2357,column:145},end:{line:2357,column:157}},{start:{line:2357,column:161},end:{line:2357,column:173}},{start:{line:2357,column:177},end:{line:2357,column:190}},{start:{line:2357,column:194},end:{line:2357,column:207}}],line:2357},"195":{loc:{start:{line:2358,column:39},end:{line:2358,column:118}},type:"cond-expr",locations:[{start:{line:2358,column:61},end:{line:2358,column:63}},{start:{line:2358,column:67},end:{line:2358,column:117}}],line:2358},"196":{loc:{start:{line:2358,column:67},end:{line:2358,column:117}},type:"cond-expr",locations:[{start:{line:2358,column:89},end:{line:2358,column:90}},{start:{line:2358,column:93},end:{line:2358,column:117}}],line:2358},"197":{loc:{start:{line:2358,column:93},end:{line:2358,column:117}},type:"cond-expr",locations:[{start:{line:2358,column:111},end:{line:2358,column:112}},{start:{line:2358,column:115},end:{line:2358,column:117}}],line:2358},"198":{loc:{start:{line:2359,column:39},end:{line:2359,column:113}},type:"cond-expr",locations:[{start:{line:2359,column:71},end:{line:2359,column:73}},{start:{line:2359,column:76},end:{line:2359,column:112}}],line:2359},"199":{loc:{start:{line:2359,column:40},end:{line:2359,column:67}},type:"binary-expr",locations:[{start:{line:2359,column:40},end:{line:2359,column:52}},{start:{line:2359,column:56},end:{line:2359,column:67}}],line:2359},"200":{loc:{start:{line:2359,column:76},end:{line:2359,column:112}},type:"cond-expr",locations:[{start:{line:2359,column:106},end:{line:2359,column:108}},{start:{line:2359,column:111},end:{line:2359,column:112}}],line:2359},"201":{loc:{start:{line:2359,column:76},end:{line:2359,column:103}},type:"binary-expr",locations:[{start:{line:2359,column:76},end:{line:2359,column:88}},{start:{line:2359,column:92},end:{line:2359,column:103}}],line:2359},"202":{loc:{start:{line:2375,column:8},end:{line:2377,column:9}},type:"if",locations:[{start:{line:2375,column:8},end:{line:2377,column:9}},{start:{line:2375,column:8},end:{line:2377,column:9}}],line:2375},"203":{loc:{start:{line:2375,column:11},end:{line:2375,column:57}},type:"binary-expr",locations:[{start:{line:2375,column:11},end:{line:2375,column:26}},{start:{line:2375,column:30},end:{line:2375,column:57}}],line:2375},"204":{loc:{start:{line:2438,column:12},end:{line:2441,column:13}},type:"if",locations:[{start:{line:2438,column:12},end:{line:2441,column:13}},{start:{line:2438,column:12},end:{line:2441,column:13}}],line:2438},"205":{loc:{start:{line:2443,column:12},end:{line:2447,column:13}},type:"if",locations:[{start:{line:2443,column:12},end:{line:2447,column:13}},{start:{line:2443,column:12},end:{line:2447,column:13}}],line:2443},"206":{loc:{start:{line:2453,column:12},end:{line:2455,column:13}},type:"if",locations:[{start:{line:2453,column:12},end:{line:2455,column:13}},{start:{line:2453,column:12},end:{line:2455,column:13}}],line:2453},"207":{loc:{start:{line:2453,column:16},end:{line:2453,column:54}},type:"binary-expr",locations:[{start:{line:2453,column:16},end:{line:2453,column:27}},{start:{line:2453,column:31},end:{line:2453,column:54}}],line:2453},"208":{loc:{start:{line:2471,column:12},end:{line:2488,column:13}},type:"if",locations:[{start:{line:2471,column:12},end:{line:2488,column:13}},{start:{line:2471,column:12},end:{line:2488,column:13}}],line:2471},"209":{loc:{start:{line:2493,column:12},end:{line:2495,column:13}},type:"if",locations:[{start:{line:2493,column:12},end:{line:2495,column:13}},{start:{line:2493,column:12},end:{line:2495,column:13}}],line:2493},"210":{loc:{start:{line:2499,column:12},end:{line:2529,column:13}},type:"if",locations:[{start:{line:2499,column:12},end:{line:2529,column:13}},{start:{line:2499,column:12},end:{line:2529,column:13}}],line:2499},"211":{loc:{start:{line:2512,column:16},end:{line:2514,column:17}},type:"if",locations:[{start:{line:2512,column:16},end:{line:2514,column:17}},{start:{line:2512,column:16},end:{line:2514,column:17}}],line:2512},"212":{loc:{start:{line:2546,column:12},end:{line:2557,column:13}},type:"if",locations:[{start:{line:2546,column:12},end:{line:2557,column:13}},{start:{line:2546,column:12},end:{line:2557,column:13}}],line:2546},"213":{loc:{start:{line:2588,column:8},end:{line:2622,column:9}},type:"if",locations:[{start:{line:2588,column:8},end:{line:2622,column:9}},{start:{line:2588,column:8},end:{line:2622,column:9}}],line:2588},"214":{loc:{start:{line:2624,column:8},end:{line:2626,column:9}},type:"if",locations:[{start:{line:2624,column:8},end:{line:2626,column:9}},{start:{line:2624,column:8},end:{line:2626,column:9}}],line:2624},"215":{loc:{start:{line:2636,column:8},end:{line:2638,column:9}},type:"if",locations:[{start:{line:2636,column:8},end:{line:2638,column:9}},{start:{line:2636,column:8},end:{line:2638,column:9}}],line:2636},"216":{loc:{start:{line:2636,column:12},end:{line:2636,column:58}},type:"binary-expr",locations:[{start:{line:2636,column:12},end:{line:2636,column:27}},{start:{line:2636,column:31},end:{line:2636,column:58}}],line:2636},"217":{loc:{start:{line:2643,column:8},end:{line:2645,column:9}},type:"if",locations:[{start:{line:2643,column:8},end:{line:2645,column:9}},{start:{line:2643,column:8},end:{line:2645,column:9}}],line:2643},"218":{loc:{start:{line:2648,column:8},end:{line:2650,column:9}},type:"if",locations:[{start:{line:2648,column:8},end:{line:2650,column:9}},{start:{line:2648,column:8},end:{line:2650,column:9}}],line:2648},"219":{loc:{start:{line:2678,column:12},end:{line:2682,column:13}},type:"if",locations:[{start:{line:2678,column:12},end:{line:2682,column:13}},{start:{line:2678,column:12},end:{line:2682,column:13}}],line:2678},"220":{loc:{start:{line:2678,column:16},end:{line:2678,column:62}},type:"binary-expr",locations:[{start:{line:2678,column:16},end:{line:2678,column:35}},{start:{line:2678,column:39},end:{line:2678,column:62}}],line:2678},"221":{loc:{start:{line:2683,column:12},end:{line:2692,column:13}},type:"if",locations:[{start:{line:2683,column:12},end:{line:2692,column:13}},{start:{line:2683,column:12},end:{line:2692,column:13}}],line:2683},"222":{loc:{start:{line:2696,column:8},end:{line:2698,column:9}},type:"if",locations:[{start:{line:2696,column:8},end:{line:2698,column:9}},{start:{line:2696,column:8},end:{line:2698,column:9}}],line:2696},"223":{loc:{start:{line:2706,column:8},end:{line:2721,column:9}},type:"if",locations:[{start:{line:2706,column:8},end:{line:2721,column:9}},{start:{line:2706,column:8},end:{line:2721,column:9}}],line:2706},"224":{loc:{start:{line:2743,column:8},end:{line:2745,column:9}},type:"if",locations:[{start:{line:2743,column:8},end:{line:2745,column:9}},{start:{line:2743,column:8},end:{line:2745,column:9}}],line:2743},"225":{loc:{start:{line:2743,column:11},end:{line:2743,column:75}},type:"binary-expr",locations:[{start:{line:2743,column:11},end:{line:2743,column:35}},{start:{line:2743,column:39},end:{line:2743,column:75}}],line:2743},"226":{loc:{start:{line:2788,column:12},end:{line:2790,column:13}},type:"if",locations:[{start:{line:2788,column:12},end:{line:2790,column:13}},{start:{line:2788,column:12},end:{line:2790,column:13}}],line:2788},"227":{loc:{start:{line:2799,column:12},end:{line:2803,column:13}},type:"if",locations:[{start:{line:2799,column:12},end:{line:2803,column:13}},{start:{line:2799,column:12},end:{line:2803,column:13}}],line:2799},"228":{loc:{start:{line:2810,column:12},end:{line:2823,column:13}},type:"if",locations:[{start:{line:2810,column:12},end:{line:2823,column:13}},{start:{line:2810,column:12},end:{line:2823,column:13}}],line:2810},"229":{loc:{start:{line:2834,column:12},end:{line:2863,column:13}},type:"if",locations:[{start:{line:2834,column:12},end:{line:2863,column:13}},{start:{line:2834,column:12},end:{line:2863,column:13}}],line:2834},"230":{loc:{start:{line:2841,column:16},end:{line:2843,column:17}},type:"if",locations:[{start:{line:2841,column:16},end:{line:2843,column:17}},{start:{line:2841,column:16},end:{line:2843,column:17}}],line:2841},"231":{loc:{start:{line:2881,column:12},end:{line:2893,column:13}},type:"if",locations:[{start:{line:2881,column:12},end:{line:2893,column:13}},{start:{line:2881,column:12},end:{line:2893,column:13}}],line:2881},"232":{loc:{start:{line:2924,column:8},end:{line:2959,column:9}},type:"if",locations:[{start:{line:2924,column:8},end:{line:2959,column:9}},{start:{line:2924,column:8},end:{line:2959,column:9}}],line:2924},"233":{loc:{start:{line:2961,column:8},end:{line:2963,column:9}},type:"if",locations:[{start:{line:2961,column:8},end:{line:2963,column:9}},{start:{line:2961,column:8},end:{line:2963,column:9}}],line:2961},"234":{loc:{start:{line:2984,column:8},end:{line:2988,column:9}},type:"if",locations:[{start:{line:2984,column:8},end:{line:2988,column:9}},{start:{line:2984,column:8},end:{line:2988,column:9}}],line:2984},"235":{loc:{start:{line:2984,column:12},end:{line:2984,column:58}},type:"binary-expr",locations:[{start:{line:2984,column:12},end:{line:2984,column:27}},{start:{line:2984,column:31},end:{line:2984,column:58}}],line:2984},"236":{loc:{start:{line:2997,column:8},end:{line:2999,column:9}},type:"if",locations:[{start:{line:2997,column:8},end:{line:2999,column:9}},{start:{line:2997,column:8},end:{line:2999,column:9}}],line:2997},"237":{loc:{start:{line:2997,column:12},end:{line:2997,column:50}},type:"binary-expr",locations:[{start:{line:2997,column:12},end:{line:2997,column:23}},{start:{line:2997,column:27},end:{line:2997,column:50}}],line:2997},"238":{loc:{start:{line:3001,column:8},end:{line:3003,column:9}},type:"if",locations:[{start:{line:3001,column:8},end:{line:3003,column:9}},{start:{line:3001,column:8},end:{line:3003,column:9}}],line:3001},"239":{loc:{start:{line:3033,column:8},end:{line:3056,column:9}},type:"if",locations:[{start:{line:3033,column:8},end:{line:3056,column:9}},{start:{line:3033,column:8},end:{line:3056,column:9}}],line:3033},"240":{loc:{start:{line:3075,column:12},end:{line:3141,column:13}},type:"if",locations:[{start:{line:3075,column:12},end:{line:3141,column:13}},{start:{line:3075,column:12},end:{line:3141,column:13}}],line:3075},"241":{loc:{start:{line:3075,column:16},end:{line:3075,column:63}},type:"binary-expr",locations:[{start:{line:3075,column:16},end:{line:3075,column:45}},{start:{line:3075,column:49},end:{line:3075,column:63}}],line:3075},"242":{loc:{start:{line:3083,column:16},end:{line:3138,column:17}},type:"if",locations:[{start:{line:3083,column:16},end:{line:3138,column:17}},{start:{line:3083,column:16},end:{line:3138,column:17}}],line:3083},"243":{loc:{start:{line:3108,column:20},end:{line:3137,column:21}},type:"if",locations:[{start:{line:3108,column:20},end:{line:3137,column:21}},{start:{line:3108,column:20},end:{line:3137,column:21}}],line:3108},"244":{loc:{start:{line:3151,column:8},end:{line:3177,column:9}},type:"if",locations:[{start:{line:3151,column:8},end:{line:3177,column:9}},{start:{line:3151,column:8},end:{line:3177,column:9}}],line:3151},"245":{loc:{start:{line:3160,column:14},end:{line:3177,column:9}},type:"if",locations:[{start:{line:3160,column:14},end:{line:3177,column:9}},{start:{line:3160,column:14},end:{line:3177,column:9}}],line:3160},"246":{loc:{start:{line:3160,column:17},end:{line:3160,column:63}},type:"binary-expr",locations:[{start:{line:3160,column:17},end:{line:3160,column:28}},{start:{line:3160,column:32},end:{line:3160,column:63}}],line:3160},"247":{loc:{start:{line:3188,column:8},end:{line:3205,column:9}},type:"if",locations:[{start:{line:3188,column:8},end:{line:3205,column:9}},{start:{line:3188,column:8},end:{line:3205,column:9}}],line:3188},"248":{loc:{start:{line:3229,column:8},end:{line:3231,column:9}},type:"if",locations:[{start:{line:3229,column:8},end:{line:3231,column:9}},{start:{line:3229,column:8},end:{line:3231,column:9}}],line:3229},"249":{loc:{start:{line:3229,column:12},end:{line:3229,column:48}},type:"binary-expr",locations:[{start:{line:3229,column:12},end:{line:3229,column:22}},{start:{line:3229,column:26},end:{line:3229,column:48}}],line:3229},"250":{loc:{start:{line:3233,column:8},end:{line:3235,column:9}},type:"if",locations:[{start:{line:3233,column:8},end:{line:3235,column:9}},{start:{line:3233,column:8},end:{line:3235,column:9}}],line:3233},"251":{loc:{start:{line:3236,column:8},end:{line:3238,column:9}},type:"if",locations:[{start:{line:3236,column:8},end:{line:3238,column:9}},{start:{line:3236,column:8},end:{line:3238,column:9}}],line:3236},"252":{loc:{start:{line:3241,column:8},end:{line:3245,column:9}},type:"if",locations:[{start:{line:3241,column:8},end:{line:3245,column:9}},{start:{line:3241,column:8},end:{line:3245,column:9}}],line:3241},"253":{loc:{start:{line:3241,column:12},end:{line:3241,column:58}},type:"binary-expr",locations:[{start:{line:3241,column:12},end:{line:3241,column:27}},{start:{line:3241,column:31},end:{line:3241,column:58}}],line:3241},"254":{loc:{start:{line:3268,column:8},end:{line:3294,column:9}},type:"if",locations:[{start:{line:3268,column:8},end:{line:3294,column:9}},{start:{line:3268,column:8},end:{line:3294,column:9}}],line:3268},"255":{loc:{start:{line:3305,column:12},end:{line:3336,column:13}},type:"if",locations:[{start:{line:3305,column:12},end:{line:3336,column:13}},{start:{line:3305,column:12},end:{line:3336,column:13}}],line:3305},"256":{loc:{start:{line:3305,column:16},end:{line:3305,column:63}},type:"binary-expr",locations:[{start:{line:3305,column:16},end:{line:3305,column:45}},{start:{line:3305,column:49},end:{line:3305,column:63}}],line:3305},"257":{loc:{start:{line:3308,column:16},end:{line:3332,column:17}},type:"if",locations:[{start:{line:3308,column:16},end:{line:3332,column:17}},{start:{line:3308,column:16},end:{line:3332,column:17}}],line:3308},"258":{loc:{start:{line:3343,column:8},end:{line:3366,column:9}},type:"if",locations:[{start:{line:3343,column:8},end:{line:3366,column:9}},{start:{line:3343,column:8},end:{line:3366,column:9}}],line:3343},"259":{loc:{start:{line:3351,column:14},end:{line:3366,column:9}},type:"if",locations:[{start:{line:3351,column:14},end:{line:3366,column:9}},{start:{line:3351,column:14},end:{line:3366,column:9}}],line:3351},"260":{loc:{start:{line:3351,column:17},end:{line:3351,column:63}},type:"binary-expr",locations:[{start:{line:3351,column:17},end:{line:3351,column:28}},{start:{line:3351,column:32},end:{line:3351,column:63}}],line:3351},"261":{loc:{start:{line:3376,column:8},end:{line:3392,column:9}},type:"if",locations:[{start:{line:3376,column:8},end:{line:3392,column:9}},{start:{line:3376,column:8},end:{line:3392,column:9}}],line:3376},"262":{loc:{start:{line:3405,column:8},end:{line:3407,column:9}},type:"if",locations:[{start:{line:3405,column:8},end:{line:3407,column:9}},{start:{line:3405,column:8},end:{line:3407,column:9}}],line:3405},"263":{loc:{start:{line:3413,column:8},end:{line:3415,column:9}},type:"if",locations:[{start:{line:3413,column:8},end:{line:3415,column:9}},{start:{line:3413,column:8},end:{line:3415,column:9}}],line:3413},"264":{loc:{start:{line:3413,column:12},end:{line:3413,column:48}},type:"binary-expr",locations:[{start:{line:3413,column:12},end:{line:3413,column:22}},{start:{line:3413,column:26},end:{line:3413,column:48}}],line:3413},"265":{loc:{start:{line:3419,column:8},end:{line:3421,column:9}},type:"if",locations:[{start:{line:3419,column:8},end:{line:3421,column:9}},{start:{line:3419,column:8},end:{line:3421,column:9}}],line:3419},"266":{loc:{start:{line:3422,column:8},end:{line:3424,column:9}},type:"if",locations:[{start:{line:3422,column:8},end:{line:3424,column:9}},{start:{line:3422,column:8},end:{line:3424,column:9}}],line:3422},"267":{loc:{start:{line:3428,column:8},end:{line:3432,column:9}},type:"if",locations:[{start:{line:3428,column:8},end:{line:3432,column:9}},{start:{line:3428,column:8},end:{line:3432,column:9}}],line:3428},"268":{loc:{start:{line:3428,column:12},end:{line:3428,column:58}},type:"binary-expr",locations:[{start:{line:3428,column:12},end:{line:3428,column:27}},{start:{line:3428,column:31},end:{line:3428,column:58}}],line:3428},"269":{loc:{start:{line:3474,column:12},end:{line:3522,column:13}},type:"if",locations:[{start:{line:3474,column:12},end:{line:3522,column:13}},{start:{line:3474,column:12},end:{line:3522,column:13}}],line:3474},"270":{loc:{start:{line:3478,column:16},end:{line:3506,column:17}},type:"if",locations:[{start:{line:3478,column:16},end:{line:3506,column:17}},{start:{line:3478,column:16},end:{line:3506,column:17}}],line:3478},"271":{loc:{start:{line:3489,column:23},end:{line:3506,column:17}},type:"if",locations:[{start:{line:3489,column:23},end:{line:3506,column:17}},{start:{line:3489,column:23},end:{line:3506,column:17}}],line:3489},"272":{loc:{start:{line:3489,column:26},end:{line:3489,column:48}},type:"binary-expr",locations:[{start:{line:3489,column:26},end:{line:3489,column:35}},{start:{line:3489,column:39},end:{line:3489,column:48}}],line:3489},"273":{loc:{start:{line:3557,column:8},end:{line:3571,column:9}},type:"if",locations:[{start:{line:3557,column:8},end:{line:3571,column:9}},{start:{line:3557,column:8},end:{line:3571,column:9}}],line:3557},"274":{loc:{start:{line:3584,column:8},end:{line:3586,column:9}},type:"if",locations:[{start:{line:3584,column:8},end:{line:3586,column:9}},{start:{line:3584,column:8},end:{line:3586,column:9}}],line:3584},"275":{loc:{start:{line:3593,column:8},end:{line:3595,column:9}},type:"if",locations:[{start:{line:3593,column:8},end:{line:3595,column:9}},{start:{line:3593,column:8},end:{line:3595,column:9}}],line:3593},"276":{loc:{start:{line:3593,column:12},end:{line:3593,column:50}},type:"binary-expr",locations:[{start:{line:3593,column:12},end:{line:3593,column:23}},{start:{line:3593,column:27},end:{line:3593,column:50}}],line:3593},"277":{loc:{start:{line:3597,column:8},end:{line:3599,column:9}},type:"if",locations:[{start:{line:3597,column:8},end:{line:3599,column:9}},{start:{line:3597,column:8},end:{line:3599,column:9}}],line:3597},"278":{loc:{start:{line:3604,column:8},end:{line:3609,column:9}},type:"if",locations:[{start:{line:3604,column:8},end:{line:3609,column:9}},{start:{line:3604,column:8},end:{line:3609,column:9}}],line:3604},"279":{loc:{start:{line:3604,column:12},end:{line:3604,column:58}},type:"binary-expr",locations:[{start:{line:3604,column:12},end:{line:3604,column:27}},{start:{line:3604,column:31},end:{line:3604,column:58}}],line:3604},"280":{loc:{start:{line:3653,column:12},end:{line:3709,column:13}},type:"if",locations:[{start:{line:3653,column:12},end:{line:3709,column:13}},{start:{line:3653,column:12},end:{line:3709,column:13}}],line:3653},"281":{loc:{start:{line:3659,column:16},end:{line:3706,column:17}},type:"if",locations:[{start:{line:3659,column:16},end:{line:3706,column:17}},{start:{line:3659,column:16},end:{line:3706,column:17}}],line:3659},"282":{loc:{start:{line:3679,column:20},end:{line:3705,column:21}},type:"if",locations:[{start:{line:3679,column:20},end:{line:3705,column:21}},{start:{line:3679,column:20},end:{line:3705,column:21}}],line:3679},"283":{loc:{start:{line:3752,column:8},end:{line:3759,column:9}},type:"if",locations:[{start:{line:3752,column:8},end:{line:3759,column:9}},{start:{line:3752,column:8},end:{line:3759,column:9}}],line:3752},"284":{loc:{start:{line:4037,column:8},end:{line:4039,column:9}},type:"if",locations:[{start:{line:4037,column:8},end:{line:4039,column:9}},{start:{line:4037,column:8},end:{line:4039,column:9}}],line:4037},"285":{loc:{start:{line:4037,column:12},end:{line:4037,column:58}},type:"binary-expr",locations:[{start:{line:4037,column:12},end:{line:4037,column:27}},{start:{line:4037,column:31},end:{line:4037,column:58}}],line:4037}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1509":0,"1510":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1517":0,"1518":0,"1519":0,"1520":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":0,"1526":0,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1550":0,"1551":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1557":0,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1572":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0],"95":[0,0],"96":[0,0,0,0,0,0,0,0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0,0],"148":[0,0],"149":[0,0],"150":[0,0,0,0,0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0,0,0,0],"182":[0,0],"183":[0,0,0,0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0,0,0,0],"193":[0,0],"194":[0,0,0,0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"fd5ea22b2d5c3fea33e13dc6256c8598f3dd5bb1"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{Contract,Context}=(cov_1pebg41whg.s[0]++,require('fabric-contract-api'));//const { Buffer } = require('safe-buffer');
class securitizationContext extends Context{constructor(){cov_1pebg41whg.f[0]++;cov_1pebg41whg.s[1]++;super();}GetMSPID(){cov_1pebg41whg.f[1]++;cov_1pebg41whg.s[2]++;return this.clientIdentity.getMSPID();}GetUserIdentity(value){cov_1pebg41whg.f[2]++;cov_1pebg41whg.s[3]++;return this.clientIdentity.getAttributeValue(value);}// SetUserIdentity(userIdentity){
//     this.userIdentity=userIdentity
//     // return this.clientIdentity.getAttributeValue('userIdentity')
// }
GetTxTimestamp(){cov_1pebg41whg.f[3]++;cov_1pebg41whg.s[4]++;return this.stub.getTxTimestamp();}GetTxDateTimestamp(){cov_1pebg41whg.f[4]++;cov_1pebg41whg.s[5]++;return this.stub.getTxDateTimestamp();}GetRole(){cov_1pebg41whg.f[5]++;cov_1pebg41whg.s[6]++;return this.clientIdentity.assertAttributeValue('hf.role','client');}// SetMSPID provides a value for MSP ID
SetMSPID(mspid){cov_1pebg41whg.f[6]++;cov_1pebg41whg.s[7]++;this.mspid=mspid;}// // GetTransient returns set MSP ID
// GetTransient(){
//     return this.stub.getTransient()
// }
// // SetTransient provides a value for MSP ID
// SetTransient(transient){
//     this.transient=transient
// }
// CheckFormat(number,numberCase){
//     let index;
//     let count;
//     // Check if it is a 2decimal-number
//     switch ((numberCase==='float') ? 0 : ((numberCase==='int') ? 1 : 2)){
//         // Numero con decimales
//         case 0:
//             //console.log('Case 0');
//             count=0;
//             for(let i=0;i<number.length;i++){
//                 if (numberString[i]==='.'){
//                     index=i;
//                     count=count+1;
//                 }else if (numberString[i]===','){
//                     throw new Error('Wrong format. Try using dot instead of comma')
//                 }
//             }
//             if ((number.length-1-index)>2 || count>1){
//                 throw new Error('Wrong decimals');
//             }
//             // Check if it is strictly positive
//             number=parseFloat(number);
//             if (number<=0){
//                 throw new Error('Number must be strictly positive');
//             }
//             return true
//         case 1:
//             //console.log('Case 1');
//             count=0;
//             for(let i=0;i<number.length;i++){
//                 if (numberString[i]==='.'){
//                     throw new Error('Wrong format. This number is supposed to be integer');
//                 }else if(numberString[i]===','){
//                     throw new Error('Wrong format. This number is supposed to be integer');
//                 }
//             }
//             // Check if it is strictly positive
//             number=parseInt(number);
//             if (number<=0){
//                 throw new Error('Number must be strictly positive');
//             }
//             return true
//         case 2:
//             throw new Error(`Check what format do you want`);
//         default:
//             throw new Error('Error');
//     }
// }
GetEventPayload(){cov_1pebg41whg.f[7]++;cov_1pebg41whg.s[8]++;return this.stub.setEvent(this.eventName,this.eventPayload);}SetEventPayload(eventPayload){cov_1pebg41whg.f[8]++;cov_1pebg41whg.s[9]++;this.eventPayload=eventPayload;}SetEventName(eventName){cov_1pebg41whg.f[9]++;cov_1pebg41whg.s[10]++;this.eventName=eventName;}}class commonSecuritizationContract extends Contract{constructor(){cov_1pebg41whg.f[10]++;cov_1pebg41whg.s[11]++;// Unique namespace when multiple contracts per chaincode file
super('common.securitization.com');}/**
     * Define a custom context for securitization
    */createContext(){cov_1pebg41whg.f[11]++;cov_1pebg41whg.s[12]++;return new securitizationContext();}async beforeTransaction(ctx){cov_1pebg41whg.f[12]++;// let getTxTimestamp=await ctx.GetTxTimestamp();
// //console.log(`txTimeStamp: ${getTxTimestamp}`);
// let getTxDateTimestamp=await ctx.GetTxDateTimestamp();
// //console.log(`txDateTimeStamp: ${txDateTimeStamp}`);
let isClient=(cov_1pebg41whg.s[13]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
let role=(cov_1pebg41whg.s[14]++,await ctx.clientIdentity.getAttributeValue('role'));//console.log(`role: ${role}`)
cov_1pebg41whg.s[15]++;if(!isClient){cov_1pebg41whg.b[0][0]++;cov_1pebg41whg.s[16]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[0][1]++;}let par=(cov_1pebg41whg.s[17]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[18]++,par.fcn);let params=(cov_1pebg41whg.s[19]++,par.params);//console.log(func);
//console.log(params);
cov_1pebg41whg.s[20]++;for(let i=(cov_1pebg41whg.s[21]++,0);i<params.length;i++){cov_1pebg41whg.s[22]++;if(params[i]===''){cov_1pebg41whg.b[1][0]++;cov_1pebg41whg.s[23]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[1][1]++;}}}// Here auxiliary functions
// Our token will have 2 decimals, like fiat currencies
async _checkDecimals(number){cov_1pebg41whg.f[13]++;// In nodejs every atribute is passed as a string
// First check if it is a number
// number.stringify()
// if(typeof number !=='number'){
//     throw new Error('Wrong notation');
// }
// Not necessary, we are working with 2decimal-numbers
// Integer between -2^53-1 and 2^53-1
// if (!Number.isSafeInteger(number)){
//     throw new Error('Wrong number');
// }
// Check if it is a 2decimal-number
const numberString=(cov_1pebg41whg.s[24]++,number.toString());let index;let count=(cov_1pebg41whg.s[25]++,0);cov_1pebg41whg.s[26]++;for(let i=(cov_1pebg41whg.s[27]++,0);i<numberString.length;i++){cov_1pebg41whg.s[28]++;if(numberString[i]==='.'){cov_1pebg41whg.b[2][0]++;cov_1pebg41whg.s[29]++;index=i;cov_1pebg41whg.s[30]++;count=count+1;}else{cov_1pebg41whg.b[2][1]++;}cov_1pebg41whg.s[31]++;if(numberString[i]===','){cov_1pebg41whg.b[3][0]++;cov_1pebg41whg.s[32]++;throw new Error('Wrong format. Try using dot instead of comma');}else{cov_1pebg41whg.b[3][1]++;}}//console.log(`numero de puntos ${count}`);
cov_1pebg41whg.s[33]++;if((cov_1pebg41whg.b[5][0]++,numberString.length-1-index>2)||(cov_1pebg41whg.b[5][1]++,count>1)){cov_1pebg41whg.b[4][0]++;cov_1pebg41whg.s[34]++;throw new Error('Wrong decimals');}else{cov_1pebg41whg.b[4][1]++;}// Check if it is strictly positive
cov_1pebg41whg.s[35]++;number=parseFloat(number);cov_1pebg41whg.s[36]++;if(number<=0){cov_1pebg41whg.b[6][0]++;cov_1pebg41whg.s[37]++;throw new Error('Number must be strictly positive');}else{cov_1pebg41whg.b[6][1]++;}cov_1pebg41whg.s[38]++;return true;}//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//---------------------------------------IMPORTANTE----------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
// Diferenciar 2 casos:
// En cuanto al dinero si es dinero que va destinado al pago de cupones o de principal
// En cuanto a bonos si son del mismo tramo o no (esto de momento nada)
// Funcionan
// Transfer money
async _transferMoney(ctx,userID,amount,keyFrom){cov_1pebg41whg.f[14]++;const genericID=(cov_1pebg41whg.s[39]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[40]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));cov_1pebg41whg.s[41]++;for(const key of keyFrom){cov_1pebg41whg.s[42]++;await ctx.stub.deleteState(key);}let typeID=(cov_1pebg41whg.s[43]++,':0');const utxo=(cov_1pebg41whg.s[44]++,{ID:key1+typeID,GenericID:genericID,Owner:userID,Issuer:await ctx.clientIdentity.getID(),Amount:amount,Factor:100,CanBeUsed:true,TypeID:typeID});cov_1pebg41whg.s[45]++;await ctx.stub.putState(key1,Buffer.from(JSON.stringify(utxo)));cov_1pebg41whg.s[46]++;return utxo;}async PoolMoney(ctx){cov_1pebg41whg.f[15]++;const userID=(cov_1pebg41whg.s[47]++,await ctx.GetUserIdentity('cif'));let iterator=(cov_1pebg41whg.s[48]++,await ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]));let amount;let resultKeys=(cov_1pebg41whg.s[49]++,[]);let counter=(cov_1pebg41whg.s[50]++,0);let value;cov_1pebg41whg.s[51]++;for await(const res of iterator){cov_1pebg41whg.s[52]++;value=JSON.parse(res.value.toString());// //console.log(`value: ${value.Amount}`)
cov_1pebg41whg.s[53]++;amount=value.Amount;cov_1pebg41whg.s[54]++;if((cov_1pebg41whg.b[8][0]++,value.CanBeUsed)&&(cov_1pebg41whg.b[8][1]++,value.Owner===userID)){cov_1pebg41whg.b[7][0]++;cov_1pebg41whg.s[55]++;resultKeys.push(value.ID);cov_1pebg41whg.s[56]++;counter=counter+amount;}else{cov_1pebg41whg.b[7][1]++;}cov_1pebg41whg.s[57]++;if(resultKeys.length===2){cov_1pebg41whg.b[9][0]++;cov_1pebg41whg.s[58]++;break;}else{cov_1pebg41whg.b[9][1]++;}}cov_1pebg41whg.s[59]++;if((cov_1pebg41whg.b[11][0]++,resultKeys.length===0)||(cov_1pebg41whg.b[11][1]++,resultKeys.length===1)){cov_1pebg41whg.b[10][0]++;cov_1pebg41whg.s[60]++;throw new Error('There is nothing left to do');}else{cov_1pebg41whg.b[10][1]++;}let ret=(cov_1pebg41whg.s[61]++,await this._transferMoney(ctx,userID,counter,resultKeys));cov_1pebg41whg.s[62]++;return ret;}// In this scenario, Originator will initiate the securitization lifecycle. This org will propose a PPA to a
// farmer/irrigator. To achieve that it is important for the originator to know (listen to enrollments) which farmers
// have been registered as participants of the network, in order to propose a PPA to a particular irrigator, not to a
// generic farmer
// If we know the User ID, then we can query the PPA asociated with that ID
async QueryPPA(ctx,userID){cov_1pebg41whg.f[16]++;// Prior verificatios deactivated in testing (because of test-network)
// Who can query this data?
const ppa=(cov_1pebg41whg.s[63]++,await this._mygetStateByPartialCompositeKey(ctx,'PPA',userID));cov_1pebg41whg.s[64]++;if(ppa===true){cov_1pebg41whg.b[12][0]++;cov_1pebg41whg.s[65]++;throw new Error('PPA does not exist');}else{cov_1pebg41whg.b[12][1]++;}cov_1pebg41whg.s[66]++;return ppa;}async _getAllResults(iterator,isHistory){cov_1pebg41whg.f[17]++;let allResults=(cov_1pebg41whg.s[67]++,[]);let res=(cov_1pebg41whg.s[68]++,await iterator.next());cov_1pebg41whg.s[69]++;while(!res.done){cov_1pebg41whg.s[70]++;if((cov_1pebg41whg.b[14][0]++,res.value)&&(cov_1pebg41whg.b[14][1]++,res.value.value.toString())){cov_1pebg41whg.b[13][0]++;let jsonRes=(cov_1pebg41whg.s[71]++,{});//console.log(res.value.value.toString('utf8'));
cov_1pebg41whg.s[72]++;if((cov_1pebg41whg.b[16][0]++,isHistory)&&(cov_1pebg41whg.b[16][1]++,isHistory===true)){cov_1pebg41whg.b[15][0]++;cov_1pebg41whg.s[73]++;jsonRes.TxId=res.value.tx_id;cov_1pebg41whg.s[74]++;jsonRes.Timestamp=res.value.timestamp;cov_1pebg41whg.s[75]++;try{cov_1pebg41whg.s[76]++;jsonRes.Value=JSON.parse(res.value.value.toString('utf8'));}catch(err){cov_1pebg41whg.s[77]++;//console.log(err);
jsonRes.Value=res.value.value.toString('utf8');}}else{cov_1pebg41whg.b[15][1]++;cov_1pebg41whg.s[78]++;jsonRes.Key=res.value.key;cov_1pebg41whg.s[79]++;try{cov_1pebg41whg.s[80]++;jsonRes.Record=JSON.parse(res.value.value.toString('utf8'));}catch(err){cov_1pebg41whg.s[81]++;//console.log(err);
jsonRes.Record=res.value.value.toString('utf8');}}cov_1pebg41whg.s[82]++;allResults.push(jsonRes);}else{cov_1pebg41whg.b[13][1]++;}cov_1pebg41whg.s[83]++;res=await iterator.next();}cov_1pebg41whg.s[84]++;iterator.close();cov_1pebg41whg.s[85]++;return allResults;}async QueryPPAHistory(ctx,userID,ppaID){cov_1pebg41whg.f[18]++;const key=(cov_1pebg41whg.s[86]++,await ctx.stub.createCompositeKey('PPA',[userID,ppaID]));let resultsIterator=(cov_1pebg41whg.s[87]++,await ctx.stub.getHistoryForKey(key));let results=(cov_1pebg41whg.s[88]++,await this._getAllResults(resultsIterator,true));cov_1pebg41whg.s[89]++;return results;}// Igual esto tiene que ir en un canal donde esté el/los bancos.
// Esta funcion la tengo que activar para "crear dinero"
// Minting money
async Mint(ctx,amount){cov_1pebg41whg.f[19]++;cov_1pebg41whg.s[90]++;// if (amount==='' || amount==='0'){
//     throw new Error('Please, choose a valid value for this field')
// }
// Checking format
await this._checkDecimals(amount);// Each UTXO will have a unique, free-collision key
const genericID=(cov_1pebg41whg.s[91]++,await ctx.stub.getTxID());const userID=(cov_1pebg41whg.s[92]++,await ctx.GetUserIdentity('cif'));const key=(cov_1pebg41whg.s[93]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));let typeID;cov_1pebg41whg.s[94]++;typeID=':0';//mirar si añadiendo ':0' sigue haciendo bien el query
const securitizationCoin=(cov_1pebg41whg.s[95]++,{ID:key+typeID,GenericID:genericID,TypeID:typeID,Issuer:await ctx.clientIdentity.getID(),Owner:userID,Amount:parseInt(parseFloat(amount)*100),Factor:100,CanBeUsed:true});cov_1pebg41whg.s[96]++;await ctx.stub.putState(securitizationCoin.ID,Buffer.from(JSON.stringify(securitizationCoin)));cov_1pebg41whg.s[97]++;return securitizationCoin;}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[20]++;const iterator=(cov_1pebg41whg.s[98]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[99]++,0);let results;cov_1pebg41whg.s[100]++;for await(const res of iterator){cov_1pebg41whg.s[101]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[102]++;counter=counter+1;}cov_1pebg41whg.s[103]++;if(counter>1){cov_1pebg41whg.b[17][0]++;cov_1pebg41whg.s[104]++;throw new Error('Check this...');}else{cov_1pebg41whg.b[17][1]++;cov_1pebg41whg.s[105]++;if(counter===0){cov_1pebg41whg.b[18][0]++;cov_1pebg41whg.s[106]++;return true;}else{cov_1pebg41whg.b[18][1]++;}}cov_1pebg41whg.s[107]++;return results;}// funciona
async QueryMyCoins(ctx){cov_1pebg41whg.f[21]++;const userID=(cov_1pebg41whg.s[108]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[109]++,await ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]));let results=(cov_1pebg41whg.s[110]++,[]);let valor;cov_1pebg41whg.s[111]++;for await(const res of iterator){cov_1pebg41whg.s[112]++;valor=JSON.parse(res.value.toString());cov_1pebg41whg.s[113]++;results.push(valor);}cov_1pebg41whg.s[114]++;return results;}// funciona
async QueryMyBond(ctx){cov_1pebg41whg.f[22]++;const userID=(cov_1pebg41whg.s[115]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[116]++,await ctx.stub.getStateByPartialCompositeKey('BondToken',[userID]));let results=(cov_1pebg41whg.s[117]++,[]);let valor;cov_1pebg41whg.s[118]++;for await(const res of iterator){cov_1pebg41whg.s[119]++;valor=JSON.parse(res.value.toString());cov_1pebg41whg.s[120]++;results.push(valor);}cov_1pebg41whg.s[121]++;return results;}}class ppaContract extends Contract{constructor(){cov_1pebg41whg.f[23]++;cov_1pebg41whg.s[122]++;// Unique namespace when multiple contracts per chaincode file
super('ppa.securitization.com');}createContext(){cov_1pebg41whg.f[24]++;cov_1pebg41whg.s[123]++;return new securitizationContext();}async beforeTransaction(ctx){cov_1pebg41whg.f[25]++;let userMSPID=(cov_1pebg41whg.s[124]++,await ctx.GetMSPID());cov_1pebg41whg.s[125]++;if((cov_1pebg41whg.b[20][0]++,userMSPID!=='originatorMSP')&&(cov_1pebg41whg.b[20][1]++,userMSPID!=='farmerMSP')){cov_1pebg41whg.b[19][0]++;cov_1pebg41whg.s[126]++;throw new Error('You are not allowed to perform this action');}else{cov_1pebg41whg.b[19][1]++;}let isClient=(cov_1pebg41whg.s[127]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
cov_1pebg41whg.s[128]++;if(!isClient){cov_1pebg41whg.b[21][0]++;cov_1pebg41whg.s[129]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[21][1]++;}cov_1pebg41whg.s[130]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[131]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[132]++,par.fcn);let params=(cov_1pebg41whg.s[133]++,par.params);//console.log(func);
//console.log(params);
cov_1pebg41whg.s[134]++;for(let i=(cov_1pebg41whg.s[135]++,0);i<params.length;i++){cov_1pebg41whg.s[136]++;if(params[i]===''){cov_1pebg41whg.b[22][0]++;cov_1pebg41whg.s[137]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[22][1]++;}}const mspid=(cov_1pebg41whg.s[138]++,await ctx.mspid);cov_1pebg41whg.s[139]++;switch(func){case'PPAProposal':cov_1pebg41whg.b[23][0]++;cov_1pebg41whg.s[140]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[24][0]++;cov_1pebg41whg.s[141]++;//console.log('es este caso');
throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[24][1]++;cov_1pebg41whg.s[142]++;return;}case'AcceptPPA':cov_1pebg41whg.b[23][1]++;cov_1pebg41whg.s[143]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[25][0]++;cov_1pebg41whg.s[144]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[25][1]++;cov_1pebg41whg.s[145]++;return;}case'MintPPA':cov_1pebg41whg.b[23][2]++;cov_1pebg41whg.s[146]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[26][0]++;cov_1pebg41whg.s[147]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[26][1]++;cov_1pebg41whg.s[148]++;return;}case'MaintenanceServiceRequest':cov_1pebg41whg.b[23][3]++;cov_1pebg41whg.s[149]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[27][0]++;cov_1pebg41whg.s[150]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[27][1]++;cov_1pebg41whg.s[151]++;return;}case'EnergyConsumptionPerPPA':cov_1pebg41whg.b[23][4]++;cov_1pebg41whg.s[152]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[28][0]++;cov_1pebg41whg.s[153]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[28][1]++;cov_1pebg41whg.s[154]++;return;}case'MonthlyBillPayout':cov_1pebg41whg.b[23][5]++;cov_1pebg41whg.s[155]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[29][0]++;cov_1pebg41whg.s[156]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[29][1]++;cov_1pebg41whg.s[157]++;return;}case'QueryMyPPA':cov_1pebg41whg.b[23][6]++;cov_1pebg41whg.s[158]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[30][0]++;cov_1pebg41whg.s[159]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[30][1]++;cov_1pebg41whg.s[160]++;return;}// case 'WriteCommonRealTimeParameters':
}}//afterTransaction will return the event of the transaction
async afterTransaction(ctx){cov_1pebg41whg.f[26]++;let event=(cov_1pebg41whg.s[161]++,await ctx.GetEventPayload());cov_1pebg41whg.s[162]++;return event;}/**
     *
     * @param {*} ctx
     * @returns the size of the pool
     */async _isPoolCreated(ctx,poolName){cov_1pebg41whg.f[27]++;const iterator=(cov_1pebg41whg.s[163]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let results=(cov_1pebg41whg.s[164]++,[]);cov_1pebg41whg.s[165]++;for await(const res of iterator){cov_1pebg41whg.s[166]++;// push key instead of value json
results.push(res.key);}cov_1pebg41whg.s[167]++;if(results.length===0){cov_1pebg41whg.b[31][0]++;cov_1pebg41whg.s[168]++;return false;}else{cov_1pebg41whg.b[31][1]++;cov_1pebg41whg.s[169]++;if(results.length===1){cov_1pebg41whg.b[32][0]++;cov_1pebg41whg.s[170]++;return true;}else{cov_1pebg41whg.b[32][1]++;cov_1pebg41whg.s[171]++;throw new Error(`State not unique`);}}}/**
     *
     * @param {*} ctx
     * @param {*} userID is the ID linked to user (DNI, CIF,...) which is inside his/her ecert
     * @returns the number of PPAs with that partial composite key
     */ // Auxiliary function to query if PPA contract for this userID has already been proposed
async _isPPAProposed(ctx,ppaID){cov_1pebg41whg.f[28]++;const ppaBytes=(cov_1pebg41whg.s[172]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[173]++;if((cov_1pebg41whg.b[34][0]++,!ppaBytes)||(cov_1pebg41whg.b[34][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[33][0]++;cov_1pebg41whg.s[174]++;return false;}else{cov_1pebg41whg.b[33][1]++;cov_1pebg41whg.s[175]++;return true;}}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @returns the state associated with that partial key
     */ // This auxiliary function will only work with those states expected to be unique (POOL, REALTIMEPARAMETERS, RATING...)
async _getPoolStateByPartialCompositeKey(ctx,docTypeName){cov_1pebg41whg.f[29]++;const iterator=(cov_1pebg41whg.s[176]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[]));let counter=(cov_1pebg41whg.s[177]++,0);let results;cov_1pebg41whg.s[178]++;for await(const res of iterator){cov_1pebg41whg.s[179]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[180]++;counter=counter+1;}cov_1pebg41whg.s[181]++;if(counter>1){cov_1pebg41whg.b[35][0]++;cov_1pebg41whg.s[182]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[35][1]++;cov_1pebg41whg.s[183]++;if(counter===0){cov_1pebg41whg.b[36][0]++;cov_1pebg41whg.s[184]++;return false;}else{cov_1pebg41whg.b[36][1]++;}}cov_1pebg41whg.s[185]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @param {*} userID
     * @returns
     */ // Auxiliary function to retrieve a value associated with a partial key. It is expected that
// this value is unique. One partial key may have multiple values associated to itself.
async _mygetStateByPartialCompositeKey(ctx,docTypeName,userID){cov_1pebg41whg.f[30]++;const iterator=(cov_1pebg41whg.s[186]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[userID]));let counter=(cov_1pebg41whg.s[187]++,0);let results;cov_1pebg41whg.s[188]++;for await(const res of iterator){cov_1pebg41whg.s[189]++;// console.log('funciona _mygetStateByPartialCompositeKey en PPA')
// console.log(res)
results=JSON.parse(res.value.toString());cov_1pebg41whg.s[190]++;counter=counter+1;}cov_1pebg41whg.s[191]++;if(counter>1){cov_1pebg41whg.b[37][0]++;cov_1pebg41whg.s[192]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[37][1]++;cov_1pebg41whg.s[193]++;if(counter===0){cov_1pebg41whg.b[38][0]++;cov_1pebg41whg.s[194]++;return true;}else{cov_1pebg41whg.b[38][1]++;}}cov_1pebg41whg.s[195]++;return results;}// returns which proportion is allocated to coupon and which to principal
async _getCouponProportion(ctx,poolName){cov_1pebg41whg.f[31]++;let iterator=(cov_1pebg41whg.s[196]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let result;cov_1pebg41whg.s[197]++;for await(const res of iterator){cov_1pebg41whg.s[198]++;result=JSON.parse(res.value.toString());}cov_1pebg41whg.s[199]++;return result.CouponPortion;}// This auxiliary function will allow us to determine to which identity are we going to pay the bills
async _isPPAinPool(ctx,ppaID){cov_1pebg41whg.f[32]++;let pool=(cov_1pebg41whg.s[200]++,await this._getPoolStateByPartialCompositeKey(ctx,'POOL'));let res=(cov_1pebg41whg.s[201]++,[]);cov_1pebg41whg.s[202]++;if((cov_1pebg41whg.b[40][0]++,!pool)||(cov_1pebg41whg.b[40][1]++,pool.length===0)){cov_1pebg41whg.b[39][0]++;cov_1pebg41whg.s[203]++;res.push(false);cov_1pebg41whg.s[204]++;return res;}else{cov_1pebg41whg.b[39][1]++;}const containsppaID=(cov_1pebg41whg.s[205]++,await pool.ppaIDs.includes(ppaID));cov_1pebg41whg.s[206]++;res.push(containsppaID);cov_1pebg41whg.s[207]++;res.push(pool.Owner);cov_1pebg41whg.s[208]++;return res;}// This function will contain the contractual terms of the physical PPA
// This function will be run by Originator, who will propose a PPA to a particular user, by means
// of his/her user ID. This function will need a myriad of input arguments.
async PPAProposal(ctx,ownerID,customerID,date){cov_1pebg41whg.f[33]++;// Prior verifications
const userID=(cov_1pebg41whg.s[209]++,await ctx.GetUserIdentity('cif'));//console.log(userID);
cov_1pebg41whg.s[210]++;if(userID!==ownerID){cov_1pebg41whg.b[41][0]++;cov_1pebg41whg.s[211]++;throw new Error(`Field ownerID ${ownerID} does not match your user identity of the ecert`);}else{cov_1pebg41whg.b[41][1]++;}cov_1pebg41whg.s[212]++;if(ownerID===customerID){cov_1pebg41whg.b[42][0]++;cov_1pebg41whg.s[213]++;throw new Error(`Check owner and customer identities`);}else{cov_1pebg41whg.b[42][1]++;}// PPA ID will be a "sum" of multiple keys, one of them is a free-collision key, the txID
// This is not necessary, because each user will be subscribed to just one PPA
const genericID=(cov_1pebg41whg.s[214]++,await ctx.stub.getTxID());// Create this composite Key
const ppaID=(cov_1pebg41whg.s[215]++,await ctx.stub.createCompositeKey('PPA',[customerID,genericID]));// We also verify if a farmer/irrigator has already been offered a PPA
const ppaHasBeenProposed=(cov_1pebg41whg.s[216]++,await this._isPPAProposed(ctx,ppaID));cov_1pebg41whg.s[217]++;if(ppaHasBeenProposed){cov_1pebg41whg.b[43][0]++;cov_1pebg41whg.s[218]++;throw new Error(`Error: PPA for user ${customerID} has already been offered`);}else{cov_1pebg41whg.b[43][1]++;}// //console.log('aqui2')
// TODO
// We define parameters of the PPA, just in case these parameters are common parameters.
const day=(cov_1pebg41whg.s[219]++,1);const month=(cov_1pebg41whg.s[220]++,10);const year=(cov_1pebg41whg.s[221]++,2032);const ordinaryTerminationDate=(cov_1pebg41whg.s[222]++,new Date(year,month-1,day).setHours(0,0,0,0));const firstExtension=(cov_1pebg41whg.s[223]++,Date(year,month-2,day));const customer=(cov_1pebg41whg.s[224]++,'');// const customerID='';
const customerEmail=(cov_1pebg41whg.s[225]++,ctx.GetUserIdentity('email'));// Owner is the ecert whose identity has proposed this PPA
// const owner= ctx.clientIdentity.getID();
const system=(cov_1pebg41whg.s[226]++,'');const land=(cov_1pebg41whg.s[227]++,'');const landID=(cov_1pebg41whg.s[228]++,'');const lastingPeriod=(cov_1pebg41whg.s[229]++,'');// const ordinaryTerminationDate= '';
const advancedTerminated=(cov_1pebg41whg.s[230]++,'');const startDate=(cov_1pebg41whg.s[231]++,'');const extendedAgreement=(cov_1pebg41whg.s[232]++,'');const initialExtensions=(cov_1pebg41whg.s[233]++,'');// const firstExtension= '';
const secondExtension=(cov_1pebg41whg.s[234]++,'');const extensionTimePriorToOrdinaryTerminationDate=(cov_1pebg41whg.s[235]++,'');const isExtensionMandatory=(cov_1pebg41whg.s[236]++,'');const additionalExtensions=(cov_1pebg41whg.s[237]++,'');const additionalExtensionTimePriorToLastAdditionalExtension=(cov_1pebg41whg.s[238]++,'');const additionalExtensionContractPrice=(cov_1pebg41whg.s[239]++,'');const isAdditionalExtension=(cov_1pebg41whg.s[240]++,'');const purchaseOption=(cov_1pebg41whg.s[241]++,'');const contractPrice=(cov_1pebg41whg.s[242]++,'');const paymentsFrequency=(cov_1pebg41whg.s[243]++,12);const unitPrice=(cov_1pebg41whg.s[244]++,'');const minimumMonthlyFee=(cov_1pebg41whg.s[245]++,100);// const firstMonthlyPayment= '';
// const succesiveMonthlyPayments= '';
const dismantlingSystemIncluded=(cov_1pebg41whg.s[246]++,'');const settlementBillingBussinesDays=(cov_1pebg41whg.s[247]++,'');const dueAmountsDays=(cov_1pebg41whg.s[248]++,'');const isInterestTriggered=(cov_1pebg41whg.s[249]++,'');const sellToThirdParties=(cov_1pebg41whg.s[250]++,'');const amountPayableToCustomer=(cov_1pebg41whg.s[251]++,'');const settlementAmountPayableDays=(cov_1pebg41whg.s[252]++,'');const amountPayableType=(cov_1pebg41whg.s[253]++,'');const highestEnergyDemandConexion=(cov_1pebg41whg.s[254]++,'');const grantFinancialAidBeneficiary=(cov_1pebg41whg.s[255]++,'');const netAmountSubsidy=(cov_1pebg41whg.s[256]++,'');const reductionContractPriceFees=(cov_1pebg41whg.s[257]++,'');const grantCollectionTime=(cov_1pebg41whg.s[258]++,'');const customerGoodFaith=(cov_1pebg41whg.s[259]++,'');const systemLandMaintenance=(cov_1pebg41whg.s[260]++,'');const maintenanceHistory=(cov_1pebg41whg.s[261]++,'');const powerSupplyInterruption=(cov_1pebg41whg.s[262]++,'');const powerSupplyInterruptionAdvancedTime=(cov_1pebg41whg.s[263]++,'');const anomalyCircumstance=(cov_1pebg41whg.s[264]++,'');const isCustomerAuthorized=(cov_1pebg41whg.s[265]++,'');const additionalPowerSupplyInterruption=(cov_1pebg41whg.s[266]++,'');const powerSupplyInterruptionCause=(cov_1pebg41whg.s[267]++,'');const extraordinaryExpenses=(cov_1pebg41whg.s[268]++,'');const isMaintenanceNecessary=(cov_1pebg41whg.s[269]++,'');const legalObligationSystemLand=(cov_1pebg41whg.s[270]++,'');const measurementEquipementResponsibility=(cov_1pebg41whg.s[271]++,'');const annualAccountsTime=(cov_1pebg41whg.s[272]++,'');const annualAccounts=(cov_1pebg41whg.s[273]++,'');const informationChangedTime=(cov_1pebg41whg.s[274]++,'');const highSpeedInternetConection=(cov_1pebg41whg.s[275]++,'');const lastModificationOn=(cov_1pebg41whg.s[276]++,new Date(date));const lastModificationUserID=(cov_1pebg41whg.s[277]++,'');const isSigned=(cov_1pebg41whg.s[278]++,false);const energyConsumption=(cov_1pebg41whg.s[279]++,[]);const facturacionMensual=(cov_1pebg41whg.s[280]++,[]);const lastEnergyConsumption=(cov_1pebg41whg.s[281]++,'');const lastFacturacionMensual=(cov_1pebg41whg.s[282]++,'');// Defining attributes of the object PPA
const PPA=(cov_1pebg41whg.s[283]++,{docType:'PPA',ppaID:ppaID,Customer:customer,CustomerID:customerID// CustomerEmail: customerEmail,
// OwnerID: ownerID,
// Owner: await ctx.clientIdentity.getID(),
// System: system,
// Land: land,
// LandID: landID,
// LastingPeriod: lastingPeriod,
// OrdinaryTerminationDate: ordinaryTerminationDate,
// AdvancedTerminated: advancedTerminated,
// StartDate: startDate,
// EnergyConsumption: energyConsumption,
// ExtendedAgreement: extendedAgreement,
// InitialExtensions: initialExtensions,
// FirstExtension: firstExtension,
// SecondExtension: secondExtension,
// BillDate: '',
// ExtensionTimePriorToOrdinaryTerminationDate: extensionTimePriorToOrdinaryTerminationDate,
// IsExtensionMandatory: isExtensionMandatory,
// AdditionalExtensions: additionalExtensions,
// AdditionalExtensionTimePriorToLastAdditionalExtension: additionalExtensionTimePriorToLastAdditionalExtension,
// AdditionalExtensionContractPrice: additionalExtensionContractPrice,
// IsAdditionalExtension: isAdditionalExtension,
// PurchaseOption: purchaseOption,
// ContractPrice: contractPrice,
// PaymentsFrequency: paymentsFrequency,
// FacturacionMensual: facturacionMensual,
// LastFacturacionMensual: lastFacturacionMensual,
// LastEnergyConsumption: lastEnergyConsumption,
// EnergyConsumption: energyConsumption,
// UnitPrice: unitPrice,
// MinimumMonthlyFee: minimumMonthlyFee,
// DismantlingSystemIncluded: dismantlingSystemIncluded,
// SettlementBillingBussinesDays: settlementBillingBussinesDays,
// DueAmountsDays: dueAmountsDays,
// IsInterestTriggered: isInterestTriggered,
// SellToThirdParties: sellToThirdParties,
// AmountPayableToCustomer: {
//     myMethod: () => {
//         if (!PPA.SellToThirdParties){
//             return 0
//         }
//         return 100
//     }
// },
// SettlementAmountPayableDays: settlementAmountPayableDays,
// AmountPayableType: amountPayableType,
// HighestEnergyDemandConexion: highestEnergyDemandConexion,
// GrantFinancialAidBeneficiary: grantFinancialAidBeneficiary,
// NetAmountSubsidy: netAmountSubsidy,
// ReductionContractPriceFees: reductionContractPriceFees,
// GrantCollectionTime: grantCollectionTime,
// CustomerGoodFaith: customerGoodFaith,
// SystemLandMaintenance: systemLandMaintenance,
// MaintenanceHistory: maintenanceHistory,
// PowerSupplyInterruption: powerSupplyInterruption,
// PowerSupplyInterruptionAdvancedTime: powerSupplyInterruptionAdvancedTime,
// AnomalyCircumstance: anomalyCircumstance,
// IsCustomerAuthorized: isCustomerAuthorized,
// AdditionalPowerSupplyInterruption: additionalPowerSupplyInterruption,
// PowerSupplyInterruptionCause: powerSupplyInterruptionCause,
// ExtraordinaryExpenses: extraordinaryExpenses,
// IsMaintenanceNecessary: isMaintenanceNecessary,
// LegalObligationSystemLand: legalObligationSystemLand,
// MeasurementEquipementResponsibility: measurementEquipementResponsibility,
// AnnualAccountsTime: annualAccountsTime,
// AnnualAccounts: annualAccounts,
// InformationChangedTime: informationChangedTime,
// HighSpeedInternetConection: highSpeedInternetConection,
// LastModificationOn: lastModificationOn,
// LastModificationUserID: lastModificationUserID,
// IsSigned: isSigned,
// IsServiceMaintenanceOn: false,
// IsLastBillPaid: false,
});const valueBuffer=(cov_1pebg41whg.s[284]++,Buffer.from(JSON.stringify(PPA)));// set event must be inside after transaction
cov_1pebg41whg.s[285]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[286]++;await ctx.SetEventName('PPAproposed');// await ctx.stub.putState('ppa',valueBuffer);
cov_1pebg41whg.s[287]++;await ctx.stub.putState(ppaID,valueBuffer);cov_1pebg41whg.s[288]++;return PPA;}async RequestPPA(ctx,landID,crops){cov_1pebg41whg.f[34]++;const userID=(cov_1pebg41whg.s[289]++,await ctx.GetUserIdentity('cif'));let requestID=(cov_1pebg41whg.s[290]++,await ctx.stub.getTxID());let PPARequest=(cov_1pebg41whg.s[291]++,{ID:requestID,UserID:userID,LandID:landID,Crops:crops});const valueBuffer=(cov_1pebg41whg.s[292]++,Buffer.from(JSON.stringify(PPARequest)));// set event must be inside after transaction
cov_1pebg41whg.s[293]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[294]++;await ctx.SetEventName('PPARequested');cov_1pebg41whg.s[295]++;await ctx.stub.putState(PPARequest.ID,valueBuffer);cov_1pebg41whg.s[296]++;return PPARequest;}async QueryMyPPA(ctx,ppaID){cov_1pebg41whg.f[35]++;const userID=(cov_1pebg41whg.s[297]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[298]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[299]++;if((cov_1pebg41whg.b[45][0]++,!ppaBytes)||(cov_1pebg41whg.b[45][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[44][0]++;cov_1pebg41whg.s[300]++;throw new Error(`PPA state with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[44][1]++;}const ppa=(cov_1pebg41whg.s[301]++,JSON.parse(ppaBytes.toString()));cov_1pebg41whg.s[302]++;if(userID!==ppa.CustomerID){cov_1pebg41whg.b[46][0]++;cov_1pebg41whg.s[303]++;throw new Error(`Field CustomerID does not match your user identity of the eCert`);}else{cov_1pebg41whg.b[46][1]++;}cov_1pebg41whg.s[304]++;return ppa;}// Farmer/Irrigator will execute this function and by doing that, he/she accepts/signs the PPA
// proposal
async AcceptPPA(ctx,ppaID,date){cov_1pebg41whg.f[36]++;// we retrieve the value associated with this partial key
const userID=(cov_1pebg41whg.s[305]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[306]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[307]++;if((cov_1pebg41whg.b[48][0]++,!ppaBytes)||(cov_1pebg41whg.b[48][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[47][0]++;cov_1pebg41whg.s[308]++;throw new Error(`Error PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[47][1]++;}const ppa=(cov_1pebg41whg.s[309]++,JSON.parse(ppaBytes.toString()));// ppa returns true if no PPA Contract for that userID has been issued.
// ppa returns error if something is wrong with PPA Contract
// Otherwise, ppa returns ppa value for that partial key
cov_1pebg41whg.s[310]++;if(ppa.CustomerID!==userID){cov_1pebg41whg.b[49][0]++;cov_1pebg41whg.s[311]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[49][1]++;}// Check if attribute IsSigned is true
cov_1pebg41whg.s[312]++;if(ppa.IsSigned){cov_1pebg41whg.b[50][0]++;cov_1pebg41whg.s[313]++;throw new Error(`Your PPA has been already signed`);}else{cov_1pebg41whg.b[50][1]++;}// Otherwise, change the IsSigned state.
cov_1pebg41whg.s[314]++;ppa.IsSigned=true;// ppa.Customer=await ctx.clientIdentity.getID();
// Attach current date
cov_1pebg41whg.s[315]++;ppa.LastModificationOn=new Date(date);const valueBuffer=(cov_1pebg41whg.s[316]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[317]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[318]++;await ctx.SetEventName('PPAaccepted');cov_1pebg41whg.s[319]++;await ctx.stub.putState(ppa.ppaID,valueBuffer);cov_1pebg41whg.s[320]++;return ppa;}// If a farmer signs a PPAproposal, originator will receive its event and according to it, will issue a POOL token that
// will record every ppaID. The owner of this Token will receive the payments farmers will do.
// This will be the pool of PPAs
async MintPPA(ctx,ppaID,date){cov_1pebg41whg.f[37]++;const genericID=(cov_1pebg41whg.s[321]++,await ctx.stub.getTxID());const ppaBytes=(cov_1pebg41whg.s[322]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[323]++;if((cov_1pebg41whg.b[52][0]++,!ppaBytes)||(cov_1pebg41whg.b[52][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[51][0]++;cov_1pebg41whg.s[324]++;throw new Error(`Error: no State related to key ${ppaID}`);}else{cov_1pebg41whg.b[51][1]++;}const ppa=(cov_1pebg41whg.s[325]++,JSON.parse(ppaBytes.toString()));const userID=(cov_1pebg41whg.s[326]++,await ctx.GetUserIdentity('cif'));cov_1pebg41whg.s[327]++;if(userID!==ppa.OwnerID){cov_1pebg41whg.b[53][0]++;cov_1pebg41whg.s[328]++;throw new Error(`Field ownerID does not match your user identity of the ecert`);}else{cov_1pebg41whg.b[53][1]++;}cov_1pebg41whg.s[329]++;if(!ppa.IsSigned){cov_1pebg41whg.b[54][0]++;cov_1pebg41whg.s[330]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[54][1]++;}cov_1pebg41whg.s[331]++;if(ppa.IsIssued){cov_1pebg41whg.b[55][0]++;cov_1pebg41whg.s[332]++;throw new Error(`This PPA is already inside the POOL`);}else{cov_1pebg41whg.b[55][1]++;}// Include PPA Key inside Pool of assets
let pool;let hasBeenCreated=(cov_1pebg41whg.s[333]++,await this._isPoolCreated(ctx));cov_1pebg41whg.s[334]++;if(hasBeenCreated===0){cov_1pebg41whg.b[56][0]++;cov_1pebg41whg.s[335]++;pool={poolID:'',ppaIDs:[],OwnerID:'',LastModificationOn:new Date(date),CouponPortion:1};cov_1pebg41whg.s[336]++;pool.OwnerID=ppa.OwnerID;cov_1pebg41whg.s[337]++;pool.ppaIDs.push(ppa.ppaID);cov_1pebg41whg.s[338]++;pool.poolID=await ctx.stub.createCompositeKey('POOL',[genericID]);//console.log(pool);
cov_1pebg41whg.s[339]++;await ctx.stub.putState(pool.poolID,Buffer.from(JSON.stringify(pool)));}else{cov_1pebg41whg.b[56][1]++;cov_1pebg41whg.s[340]++;pool=await this._getPoolStateByPartialCompositeKey(ctx,'POOL');//console.log(pool)
cov_1pebg41whg.s[341]++;pool.OwnerID=ppa.OwnerID;cov_1pebg41whg.s[342]++;pool.ppaIDs.push(ppa.ppaID);cov_1pebg41whg.s[343]++;ppa.LastModificationOn=new Date(date);cov_1pebg41whg.s[344]++;await ctx.stub.deleteState(pool.poolID);cov_1pebg41whg.s[345]++;pool.poolID=await ctx.stub.createCompositeKey('POOL',[genericID]);cov_1pebg41whg.s[346]++;await ctx.stub.putState(pool.poolID,Buffer.from(JSON.stringify(pool)));}let valueBuffer=(cov_1pebg41whg.s[347]++,Buffer.from(JSON.stringify(pool)));cov_1pebg41whg.s[348]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[349]++;await ctx.SetEventName('PPAtokenMinted');cov_1pebg41whg.s[350]++;return pool;}// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ---------------------------------------TODO-----------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
/**
     *
     * @param {Context} ctx
     * @param {string} argtype is the default types of maintenance services originator is
     *  able to provide
     */ // Farmer will execute this function in order to request one of the default maintenance services
// offered by Originator. She/He will record the date request was made, so originator must be listening
// to events of this type if no overexpenses are considered
async MaintenanceServiceRequest(ctx,ppaID,serviceMaintenanceType,date){cov_1pebg41whg.f[38]++;const maintenanceType=(cov_1pebg41whg.s[351]++,[{name:'service1',price:12},{name:'service2',price:12},{name:'service3',price:12}]);const userID=(cov_1pebg41whg.s[352]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[353]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[354]++;if((cov_1pebg41whg.b[58][0]++,!ppaBytes)||(cov_1pebg41whg.b[58][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[57][0]++;cov_1pebg41whg.s[355]++;throw new Error(`PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[57][1]++;}const ppa=(cov_1pebg41whg.s[356]++,JSON.parse(ppaBytes.toString()));// check ID of eCert and ID of PPA customer
cov_1pebg41whg.s[357]++;if(userID!==ppa.CustomerID){cov_1pebg41whg.b[59][0]++;cov_1pebg41whg.s[358]++;throw new Error(`Customer ID and User ID do not match`);}else{cov_1pebg41whg.b[59][1]++;}// We check if it has been signed
cov_1pebg41whg.s[359]++;if(!ppa.IsSigned){cov_1pebg41whg.b[60][0]++;cov_1pebg41whg.s[360]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[60][1]++;}cov_1pebg41whg.s[361]++;if(ppa.IsInDefault){cov_1pebg41whg.b[61][0]++;cov_1pebg41whg.s[362]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[61][1]++;}const solution=(cov_1pebg41whg.s[363]++,maintenanceType.find(service=>{cov_1pebg41whg.f[39]++;cov_1pebg41whg.s[364]++;return service.name===serviceMaintenanceType;}));// Prior input parameters verifications
cov_1pebg41whg.s[365]++;if(solution===undefined){cov_1pebg41whg.b[62][0]++;cov_1pebg41whg.s[366]++;throw new Error(`The ${serviceMaintenanceType} service is not available`);}else{cov_1pebg41whg.b[62][1]++;cov_1pebg41whg.s[367]++;ppa.MaintenanceServiceRequest=solution.name;cov_1pebg41whg.s[368]++;ppa.LastMaintenanceServiceOn=new Date(date);cov_1pebg41whg.s[369]++;ppa.ServiceRequestDate=new Date(date);}cov_1pebg41whg.s[370]++;ppa.LastModificationOn=new Date(date);cov_1pebg41whg.s[371]++;ppa.IsServiceMaintenanceOn=true;cov_1pebg41whg.s[372]++;ppa.LastModificationUserID=userID;// En golang los Bytes de la ID funcionan bien
const valueBuffer=(cov_1pebg41whg.s[373]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[374]++;await ctx.stub.putState(ppa.ppaID,valueBuffer);cov_1pebg41whg.s[375]++;await ctx.SetEventName('MaintenanceRequired');cov_1pebg41whg.s[376]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[377]++;return ppa;}// for simplicity we are not considering a symbiosys between oracles and blockchain
// networks (in this version), so we will introduce that real time parameters as a function
// which will be called beforeTransaction (or not). That parameters state will include current
// electricity price, current payment proportion between principal and coupon...
// async WriteCommonRealTimeParameters(ctx,currentElectricityPrice, paymentProportionAllocated,date){
//     // At the moment no identity verifications
//     // Who can commit this function????
//     // We are going to assign an easy-to-query key
//     const key='RealTimeParameters';
//     // Check if this doc already exists
//     const oldvalueBytes=await ctx.stub.getState(key);
//     let value;
//     if (!oldvalueBytes || oldvalueBytes.length === 0) {
//         value={
//             ID: key,
//             ElectricityPrice: currentElectricityPrice,
//             ProportionAllocated: paymentProportionAllocated,
//             LastModificationOn: new Date(date)
//         };
//         const valueBuffer = Buffer.from(JSON.stringify(value));
//         await ctx.stub.putState(key, valueBuffer);
//     }
//     value= JSON.parse(oldvalueBytes.toString());
//     value.key=key;
//     value.ElectricityPrice=currentElectricityPrice;
//     value.ProportionAllocated=paymentProportionAllocated;
//     value.LastModificationOn= new Date(date);
//     const valueBuffer= Buffer.from(JSON.stringify(value));
//     await ctx.stub.putState(key,valueBuffer);
// }
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// could this function be executed from .job file?
// Originator will execute this function monthly to update the PPA with data about energy
// consumption
async EnergyConsumptionPerPPA(ctx,ppaID,energyConsumption,date){cov_1pebg41whg.f[40]++;let ownerID=(cov_1pebg41whg.s[378]++,await ctx.GetUserIdentity('cif'));// retrieve PPA state
const ppaBytes=(cov_1pebg41whg.s[379]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[380]++;if((cov_1pebg41whg.b[64][0]++,!ppaBytes)||(cov_1pebg41whg.b[64][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[63][0]++;cov_1pebg41whg.s[381]++;throw new Error(`State with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[63][1]++;}let ppa=(cov_1pebg41whg.s[382]++,JSON.parse(ppaBytes.toString()));// check if owner of the PPA (originator) matches the client who executes this function
cov_1pebg41whg.s[383]++;if(ownerID!==ppa.OwnerID){cov_1pebg41whg.b[65][0]++;cov_1pebg41whg.s[384]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[65][1]++;}cov_1pebg41whg.s[385]++;if(!ppa.IsSigned){cov_1pebg41whg.b[66][0]++;cov_1pebg41whg.s[386]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[66][1]++;}const energy=(cov_1pebg41whg.s[387]++,parseFloat(energyConsumption));// update the date
cov_1pebg41whg.s[388]++;ppa.LastModificationOn=new Date(date);// these data will be reset once a year (once its size is equal to 12)
cov_1pebg41whg.s[389]++;if(ppa.EnergyConsumption.length===ppa.PaymentsFrequency){cov_1pebg41whg.b[67][0]++;cov_1pebg41whg.s[390]++;ppa.EnergyConsumption=[];}else{cov_1pebg41whg.b[67][1]++;}cov_1pebg41whg.s[391]++;if(!ppa.IsLastBillPaid){cov_1pebg41whg.b[68][0]++;cov_1pebg41whg.s[392]++;ppa.IsInDefault=true;}else{cov_1pebg41whg.b[68][1]++;cov_1pebg41whg.s[393]++;ppa.IsInDefault=false;}// append data
cov_1pebg41whg.s[394]++;ppa.EnergyConsumption.push(energy);cov_1pebg41whg.s[395]++;ppa.LastEnergyConsumption=energy;cov_1pebg41whg.s[396]++;ppa.LastModificationUserID=ownerID;cov_1pebg41whg.s[397]++;ppa.BillDate=ppa.LastModificationOn;cov_1pebg41whg.s[398]++;ppa.IsLastBillPaid=false;const ppaBuffer=(cov_1pebg41whg.s[399]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[400]++;await ctx.stub.putState(ppa.ppaID,ppaBuffer);cov_1pebg41whg.s[401]++;await ctx.SetEventName('BillDelivered');cov_1pebg41whg.s[402]++;await ctx.SetEventPayload(ppaBuffer);cov_1pebg41whg.s[403]++;return ppa;}// TODO: add non working days
// This auxiliary function serves to compute the time between two dates, including if there are
// non working days in between. It serves to pay bills, to maintenance service request and every function
// which involves a fixed period of time to be executed.
async _checkNonWorkingDays(currentDate,notificationDate){cov_1pebg41whg.f[41]++;const nonWorkingDay1=(cov_1pebg41whg.s[404]++,new Date(2022,0,1));const nonWorkingDay2=(cov_1pebg41whg.s[405]++,new Date(2021,11,25));const nonWorkingDay3=(cov_1pebg41whg.s[406]++,new Date(2022,4,1));const nonWorkingDays=(cov_1pebg41whg.s[407]++,[nonWorkingDay1,nonWorkingDay2,nonWorkingDay3]);const new_resultados=(cov_1pebg41whg.s[408]++,nonWorkingDays.filter(day=>{cov_1pebg41whg.f[42]++;cov_1pebg41whg.s[409]++;return(cov_1pebg41whg.b[69][0]++,day>=notificationDate)&&(cov_1pebg41whg.b[69][1]++,day<=currentDate);}));cov_1pebg41whg.s[410]++;return new_resultados.length;}// Once originator has issued a bill, farmer/irrigator must pay for the consumed energy in a
// certain period of time, otherwise farmer will be considered a defaulter
async MonthlyBillPayout(ctx,ppaID,tokenID,typeID,date){cov_1pebg41whg.f[43]++;// TODO: Igual es necerario que algun dato salga de algun oracle
// retrieve the state of the token
const userID=(cov_1pebg41whg.s[411]++,await ctx.GetUserIdentity('cif'));const compositeKey=(cov_1pebg41whg.s[412]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID,typeID]));const tokenBytes=(cov_1pebg41whg.s[413]++,await ctx.stub.getState(compositeKey));cov_1pebg41whg.s[414]++;if((cov_1pebg41whg.b[71][0]++,!tokenBytes)||(cov_1pebg41whg.b[71][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[70][0]++;cov_1pebg41whg.s[415]++;throw new Error(`Error token with ID ${compositeKey} does not exist`);}else{cov_1pebg41whg.b[70][1]++;}const token=(cov_1pebg41whg.s[416]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[417]++;if(!token.CanBeUsed){cov_1pebg41whg.b[72][0]++;cov_1pebg41whg.s[418]++;throw new Error(`Error, token with ID ${tokenID} is allocated to other services. Try to use another key or cancel whatever your token is allocated to`);}else{cov_1pebg41whg.b[72][1]++;}// Now we retrieve the PPA associated with userDNI
const valueBytes=(cov_1pebg41whg.s[419]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[420]++;if((cov_1pebg41whg.b[74][0]++,!valueBytes)||(cov_1pebg41whg.b[74][1]++,valueBytes.length===0)){cov_1pebg41whg.b[73][0]++;cov_1pebg41whg.s[421]++;throw new Error(`PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[73][1]++;}let value=(cov_1pebg41whg.s[422]++,JSON.parse(valueBytes.toString()));// Check if customer and user who send transaction proposal match
// Not compulsory, we have already checked this with the ppa proposal
cov_1pebg41whg.s[423]++;if(value.CustomerID!==userID){cov_1pebg41whg.b[75][0]++;cov_1pebg41whg.s[424]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[75][1]++;}cov_1pebg41whg.s[425]++;if(!value.IsSigned){cov_1pebg41whg.b[76][0]++;cov_1pebg41whg.s[426]++;throw new Error(`PPA with ID ${ppaID} has not been signed`);}else{cov_1pebg41whg.b[76][1]++;}// Check if there are non working days between these dates
const currentDate=(cov_1pebg41whg.s[427]++,new Date(date));const billDate=(cov_1pebg41whg.s[428]++,new Date(value.BillDate));const numberNonworkingDays=(cov_1pebg41whg.s[429]++,await this._checkNonWorkingDays(currentDate,billDate));const diff_days=(cov_1pebg41whg.s[430]++,(currentDate.getTime()-billDate.getTime())/(1000*3600*24));// TODO: not sure about this. If user wish to pay, should we accept later payments? better than nothing...
// check if current day is inside boudary dates
const limitDate=(cov_1pebg41whg.s[431]++,value.LimitDate+numberNonworkingDays);cov_1pebg41whg.s[432]++;if(diff_days>limitDate){cov_1pebg41whg.b[77][0]++;cov_1pebg41whg.s[433]++;throw new Error(`Try to pay on time`);}else{cov_1pebg41whg.b[77][1]++;}// These functions should be included in the PPA object
// Define functions to determine the price to pay for
const myFunctions=(cov_1pebg41whg.s[434]++,{firstMonthlyPayment:(par_UnitPrice,par_EnergyConsumption,par_MinimumMonthlyFee)=>{cov_1pebg41whg.f[44]++;const values=(cov_1pebg41whg.s[435]++,[par_UnitPrice*par_EnergyConsumption,par_MinimumMonthlyFee]);// const values=[PPA.UnitPrice*PPA.LastEnergyConsumption,PPA.MinimumMonthlyFee];
const resultado=(cov_1pebg41whg.s[436]++,Math.max(...values));cov_1pebg41whg.s[437]++;return resultado;},succesiveMonthlyPayments:(par_LastEnergyConsumption,par_UnitPrice,par_MinimumMonthlyFee,par_EnergyConsumption,par_FacturacionMensual)=>{cov_1pebg41whg.f[45]++;let total=(cov_1pebg41whg.s[438]++,par_FacturacionMensual.reduce(function(a,b){cov_1pebg41whg.f[46]++;cov_1pebg41whg.s[439]++;return a+b;}));const values=(cov_1pebg41whg.s[440]++,[par_LastEnergyConsumption*par_UnitPrice,Math.abs(par_MinimumMonthlyFee*par_EnergyConsumption.length-total)]);const resultado=(cov_1pebg41whg.s[441]++,Math.max(...values));cov_1pebg41whg.s[442]++;return resultado;}});cov_1pebg41whg.s[443]++;if(value.IsLastBillPaid){cov_1pebg41whg.b[78][0]++;cov_1pebg41whg.s[444]++;throw new Error(`You have already paid this bill`);}else{cov_1pebg41whg.b[78][1]++;}// depending on which period we stay, i.e depending on which size energyconsumption has, which
// is our History per year
let bill;cov_1pebg41whg.s[445]++;if(value.EnergyConsumption.length===1){cov_1pebg41whg.b[79][0]++;cov_1pebg41whg.s[446]++;bill=myFunctions.firstMonthlyPayment(value.UnitPrice,value.LastEnergyConsumption,value.MinimumMonthlyFee);}else{cov_1pebg41whg.b[79][1]++;cov_1pebg41whg.s[447]++;// }else if (value.EnergyConsumption.length!==0){
bill=myFunctions.succesiveMonthlyPayments(value.LastEnergyConsumption,value.UnitPrice,value.MinimumMonthlyFee,value.EnergyConsumption,value.FacturacionMensual);}let new_bill=(cov_1pebg41whg.s[448]++,bill.toFixed(2));// Now it is clear how much has the farmer to pay for, it is time to pay (send his/her tokens)
const myMoney=(cov_1pebg41whg.s[449]++,token.Amount);const balance=(cov_1pebg41whg.s[450]++,myMoney-parseInt(new_bill*100));cov_1pebg41whg.s[451]++;if(balance<0){cov_1pebg41whg.b[80][0]++;cov_1pebg41whg.s[452]++;throw new Error(`Please add more coins to your wallet, or pool them. Bill amounts to ${new_bill}`);}else{cov_1pebg41whg.b[80][1]++;}cov_1pebg41whg.s[453]++;value.FacturacionMensual.push(new_bill);cov_1pebg41whg.s[454]++;value.LastFacturacionMensual=new_bill;cov_1pebg41whg.s[455]++;value.LastModificationOn=currentDate;cov_1pebg41whg.s[456]++;value.LastModificationUserID=userID;cov_1pebg41whg.s[457]++;value.IsLastBillPaid=true;// retrieve PPA Pool state in order to allocate tokens to pool owner or to ppa Owner if ppa
// is not inside pool
let[isInside,owner]=(cov_1pebg41whg.s[458]++,await this._isPPAinPool(ctx,value.ppaID));cov_1pebg41whg.s[459]++;if((cov_1pebg41whg.b[82][0]++,!owner)||(cov_1pebg41whg.b[82][1]++,!isInside)){cov_1pebg41whg.b[81][0]++;cov_1pebg41whg.s[460]++;// bill paid to PPA Owner
owner=value.OwnerID;}else{cov_1pebg41whg.b[81][1]++;}let ret;let couponPortion=(cov_1pebg41whg.s[461]++,await this._getCouponProportion(ctx,'POOL'));// Igual asi es mejor 
// if(isInside){
// }else{
// }
// el caso de que no este dentro de la Pool no existiria usando este statement
cov_1pebg41whg.s[462]++;if(couponPortion===1){cov_1pebg41whg.b[83][0]++;cov_1pebg41whg.s[463]++;ret=await this._TransferMoney(ctx,token.ID,new_bill,owner,userID);}else{cov_1pebg41whg.b[83][1]++;cov_1pebg41whg.s[464]++;// else we must allocate p*Bill tokens to Coupon Payments which will be CanBeUsed=true Tokens
// and 1-p tokens to Principal payment which will be CanBeUsed=false Tokens
ret=await this._TransferMoneyToCouponAndPrincipal(ctx,token.ID,new_bill,couponPortion,owner,userID);}// let CouponPortion=await this._isCouponPortion
// if()
// TODO
// tranfer to tokens' owner
// let ret=await this._TransferMoney(ctx,token.ID,new_bill,owner,userID)
cov_1pebg41whg.s[465]++;await ctx.stub.putState(value.ppaID,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[466]++;return ret;}// As a simplicity we will assume that each user will use just one token ID to pay the bill. If a
// user has some IDs that putting together reach the desirable value, the user will
// pool his tokens, otherwise he/she will not commit the tx
/**
     *
     * @param {*} ctx
     * @param {*} tokenID
     * @param {*} amount
     * @param {*} receiverID
     */ // Auxiliary function to transfer the money farmers pay.
async _TransferMoney(ctx,tokenID,amount,receiverID,userID){cov_1pebg41whg.f[47]++;// No prior verifications needed, because they have been checked in main function, which is
// MonthlyPayout
const tokenBytes=(cov_1pebg41whg.s[467]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[468]++;if((cov_1pebg41whg.b[85][0]++,!tokenBytes)||(cov_1pebg41whg.b[85][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[84][0]++;cov_1pebg41whg.s[469]++;throw new Error(`Error: no token associated with ID ${tokenID}`);}else{cov_1pebg41whg.b[84][1]++;}const token=(cov_1pebg41whg.s[470]++,JSON.parse(tokenBytes.toString()));const balance=(cov_1pebg41whg.s[471]++,token.Amount-amount);const issuer=(cov_1pebg41whg.s[472]++,ctx.clientIdentity.getID());const genericID=(cov_1pebg41whg.s[473]++,await ctx.stub.getTxID());let typeID;const key1=(cov_1pebg41whg.s[474]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[475]++,await ctx.stub.createCompositeKey('securitizationCoin',[receiverID,genericID]));cov_1pebg41whg.s[476]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[477]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:issuer,Amount:balance,Factor:100,CanBeUsed:true});cov_1pebg41whg.s[478]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[479]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:amount,CanBeUsed:true});let utxos=(cov_1pebg41whg.s[480]++,[]);cov_1pebg41whg.s[481]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[482]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[483]++;if(balance!==0){cov_1pebg41whg.b[86][0]++;cov_1pebg41whg.s[484]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));cov_1pebg41whg.s[485]++;utxos=[utxo1,utxo2];cov_1pebg41whg.s[486]++;return utxos;}else{cov_1pebg41whg.b[86][1]++;cov_1pebg41whg.s[487]++;utxos=[utxo2];cov_1pebg41whg.s[488]++;return utxos;}}async _TransferMoneyToCouponAndPrincipal(ctx,tokenID,amount,couponPortion,receiverID,userID){cov_1pebg41whg.f[48]++;// No prior verifications needed, because they have been checked in main function, which is
// MonthlyPayout
const tokenBytes=(cov_1pebg41whg.s[489]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[490]++;if((cov_1pebg41whg.b[88][0]++,!tokenBytes)||(cov_1pebg41whg.b[88][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[87][0]++;cov_1pebg41whg.s[491]++;throw new Error(`Error: no token associated with ID ${tokenID}`);}else{cov_1pebg41whg.b[87][1]++;}const token=(cov_1pebg41whg.s[492]++,JSON.parse(tokenBytes.toString()));const balance=(cov_1pebg41whg.s[493]++,token.Amount-amount);//console.log('balance')
//console.log(balance)
const issuer=(cov_1pebg41whg.s[494]++,ctx.clientIdentity.getID());const genericID=(cov_1pebg41whg.s[495]++,await ctx.stub.getTxID());let typeID;const key1=(cov_1pebg41whg.s[496]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[497]++,await ctx.stub.createCompositeKey('securitizationCoin',[receiverID,genericID]));cov_1pebg41whg.s[498]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[499]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:issuer,Amount:balance,Factor:100,CanBeUsed:true});// this utxo2 will be allocated to Coupon
cov_1pebg41whg.s[500]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[501]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:couponPortion*amount,CanBeUsed:true});cov_1pebg41whg.s[502]++;typeID=':2';const utxo3=(cov_1pebg41whg.s[503]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:(1-couponPortion)*amount,CanBeUsed:false});let utxos=(cov_1pebg41whg.s[504]++,[]);cov_1pebg41whg.s[505]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[506]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[507]++;await ctx.stub.putState(utxo3.ID,Buffer.from(JSON.stringify(utxo3)));cov_1pebg41whg.s[508]++;if(balance!==0){cov_1pebg41whg.b[89][0]++;cov_1pebg41whg.s[509]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));cov_1pebg41whg.s[510]++;utxos=[utxo1,utxo2,utxo3];cov_1pebg41whg.s[511]++;return utxos;}else{cov_1pebg41whg.b[89][1]++;cov_1pebg41whg.s[512]++;utxos=[utxo2,utxo3];cov_1pebg41whg.s[513]++;return utxos;}}// // TODO: Who can execute this function??
// /**
//  *
//  * @param {*} ctx
//  * @param {*} userID
//  * @param {*} date
//  */
// // Each period, originator will check how are performing the PPAs he has offered. This will update
// // if some irrigator is a defaulter or not.
// async MonthlyPerformance(ctx, ppaID,date){
//     const ppaBytes=await ctx.stub.getState(ppaID);
//     if (!ppaBytes || ppaBytes.length === 0){
//         throw new Error(`This PPA ID ${ppaID} does not exist`);
//     }
//     let ppa=JSON.parse(ppaBytes.toString())
//     // Now we check its performance and update PPA according to elapsed time between current date
//     // and payment date or other dates
//     const currentlyDate=new Date(DATE)
//     // Were bills paid on time?
//     // Check difference between dates
//     // TODO: the rest of verifications
//     // ppa.LastModificationOn=date;
//     // ppa.LastModificationUserID=userID;
//     const ppaBuffer= Buffer.from(JSON.stringify(ppa));
//     await ctx.stub.putState(ppa.ppaID,ppaBuffer)
// }
// TODO:
// change userID -> ppaID
}// This is another contract which defines a new bussiness: the acquisition of PPA Tokens,
// valuation of the pool on-chain and  transference of the bonds
class bondIssuanceContract extends Contract{constructor(){cov_1pebg41whg.f[49]++;cov_1pebg41whg.s[514]++;super('bonds.securitization.com');}createContext(){cov_1pebg41whg.f[50]++;cov_1pebg41whg.s[515]++;return new securitizationContext();}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[51]++;const iterator=(cov_1pebg41whg.s[516]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[517]++,0);let results;cov_1pebg41whg.s[518]++;for await(const res of iterator){cov_1pebg41whg.s[519]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[520]++;counter=counter+1;}cov_1pebg41whg.s[521]++;if(counter>1){cov_1pebg41whg.b[90][0]++;cov_1pebg41whg.s[522]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[90][1]++;cov_1pebg41whg.s[523]++;if(counter===0){cov_1pebg41whg.b[91][0]++;cov_1pebg41whg.s[524]++;return true;}else{cov_1pebg41whg.b[91][1]++;}}cov_1pebg41whg.s[525]++;return results;}// Prior verifications included in beforeTransaction logic
async beforeTransaction(ctx){cov_1pebg41whg.f[52]++;let userMSPID=(cov_1pebg41whg.s[526]++,ctx.GetMSPID());cov_1pebg41whg.s[527]++;if((cov_1pebg41whg.b[93][0]++,userMSPID!=='originatorMSP')&&(cov_1pebg41whg.b[93][1]++,userMSPID!=='spvMSP')&&(cov_1pebg41whg.b[93][2]++,userMSPID!=='ratingagencyMSP')){cov_1pebg41whg.b[92][0]++;cov_1pebg41whg.s[528]++;throw new Error(`Your organization ${userMSPID} is not allowed to perform this action`);}else{cov_1pebg41whg.b[92][1]++;}let isClient=(cov_1pebg41whg.s[529]++,await ctx.GetRole());cov_1pebg41whg.s[530]++;if(!isClient){cov_1pebg41whg.b[94][0]++;cov_1pebg41whg.s[531]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[94][1]++;}cov_1pebg41whg.s[532]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[533]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[534]++,par.fcn);let params=(cov_1pebg41whg.s[535]++,par.params);cov_1pebg41whg.s[536]++;for(let i=(cov_1pebg41whg.s[537]++,0);i<params.length;i++){cov_1pebg41whg.s[538]++;if(params[i]===''){cov_1pebg41whg.b[95][0]++;cov_1pebg41whg.s[539]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[95][1]++;}}cov_1pebg41whg.s[540]++;switch(func){case'BuyRequest':cov_1pebg41whg.b[96][0]++;cov_1pebg41whg.s[541]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[97][0]++;cov_1pebg41whg.s[542]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[97][1]++;cov_1pebg41whg.s[543]++;return;}case'SellRequest':cov_1pebg41whg.b[96][1]++;cov_1pebg41whg.s[544]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[98][0]++;cov_1pebg41whg.s[545]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[98][1]++;cov_1pebg41whg.s[546]++;return;}case'SignRequestOriginator':cov_1pebg41whg.b[96][2]++;cov_1pebg41whg.s[547]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[99][0]++;cov_1pebg41whg.s[548]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[99][1]++;cov_1pebg41whg.s[549]++;return;}case'SignRequestSPV':cov_1pebg41whg.b[96][3]++;cov_1pebg41whg.s[550]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[100][0]++;cov_1pebg41whg.s[551]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[100][1]++;cov_1pebg41whg.s[552]++;return;}case'Rating':cov_1pebg41whg.b[96][4]++;cov_1pebg41whg.s[553]++;if(ctx.mspid!=='ratingagencyMSP'){cov_1pebg41whg.b[101][0]++;cov_1pebg41whg.s[554]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[101][1]++;cov_1pebg41whg.s[555]++;return;}case'IssueBond':cov_1pebg41whg.b[96][5]++;cov_1pebg41whg.s[556]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[102][0]++;cov_1pebg41whg.s[557]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[102][1]++;cov_1pebg41whg.s[558]++;return;}case'QueryPool':cov_1pebg41whg.b[96][6]++;cov_1pebg41whg.s[559]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[103][0]++;cov_1pebg41whg.s[560]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[103][1]++;cov_1pebg41whg.s[561]++;return;}case'QuerySellRequest':cov_1pebg41whg.b[96][7]++;cov_1pebg41whg.s[562]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[104][0]++;cov_1pebg41whg.s[563]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[104][1]++;cov_1pebg41whg.s[564]++;return;}case'QueryBuyRequest':cov_1pebg41whg.b[96][8]++;cov_1pebg41whg.s[565]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[105][0]++;cov_1pebg41whg.s[566]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[105][1]++;cov_1pebg41whg.s[567]++;return;}}}async afterTransaction(ctx){cov_1pebg41whg.f[53]++;let event=(cov_1pebg41whg.s[568]++,await ctx.GetEventPayload());cov_1pebg41whg.s[569]++;return event;}/**
     *
     * @param {*} ctx
     * @returns the size of the pool
     */async _isPoolCreated(ctx,poolName){cov_1pebg41whg.f[54]++;const iterator=(cov_1pebg41whg.s[570]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let results=(cov_1pebg41whg.s[571]++,[]);cov_1pebg41whg.s[572]++;for await(const res of iterator){cov_1pebg41whg.s[573]++;// push key instead of value json
results.push(res.key);}cov_1pebg41whg.s[574]++;if(results.length===0){cov_1pebg41whg.b[106][0]++;cov_1pebg41whg.s[575]++;return false;}else{cov_1pebg41whg.b[106][1]++;cov_1pebg41whg.s[576]++;if(results.length===1){cov_1pebg41whg.b[107][0]++;cov_1pebg41whg.s[577]++;return true;}else{cov_1pebg41whg.b[107][1]++;cov_1pebg41whg.s[578]++;throw new Error(`State not unique`);}}}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @returns the state associated with that partial key
     */ // This auxiliary function will only work with those states expected to be unique (POOL, REALTIMEPARAMETERS, RATING...)
async _getPoolStateByPartialCompositeKey(ctx,docTypeName){cov_1pebg41whg.f[55]++;const iterator=(cov_1pebg41whg.s[579]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[]));let counter=(cov_1pebg41whg.s[580]++,0);let results;let isCreated;let res=(cov_1pebg41whg.s[581]++,[]);cov_1pebg41whg.s[582]++;for await(const res of iterator){cov_1pebg41whg.s[583]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[584]++;counter=counter+1;}//console.log(`counter: ${counter}`)
cov_1pebg41whg.s[585]++;if(counter===1){cov_1pebg41whg.b[108][0]++;cov_1pebg41whg.s[586]++;isCreated=true;cov_1pebg41whg.s[587]++;res.push(isCreated);cov_1pebg41whg.s[588]++;res.push(results);cov_1pebg41whg.s[589]++;return res;}else{cov_1pebg41whg.b[108][1]++;cov_1pebg41whg.s[590]++;if(counter===0){cov_1pebg41whg.b[109][0]++;cov_1pebg41whg.s[591]++;isCreated=false;cov_1pebg41whg.s[592]++;res.push(isCreated);cov_1pebg41whg.s[593]++;return res;}else{cov_1pebg41whg.b[109][1]++;cov_1pebg41whg.s[594]++;throw new Error('This state-value pair is not unique');}}}async QueryPool(ctx,poolName){cov_1pebg41whg.f[56]++;let pool=(cov_1pebg41whg.s[595]++,await this._getPoolStateByPartialCompositeKey(ctx,poolName));cov_1pebg41whg.s[596]++;if((cov_1pebg41whg.b[111][0]++,!pool[0])&&(cov_1pebg41whg.b[111][1]++,pool.length===1)){cov_1pebg41whg.b[110][0]++;cov_1pebg41whg.s[597]++;throw new Error(`There is no Pool linked to name ${poolName}`);}else{cov_1pebg41whg.b[110][1]++;}cov_1pebg41whg.s[598]++;return pool[1];}/**
     *
     * @param {*} ctx
     * @param {*} amount
     * @param {*} price
     * @param {*} toIdentity
     */ // SPV will want to buy the pool of assets that originator owns, but firstly she/he needs
// to submit a request to buy it.
async BuyRequest(ctx,amount,price){cov_1pebg41whg.f[57]++;// TODO: originator must achieve a certain pool size to sell??
//       what if actual pool size is greater than spv wants
// if (await this._isPoolCreated(ctx,poolName)===false){
//     throw new Error(`Pool still not created`)
// }
const userID=(cov_1pebg41whg.s[599]++,await ctx.GetUserIdentity('cif'));const genericID=(cov_1pebg41whg.s[600]++,await ctx.stub.getTxID());const requestID=(cov_1pebg41whg.s[601]++,await ctx.stub.createCompositeKey('BuyRequest',[userID,genericID]));let value=(cov_1pebg41whg.s[602]++,{ID:requestID,Owner:userID,Receiver:'',Amount:parseInt(amount),Price:parseInt(parseFloat(price)*100),IsSigned:false,Factor:100});const valueBuffer=(cov_1pebg41whg.s[603]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[604]++;await ctx.stub.putState(requestID,valueBuffer);cov_1pebg41whg.s[605]++;await ctx.SetEventName('BuyRequestIssued');cov_1pebg41whg.s[606]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[607]++;return value;}async QueryBuyRequest(ctx){cov_1pebg41whg.f[58]++;let iterator=(cov_1pebg41whg.s[608]++,await ctx.stub.getStateByPartialCompositeKey('BuyRequest'));let results=(cov_1pebg41whg.s[609]++,[]);cov_1pebg41whg.s[610]++;for await(const res of iterator){cov_1pebg41whg.s[611]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[612]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} price
     * @param {*} toIdentity
     */ // Originator submits a sell request to SPV
async SellRequest(ctx,price,poolID){cov_1pebg41whg.f[59]++;const userID=(cov_1pebg41whg.s[613]++,await ctx.GetUserIdentity('cif'));const genericID=(cov_1pebg41whg.s[614]++,await ctx.stub.getTxID());const requestID=(cov_1pebg41whg.s[615]++,await ctx.stub.createCompositeKey('SellRequest',[userID,genericID]));let value=(cov_1pebg41whg.s[616]++,{ID:requestID,Owner:userID,Receiver:'',Price:parseInt(parseFloat(price)*100),Factor:100,IsSigned:false,BackedBy:poolID});const valueBuffer=(cov_1pebg41whg.s[617]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[618]++;await ctx.stub.putState(requestID,valueBuffer);cov_1pebg41whg.s[619]++;await ctx.SetEventName('SellRequestIssued');cov_1pebg41whg.s[620]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[621]++;return value;}async QuerySellRequest(ctx){cov_1pebg41whg.f[60]++;let iterator=(cov_1pebg41whg.s[622]++,await ctx.stub.getStateByPartialCompositeKey('SellRequest'));let results=(cov_1pebg41whg.s[623]++,[]);cov_1pebg41whg.s[624]++;for await(const res of iterator){cov_1pebg41whg.s[625]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[626]++;return results;}async QueryFullRequest(ctx){cov_1pebg41whg.f[61]++;let iterator=(cov_1pebg41whg.s[627]++,await ctx.stub.getStateByPartialCompositeKey('FullRequest'));let results=(cov_1pebg41whg.s[628]++,[]);cov_1pebg41whg.s[629]++;for await(const res of iterator){cov_1pebg41whg.s[630]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[631]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} type
     * @param {*} toIdentity  in real case toIdentity is an attribute linked to certificate
     */ // cash owner must sign first
// SPV accepts request. Check if she/he has enough funds
async SignRequestSPV(ctx,tokenID,typeID,buyRequestID,sellRequestID,sellRequestPrice,sellRequestBackedBy,sellRequestOwner){cov_1pebg41whg.f[62]++;const userID=(cov_1pebg41whg.s[632]++,await ctx.GetUserIdentity('cif'));const buyRequestBytes=(cov_1pebg41whg.s[633]++,await ctx.stub.getState(buyRequestID));cov_1pebg41whg.s[634]++;if((cov_1pebg41whg.b[113][0]++,!buyRequestBytes)||(cov_1pebg41whg.b[113][1]++,buyRequestBytes.length===0)){cov_1pebg41whg.b[112][0]++;cov_1pebg41whg.s[635]++;throw new Error(`Buy request linked to ID ${buyRequestID} does not exist`);}else{cov_1pebg41whg.b[112][1]++;}const buyRequest=(cov_1pebg41whg.s[636]++,JSON.parse(buyRequestBytes.toString()));// Check if this request has been already signed
cov_1pebg41whg.s[637]++;if(buyRequest.IsSigned){cov_1pebg41whg.b[114][0]++;cov_1pebg41whg.s[638]++;throw new Error(`Request has been already signed. Not allowed to perform this action`);}else{cov_1pebg41whg.b[114][1]++;}// As cash owner will signs the request, we must be sure that he is the owner of that amount
// and maybe we should block his/her funds
// I dont think this could be necessary because in the DvP we will execute both actions, and
// if one of them does not succeed, noone will succeed.
// In order to not create false requests we are going to freeze tokens
const token_ID=(cov_1pebg41whg.s[639]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));const tokenBytes=(cov_1pebg41whg.s[640]++,await ctx.stub.getState(token_ID+typeID));cov_1pebg41whg.s[641]++;if((cov_1pebg41whg.b[116][0]++,!tokenBytes)||(cov_1pebg41whg.b[116][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[115][0]++;cov_1pebg41whg.s[642]++;throw new Error(`Error, Token with ID ${tokenID+typeID} does not exist`);}else{cov_1pebg41whg.b[115][1]++;}const myFunds=(cov_1pebg41whg.s[643]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[644]++;if(!myFunds.CanBeUsed){cov_1pebg41whg.b[117][0]++;cov_1pebg41whg.s[645]++;throw new Error(`Your token has been already used`);}else{cov_1pebg41whg.b[117][1]++;}// Check our funds
cov_1pebg41whg.s[646]++;if(buyRequest.Price>myFunds.Amount){cov_1pebg41whg.b[118][0]++;cov_1pebg41whg.s[647]++;throw new Error(`Your token has not enough funds. Try to pool your token or ask for mint`);}else{cov_1pebg41whg.b[118][1]++;}// If we have enough funds, then we can sign the request
cov_1pebg41whg.s[648]++;buyRequest.IsSigned=true;// Retrieve sell request
const sellRequestBytes=(cov_1pebg41whg.s[649]++,await ctx.stub.getState(sellRequestID));cov_1pebg41whg.s[650]++;if((cov_1pebg41whg.b[120][0]++,!sellRequestBytes)||(cov_1pebg41whg.b[120][1]++,sellRequestBytes.length===0)){cov_1pebg41whg.b[119][0]++;cov_1pebg41whg.s[651]++;throw new Error(`Sell Request does not exist or have been removed`);}else{cov_1pebg41whg.b[119][1]++;}let sellRequest=(cov_1pebg41whg.s[652]++,JSON.parse(sellRequestBytes.toString()));cov_1pebg41whg.s[653]++;if((cov_1pebg41whg.b[122][0]++,sellRequest.Price!==parseInt(sellRequestPrice))||(cov_1pebg41whg.b[122][1]++,sellRequest.BackedBy!==sellRequestBackedBy)||(cov_1pebg41whg.b[122][2]++,sellRequest.Owner!==sellRequestOwner)){cov_1pebg41whg.b[121][0]++;cov_1pebg41whg.s[654]++;throw new Error(`Sell Request has been modified`);}else{cov_1pebg41whg.b[121][1]++;}cov_1pebg41whg.s[655]++;buyRequest.Receiver=sellRequestOwner;let txid=(cov_1pebg41whg.s[656]++,await ctx.stub.getTxID());const n_value=(cov_1pebg41whg.s[657]++,{ID:'Request'+txid,buyRequest:buyRequest,sellRequest:sellRequest,TokenID:token_ID+typeID});const n_valueID=(cov_1pebg41whg.s[658]++,'Request'+txid);const valueBuffer=(cov_1pebg41whg.s[659]++,Buffer.from(JSON.stringify(n_value)));cov_1pebg41whg.s[660]++;await ctx.stub.putState(n_valueID,valueBuffer);cov_1pebg41whg.s[661]++;await ctx.stub.deleteState(sellRequest.ID);cov_1pebg41whg.s[662]++;await ctx.stub.deleteState(buyRequest.ID);cov_1pebg41whg.s[663]++;await ctx.SetEventName('SignSellRequest');cov_1pebg41whg.s[664]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[665]++;return n_valueID;}async _dvp(ctx,tokenID,securityID,tokensToTransfer){cov_1pebg41whg.f[63]++;const tokenBytes=(cov_1pebg41whg.s[666]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[667]++;if((cov_1pebg41whg.b[124][0]++,!tokenBytes)||(cov_1pebg41whg.b[124][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[123][0]++;cov_1pebg41whg.s[668]++;throw new Error(`Error, Token state according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[123][1]++;}const token=(cov_1pebg41whg.s[669]++,JSON.parse(tokenBytes.toString()));const securityBytes=(cov_1pebg41whg.s[670]++,await ctx.stub.getState(securityID));cov_1pebg41whg.s[671]++;if((cov_1pebg41whg.b[126][0]++,!securityBytes)||(cov_1pebg41whg.b[126][1]++,securityBytes.length===0)){cov_1pebg41whg.b[125][0]++;cov_1pebg41whg.s[672]++;throw new Error(`Error, Pool state according to key ${securityID} does not exist`);}else{cov_1pebg41whg.b[125][1]++;}const security=(cov_1pebg41whg.s[673]++,JSON.parse(securityBytes.toString()));cov_1pebg41whg.s[674]++;if((cov_1pebg41whg.b[128][0]++,!security.CanBeUsed)||(cov_1pebg41whg.b[128][1]++,!token.CanBeUsed)){cov_1pebg41whg.b[127][0]++;cov_1pebg41whg.s[675]++;throw new Error(`Token and/or security have been already used`);}else{cov_1pebg41whg.b[127][1]++;}const genericID=(cov_1pebg41whg.s[676]++,await ctx.stub.getTxID());// 'user' seria el que recibe el token/bono
const key1=(cov_1pebg41whg.s[677]++,await ctx.stub.createCompositeKey('securitizationCoin',[token.Owner,genericID]));const key2=(cov_1pebg41whg.s[678]++,await ctx.stub.createCompositeKey('securitizationCoin',[security.Owner,genericID]));const securityKey1=(cov_1pebg41whg.s[679]++,await ctx.stub.createCompositeKey('POOL',[token.Owner,genericID]));const balanceTokens=(cov_1pebg41whg.s[680]++,token.Amount-tokensToTransfer);let utxo1;let utxo2;let typeID;cov_1pebg41whg.s[681]++;typeID=':1';cov_1pebg41whg.s[682]++;utxo1={ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balanceTokens,Factor:100,CanBeUsed:true};cov_1pebg41whg.s[683]++;typeID=':0';cov_1pebg41whg.s[684]++;utxo2={ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:security.Owner,Issuer:token.Issuer,Amount:tokensToTransfer,CanBeUsed:true};cov_1pebg41whg.s[685]++;security.poolID=securityKey1;cov_1pebg41whg.s[686]++;security.Owner=token.Owner;cov_1pebg41whg.s[687]++;await ctx.stub.deleteState(tokenID);cov_1pebg41whg.s[688]++;await ctx.stub.deleteState(securityID);cov_1pebg41whg.s[689]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[690]++;await ctx.stub.putState(security.poolID,Buffer.from(JSON.stringify(security)));cov_1pebg41whg.s[691]++;if(balanceTokens!=0){cov_1pebg41whg.b[129][0]++;cov_1pebg41whg.s[692]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_1pebg41whg.b[129][1]++;}}/**
     *
     * @param {*} ctx
     * @param {*} tokenid
     */ // securities owner must sign afterwards
// originator accepts request: enough securities
async SignRequestOriginator(ctx,poolName,poolID,fullRequestID,buyRequestIdentity,buyRequestAmount,buyRequestPrice){cov_1pebg41whg.f[64]++;const userID=(cov_1pebg41whg.s[693]++,await ctx.GetUserIdentity('cif'));const valueBytes=(cov_1pebg41whg.s[694]++,await ctx.stub.getState(fullRequestID));cov_1pebg41whg.s[695]++;if((cov_1pebg41whg.b[131][0]++,!valueBytes)||(cov_1pebg41whg.b[131][1]++,valueBytes.length===0)){cov_1pebg41whg.b[130][0]++;cov_1pebg41whg.s[696]++;throw new Error(`Request State does not exist`);}else{cov_1pebg41whg.b[130][1]++;}const value=(cov_1pebg41whg.s[697]++,JSON.parse(valueBytes.toString()));// Originator in order to sign this request must provide an own PPA pool
const tokenID=(cov_1pebg41whg.s[698]++,await ctx.stub.createCompositeKey(poolName,[poolID]));const poolBytes=(cov_1pebg41whg.s[699]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[700]++;if((cov_1pebg41whg.b[133][0]++,!poolBytes)||(cov_1pebg41whg.b[133][1]++,poolBytes.length===0)){cov_1pebg41whg.b[132][0]++;cov_1pebg41whg.s[701]++;throw new Error(`Error, Pool State does not exist according to the key provided`);}else{cov_1pebg41whg.b[132][1]++;}//console.log(value.buyRequest.Receiver);
cov_1pebg41whg.s[702]++;if(userID!==value.buyRequest.Receiver){cov_1pebg41whg.b[134][0]++;cov_1pebg41whg.s[703]++;//console.log('dentro if1')
throw new Error('You are not allowed to perform this action');}else{cov_1pebg41whg.b[134][1]++;}const pool=(cov_1pebg41whg.s[704]++,JSON.parse(poolBytes.toString()));cov_1pebg41whg.s[705]++;if(pool.Owner!==userID){cov_1pebg41whg.b[135][0]++;cov_1pebg41whg.s[706]++;//console.log('dentro if2')
throw new Error(`User ID ${userID} does not match Pool Owner`);}else{cov_1pebg41whg.b[135][1]++;}cov_1pebg41whg.s[707]++;if(pool.ppaIDs.length!==value.buyRequest.Amount){cov_1pebg41whg.b[136][0]++;cov_1pebg41whg.s[708]++;throw new Error(`Size of Pool and size of Buy Request do not match`);}else{cov_1pebg41whg.b[136][1]++;}cov_1pebg41whg.s[709]++;value.sellRequest.IsSigned=true;cov_1pebg41whg.s[710]++;if((cov_1pebg41whg.b[138][0]++,parseInt(buyRequestPrice)!==value.buyRequest.Price)||(cov_1pebg41whg.b[138][1]++,parseInt(buyRequestAmount)!==value.buyRequest.Amount)||(cov_1pebg41whg.b[138][2]++,buyRequestIdentity!==value.buyRequest.Owner)){cov_1pebg41whg.b[137][0]++;cov_1pebg41whg.s[711]++;throw new Error('Some args of Full Request have been modified');}else{cov_1pebg41whg.b[137][1]++;}// DvP is triggered
cov_1pebg41whg.s[712]++;await this._dvp(ctx,value.TokenID,pool.poolID,value.buyRequest.Price);//console.log('hasta aqui')
cov_1pebg41whg.s[713]++;await ctx.stub.deleteState(fullRequestID);}// TODO
// Once SPV has acquired the Pool of PPAs, rating agency will assess PPA assets in order to
// issue securities backed by the Pool.
async Rating(ctx,poolID){cov_1pebg41whg.f[65]++;const userID=(cov_1pebg41whg.s[714]++,await ctx.GetUserIdentity('cif'));const poolBytes=(cov_1pebg41whg.s[715]++,await ctx.stub.getState(poolID));cov_1pebg41whg.s[716]++;if((cov_1pebg41whg.b[140][0]++,!poolBytes)||(cov_1pebg41whg.b[140][1]++,poolBytes.length===0)){cov_1pebg41whg.b[139][0]++;cov_1pebg41whg.s[717]++;throw new Error(`Pool does not exist, not possible to attach a rating`);}else{cov_1pebg41whg.b[139][1]++;}const key=(cov_1pebg41whg.s[718]++,await ctx.stub.createCompositeKey('Rating',[poolID]));const value=(cov_1pebg41whg.s[719]++,{ID:key,BackedBy:poolID,Owner:userID,RatingArgs:""});const valueBuffer=(cov_1pebg41whg.s[720]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[721]++;await ctx.stub.putState(key,valueBuffer);cov_1pebg41whg.s[722]++;return value;}//check if spv owns every ppa
async IssueBond(ctx,ratingID,p){cov_1pebg41whg.f[66]++;const userID=(cov_1pebg41whg.s[723]++,await ctx.GetUserIdentity('cif'));// We retrieve data from rating
const ratingBytes=(cov_1pebg41whg.s[724]++,await ctx.stub.getState(ratingID));cov_1pebg41whg.s[725]++;if((cov_1pebg41whg.b[142][0]++,!ratingBytes)||(cov_1pebg41whg.b[142][1]++,ratingBytes.length===0)){cov_1pebg41whg.b[141][0]++;cov_1pebg41whg.s[726]++;throw new Error(`Rating still not delivered`);}else{cov_1pebg41whg.b[141][1]++;}const rating=(cov_1pebg41whg.s[727]++,JSON.parse(ratingBytes.toString()));const poolID=(cov_1pebg41whg.s[728]++,rating.BackedBy);const poolBytes=(cov_1pebg41whg.s[729]++,await ctx.stub.getState(poolID));cov_1pebg41whg.s[730]++;if((cov_1pebg41whg.b[144][0]++,!poolBytes)||(cov_1pebg41whg.b[144][1]++,poolBytes.length===0)){cov_1pebg41whg.b[143][0]++;cov_1pebg41whg.s[731]++;throw new Error(`Error, Pool State does not match Pool ID provided`);}else{cov_1pebg41whg.b[143][1]++;}const pool=(cov_1pebg41whg.s[732]++,JSON.parse(poolBytes.toString()));cov_1pebg41whg.s[733]++;if(pool.Owner!==userID){cov_1pebg41whg.b[145][0]++;cov_1pebg41whg.s[734]++;throw new Error(`User ID ${userID} does not own Pool`);}else{cov_1pebg41whg.b[145][1]++;}// Rating State will provide some attributes bons must have.
const genericID=(cov_1pebg41whg.s[735]++,await ctx.stub.getTxID());const key=(cov_1pebg41whg.s[736]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));const new_pool=(cov_1pebg41whg.s[737]++,{ppaIDs:pool.ppaIDs,Owner:pool.Owner,ID:pool.Name+genericID,Name:pool.Name,CouponPortion:p});const typeID=(cov_1pebg41whg.s[738]++,':0');const bondID=(cov_1pebg41whg.s[739]++,key+typeID);// TODO: every time there is an attribute namely Issuer, should it be
// ctx.clientIdentity.getID() or ctx.clientIdentity.getIDBytes();
const bondToken=(cov_1pebg41whg.s[740]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:"",CouponRate:"",MaturityDate:"",Issuer:userID,Owner:userID,Pool:"",AmountPaid:"",OriginalValue:"",MonthlyPayout:"",RemainingPayments:"",Amount:100000,CanBeUsed:true});let valueBuffer=(cov_1pebg41whg.s[741]++,Buffer.from(JSON.stringify(bondToken)));cov_1pebg41whg.s[742]++;await ctx.stub.putState(bondID,valueBuffer);cov_1pebg41whg.s[743]++;await ctx.stub.deleteState(pool.ID);cov_1pebg41whg.s[744]++;await ctx.stub.putState(new_pool.ID,Buffer.from(JSON.stringify(new_pool)));cov_1pebg41whg.s[745]++;await ctx.SetEventName('BondsIssuance');cov_1pebg41whg.s[746]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[747]++;return bondToken.ID;}}class servicingContract extends Contract{constructor(){cov_1pebg41whg.f[67]++;cov_1pebg41whg.s[748]++;// Unique namespace when multiple contracts per chaincode file
super('servicing.securitization.com');}createContext(){cov_1pebg41whg.f[68]++;cov_1pebg41whg.s[749]++;return new securitizationContext();}// TODO: change which orgs can execute this contract
async beforeTransaction(ctx){cov_1pebg41whg.f[69]++;let userMSPID=(cov_1pebg41whg.s[750]++,ctx.GetMSPID());cov_1pebg41whg.s[751]++;if((cov_1pebg41whg.b[147][0]++,userMSPID!=='investorMSP')&&(cov_1pebg41whg.b[147][1]++,userMSPID!=='spvMSP')&&(cov_1pebg41whg.b[147][2]++,userMSPID!=='ratingagencyMSP')){cov_1pebg41whg.b[146][0]++;cov_1pebg41whg.s[752]++;throw new Error(`Your organization ${userMSPID} is not allowed to perform this action`);}else{cov_1pebg41whg.b[146][1]++;}let isClient=(cov_1pebg41whg.s[753]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
cov_1pebg41whg.s[754]++;if(!isClient){cov_1pebg41whg.b[148][0]++;cov_1pebg41whg.s[755]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[148][1]++;}cov_1pebg41whg.s[756]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[757]++,ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[758]++,par.fcn);let params=(cov_1pebg41whg.s[759]++,par.params);cov_1pebg41whg.s[760]++;for(let i=(cov_1pebg41whg.s[761]++,0);i<params.length;i++){cov_1pebg41whg.s[762]++;if(params[i]===''){cov_1pebg41whg.b[149][0]++;cov_1pebg41whg.s[763]++;throw new Error('There is at least one empty parameter that should not be');}else{cov_1pebg41whg.b[149][1]++;}}cov_1pebg41whg.s[764]++;switch(func){case'AskOrder':cov_1pebg41whg.b[150][0]++;cov_1pebg41whg.s[765]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[151][0]++;cov_1pebg41whg.s[766]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[151][1]++;cov_1pebg41whg.s[767]++;return;}case'AskMarketOrder':cov_1pebg41whg.b[150][1]++;cov_1pebg41whg.s[768]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[152][0]++;cov_1pebg41whg.s[769]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[152][1]++;cov_1pebg41whg.s[770]++;return;}case'BidOrder':cov_1pebg41whg.b[150][2]++;cov_1pebg41whg.s[771]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[153][0]++;cov_1pebg41whg.s[772]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[153][1]++;cov_1pebg41whg.s[773]++;return;}case'BidMarketOrder':cov_1pebg41whg.b[150][3]++;cov_1pebg41whg.s[774]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[154][0]++;cov_1pebg41whg.s[775]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[154][1]++;cov_1pebg41whg.s[776]++;return;}// case 'Matching':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
case'PoolBond':cov_1pebg41whg.b[150][4]++;cov_1pebg41whg.s[777]++;if((cov_1pebg41whg.b[156][0]++,ctx.mspid!=='investorMSP')&&(cov_1pebg41whg.b[156][1]++,ctx.mspid!=='spvMSP')){cov_1pebg41whg.b[155][0]++;cov_1pebg41whg.s[778]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[155][1]++;cov_1pebg41whg.s[779]++;return;}// case 'MatchingBid':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
// case 'MatchingAsk':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
case'TransferCoupons':cov_1pebg41whg.b[150][5]++;cov_1pebg41whg.s[780]++;if((cov_1pebg41whg.b[158][0]++,ctx.mspid!=='investorMSP')&&(cov_1pebg41whg.b[158][1]++,ctx.mspid!=='spvMSP')){cov_1pebg41whg.b[157][0]++;cov_1pebg41whg.s[781]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[157][1]++;cov_1pebg41whg.s[782]++;return;}}}async afterTransaction(ctx){cov_1pebg41whg.f[70]++;let event=(cov_1pebg41whg.s[783]++,await ctx.GetEventPayload());cov_1pebg41whg.s[784]++;return event;}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[71]++;const iterator=(cov_1pebg41whg.s[785]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[786]++,0);let results;cov_1pebg41whg.s[787]++;for await(const res of iterator){cov_1pebg41whg.s[788]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[789]++;counter=counter+1;}cov_1pebg41whg.s[790]++;if(counter>1){cov_1pebg41whg.b[159][0]++;cov_1pebg41whg.s[791]++;throw new Error('Partial Key Uniqueness not provided. Something went wrong');}else{cov_1pebg41whg.b[159][1]++;cov_1pebg41whg.s[792]++;if(counter===0){cov_1pebg41whg.b[160][0]++;cov_1pebg41whg.s[793]++;return true;}else{cov_1pebg41whg.b[160][1]++;}}cov_1pebg41whg.s[794]++;return results;}async _transferBond(ctx,userID,amount,keyFrom){cov_1pebg41whg.f[72]++;const genericID=(cov_1pebg41whg.s[795]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[796]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));cov_1pebg41whg.s[797]++;for(const key of keyFrom){cov_1pebg41whg.s[798]++;await ctx.stub.deleteState(key);}let typeID=(cov_1pebg41whg.s[799]++,':0');const bondToken=(cov_1pebg41whg.s[800]++,{ID:key1+typeID,GenericID:genericID,Rating:"",CouponRate:"",MaturityDate:"",Issuer:"",Owner:userID,Pool:"",AmountPaid:"",OriginalValue:"",MonthlyPayout:"",RemainingPayments:"",Amount:amount,TypeID:typeID,CanBeUsed:true});const bondTokenBuffer=(cov_1pebg41whg.s[801]++,Buffer.from(JSON.stringify(bondToken)));cov_1pebg41whg.s[802]++;await ctx.stub.putState(key1,bondTokenBuffer);cov_1pebg41whg.s[803]++;return bondToken;}async PoolBond(ctx){cov_1pebg41whg.f[73]++;const userID=(cov_1pebg41whg.s[804]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[805]++,await ctx.stub.getStateByPartialCompositeKey('BondToken',[userID]));let amount;let resultKeys=(cov_1pebg41whg.s[806]++,[]);let counter=(cov_1pebg41whg.s[807]++,0);let value;//console.log('before for await')
cov_1pebg41whg.s[808]++;for await(const res of iterator){cov_1pebg41whg.s[809]++;value=JSON.parse(res.value.toString());cov_1pebg41whg.s[810]++;amount=value.Amount;cov_1pebg41whg.s[811]++;if(value.CanBeUsed){cov_1pebg41whg.b[161][0]++;cov_1pebg41whg.s[812]++;resultKeys.push(value.ID);cov_1pebg41whg.s[813]++;counter=counter+amount;}else{cov_1pebg41whg.b[161][1]++;}cov_1pebg41whg.s[814]++;if(resultKeys.length===2){cov_1pebg41whg.b[162][0]++;cov_1pebg41whg.s[815]++;break;}else{cov_1pebg41whg.b[162][1]++;}}//console.log('after for await')
cov_1pebg41whg.s[816]++;if((cov_1pebg41whg.b[164][0]++,resultKeys.length===0)||(cov_1pebg41whg.b[164][1]++,resultKeys.length===1)){cov_1pebg41whg.b[163][0]++;cov_1pebg41whg.s[817]++;throw new Error('There is nothing left to do');// return
}else{cov_1pebg41whg.b[163][1]++;}let ret=(cov_1pebg41whg.s[818]++,await this._transferBond(ctx,userID,counter,resultKeys));cov_1pebg41whg.s[819]++;return ret;}// Our token will have 2 decimals, like fiat currencies
async _checkDecimals(number){cov_1pebg41whg.f[74]++;// In nodejs every atribute is passed as a string
// First check if it is a number
// number.stringify()
// if(typeof number !=='number'){
//     throw new Error('Wrong notation');
// }
// Not necessary, we are working with 2decimal-numbers
// Integer between -2^53-1 and 2^53-1
// if (!Number.isSafeInteger(number)){
//     throw new Error('Wrong number');
// }
// Check if it is a 2decimal-number
const numberString=(cov_1pebg41whg.s[820]++,number.toString());let index;let count=(cov_1pebg41whg.s[821]++,0);cov_1pebg41whg.s[822]++;for(let i=(cov_1pebg41whg.s[823]++,0);i<numberString.length;i++){cov_1pebg41whg.s[824]++;if(numberString[i]==='.'){cov_1pebg41whg.b[165][0]++;cov_1pebg41whg.s[825]++;index=i;cov_1pebg41whg.s[826]++;count=count+1;}else{cov_1pebg41whg.b[165][1]++;}cov_1pebg41whg.s[827]++;if(numberString[i]===','){cov_1pebg41whg.b[166][0]++;cov_1pebg41whg.s[828]++;throw new Error('Wrong format. Try using dot instead of comma');}else{cov_1pebg41whg.b[166][1]++;}}//console.log(`numero de puntos ${count}`);
cov_1pebg41whg.s[829]++;if((cov_1pebg41whg.b[168][0]++,numberString.length-1-index>2)||(cov_1pebg41whg.b[168][1]++,count>1)){cov_1pebg41whg.b[167][0]++;cov_1pebg41whg.s[830]++;throw new Error('Wrong decimals');}else{cov_1pebg41whg.b[167][1]++;}// Check if it is strictly positive
cov_1pebg41whg.s[831]++;number=parseFloat(number);cov_1pebg41whg.s[832]++;if(number<=0){cov_1pebg41whg.b[169][0]++;cov_1pebg41whg.s[833]++;throw new Error('Number must be strictly positive');}else{cov_1pebg41whg.b[169][1]++;}cov_1pebg41whg.s[834]++;return true;}// Bid order will be executed by someone able to buy assets (bonds)
// Auxiliary function to allocate certain amount of money every time a bid order is submitted
async _splitMoney(ctx,tokenID,amount){cov_1pebg41whg.f[75]++;const userID=(cov_1pebg41whg.s[835]++,await ctx.GetUserIdentity('cif'));const tokenBytes=(cov_1pebg41whg.s[836]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[837]++;if((cov_1pebg41whg.b[171][0]++,!tokenBytes)||(cov_1pebg41whg.b[171][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[170][0]++;cov_1pebg41whg.s[838]++;throw new Error(`Error, Token state according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[170][1]++;}const token=(cov_1pebg41whg.s[839]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[840]++;if(token.CanBeUsed===false){cov_1pebg41whg.b[172][0]++;cov_1pebg41whg.s[841]++;throw new Error(`This token ID ${tokenID} has already been used. Try another Token ID`);}else{cov_1pebg41whg.b[172][1]++;}//console.log(`amount: ${amount}`);
//console.log(`token.Amount: ${token.Amount}`);
//console.log(token.Amount-amount);
cov_1pebg41whg.s[842]++;if(token.Amount<amount){cov_1pebg41whg.b[173][0]++;cov_1pebg41whg.s[843]++;throw new Error('Error, token State has not enough funds');}else{cov_1pebg41whg.b[173][1]++;}const balance=(cov_1pebg41whg.s[844]++,token.Amount-amount);const genericID=(cov_1pebg41whg.s[845]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[846]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[847]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));let typeID;cov_1pebg41whg.s[848]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[849]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balance,CanBeUsed:true});cov_1pebg41whg.s[850]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[851]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:amount,CanBeUsed:false});cov_1pebg41whg.s[852]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[853]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[854]++;if(balance>0){cov_1pebg41whg.b[174][0]++;cov_1pebg41whg.s[855]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_1pebg41whg.b[174][1]++;}//console.log(utxo2.ID)
cov_1pebg41whg.s[856]++;return utxo2.ID;}// Auxiliary function to allocate certain amount of bonds every time an ask order is submitted
async _splitBonds(ctx,bondID,amount){cov_1pebg41whg.f[76]++;const userID=(cov_1pebg41whg.s[857]++,await ctx.GetUserIdentity('cif'));const bondBytes=(cov_1pebg41whg.s[858]++,await ctx.stub.getState(bondID));cov_1pebg41whg.s[859]++;if((cov_1pebg41whg.b[176][0]++,!bondBytes)||(cov_1pebg41whg.b[176][1]++,bondBytes.length===0)){cov_1pebg41whg.b[175][0]++;cov_1pebg41whg.s[860]++;throw new Error(`Error, Bond State according to key ${bondID} does not exist`);}else{cov_1pebg41whg.b[175][1]++;}const bond=(cov_1pebg41whg.s[861]++,await JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[862]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[177][0]++;cov_1pebg41whg.s[863]++;throw new Error(`This Bond State with ID ${bondID} has already been used in a prior order`);}else{cov_1pebg41whg.b[177][1]++;}cov_1pebg41whg.s[864]++;if(amount>bond.Amount){cov_1pebg41whg.b[178][0]++;cov_1pebg41whg.s[865]++;throw new Error(`This Bond State has not enough bonds to transfer`);}else{cov_1pebg41whg.b[178][1]++;}const balance=(cov_1pebg41whg.s[866]++,bond.Amount-amount);const genericID=(cov_1pebg41whg.s[867]++,ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[868]++,await ctx.stub.createCompositeKey('BondToken',[bond.Owner,genericID]));let typeID;cov_1pebg41whg.s[869]++;typeID=':0';cov_1pebg41whg.s[870]++;bondID=key1+typeID;const bond1=(cov_1pebg41whg.s[871]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:bond.Rating,CouponRate:bond.CouponRate,MaturityDate:bond.MaturityDate,Issuer:bond.Issuer,Owner:bond.Owner,Pool:bond.Pool,AmountPaid:bond.AmountPaid,OriginalValue:bond.OriginalValue,MonthlyPayout:bond.MonthlyPayout,RemainingPayments:bond.RemainingPayments,Amount:amount,CanBeUsed:false});cov_1pebg41whg.s[872]++;if(balance!==0){cov_1pebg41whg.b[179][0]++;const key2=(cov_1pebg41whg.s[873]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));cov_1pebg41whg.s[874]++;typeID=':1';cov_1pebg41whg.s[875]++;bondID=key2+typeID;const bond2=(cov_1pebg41whg.s[876]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:bond.Rating,CouponRate:bond.CouponRate,MaturityDate:bond.MaturityDate,Issuer:bond.Issuer,Owner:userID,Pool:bond.Pool,AmountPaid:bond.AmountPaid,OriginalValue:bond.OriginalValue,MonthlyPayout:bond.MonthlyPayout,RemainingPayments:bond.RemainingPayments,Amount:balance,CanBeUsed:true});cov_1pebg41whg.s[877]++;await ctx.stub.deleteState(bond.ID);cov_1pebg41whg.s[878]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond1)));cov_1pebg41whg.s[879]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond2)));}else{cov_1pebg41whg.b[179][1]++;cov_1pebg41whg.s[880]++;await ctx.stub.deleteState(bond.ID);cov_1pebg41whg.s[881]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond1)));}cov_1pebg41whg.s[882]++;return bond1.ID;}// Auxiliary function to sort bid orders according to price, if they are limit or market orders and time they were
// submitted
async _sortingBidOrders(ctx,orderArray){cov_1pebg41whg.f[77]++;cov_1pebg41whg.s[883]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[78]++;cov_1pebg41whg.s[884]++;return(cov_1pebg41whg.b[181][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[181][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[181][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[181][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[181][4]++,a.Time<b.Time)?(cov_1pebg41whg.b[180][0]++,1):(cov_1pebg41whg.b[180][1]++,(cov_1pebg41whg.b[183][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[183][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[183][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[183][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[183][4]++,a.Time>b.Time)?(cov_1pebg41whg.b[182][0]++,-1):(cov_1pebg41whg.b[182][1]++,0));});cov_1pebg41whg.s[885]++;await orderArray.sort((b,a)=>{cov_1pebg41whg.f[79]++;cov_1pebg41whg.s[886]++;return a.Price>b.Price?(cov_1pebg41whg.b[184][0]++,1):(cov_1pebg41whg.b[184][1]++,b.Price>a.Price?(cov_1pebg41whg.b[185][0]++,-1):(cov_1pebg41whg.b[185][1]++,a.Time<b.Time?(cov_1pebg41whg.b[186][0]++,1):(cov_1pebg41whg.b[186][1]++,-1)));});cov_1pebg41whg.s[887]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[80]++;cov_1pebg41whg.s[888]++;return(cov_1pebg41whg.b[188][0]++,!a.FullMatch)&&(cov_1pebg41whg.b[188][1]++,b.FullMatch)?(cov_1pebg41whg.b[187][0]++,-1):(cov_1pebg41whg.b[187][1]++,(cov_1pebg41whg.b[190][0]++,!b.FullMatch)&&(cov_1pebg41whg.b[190][1]++,a.FullMatch)?(cov_1pebg41whg.b[189][0]++,-1):(cov_1pebg41whg.b[189][1]++,1));});cov_1pebg41whg.s[889]++;return orderArray;}// Auxiliary function to sort ask orders according to price, if they are limit or market orders and time they were
// submitted
async _sortingAskOrders(ctx,orderArray){cov_1pebg41whg.f[81]++;cov_1pebg41whg.s[890]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[82]++;cov_1pebg41whg.s[891]++;return(cov_1pebg41whg.b[192][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[192][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[192][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[192][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[192][4]++,a.Time<b.Time)?(cov_1pebg41whg.b[191][0]++,1):(cov_1pebg41whg.b[191][1]++,(cov_1pebg41whg.b[194][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[194][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[194][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[194][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[194][4]++,a.Time>b.Time)?(cov_1pebg41whg.b[193][0]++,-1):(cov_1pebg41whg.b[193][1]++,0));});cov_1pebg41whg.s[892]++;await orderArray.sort((b,a)=>{cov_1pebg41whg.f[83]++;cov_1pebg41whg.s[893]++;return a.Price>b.Price?(cov_1pebg41whg.b[195][0]++,-1):(cov_1pebg41whg.b[195][1]++,b.Price>a.Price?(cov_1pebg41whg.b[196][0]++,1):(cov_1pebg41whg.b[196][1]++,b.Time>a.Time?(cov_1pebg41whg.b[197][0]++,1):(cov_1pebg41whg.b[197][1]++,-1)));});cov_1pebg41whg.s[894]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[84]++;cov_1pebg41whg.s[895]++;return(cov_1pebg41whg.b[199][0]++,!a.FullMatch)&&(cov_1pebg41whg.b[199][1]++,b.FullMatch)?(cov_1pebg41whg.b[198][0]++,-1):(cov_1pebg41whg.b[198][1]++,(cov_1pebg41whg.b[201][0]++,!b.FullMatch)&&(cov_1pebg41whg.b[201][1]++,a.FullMatch)?(cov_1pebg41whg.b[200][0]++,-1):(cov_1pebg41whg.b[200][1]++,1));});cov_1pebg41whg.s[896]++;return orderArray;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// 
// Transference triggered due to an Ask Order
async _transferCashTokens(ctx,bidInputs,askInput,orderBook){cov_1pebg41whg.f[85]++;cov_1pebg41whg.s[897]++;//translate into nodejs utxo sample code 
console.log(`Inside _transferCashTokens`);let userID=(cov_1pebg41whg.s[898]++,await ctx.clientIdentity.getID());cov_1pebg41whg.s[899]++;console.log('step 1');let bondTokenBytes=(cov_1pebg41whg.s[900]++,await ctx.stub.getState(askInput.TokenID));cov_1pebg41whg.s[901]++;if((cov_1pebg41whg.b[203][0]++,!bondTokenBytes)||(cov_1pebg41whg.b[203][1]++,bondTokenBytes.length===0)){cov_1pebg41whg.b[202][0]++;cov_1pebg41whg.s[902]++;throw new Error('Error1');}else{cov_1pebg41whg.b[202][1]++;}cov_1pebg41whg.s[903]++;console.log('step 2');let bondToken=(cov_1pebg41whg.s[904]++,JSON.parse(bondTokenBytes.toString()));let myFunds=(cov_1pebg41whg.s[905]++,bondToken.Amount);cov_1pebg41whg.s[906]++;console.log(`myFunds: ${myFunds}`);cov_1pebg41whg.s[907]++;console.log('step 3');let usedKeys=(cov_1pebg41whg.s[908]++,[]);let usedOwners=(cov_1pebg41whg.s[909]++,[]);let usedAmounts=(cov_1pebg41whg.s[910]++,[]);let notUsedTokensAmounts=(cov_1pebg41whg.s[911]++,[]);let cashTokensToTransfer=(cov_1pebg41whg.s[912]++,[]);let bondTokensToTransfer=(cov_1pebg41whg.s[913]++,[]);let total=(cov_1pebg41whg.s[914]++,0);let bondsToTransfer=(cov_1pebg41whg.s[915]++,[]);let amount=(cov_1pebg41whg.s[916]++,0);let token;let lastOwner;let transactionID=(cov_1pebg41whg.s[917]++,await ctx.stub.getTxID());cov_1pebg41whg.s[918]++;console.log('step 4');let outputBondToken=(cov_1pebg41whg.s[919]++,{ID:'',GenericID:transactionID,TypeID:':0',Rating:bondToken.Rating,CouponRate:bondToken.CouponRate,MaturityDate:bondToken.MaturityDate,Issuer:bondToken.Issuer,Owner:bondToken.Owner,Pool:bondToken.Pool,AmountPaid:bondToken.AmountPaid,OriginalValue:bondToken.OriginalValue,MonthlyPayout:bondToken.MonthlyPayout,RemainingPayments:bondToken.RemainingPayments,Amount:bondToken.Amount,CanBeUsed:true});let asks=(cov_1pebg41whg.s[920]++,orderBook[1]);let bids=(cov_1pebg41whg.s[921]++,orderBook[0]);cov_1pebg41whg.s[922]++;console.log('step 5');cov_1pebg41whg.s[923]++;console.log(bidInputs);let usedKey;let lastBid;let lastQuantity;let lastRestingQuantity;let lastQuantityMatch;let partialMatched=(cov_1pebg41whg.s[924]++,[]);cov_1pebg41whg.s[925]++;for(let i=(cov_1pebg41whg.s[926]++,0);i<bidInputs.length;i++){let balance=(cov_1pebg41whg.s[927]++,0);cov_1pebg41whg.s[928]++;console.log('inside first for loop');cov_1pebg41whg.s[929]++;console.log(bidInputs[i]);let cashTokenID=(cov_1pebg41whg.s[930]++,bidInputs[i].TokenID);cov_1pebg41whg.s[931]++;console.log(cashTokenID);let quantityToTransfer=(cov_1pebg41whg.s[932]++,bidInputs[i].QuantityMatch);cov_1pebg41whg.s[933]++;console.log(quantityToTransfer);cov_1pebg41whg.s[934]++;if(usedKeys.indexOf(cashTokenID)!==-1){cov_1pebg41whg.b[204][0]++;cov_1pebg41whg.s[935]++;console.log('step 5.1');cov_1pebg41whg.s[936]++;throw new Error('Error2');}else{cov_1pebg41whg.b[204][1]++;}cov_1pebg41whg.s[937]++;balance=bidInputs[i].Quantity-bidInputs[i].QuantityMatch;cov_1pebg41whg.s[938]++;if(balance===0){cov_1pebg41whg.b[205][0]++;cov_1pebg41whg.s[939]++;total+=quantityToTransfer*bidInputs[i].Price;}else{cov_1pebg41whg.b[205][1]++;cov_1pebg41whg.s[940]++;total+=bidInputs[i].Quantity*bidInputs[i].Price;}// let utxoInputCompositeKey=await ctx.stub.createCompositeKey('securitizationCoin', [userID, utxoInputKeys[i]]);
//TODO
//check errors
let valueBytes=(cov_1pebg41whg.s[941]++,await ctx.stub.getState(cashTokenID));cov_1pebg41whg.s[942]++;if((cov_1pebg41whg.b[207][0]++,!valueBytes)||(cov_1pebg41whg.b[207][1]++,valueBytes.length===0)){cov_1pebg41whg.b[206][0]++;cov_1pebg41whg.s[943]++;throw new Error(`state does not exist`);}else{cov_1pebg41whg.b[206][1]++;}//TODO
//check errors
// Error handling not needed since Itoa() was used when setting the utxo amount, guaranteeing it was an integer.
cov_1pebg41whg.s[944]++;token=JSON.parse(valueBytes.toString());let cashTokenOwner=(cov_1pebg41whg.s[945]++,token.Owner);cov_1pebg41whg.s[946]++;console.log('cashtokenowner');cov_1pebg41whg.s[947]++;console.log(cashTokenOwner);cov_1pebg41whg.s[948]++;console.log('cashtoken amount');cov_1pebg41whg.s[949]++;console.log(token.Amount);cov_1pebg41whg.s[950]++;if(usedOwners.indexOf(cashTokenOwner)===-1){cov_1pebg41whg.b[208][0]++;cov_1pebg41whg.s[951]++;console.log('dentro del primer if');cov_1pebg41whg.s[952]++;usedOwners.push(cashTokenOwner);cov_1pebg41whg.s[953]++;console.log(usedOwners);cov_1pebg41whg.s[954]++;usedAmounts.push(quantityToTransfer);cov_1pebg41whg.s[955]++;console.log(usedAmounts);cov_1pebg41whg.s[956]++;notUsedTokensAmounts.push(token.Amount);cov_1pebg41whg.s[957]++;cashTokensToTransfer.push(quantityToTransfer*askInput.Price);cov_1pebg41whg.s[958]++;bondTokensToTransfer.push(quantityToTransfer);// console.log(`quantityToTransfer: ${quantityToTransfer}`)
// bondsToTransfer.append(qu)
}else{cov_1pebg41whg.b[208][1]++;cov_1pebg41whg.s[959]++;console.log('dentro del primer else');cov_1pebg41whg.s[960]++;usedAmounts[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer;cov_1pebg41whg.s[961]++;notUsedTokensAmounts[usedOwners.indexOf(cashTokenOwner)]+=token.Amount;cov_1pebg41whg.s[962]++;cashTokensToTransfer[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer*askInput.Price;cov_1pebg41whg.s[963]++;bondTokensToTransfer[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer;}cov_1pebg41whg.s[964]++;amount+=token.Amount;// total+=token.Amount;
//revisar
cov_1pebg41whg.s[965]++;if(token.Amount<quantityToTransfer){cov_1pebg41whg.b[209][0]++;cov_1pebg41whg.s[966]++;throw new Error('Error');}else{cov_1pebg41whg.b[209][1]++;}let index;cov_1pebg41whg.s[967]++;bids=orderBook[0];cov_1pebg41whg.s[968]++;asks=orderBook[1];cov_1pebg41whg.s[969]++;if(bidInputs[i].FullMatch){cov_1pebg41whg.b[210][0]++;cov_1pebg41whg.s[970]++;console.log('step 5.2');cov_1pebg41whg.s[971]++;await ctx.stub.deleteState(token.ID);let myBid=(cov_1pebg41whg.s[972]++,await bids.filter(item=>{cov_1pebg41whg.f[86]++;cov_1pebg41whg.s[973]++;return item.ID!==bidInputs[i].ID;}));cov_1pebg41whg.s[974]++;orderBook=[myBid,asks];// console.log(`orderBook: ${orderBook}`)
}else{cov_1pebg41whg.b[210][1]++;cov_1pebg41whg.s[975]++;console.log('step 5.3');let myBid=(cov_1pebg41whg.s[976]++,await bids.filter(item=>{cov_1pebg41whg.f[87]++;cov_1pebg41whg.s[977]++;return item.ID===bidInputs[i].ID;}));cov_1pebg41whg.s[978]++;console.log(myBid);cov_1pebg41whg.s[979]++;index=bids.indexOf(myBid[0]);cov_1pebg41whg.s[980]++;console.log('Index');cov_1pebg41whg.s[981]++;console.log(index);cov_1pebg41whg.s[982]++;if(myBid[0].length>1){cov_1pebg41whg.b[211][0]++;cov_1pebg41whg.s[983]++;throw new Error('Error');}else{cov_1pebg41whg.b[211][1]++;}cov_1pebg41whg.s[984]++;lastOwner=token.Owner;cov_1pebg41whg.s[985]++;lastBid=myBid[0];cov_1pebg41whg.s[986]++;lastQuantity=myBid.Quantity-myBid.QuantityMatch;cov_1pebg41whg.s[987]++;lastQuantityMatch=0;cov_1pebg41whg.s[988]++;lastRestingQuantity=myBid.Quantity-myBid.QuantityMatch;cov_1pebg41whg.s[989]++;partialMatched.push(lastBid);// New token ID
// myBid[0].TokenID=token.ID;
// myBid[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
cov_1pebg41whg.s[990]++;usedKey=token.ID;cov_1pebg41whg.s[991]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[992]++;orderBook=[bids,asks];// console.log(`orderBook: ${orderBook}`)
}cov_1pebg41whg.s[993]++;console.log('despues comprobar fullmatch');cov_1pebg41whg.s[994]++;usedKeys.push(token.ID);}cov_1pebg41whg.s[995]++;console.log('usedOwners.length');cov_1pebg41whg.s[996]++;console.log(usedOwners.length);cov_1pebg41whg.s[997]++;for(let j=(cov_1pebg41whg.s[998]++,0);j<usedOwners.length;j++){cov_1pebg41whg.s[999]++;console.log(`creamos estados tipo bond tokens`);//TODO
// check coupons received
cov_1pebg41whg.s[1000]++;outputBondToken.ID=await ctx.stub.createCompositeKey('BondToken',[usedOwners[j],outputBondToken.GenericID]);cov_1pebg41whg.s[1001]++;outputBondToken.Amount=bondTokensToTransfer[j];// cashperBond[i]*amountperBond[i];
cov_1pebg41whg.s[1002]++;outputBondToken.Owner=usedOwners[j];cov_1pebg41whg.s[1003]++;if(usedAmounts[j]!==notUsedTokensAmounts[j]){cov_1pebg41whg.b[212][0]++;cov_1pebg41whg.s[1004]++;console.log(`dentro del segundo if`);cov_1pebg41whg.s[1005]++;outputBondToken.Amount=bondTokensToTransfer[j];let outputBondTokenBuffer=(cov_1pebg41whg.s[1006]++,Buffer.from(JSON.stringify(outputBondToken)));cov_1pebg41whg.s[1007]++;await ctx.stub.putState(outputBondToken.ID,outputBondTokenBuffer);}else{cov_1pebg41whg.b[212][1]++;cov_1pebg41whg.s[1008]++;console.log(`dentro del segundo else`);cov_1pebg41whg.s[1009]++;outputBondToken.Amount=bondTokensToTransfer[j];let outputBondTokenBuffer=(cov_1pebg41whg.s[1010]++,Buffer.from(JSON.stringify(outputBondToken)));cov_1pebg41whg.s[1011]++;await ctx.stub.putState(outputBondToken.ID,outputBondTokenBuffer);}}// if(amount<total){
//     console.log('step 6: wrong amount')
//     throw new Error('Error')
// }
cov_1pebg41whg.s[1012]++;bids=orderBook[0];cov_1pebg41whg.s[1013]++;asks=orderBook[1];let submitterID=(cov_1pebg41whg.s[1014]++,await ctx.clientIdentity.getID());let securitizationCoin1=(cov_1pebg41whg.s[1015]++,{ID:await ctx.stub.createCompositeKey('securitizationCoin',[submitterID,transactionID,':0']),GenericID:transactionID,TypeID:':0',Issuer:await ctx.clientIdentity.getID(),Owner:submitterID,Amount:total,Factor:100,CanBeUsed:true});let valueBuffer1=(cov_1pebg41whg.s[1016]++,Buffer.from(JSON.stringify(securitizationCoin1)));let restingQuantity=(cov_1pebg41whg.s[1017]++,amount-total);cov_1pebg41whg.s[1018]++;console.log('resting quantity');cov_1pebg41whg.s[1019]++;console.log(restingQuantity);cov_1pebg41whg.s[1020]++;console.log('step 7');cov_1pebg41whg.s[1021]++;console.log(lastOwner);cov_1pebg41whg.s[1022]++;if(restingQuantity!==0){cov_1pebg41whg.b[213][0]++;cov_1pebg41whg.s[1023]++;console.log('step 8');let securitizationCoin2=(cov_1pebg41whg.s[1024]++,{ID:await ctx.stub.createCompositeKey('securitizationCoin',[lastOwner,transactionID,':1']),GenericID:transactionID,TypeID:':1',Issuer:await ctx.clientIdentity.getID(),Owner:lastOwner,Amount:restingQuantity,Factor:100,CanBeUsed:true});cov_1pebg41whg.s[1025]++;console.log('securitizationCoin2');cov_1pebg41whg.s[1026]++;console.log(securitizationCoin2);cov_1pebg41whg.s[1027]++;console.log('securitizationCoin1');cov_1pebg41whg.s[1028]++;console.log(securitizationCoin1);cov_1pebg41whg.s[1029]++;lastBid.TokenID=securitizationCoin2.ID;cov_1pebg41whg.s[1030]++;lastBid.QuantityMatch=lastQuantityMatch;cov_1pebg41whg.s[1031]++;lastBid.RestingQuantity=lastRestingQuantity;cov_1pebg41whg.s[1032]++;lastBid.Quantity=lastQuantity;cov_1pebg41whg.s[1033]++;lastBid.PartialMatch=false;let thisBid=(cov_1pebg41whg.s[1034]++,await bids.filter(item=>{cov_1pebg41whg.f[88]++;cov_1pebg41whg.s[1035]++;return item.ID===lastBid.ID;}));let indice=(cov_1pebg41whg.s[1036]++,bids.indexOf(thisBid));cov_1pebg41whg.s[1037]++;bids[indice]=thisBid;cov_1pebg41whg.s[1038]++;orderBook=[bids,asks];let valueBuffer2=(cov_1pebg41whg.s[1039]++,Buffer.from(JSON.stringify(securitizationCoin2)));cov_1pebg41whg.s[1040]++;await ctx.stub.putState(securitizationCoin2.ID,valueBuffer2);cov_1pebg41whg.s[1041]++;await ctx.stub.putState(securitizationCoin1.ID,valueBuffer1);}else{cov_1pebg41whg.b[213][1]++;cov_1pebg41whg.s[1042]++;// create just one state
console.log('securitizationCoin1');cov_1pebg41whg.s[1043]++;console.log(securitizationCoin1);cov_1pebg41whg.s[1044]++;await ctx.stub.putState(securitizationCoin1.ID,valueBuffer1);}cov_1pebg41whg.s[1045]++;if(partialMatched.length>1){cov_1pebg41whg.b[214][0]++;cov_1pebg41whg.s[1046]++;throw new Error('Error');}else{cov_1pebg41whg.b[214][1]++;}let orderBuffer=(cov_1pebg41whg.s[1047]++,Buffer.from(JSON.stringify(orderBook)));cov_1pebg41whg.s[1048]++;await ctx.stub.putState('OrderBook',orderBuffer);cov_1pebg41whg.s[1049]++;return orderBook;}async TransferCoupons(ctx,bondTokenID,spvID){cov_1pebg41whg.f[89]++;cov_1pebg41whg.s[1050]++;console.log('inside TransferCoupons');let bondTokenBytes=(cov_1pebg41whg.s[1051]++,await ctx.stub.getState(bondTokenID));cov_1pebg41whg.s[1052]++;if((cov_1pebg41whg.b[216][0]++,!bondTokenBytes)||(cov_1pebg41whg.b[216][1]++,bondTokenBytes.length===0)){cov_1pebg41whg.b[215][0]++;cov_1pebg41whg.s[1053]++;throw new Error('There is no state associated to that key');}else{cov_1pebg41whg.b[215][1]++;}cov_1pebg41whg.s[1054]++;console.log('paso primer filtro');let bondToken=(cov_1pebg41whg.s[1055]++,JSON.parse(bondTokenBytes.toString()));let thisDate=(cov_1pebg41whg.s[1056]++,await ctx.stub.getTxTimestamp());cov_1pebg41whg.s[1057]++;if(thisDate<bondToken.NextCouponPaymentNotBefore){cov_1pebg41whg.b[217][0]++;cov_1pebg41whg.s[1058]++;throw new Error('Error, you cannot still withdraw any coupons');}else{cov_1pebg41whg.b[217][1]++;}cov_1pebg41whg.s[1059]++;console.log('paso segundo filtro');cov_1pebg41whg.s[1060]++;if(!bondToken.CanBeUsed){cov_1pebg41whg.b[218][0]++;cov_1pebg41whg.s[1061]++;throw new Error(`Bond token cannot be used`);}else{cov_1pebg41whg.b[218][1]++;}cov_1pebg41whg.s[1062]++;console.log('paso tercer filtro');let bondsAmount=(cov_1pebg41whg.s[1063]++,bondToken.Amount);//or .Quantity
//These are attributes within bondToken state
let couponsReceived=(cov_1pebg41whg.s[1064]++,'');let couponsRemaining=(cov_1pebg41whg.s[1065]++,'');let totalCoupons=(cov_1pebg41whg.s[1066]++,'');let resultKeys=(cov_1pebg41whg.s[1067]++,[]);let total=(cov_1pebg41whg.s[1068]++,0);let amount;let lastCashAmount;let cashDifference;let new_value;let myCoupons=(cov_1pebg41whg.s[1069]++,parseInt(bondToken.Amount*bondToken.CouponRate*bondToken.FaceValue/bondToken.CouponFactor));let iterator=(cov_1pebg41whg.s[1070]++,await ctx.stub.getStateByPartialCompositeKey("securitizationCoin",[spvID]));cov_1pebg41whg.s[1071]++;console.log('iterator');cov_1pebg41whg.s[1072]++;console.log(myCoupons);// console.log(iterator)
// console.log(iterator[1])
cov_1pebg41whg.s[1073]++;for await(const res of iterator){cov_1pebg41whg.s[1074]++;console.log('dentro iterator');cov_1pebg41whg.s[1075]++;new_value=JSON.parse(res.value.toString());// console.log(`value: ${value.Amount}`)
cov_1pebg41whg.s[1076]++;console.log('value.Amount');cov_1pebg41whg.s[1077]++;console.log(new_value.Amount);cov_1pebg41whg.s[1078]++;amount=new_value.Amount;cov_1pebg41whg.s[1079]++;if((cov_1pebg41whg.b[220][0]++,new_value.CanBeUsed)&&(cov_1pebg41whg.b[220][1]++,new_value.Owner===spvID)){cov_1pebg41whg.b[219][0]++;cov_1pebg41whg.s[1080]++;console.log('se puede usar');cov_1pebg41whg.s[1081]++;resultKeys.push(new_value.ID);cov_1pebg41whg.s[1082]++;total+=amount;}else{cov_1pebg41whg.b[219][1]++;}cov_1pebg41whg.s[1083]++;if(total<myCoupons){cov_1pebg41whg.b[221][0]++;cov_1pebg41whg.s[1084]++;console.log('aun no ha llegado al maximo');cov_1pebg41whg.s[1085]++;await ctx.stub.deleteState(res.key);cov_1pebg41whg.s[1086]++;continue;}else{cov_1pebg41whg.b[221][1]++;cov_1pebg41whg.s[1087]++;console.log('ha llegado al maximo');cov_1pebg41whg.s[1088]++;lastCashAmount=new_value.Amount;cov_1pebg41whg.s[1089]++;cashDifference=total-myCoupons;cov_1pebg41whg.s[1090]++;break;}}cov_1pebg41whg.s[1091]++;console.log('fuera bucle');cov_1pebg41whg.s[1092]++;if(total<myCoupons){cov_1pebg41whg.b[222][0]++;cov_1pebg41whg.s[1093]++;throw new Error('There are not enough funds');}else{cov_1pebg41whg.b[222][1]++;}cov_1pebg41whg.s[1094]++;console.log('lastCashAmount');cov_1pebg41whg.s[1095]++;console.log(lastCashAmount);cov_1pebg41whg.s[1096]++;console.log('cashDifference');cov_1pebg41whg.s[1097]++;console.log(cashDifference);let genericID=(cov_1pebg41whg.s[1098]++,await ctx.stub.getTxID());let typeID=(cov_1pebg41whg.s[1099]++,':1');cov_1pebg41whg.s[1100]++;if(cashDifference!==0){cov_1pebg41whg.b[223][0]++;cov_1pebg41whg.s[1101]++;//create 
new_value.Amount=cashDifference;cov_1pebg41whg.s[1102]++;new_value.ID=await ctx.stub.createCompositeKey('securitizationCoin',[new_value.Owner,genericID,typeID]);cov_1pebg41whg.s[1103]++;new_value.TypeID=typeID;cov_1pebg41whg.s[1104]++;new_value.GenericID=genericID;cov_1pebg41whg.s[1105]++;await ctx.stub.deleteState(new_value.ID);}else{cov_1pebg41whg.b[223][1]++;cov_1pebg41whg.s[1106]++;new_value.Amount=total;cov_1pebg41whg.s[1107]++;new_value.TypeID=':0';cov_1pebg41whg.s[1108]++;new_value.GenericID=genericID;cov_1pebg41whg.s[1109]++;new_value.Owner=await ctx.clientIdentity.getIDBytes();cov_1pebg41whg.s[1110]++;new_value.ID=await ctx.stub.createCompositeKey('securitizationCoin',[new_value.Owner,genericID,new_value.TypeID]);let valueBuffer=(cov_1pebg41whg.s[1111]++,Buffer.from(JSON.stringify(new_value)));cov_1pebg41whg.s[1112]++;await ctx.stub.putState(new_value.ID,valueBuffer);}cov_1pebg41whg.s[1113]++;await ctx.stub.deleteState(bondTokenID);let newBondToken=(cov_1pebg41whg.s[1114]++,bondToken);cov_1pebg41whg.s[1115]++;newBondToken.GenericID=genericID;cov_1pebg41whg.s[1116]++;newBondToken.CouponsReceived=newBondToken.CouponsReceived+1;cov_1pebg41whg.s[1117]++;newBondToken.CouponsRemaining=newBondToken.CouponsRemaining-1;cov_1pebg41whg.s[1118]++;newBondToken.NextCouponPaymentNotBefore=newBondToken.CouponDatesNotBefore[newBondToken.CouponsReceived];let newBondTokenBuffer=(cov_1pebg41whg.s[1119]++,Buffer.from(JSON.stringify(newBondToken)));cov_1pebg41whg.s[1120]++;await ctx.stub.putState(newBondToken.ID,newBondTokenBuffer);cov_1pebg41whg.s[1121]++;return newBondToken;}//Transference triggered due to a Bid Order
async _transferBondTokens(ctx,askInputs,bidInput,orderBook){cov_1pebg41whg.f[90]++;// console
//console.log('Inside _transferBondTokens')
// I retrieve cash token
let securitizationCoinBytes=(cov_1pebg41whg.s[1122]++,await ctx.stub.getState(bidInput.TokenID));cov_1pebg41whg.s[1123]++;if((cov_1pebg41whg.b[225][0]++,!securitizationCoinBytes)||(cov_1pebg41whg.b[225][1]++,securitizationCoinBytes.length===0)){cov_1pebg41whg.b[224][0]++;cov_1pebg41whg.s[1124]++;throw new Error('Error');}else{cov_1pebg41whg.b[224][1]++;}let securitizationCoin=(cov_1pebg41whg.s[1125]++,JSON.parse(securitizationCoinBytes.toString()));let myFunds=(cov_1pebg41whg.s[1126]++,securitizationCoin.Quantity);//console.log(`myFunds: ${myFunds}`)
//translate into nodejs utxo sample code 
let userID=(cov_1pebg41whg.s[1127]++,await ctx.clientIdentity.getID());let usedKeys=(cov_1pebg41whg.s[1128]++,[]);let usedKey,lastOwner;let usedOwners=(cov_1pebg41whg.s[1129]++,[]);let usedAmounts=(cov_1pebg41whg.s[1130]++,[]);let notUsedTokensAmounts=(cov_1pebg41whg.s[1131]++,[]);let cashTokensToTransfer=(cov_1pebg41whg.s[1132]++,[]);let total=(cov_1pebg41whg.s[1133]++,0);let bondsToTransfer=(cov_1pebg41whg.s[1134]++,[]);let amount=(cov_1pebg41whg.s[1135]++,0);let token;// let coupons;
// check all bonds are equal (same coupons)
let transactionID=(cov_1pebg41whg.s[1136]++,await ctx.stub.getTxID());let outputSecuritizationCoin=(cov_1pebg41whg.s[1137]++,{ID:'',GenericID:transactionID,TypeID:':0',Issuer:await ctx.clientIdentity.getID(),Owner:'',Amount:'',Factor:100,CanBeUsed:true});let asks=(cov_1pebg41whg.s[1138]++,orderBook[1]);let bids=(cov_1pebg41whg.s[1139]++,orderBook[0]);let lastAsk;let lastAskQuantity;let lastAskQuantityMatch;let lastAskRestingQuantity;let partialMatched=(cov_1pebg41whg.s[1140]++,[]);cov_1pebg41whg.s[1141]++;for(let i=(cov_1pebg41whg.s[1142]++,0);i<askInputs.length;i++){let balance=(cov_1pebg41whg.s[1143]++,0);let bondID=(cov_1pebg41whg.s[1144]++,askInputs[i].TokenID);let quantityToTransfer=(cov_1pebg41whg.s[1145]++,askInputs[i].QuantityMatch);cov_1pebg41whg.s[1146]++;if(usedKeys.indexOf(bondID)!==-1){cov_1pebg41whg.b[226][0]++;cov_1pebg41whg.s[1147]++;throw new Error('Error');}else{cov_1pebg41whg.b[226][1]++;}// let utxoInputCompositeKey=await ctx.stub.createCompositeKey('securitizationCoin', [userID, utxoInputKeys[i]]);
//TODO
//check errors
let valueBytes=(cov_1pebg41whg.s[1148]++,await ctx.stub.getState(bondID));//TODO
//check errors
cov_1pebg41whg.s[1149]++;balance=askInputs[i].Quantity-askInputs[i].QuantityMatch;cov_1pebg41whg.s[1150]++;if(balance===0){cov_1pebg41whg.b[227][0]++;cov_1pebg41whg.s[1151]++;total+=quantityToTransfer*askInputs[i].Price;}else{cov_1pebg41whg.b[227][1]++;cov_1pebg41whg.s[1152]++;total+=askInputs[i].Quantity*askInputs[i].Price;}// Error handling not needed since Itoa() was used when setting the utxo amount, guaranteeing it was an integer.
cov_1pebg41whg.s[1153]++;token=JSON.parse(valueBytes.toString());let bondOwner=(cov_1pebg41whg.s[1154]++,token.Owner);cov_1pebg41whg.s[1155]++;if(usedOwners.indexOf(bondOwner)===-1){cov_1pebg41whg.b[228][0]++;cov_1pebg41whg.s[1156]++;//console.log('dentro del primer if')
usedOwners.push(bondOwner);cov_1pebg41whg.s[1157]++;usedAmounts.push(quantityToTransfer);cov_1pebg41whg.s[1158]++;notUsedTokensAmounts.push(token.Amount);cov_1pebg41whg.s[1159]++;cashTokensToTransfer.push(quantityToTransfer*askInputs[i].Price);//console.log(`quantityToTransfer: ${quantityToTransfer}`)
// bondsToTransfer.append(qu)
}else{cov_1pebg41whg.b[228][1]++;cov_1pebg41whg.s[1160]++;console.log('dentro del primer else');cov_1pebg41whg.s[1161]++;usedAmounts[usedOwners.indexOf(bondOwner)]+=quantityToTransfer;cov_1pebg41whg.s[1162]++;notUsedTokensAmounts[usedOwners.indexOf(bondOwner)]+=token.Amount;cov_1pebg41whg.s[1163]++;cashTokensToTransfer[usedOwners.indexOf(bondOwner)]+=quantityToTransfer*askInputs[i].Price;}cov_1pebg41whg.s[1164]++;amount+=quantityToTransfer;// total+=token.Amount;
// //revisar
// if(token.Amount<quantityToTransfer){
//     throw new Error('Error')
// }
cov_1pebg41whg.s[1165]++;bids=orderBook[0];cov_1pebg41whg.s[1166]++;asks=orderBook[1];cov_1pebg41whg.s[1167]++;if(askInputs[i].FullMatch){cov_1pebg41whg.b[229][0]++;cov_1pebg41whg.s[1168]++;await ctx.stub.deleteState(token.ID);let myAsk=(cov_1pebg41whg.s[1169]++,await asks.filter(item=>{cov_1pebg41whg.f[91]++;cov_1pebg41whg.s[1170]++;return item.ID!==askInputs[i].ID;}));cov_1pebg41whg.s[1171]++;orderBook=[bids,myAsk];//console.log(`orderBook: ${orderBook}`)
}else{cov_1pebg41whg.b[229][1]++;let myAsk=(cov_1pebg41whg.s[1172]++,await asks.filter(item=>{cov_1pebg41whg.f[92]++;cov_1pebg41whg.s[1173]++;return item.ID===askInputs[i].ID;}));cov_1pebg41whg.s[1174]++;if(myAsk.length>1){cov_1pebg41whg.b[230][0]++;cov_1pebg41whg.s[1175]++;throw new Error('Error');}else{cov_1pebg41whg.b[230][1]++;}// index = asks.indexOf(myAsk[0]);
cov_1pebg41whg.s[1176]++;lastOwner=token.Owner;cov_1pebg41whg.s[1177]++;lastAsk=myAsk[0];cov_1pebg41whg.s[1178]++;partialMatched.push(lastAsk);cov_1pebg41whg.s[1179]++;lastAskQuantity=myAsk.Quantity-myAsk.QuantityMatch;cov_1pebg41whg.s[1180]++;lastAskQuantityMatch=0;cov_1pebg41whg.s[1181]++;lastAskRestingQuantity=myAsk.Quantity-myAsk.QuantityMatch;// New token ID
// myBid[0].TokenID=token.ID;
// myBid[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
cov_1pebg41whg.s[1182]++;usedKey=token.ID;cov_1pebg41whg.s[1183]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[1184]++;orderBook=[bids,asks];// myAsk[0].TokenID=token.ID;
// myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
// await ctx.stub.deleteState(token.ID);
//console.log(`orderBook: ${orderBook}`)
}cov_1pebg41whg.s[1185]++;usedKeys.push(token.ID);}cov_1pebg41whg.s[1186]++;for(let j=(cov_1pebg41whg.s[1187]++,0);j<usedOwners.length;j++){cov_1pebg41whg.s[1188]++;//console.log(`creamos estados tipo cash tokens`)
//TODO
// check coupons received
outputSecuritizationCoin.ID=await ctx.stub.createCompositeKey('securitizationCoin',[usedOwners[j],outputSecuritizationCoin.GenericID,':0']);cov_1pebg41whg.s[1189]++;outputSecuritizationCoin.Quantity=cashTokensToTransfer[j];// cashperBond[i]*amountperBond[i];
cov_1pebg41whg.s[1190]++;outputSecuritizationCoin.Owner=usedOwners[j];// let lastOwner=token.Owner;
// let lastQuantity=token.Quantity;
// let lastBalance=
cov_1pebg41whg.s[1191]++;if(usedAmounts[j]!==notUsedTokensAmounts[j]){cov_1pebg41whg.b[231][0]++;cov_1pebg41whg.s[1192]++;//console.log(`dentro del segundo if`)
outputSecuritizationCoin.Amount=cashTokensToTransfer[j];let outputSecuritizationCoinBuffer=(cov_1pebg41whg.s[1193]++,Buffer.from(JSON.stringify(outputSecuritizationCoin)));cov_1pebg41whg.s[1194]++;await ctx.stub.putState(outputSecuritizationCoin.ID,outputSecuritizationCoinBuffer);}else{cov_1pebg41whg.b[231][1]++;cov_1pebg41whg.s[1195]++;//console.log(`dentro del segundo else`)
outputSecuritizationCoin.Amount=cashTokensToTransfer[j];let outputSecuritizationCoinBuffer=(cov_1pebg41whg.s[1196]++,Buffer.from(JSON.stringify(outputSecuritizationCoin)));cov_1pebg41whg.s[1197]++;await ctx.stub.putState(outputSecuritizationCoin.ID,outputSecuritizationCoinBuffer);}}// await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// if(amount<total){
//     throw new Error('Error')
// }
cov_1pebg41whg.s[1198]++;bids=orderBook[0];cov_1pebg41whg.s[1199]++;asks=orderBook[1];let invokerCert=(cov_1pebg41whg.s[1200]++,await ctx.clientIdentity.getID());let bondToken1=(cov_1pebg41whg.s[1201]++,{ID:await ctx.stub.createCompositeKey('BondToken',[invokerCert,transactionID,":0"]),GenericID:transactionID,TypeID:':0',Rating:token.Rating,CouponRate:token.CouponRate,MaturityDate:token.MaturityDate,Issuer:securitizationCoin.Owner,Owner:securitizationCoin.Owner,Pool:token.Pool,AmountPaid:token.AmountPaid,OriginalValue:token.OriginalValue,MonthlyPayout:token.MonthlyPayout,RemainingPayments:token.RemainingPayments,Amount:amount,CanBeUsed:true});let valueBuffer1=(cov_1pebg41whg.s[1202]++,Buffer.from(JSON.stringify(bondToken1)));let restingQuantity=(cov_1pebg41whg.s[1203]++,amount-total);cov_1pebg41whg.s[1204]++;if(restingQuantity!==0){cov_1pebg41whg.b[232][0]++;//console.log(`dentro del tercer if`)
let bondToken2=(cov_1pebg41whg.s[1205]++,{ID:await ctx.stub.createCompositeKey('BondToken',[lastOwner,transactionID,":1"]),GenericID:transactionID,TypeID:':1',Rating:token.Rating,CouponRate:token.CouponRate,MaturityDate:token.MaturityDate,Issuer:securitizationCoin.Issuer,Owner:securitizationCoin.Owner,Pool:token.Pool,AmountPaid:token.AmountPaid,OriginalValue:token.OriginalValue,MonthlyPayout:token.MonthlyPayout,RemainingPayments:token.RemainingPayments,Amount:restingQuantity,CanBeUsed:true});cov_1pebg41whg.s[1206]++;lastAsk[0].TokenID=bondToken2.ID;cov_1pebg41whg.s[1207]++;lastAsk.QuantityMatch=lastAskQuantityMatch;cov_1pebg41whg.s[1208]++;lastAsk.RestingQuantity=lastAskRestingQuantity;cov_1pebg41whg.s[1209]++;lastAsk.Quantity=lastAskQuantity;cov_1pebg41whg.s[1210]++;lastAsk.PartialMatch=false;let thisAsk=(cov_1pebg41whg.s[1211]++,await asks.filter(item=>{cov_1pebg41whg.f[93]++;cov_1pebg41whg.s[1212]++;return item.ID===lastAsk.ID;}));let indice=(cov_1pebg41whg.s[1213]++,asks.indexOf(thisAsk));cov_1pebg41whg.s[1214]++;asks[indice]=thisAsk;cov_1pebg41whg.s[1215]++;orderBook=[bids,asks];let valueBuffer2=(cov_1pebg41whg.s[1216]++,Buffer.from(JSON.stringify(bondToken2)));cov_1pebg41whg.s[1217]++;await ctx.stub.putState(bondToken2.ID,valueBuffer2);cov_1pebg41whg.s[1218]++;await ctx.stub.putState(bondToken1.ID,valueBuffer1);}else{cov_1pebg41whg.b[232][1]++;cov_1pebg41whg.s[1219]++;//console.log(`dentro del tercer else`)
// create just one state
await ctx.stub.putState(bondToken1.ID,valueBuffer1);}cov_1pebg41whg.s[1220]++;if(partialMatched.length>1){cov_1pebg41whg.b[233][0]++;cov_1pebg41whg.s[1221]++;throw new Error('Error');}else{cov_1pebg41whg.b[233][1]++;}let orderBuffer=(cov_1pebg41whg.s[1222]++,Buffer.from(JSON.stringify(orderBook)));cov_1pebg41whg.s[1223]++;await ctx.stub.putState('OrderBook',orderBuffer);cov_1pebg41whg.s[1224]++;return orderBook;}// Bid order will be executed by someone whose desire is buying bonds.
async BidOrder(ctx,amount,price,tokenID,identificativo,date){cov_1pebg41whg.f[94]++;cov_1pebg41whg.s[1225]++;//console.log('paso 1')
// first we check the format of price
await this._checkDecimals(price);cov_1pebg41whg.s[1226]++;price=parseFloat(price);cov_1pebg41whg.s[1227]++;price=parseInt(price*100);// if (amount<=0 || price<=0){
//     throw new Error(`Both Amount and Price arguments must be positive`);
// }
const userID=(cov_1pebg41whg.s[1228]++,await ctx.GetUserIdentity('cif'));// retrieve order book if it exists
const bookOrderBytes=(cov_1pebg41whg.s[1229]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1230]++;if((cov_1pebg41whg.b[235][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[235][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[234][0]++;cov_1pebg41whg.s[1231]++;bookOrder=[[],[]];}else{cov_1pebg41whg.b[234][1]++;cov_1pebg41whg.s[1232]++;bookOrder=JSON.parse(bookOrderBytes.toString());}// retrieve token we are going to use to pay for
let myKey=(cov_1pebg41whg.s[1233]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));cov_1pebg41whg.s[1234]++;myKey=myKey+identificativo;const tokenBytes=(cov_1pebg41whg.s[1235]++,await ctx.stub.getState(myKey));//console.log('paso 2')
// prior verifications are also inside auxiliary function
cov_1pebg41whg.s[1236]++;if((cov_1pebg41whg.b[237][0]++,!tokenBytes)||(cov_1pebg41whg.b[237][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[236][0]++;cov_1pebg41whg.s[1237]++;throw new Error(`Error, Token State according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[236][1]++;}const token=(cov_1pebg41whg.s[1238]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[1239]++;if(!token.CanBeUsed){cov_1pebg41whg.b[238][0]++;cov_1pebg41whg.s[1240]++;throw new Error(`This Token State with ID ${tokenID} has already been used. Try another Token ID`);}else{cov_1pebg41whg.b[238][1]++;}const genericID=(cov_1pebg41whg.s[1241]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1242]++,await ctx.stub.createCompositeKey('BidOrder',[genericID]));// compute how many tokens we will withdraw from our Token State
const total=(cov_1pebg41whg.s[1243]++,amount*price);let currentOrder=(cov_1pebg41whg.s[1244]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:token.ID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Bid',Time:new Date(date).getTime()});//console.log('tiempo dentro del sc')
//console.log(currentOrder.Time)
let asks=(cov_1pebg41whg.s[1245]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1246]++,bookOrder[0]);//console.log(asks)
//console.log('paso 3')
// If there  is no asks it means we cannot match our bid order
cov_1pebg41whg.s[1247]++;if(asks.length===0){cov_1pebg41whg.b[239][0]++;//console.log('paso 3.1')
let newID=(cov_1pebg41whg.s[1248]++,await this._splitMoney(ctx,token.ID,total));const order=(cov_1pebg41whg.s[1249]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:newID,Name:'Bid',FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Time:new Date(date).getTime()});cov_1pebg41whg.s[1250]++;bookOrder[0].push(order);const book=(cov_1pebg41whg.s[1251]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1252]++;bookOrder=[book,bookOrder[1]];cov_1pebg41whg.s[1253]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1254]++;return bookOrder;}else{cov_1pebg41whg.b[239][1]++;}//console.log('paso 4')
let bidReference=(cov_1pebg41whg.s[1255]++,currentOrder);let bondKeyAcumulator=(cov_1pebg41whg.s[1256]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1257]++,[]);let counter=(cov_1pebg41whg.s[1258]++,bidReference.Quantity);let balance=(cov_1pebg41whg.s[1259]++,0);let totalTokens=(cov_1pebg41whg.s[1260]++,0);let tokensCounter=(cov_1pebg41whg.s[1261]++,token.Amount);let balanceTokens=(cov_1pebg41whg.s[1262]++,0);//console.log('paso 5')
//console.log(bidReference.Price)
// check if there is matching
cov_1pebg41whg.s[1263]++;for await(const ask of asks){cov_1pebg41whg.s[1264]++;//console.log('controlando el break')
//console.log(ask.Price);
if((cov_1pebg41whg.b[241][0]++,ask.Price<=bidReference.Price)&&(cov_1pebg41whg.b[241][1]++,!ask.FullMatch)){cov_1pebg41whg.b[240][0]++;cov_1pebg41whg.s[1265]++;//console.log('paso 5.1')
counter=counter-ask.Quantity;cov_1pebg41whg.s[1266]++;balance=ask.Quantity+counter;cov_1pebg41whg.s[1267]++;tokensCounter=tokensCounter-ask.Quantity*ask.Price;cov_1pebg41whg.s[1268]++;balanceTokens=ask.Quantity*ask.Price+tokensCounter;//console.log('tokensCounter')
//console.log(tokensCounter)
cov_1pebg41whg.s[1269]++;if(tokensCounter<=0){cov_1pebg41whg.b[242][0]++;//console.log('paso 5.1.1')
//console.log(balanceTokens)
//console.log(ask.Price)
let amountSol=(cov_1pebg41whg.s[1270]++,balance);//console.log(amountSol)
cov_1pebg41whg.s[1271]++;ask.QuantityMatch=amountSol;cov_1pebg41whg.s[1272]++;ask.Quantity=ask.Quantity-amountSol;cov_1pebg41whg.s[1273]++;ask.FullMatch=true;cov_1pebg41whg.s[1274]++;ask.PartialMatch=false;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1275]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1276]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1277]++;totalTokens=totalTokens+ask.Price*amountSol;// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1278]++;bondKeyAcumulator.push(ask.TokenID);// tokenAcumulator.push(ask);
cov_1pebg41whg.s[1279]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1280]++;counter=0;cov_1pebg41whg.s[1281]++;break;}else{cov_1pebg41whg.b[242][1]++;cov_1pebg41whg.s[1282]++;//console.log('paso 5.1.2')
// FULL MATCH means that our submitted order with that size has been completed
if(counter>=0){cov_1pebg41whg.b[243][0]++;cov_1pebg41whg.s[1283]++;//console.log('paso 5.1.2.1')
// FULL MATCH
ask.QuantityMatch=ask.Quantity;cov_1pebg41whg.s[1284]++;ask.FullMatch=true;cov_1pebg41whg.s[1285]++;ask.PartialMatch=false;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1286]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1287]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1288]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;}else{cov_1pebg41whg.b[243][1]++;cov_1pebg41whg.s[1289]++;// else if(counter<0 && balance>0){
//console.log('paso 5.1.2.2')
// PARTIAL MATCH means that our submitted order with that size has been completed partially
// PARTIAL MATCH
ask.FullMatch=false;cov_1pebg41whg.s[1290]++;ask.PartialMatch=true;cov_1pebg41whg.s[1291]++;ask.QuantityMatch=balance;cov_1pebg41whg.s[1292]++;ask.Quantity=ask.Quantity-balance;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1293]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1294]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1295]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1296]++;counter=0;// And finally break, because we read following a prestablished order
//console.log('antes del break')
cov_1pebg41whg.s[1297]++;break;}}}else{cov_1pebg41whg.b[240][1]++;cov_1pebg41whg.s[1298]++;continue;}}//console.log('paso 6')
// if (totalTokens>token.Amount){
//     throw new Error(`Your Token State with ID ${tokenID} do not have enough funds`);
// }
//console.log('paso 7')
// now we upload our order and the matching state
let newID=(cov_1pebg41whg.s[1299]++,await this._splitMoney(ctx,token.ID,total));cov_1pebg41whg.s[1300]++;if(counter===0){cov_1pebg41whg.b[244][0]++;cov_1pebg41whg.s[1301]++;//console.log('paso 7.1')
// Full Match
currentOrder.ID=orderID;cov_1pebg41whg.s[1302]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1303]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1304]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1305]++;currentOrder.QuantityMatch=currentOrder.Quantity;// currentOrder.MatchID=bidReference.MatchID;
}else{cov_1pebg41whg.b[244][1]++;cov_1pebg41whg.s[1306]++;if((cov_1pebg41whg.b[246][0]++,counter!==0)&&(cov_1pebg41whg.b[246][1]++,counter!==bidReference.Quantity)){cov_1pebg41whg.b[245][0]++;cov_1pebg41whg.s[1307]++;//console.log('paso 7.2')
// Partial Match
currentOrder.ID=orderID;cov_1pebg41whg.s[1308]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1309]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1310]++;currentOrder.PartialMatch=true;cov_1pebg41whg.s[1311]++;currentOrder.QuantityMatch=bidReference.Quantity-counter;cov_1pebg41whg.s[1312]++;currentOrder.Quantity=counter;// currentOrder.MatchID=bidReference.MatchID;
}else{cov_1pebg41whg.b[245][1]++;cov_1pebg41whg.s[1313]++;//console.log('paso 7.3')
// No match
currentOrder.ID=orderID;cov_1pebg41whg.s[1314]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1315]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1316]++;currentOrder.PartialMatch=false;}}cov_1pebg41whg.s[1317]++;bookOrder[0].push(currentOrder);//console.log(bookOrder);
const bookBid=(cov_1pebg41whg.s[1318]++,await this._sortingBidOrders(ctx,bookOrder[0]));const bookAsk=(cov_1pebg41whg.s[1319]++,await this._sortingAskOrders(ctx,bookOrder[1]));cov_1pebg41whg.s[1320]++;bookOrder=[bookBid,bookAsk];//console.log('paso 8')
//console.log(bookOrder)
// Finally we submit order book and matching state
cov_1pebg41whg.s[1321]++;if(bondKeyAcumulator.length>0){cov_1pebg41whg.b[247][0]++;//console.log('paso 8.1')
const orderMatch=(cov_1pebg41whg.s[1322]++,{Orders:tokenAcumulator,Order:currentOrder});// let orderBuffer=Buffer.from(JSON.stringify(orderMatch));
// await ctx.stub.putState('OrderMatch'+genericID, orderBuffer);
// transference triggered
// cash tokens goes from bid uploader to bond owners and bonds
// goes to bid order uploader
// let ITransferCashTokenID=currentOrder.TokenID;
cov_1pebg41whg.s[1323]++;bookOrder=await this._transferBondTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);//console.log(orderMatch)
//console.log(orderMatch.Orders)
//console.log(orderMatch.Order)
}else{cov_1pebg41whg.b[247][1]++;}cov_1pebg41whg.s[1324]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1325]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1326]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));//console.log('paso 9')
cov_1pebg41whg.s[1327]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// AskOrder  will be executed by someone able to sell assets at a limit price
async AskOrder(ctx,amount,price,bondID,identificativo,date){cov_1pebg41whg.f[95]++;cov_1pebg41whg.s[1328]++;await this._checkDecimals(price);const userID=(cov_1pebg41whg.s[1329]++,await ctx.GetUserIdentity('cif'));cov_1pebg41whg.s[1330]++;amount=parseInt(amount);cov_1pebg41whg.s[1331]++;price=parseFloat(price);cov_1pebg41whg.s[1332]++;price=parseInt(price*100);let myKey=(cov_1pebg41whg.s[1333]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondID]));cov_1pebg41whg.s[1334]++;myKey=myKey+identificativo;const bondBytes=(cov_1pebg41whg.s[1335]++,await ctx.stub.getState(myKey));// These prior verifications are also inside auxiliary function
cov_1pebg41whg.s[1336]++;if((cov_1pebg41whg.b[249][0]++,!bondBytes)||(cov_1pebg41whg.b[249][1]++,bondBytes.length===0)){cov_1pebg41whg.b[248][0]++;cov_1pebg41whg.s[1337]++;throw new Error(`Error, Bond State with ID ${bondID} does not exist`);}else{cov_1pebg41whg.b[248][1]++;}const bond=(cov_1pebg41whg.s[1338]++,JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[1339]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[250][0]++;cov_1pebg41whg.s[1340]++;throw new Error(`This Bond State with ID ${bondID} has already been used. Try another Bond ID`);}else{cov_1pebg41whg.b[250][1]++;}cov_1pebg41whg.s[1341]++;if(bond.Amount<amount){cov_1pebg41whg.b[251][0]++;cov_1pebg41whg.s[1342]++;throw new Error(`You are not supposed to do that.`);}else{cov_1pebg41whg.b[251][1]++;}const bookOrderBytes=(cov_1pebg41whg.s[1343]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1344]++;if((cov_1pebg41whg.b[253][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[253][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[252][0]++;cov_1pebg41whg.s[1345]++;bookOrder=[[],[]];}else{cov_1pebg41whg.b[252][1]++;cov_1pebg41whg.s[1346]++;bookOrder=JSON.parse(bookOrderBytes.toString());}const genericID=(cov_1pebg41whg.s[1347]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1348]++,await ctx.stub.createCompositeKey('AskOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1349]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:bond.ID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1350]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1351]++,bookOrder[0]);// If there is no bids it means we cannot match our ask order so we just submit it
cov_1pebg41whg.s[1352]++;if(bids.length===0){cov_1pebg41whg.b[254][0]++;let newID=(cov_1pebg41whg.s[1353]++,await this._splitBonds(ctx,bond.ID,amount));//console.log(newID)
const order=(cov_1pebg41whg.s[1354]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:newID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});//console.log(order);
cov_1pebg41whg.s[1355]++;bookOrder[1].push(order);let book=(cov_1pebg41whg.s[1356]++,await this._sortingAskOrders(ctx,bookOrder[1]));//console.log(book)
cov_1pebg41whg.s[1357]++;bookOrder=[bookOrder[0],book];cov_1pebg41whg.s[1358]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));// //console.log(ret)
cov_1pebg41whg.s[1359]++;return bookOrder;}else{cov_1pebg41whg.b[254][1]++;}const askReference=(cov_1pebg41whg.s[1360]++,currentOrder);let tokenKeyAcumulator=(cov_1pebg41whg.s[1361]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1362]++,[]);let tokenQuantitiesAcumulator=(cov_1pebg41whg.s[1363]++,[]);let counter=(cov_1pebg41whg.s[1364]++,askReference.Quantity);let totalTokens=(cov_1pebg41whg.s[1365]++,0);let balance=(cov_1pebg41whg.s[1366]++,0);// Check if our order can be matched
cov_1pebg41whg.s[1367]++;for await(const bid of bids){cov_1pebg41whg.s[1368]++;if((cov_1pebg41whg.b[256][0]++,bid.Price>=askReference.Price)&&(cov_1pebg41whg.b[256][1]++,!bid.FullMatch)){cov_1pebg41whg.b[255][0]++;cov_1pebg41whg.s[1369]++;counter=counter-bid.Quantity;cov_1pebg41whg.s[1370]++;balance=bid.Quantity+counter;cov_1pebg41whg.s[1371]++;if(counter>=0){cov_1pebg41whg.b[257][0]++;cov_1pebg41whg.s[1372]++;bid.FullMatch=true;cov_1pebg41whg.s[1373]++;bid.PartialMatch=false;cov_1pebg41whg.s[1374]++;bid.QuantityMatch=bid.Quantity;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1375]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1376]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1377]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_1pebg41whg.s[1378]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;// } else if(counter<0 && balance>0){
}else{cov_1pebg41whg.b[257][1]++;cov_1pebg41whg.s[1379]++;bid.FullMatch=false;cov_1pebg41whg.s[1380]++;bid.PartialMatch=true;cov_1pebg41whg.s[1381]++;bid.QuantityMatch=balance;cov_1pebg41whg.s[1382]++;bid.Quantity=bid.Quantity-balance;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1383]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1384]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1385]++;tokenQuantitiesAcumulator.push(counter+bid.Quantity);cov_1pebg41whg.s[1386]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1387]++;counter=0;cov_1pebg41whg.s[1388]++;break;}// else{
//     continue
// }
}else{cov_1pebg41whg.b[255][1]++;}}let newID=(cov_1pebg41whg.s[1389]++,await this._splitBonds(ctx,bond.ID,amount));//console.log(newID)
//console.log(counter)
// According to what matching situation we are, differents orders will be submitted
cov_1pebg41whg.s[1390]++;if(counter===0){cov_1pebg41whg.b[258][0]++;cov_1pebg41whg.s[1391]++;// Full Match
//console.log('case FULLMATCH')
currentOrder.TokenID=bond.ID;cov_1pebg41whg.s[1392]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1393]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1394]++;currentOrder.QuantityMatch=currentOrder.Quantity;// currentOrder.MatchID=askReference.MatchID;
}else{cov_1pebg41whg.b[258][1]++;cov_1pebg41whg.s[1395]++;if((cov_1pebg41whg.b[260][0]++,counter!==0)&&(cov_1pebg41whg.b[260][1]++,counter!==askReference.Quantity)){cov_1pebg41whg.b[259][0]++;cov_1pebg41whg.s[1396]++;// Partial Match
//console.log('PARTIALMATCH')
currentOrder.TokenID=bond.ID;cov_1pebg41whg.s[1397]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1398]++;currentOrder.PartialMatch=true;cov_1pebg41whg.s[1399]++;currentOrder.QuantityMatch=askReference.Quantity-counter;cov_1pebg41whg.s[1400]++;currentOrder.Quantity=counter;// currentOrder.MatchID=askReference.MatchID;
}else{cov_1pebg41whg.b[259][1]++;cov_1pebg41whg.s[1401]++;// No match
//console.log('NOMATCH')
currentOrder.TokenID=newID;cov_1pebg41whg.s[1402]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1403]++;currentOrder.PartialMatch=false;}}cov_1pebg41whg.s[1404]++;bookOrder[1].push(currentOrder);//console.log(bookOrder)
// Sort order book according to prior rules
let bookAsk=(cov_1pebg41whg.s[1405]++,await this._sortingAskOrders(ctx,bookOrder[1]));let bookBid=(cov_1pebg41whg.s[1406]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1407]++;bookOrder=[bookBid,bookAsk];//console.log(tokenKeyAcumulator)
cov_1pebg41whg.s[1408]++;if(tokenKeyAcumulator.length>0){cov_1pebg41whg.b[261][0]++;//console.log('Hay match')
const orderMatch=(cov_1pebg41whg.s[1409]++,{Orders:tokenAcumulator,Order:currentOrder});// let orderBookBuffer=Buffer.from(JSON.stringify(bookOrder));
// await ctx.stub.putState('OrderMatch'+genericID, orderBuffer);
// finally we set an event saying that our order has been matched and with which orders
// await ctx.SetEventName('OrderBook');
// await ctx.SetEventPayload(orderBBookBuffer);
cov_1pebg41whg.s[1410]++;bookOrder=await this._transferCashTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);//console.log(orderMatch)
//console.log(orderMatch.Orders)
//console.log(orderMatch.Order)
}else{cov_1pebg41whg.b[261][1]++;}cov_1pebg41whg.s[1411]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1412]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1413]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1414]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// AskMarketOrder will be executed by someone whose desire is selling bonds at market price.
async AskMarketOrder(ctx,amount,bondID,identificativo,date){cov_1pebg41whg.f[96]++;cov_1pebg41whg.s[1415]++;amount=parseInt(amount);cov_1pebg41whg.s[1416]++;if(amount<=0){cov_1pebg41whg.b[262][0]++;cov_1pebg41whg.s[1417]++;throw new Error(`Amount argument must be positive`);}else{cov_1pebg41whg.b[262][1]++;}const userID=(cov_1pebg41whg.s[1418]++,await ctx.GetUserIdentity('cif'));let myKey=(cov_1pebg41whg.s[1419]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondID]));cov_1pebg41whg.s[1420]++;myKey=myKey+identificativo;const bondBytes=(cov_1pebg41whg.s[1421]++,await ctx.stub.getState(myKey));cov_1pebg41whg.s[1422]++;if((cov_1pebg41whg.b[264][0]++,!bondBytes)||(cov_1pebg41whg.b[264][1]++,bondBytes.length===0)){cov_1pebg41whg.b[263][0]++;cov_1pebg41whg.s[1423]++;throw new Error(`Error, Bond State with key ${bondID} does not exist`);}else{cov_1pebg41whg.b[263][1]++;}// These prior verifications are also inside auxiliary function.
const bond=(cov_1pebg41whg.s[1424]++,JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[1425]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[265][0]++;cov_1pebg41whg.s[1426]++;throw new Error(`This Bond State with ID ${bondID} has already been used. Try another bond ID`);}else{cov_1pebg41whg.b[265][1]++;}cov_1pebg41whg.s[1427]++;if(bond.Amount<amount){cov_1pebg41whg.b[266][0]++;cov_1pebg41whg.s[1428]++;throw new Error(`Your token has not enough funds`);}else{cov_1pebg41whg.b[266][1]++;}// retrieve order book if it exists
const bookOrderBytes=(cov_1pebg41whg.s[1429]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1430]++;if((cov_1pebg41whg.b[268][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[268][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[267][0]++;cov_1pebg41whg.s[1431]++;throw new Error(`Order Book still not submitted`);}else{cov_1pebg41whg.b[267][1]++;cov_1pebg41whg.s[1432]++;bookOrder=JSON.parse(bookOrderBytes.toString());}// //console.log('Order book')
// //console.log(bookOrder)
const genericID=(cov_1pebg41whg.s[1433]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1434]++,await ctx.stub.createCompositeKey('AskOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1435]++,{ID:orderID,Quantity:amount,Price:'',MarketPrice:true,TokenID:bond.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:amount,// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1436]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1437]++,bookOrder[0]);// If there is no bids it means we cannot match our ask order
// if (bids.length===0){
//     // For sake of simplicity if there are no asks you cannot submit
//     // a market order
//     throw new Error(`There are no asks submitted.`)
// }
const askReference=(cov_1pebg41whg.s[1438]++,currentOrder);let tokenKeyAcumulator=(cov_1pebg41whg.s[1439]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1440]++,[]);let tokenQuantitiesAcumulator=(cov_1pebg41whg.s[1441]++,[]);let counter=(cov_1pebg41whg.s[1442]++,askReference.Quantity);let totalTokens=(cov_1pebg41whg.s[1443]++,0);let balance=(cov_1pebg41whg.s[1444]++,0);//console.log('askReference.Quantity')
//console.log(askReference.Quantity)
// Check if there is matching
cov_1pebg41whg.s[1445]++;for await(const bid of bids){cov_1pebg41whg.s[1446]++;if(!bid.FullMatch){cov_1pebg41whg.b[269][0]++;cov_1pebg41whg.s[1447]++;//console.log('Paso 1')
counter=counter-bid.Quantity;cov_1pebg41whg.s[1448]++;balance=bid.Quantity+counter;cov_1pebg41whg.s[1449]++;if(counter>=0){cov_1pebg41whg.b[270][0]++;cov_1pebg41whg.s[1450]++;//console.log('Paso 2')
bid.FullMatch=true;cov_1pebg41whg.s[1451]++;bid.PartialMatch=false;cov_1pebg41whg.s[1452]++;bid.QuantityMatch=bid.Quantity;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1453]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1454]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1455]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_1pebg41whg.s[1456]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;}else{cov_1pebg41whg.b[270][1]++;cov_1pebg41whg.s[1457]++;if((cov_1pebg41whg.b[272][0]++,counter<0)&&(cov_1pebg41whg.b[272][1]++,balance>0)){cov_1pebg41whg.b[271][0]++;cov_1pebg41whg.s[1458]++;//console.log('Paso 3')
bid.FullMatch=false;cov_1pebg41whg.s[1459]++;bid.PartialMatch=true;cov_1pebg41whg.s[1460]++;bid.QuantityMatch=balance;cov_1pebg41whg.s[1461]++;bid.Quantity=bid.Quantity-balance;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1462]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1463]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1464]++;tokenQuantitiesAcumulator.push(counter+bid.Quantity);cov_1pebg41whg.s[1465]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1466]++;counter=0;cov_1pebg41whg.s[1467]++;break;}else{cov_1pebg41whg.b[271][1]++;cov_1pebg41whg.s[1468]++;counter=0;cov_1pebg41whg.s[1469]++;break;}}// else{
//     //console.log('Paso 4')
//     bid.FullMatch=true;
//     bid.PartialMatch=false;
//     bid.QuantityMatch=bid.Quantity;
//     // bid.MatchID.push(askReference.ID);
//     // askReference.MatchID.push(bid.ID);
//     tokenKeyAcumulator.push(bid.ID);
//     tokenAcumulator.push(bid);
//     tokenQuantitiesAcumulator.push(bid.Quantity);
//     totalTokens=totalTokens+(bid.Price*bid.QuantityMatch);
//     break
// }
}else{cov_1pebg41whg.b[269][1]++;cov_1pebg41whg.s[1470]++;continue;}}let newID=(cov_1pebg41whg.s[1471]++,await this._splitBonds(ctx,bond.ID,amount));// if (counter===0){
//     // Full Match
cov_1pebg41whg.s[1472]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1473]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1474]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1475]++;currentOrder.QuantityMatch=askReference.Quantity-counter;//     // currentOrder.MatchID=askReference.MatchID;
// }else if(counter!==0 && counter!==askReference.Quantity ){
//    // Partial Match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch= true;
//     currentOrder.QuantityMatch=askReference.Quantity-counter;
//     currentOrder.Quantity=counter;
//     // currentOrder.MatchID=askReference.MatchID;
// }
// else{
//     // No match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch= false;
// }
cov_1pebg41whg.s[1476]++;bookOrder[1].push(currentOrder);let bookAsk=(cov_1pebg41whg.s[1477]++,await this._sortingAskOrders(ctx,bookOrder[1]));let bookBid=(cov_1pebg41whg.s[1478]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1479]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1480]++;if(tokenKeyAcumulator.length>0){cov_1pebg41whg.b[273][0]++;//console.log('Hay match')
const orderMatch=(cov_1pebg41whg.s[1481]++,{Orders:tokenAcumulator,Order:currentOrder});// finally we set an event saying that our order has been matched and with which orders
// await ctx.SetEventName('AskMatched');
// await ctx.SetEventPayload(orderBuffer);
cov_1pebg41whg.s[1482]++;bookOrder=await this._transferCashTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);//console.log(orderMatch)
//console.log(orderMatch.Orders)
//console.log(orderMatch.Order)
}else{cov_1pebg41whg.b[273][1]++;}cov_1pebg41whg.s[1483]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1484]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1485]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1486]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// BidMarketOrder will be executed by someone whose desire is buying bonds at market price.
async BidMarketOrder(ctx,amount,tokenID,identificativo,date){cov_1pebg41whg.f[97]++;cov_1pebg41whg.s[1487]++;if(amount<=0){cov_1pebg41whg.b[274][0]++;cov_1pebg41whg.s[1488]++;throw new Error(`Amount argument must be positive`);}else{cov_1pebg41whg.b[274][1]++;}const userID=(cov_1pebg41whg.s[1489]++,await ctx.GetUserIdentity('cif'));// These prior verifications are also inside auxiliary function
let myKey=(cov_1pebg41whg.s[1490]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));cov_1pebg41whg.s[1491]++;myKey=myKey+identificativo;const tokenBytes=(cov_1pebg41whg.s[1492]++,await ctx.stub.getState(myKey));cov_1pebg41whg.s[1493]++;if((cov_1pebg41whg.b[276][0]++,!tokenBytes)||(cov_1pebg41whg.b[276][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[275][0]++;cov_1pebg41whg.s[1494]++;throw new Error(`Error, Token State with ID ${tokenID} does not exist`);}else{cov_1pebg41whg.b[275][1]++;}const token=(cov_1pebg41whg.s[1495]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[1496]++;if(!token.CanBeUsed){cov_1pebg41whg.b[277][0]++;cov_1pebg41whg.s[1497]++;throw new Error(`This Token State with ID ${tokenID} has already been used. Try another token ID`);}else{cov_1pebg41whg.b[277][1]++;}const bookOrderBytes=(cov_1pebg41whg.s[1498]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1499]++;if((cov_1pebg41whg.b[279][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[279][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[278][0]++;cov_1pebg41whg.s[1500]++;throw new Error(`There are no asks submitted.`);// bookOrder=[[],[]];
}else{cov_1pebg41whg.b[278][1]++;cov_1pebg41whg.s[1501]++;bookOrder=JSON.parse(bookOrderBytes.toString());}const genericID=(cov_1pebg41whg.s[1502]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1503]++,await ctx.stub.createCompositeKey('BidOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1504]++,{ID:orderID,Quantity:parseInt(amount),Price:'',MarketPrice:true,TokenID:token.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Bid',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1505]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1506]++,bookOrder[0]);// If there  is no asks it means we cannot match our bid order, so it has no sense to commit a bid order
// at market price
// if ( asks.length===0){
//     // For sake of simplicity if there are no asks you cannot submit
//     // a market order
//     throw new Error(`There are no asks submitted.`)
// }
let bidReference=(cov_1pebg41whg.s[1507]++,currentOrder);let bondKeyAcumulator=(cov_1pebg41whg.s[1508]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1509]++,[]);let counter=(cov_1pebg41whg.s[1510]++,bidReference.Quantity);let balance=(cov_1pebg41whg.s[1511]++,0);let totalTokens=(cov_1pebg41whg.s[1512]++,0);let tokensCounter=(cov_1pebg41whg.s[1513]++,token.Amount);let balanceTokens=(cov_1pebg41whg.s[1514]++,0);//console.log('tokensCounter')
//console.log(tokensCounter)
//console.log(token)
//console.log('paso 1')
cov_1pebg41whg.s[1515]++;for await(const ask of asks){cov_1pebg41whg.s[1516]++;if(!ask.FullMatch){cov_1pebg41whg.b[280][0]++;cov_1pebg41whg.s[1517]++;//console.log('paso 2')
counter=counter-ask.Quantity;cov_1pebg41whg.s[1518]++;balance=ask.Quantity+counter;cov_1pebg41whg.s[1519]++;tokensCounter=tokensCounter-ask.Quantity*ask.Price;cov_1pebg41whg.s[1520]++;balanceTokens=ask.Quantity*ask.Price+tokensCounter;cov_1pebg41whg.s[1521]++;if(tokensCounter<=0){cov_1pebg41whg.b[281][0]++;//console.log('paso 3')
let amountSol=(cov_1pebg41whg.s[1522]++,Math.floor(balanceTokens/ask.Price));cov_1pebg41whg.s[1523]++;ask.QuantityMatch=amountSol;cov_1pebg41whg.s[1524]++;ask.Quantity=ask.Quantity-amountSol;cov_1pebg41whg.s[1525]++;ask.FullMatch=false;cov_1pebg41whg.s[1526]++;ask.PartialMatch=true;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1527]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1528]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1529]++;totalTokens=totalTokens+ask.Price*amountSol;// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1530]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1531]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1532]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1533]++;counter=0;cov_1pebg41whg.s[1534]++;break;}else{cov_1pebg41whg.b[281][1]++;cov_1pebg41whg.s[1535]++;//console.log('paso 4')
if(counter>=0){cov_1pebg41whg.b[282][0]++;cov_1pebg41whg.s[1536]++;//console.log('paso 4.1')
// FULL MATCH
ask.QuantityMatch=ask.Quantity;cov_1pebg41whg.s[1537]++;ask.FullMatch=true;cov_1pebg41whg.s[1538]++;ask.PartialMatch=false;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1539]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1540]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1541]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;}else{cov_1pebg41whg.b[282][1]++;cov_1pebg41whg.s[1542]++;// else if(counter<0 && balance>0){
//console.log('paso 4.2')
// Partial Match
ask.FullMatch=false;cov_1pebg41whg.s[1543]++;ask.PartialMatch=true;cov_1pebg41whg.s[1544]++;ask.QuantityMatch=balance;cov_1pebg41whg.s[1545]++;ask.Quantity=ask.Quantity-balance;// ask.MatchID.push(bidReference.ID);
// bidReference.MatchID.push(ask.TokenID);
cov_1pebg41whg.s[1546]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1547]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1548]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1549]++;counter=0;cov_1pebg41whg.s[1550]++;break;}}}else{cov_1pebg41whg.b[280][1]++;cov_1pebg41whg.s[1551]++;continue;}}//console.log('tokenAcumulator');
//console.log(tokenAcumulator);
let newID=(cov_1pebg41whg.s[1552]++,await this._splitMoney(ctx,token.ID,totalTokens));// if (counter===0){
//console.log('Full Match')
// Full Match
cov_1pebg41whg.s[1553]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1554]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1555]++;currentOrder.PartialMatch=false;// currentOrder.QuantityMatch=currentOrder.Quantity;
cov_1pebg41whg.s[1556]++;currentOrder.QuantityMatch=bidReference.Quantity-counter;// currentOrder.MatchID=bidReference.MatchID;
// }
// else{ 
// // if(counter!==0 && counter!==bidReference.Quantity){
//     //console.log('Partial Match')
//    // Partial Match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch= true;
//     currentOrder.QuantityMatch=bidReference.Quantity-counter;
//     currentOrder.Quantity=counter;
//     // currentOrder.MatchID=bidReference.MatchID;
// }
// else{
//     //console.log('No Match')
//     // No match
//     currentOrder.TokenID=newID;
//     currentOrder.FullMatch=false;
//     currentOrder.PartialMatch=false;
// }
cov_1pebg41whg.s[1557]++;bookOrder[0].push(currentOrder);const bookBid=(cov_1pebg41whg.s[1558]++,await this._sortingBidOrders(ctx,bookOrder[0]));const bookAsk=(cov_1pebg41whg.s[1559]++,await this._sortingAskOrders(ctx,bookOrder[1]));cov_1pebg41whg.s[1560]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1561]++;if(tokenAcumulator.length>0){cov_1pebg41whg.b[283][0]++;//console.log('Hay match')
const orderMatch=(cov_1pebg41whg.s[1562]++,{Orders:tokenAcumulator,Order:currentOrder});cov_1pebg41whg.s[1563]++;bookOrder=await this._transferBondTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);}else{cov_1pebg41whg.b[283][1]++;}cov_1pebg41whg.s[1564]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));// let orderBuffer=Buffer.from(JSON.stringify(orderMatch));
// await ctx.stub.putState('OrderMatch'+genericID,orderBuffer);
cov_1pebg41whg.s[1565]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1566]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));// }
cov_1pebg41whg.s[1567]++;return bookOrder;}// // This function will do a delivery versus payment when a Bid Order achieves a match
// // This function will be executed until no state according to that key exists in world state
// async MatchingBid(ctx,orderID){
//     const orderBookBytes=await ctx.stub.getState('OrderBook');
//     if (!orderBookBytes || orderBookBytes.length === 0){
//         throw new Error(`Error, Order Book State does not exist`);
//     }
//     let orderBook=JSON.parse(orderBookBytes.toString());
//     let asks=orderBook[1];
//     let bids=orderBook[0];
//     const orderMatchBytes= await ctx.stub.getState(orderID);
//     if (!orderMatchBytes || orderMatchBytes.length === 0){
//         throw new Error(`Error, Matching Order with ID ${orderID} does not exist`);
//     }
//     let orderMatch=JSON.parse(orderMatchBytes.toString());
//     let order=orderMatch.Order;
//     let orders=orderMatch.Orders[0];
//     let bond=asks.filter(item => item.ID===orders.ID);
//     let token=bids.filter(item=>item.ID===order.ID);
//     let tokenID;
//     let bondID;
//     // delivery vs payment will change the IDs of both token and bond and will be included in order book
//     [tokenID,bondID]=await this._dvp(ctx,bond[0].TokenID,token[0].TokenID, orders.QuantityMatch*order.Price,orders.QuantityMatch);
//     let newCounter=order.QuantityMatch-orders.QuantityMatch;
//     order.TokenID=tokenID;
//     order.QuantityMatch=newCounter;
//     let new_orders=orderMatch.Orders.filter(item => item.ID!==orders.ID);
//     // lo que pasa con el documento de matching: si se han transferido todos, se elimina, en caso contrario solo
//     // se elimina el order del ask
//     // If we have transfered all tokens/bonds we can delete Order Match document from world state
//     if (newCounter===0){
//         await ctx.stub.deleteState(orderID)
//     }else{
//         let match={
//             Orders: new_orders,
//             Order: order,
//         }
//         await ctx.stub.putState(orderID, Buffer.from(JSON.stringify(match)));
//     }
//     // We have to modify order book because orders partially matched have changed their tokens ID
//     // For Ask Orders
//     let myAsk=await asks.filter(item=> item.ID===orders.ID);
//     let index = asks.indexOf(myAsk[0]);
//     myAsk[0].TokenID=bondID;
//     myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
//     if (myAsk[0].RestingQuantity!==0){
//         asks[index]=myAsk[0];
//         orderBook=[bids,asks];
//     }else if (myAsk[0].RestingQuantity===0){
//         myAsk=await asks.filter(item=> item.ID!==orders.ID);
//         orderBook=[bids,myAsk];
//     }
//     asks=orderBook[1];
//     bids=orderBook[0];
//     // For Bid Order
//     let myBid=await bids.filter(item=> item.ID===order.ID);
//     index = bids.indexOf(myBid[0]);
//     myBid[0].TokenID=tokenID;
//     myBid[0].RestingQuantity=myBid[0].RestingQuantity-orders.QuantityMatch;
//     if (myBid[0].RestingQuantity!==0){
//         bids[index]=myBid[0];
//         orderBook=[bids,asks];
//     }else if (myBid[0].RestingQuantity===0){
//         myBid=await bids.filter(item=> item.ID!==order.ID);
//         orderBook=[myBid,asks];
//     }
//     await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// }
// // This function will do a delivery versus payment when an Ask Order achieves a match
// // This function will be executed until no state according to that key exists in world state
// async MatchingAsk(ctx,orderID){
//     const orderBookBytes=await ctx.stub.getState('OrderBook');
//     if (!orderBookBytes || orderBookBytes.length === 0){
//         throw new Error(`Error, Order Book State associated to key ${'OrderBook'} does not exist`);
//     }
//     let orderBook=JSON.parse(orderBookBytes.toString());
//     let asks=orderBook[1];
//     let bids=orderBook[0];
//     // Retrieve order Match State
//     const orderMatchBytes= await ctx.stub.getState(orderID);
//     if (!orderMatchBytes || orderMatchBytes.length === 0){
//         throw new Error(`Error, Matched Order State with ID ${orderID} does not exist`);
//     }
//     const orderMatch=JSON.parse(orderMatchBytes.toString());
//     let order=orderMatch.Order;
//     let orders=orderMatch.Orders[0];
//     let bond=await asks.filter(item => item.ID===order.ID);
//     let token=await bids.filter(item => item.ID===orders.ID);
//     let tokenID;
//     let bondID;
//     // delivery vs payment
//     [tokenID,bondID]=await this._dvp(ctx,bond[0].TokenID,token[0].TokenID, orders.QuantityMatch*orders.Price,orders.QuantityMatch);
//     let newCounter=order.QuantityMatch-orders.QuantityMatch;
//     order.TokenID=tokenID;
//     order.QuantityMatch=newCounter;
//     let new_orders=await orderMatch.Orders.filter(item => item.ID!==orders.ID);
//     // If every Token/Bond have been transfered, we will delete Match Order State
//     if (newCounter===0){
//         await ctx.stub.deleteState(orderID)
//     }else{
//         const match={
//             Orders: new_orders,
//             Order: order,
//         }
//         await ctx.stub.putState(orderID, Buffer.from(JSON.stringify(match)))
//     }
//     let myBid=await bids.filter(item=> item.ID===orders.ID);
//     let index = bids.indexOf(myBid[0]);
//     myBid[0].TokenID=tokenID;
//     myBid[0].RestingQuantity=myBid[0].RestingQuantity-orders.QuantityMatch;
//     if (myBid[0].RestingQuantity!==0){
//         bids[index]=myBid[0];
//         orderBook=[bids,asks];
//     }else if (myBid[0].RestingQuantity===0){
//         myBid=await bids.filter(item=> item.ID!==orders.ID);
//         orderBook=[myBid,asks];
//     }
//     asks=orderBook[1];
//     bids=orderBook[0];
//     let myAsk=await asks.filter(item=> item.ID===order.ID);
//     index = asks.indexOf(myAsk[0]);
//     myAsk[0].TokenID=bondID;
//     myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
//     if (myAsk[0].RestingQuantity!==0){
//         asks[index]=myAsk[0];
//         orderBook=[bids,asks];
//     }else if (myAsk[0].RestingQuantity===0){
//         myAsk=await asks.filter(item=> item.ID!==order.ID);
//         orderBook=[bids,myAsk];
//     }
//     await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// }
// async _dvp(ctx,bondID,tokenID, tokensToTransfer, bondsToTransfer){
//     //console.log('Paso 1')
//     const tokenBytes=await ctx.stub.getState(tokenID);
//     if (!tokenBytes || tokenBytes.length === 0) {
//         throw new Error(`Error, Token State with key ${tokenID} does not exist`);
//     }
//     //console.log('Paso 2')
//     const token=JSON.parse(tokenBytes.toString());
//     const bondBytes=await ctx.stub.getState(bondID);
//     if (!bondBytes || bondBytes.length === 0) {
//         throw new Error(`Error, Bond State with ID ${bondID} does not exist`);
//     }
//     const bond=JSON.parse(bondBytes.toString());
//     const genericID=await ctx.stub.getTxID();
//     const key1=await ctx.stub.createCompositeKey('securitizationCoin',[bond.Owner,genericID]);
//     const key2=await ctx.stub.createCompositeKey('securitizationCoin',[token.Owner,genericID]);
//     const bondKey1=await ctx.stub.createCompositeKey('BondToken',[token.Owner,genericID]);
//     const bondKey2=await ctx.stub.createCompositeKey('BondToken',[bond.Owner,genericID]);
//     const balanceTokens=token.Amount-tokensToTransfer;
//     let utxo1;
//     let utxo2;
//     let typeID;
//     typeID=':1';
//     utxo1={
//         ID: key1+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: token.Owner,
//         Issuer: token.Issuer,
//         Amount: balanceTokens,
//         CanBeUsed: false,
//     };
//     typeID=':0';
//     utxo2={
//         ID: key2+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: bond.Owner,
//         Issuer: token.Issuer,
//         Amount: tokensToTransfer,
//         CanBeUsed: true
//     };
//     const balanceBonds=bond.Amount-bondsToTransfer;
//     let bond1;
//     let bond2;
//     typeID=':1'
//     // TODO:
//     // Bond Arguments.
//     bond1={
//         ID: bondKey1+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: token.Owner,
//         Issuer: token.Issuer,
//         Amount: balanceBonds,
//         CanBeUsed: false,
//     };
//     typeID=':0'
//     bond2={
//         ID: bondKey2+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: bond.Owner,
//         Issuer: token.Issuer,
//         Amount: bondsToTransfer,
//         CanBeUsed: true
//     };
//     await ctx.stub.deleteState(tokenID);
//     await ctx.stub.deleteState(bondID);
//     //console.log(balanceTokens)
//     //console.log(balanceBonds)
//     if (balanceTokens!==0){
//         //console.log('balanceTokens!==0')
//         await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));
//         await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));
//     }else{
//         await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));  
//     }
//     if (balanceBonds!==0){
//         //console.log('balanceBonds!==0')
//         await ctx.stub.putState(bond1.ID,Buffer.from(JSON.stringify(bond1)));
//         await ctx.stub.putState(bond2.ID,Buffer.from(JSON.stringify(bond2)));
//     }else{
//         await ctx.stub.putState(bond2.ID,Buffer.from(JSON.stringify(bond2)));
//     }
//     return [utxo1.ID, bond1.ID]
// }
async QueryOrderBook(ctx){cov_1pebg41whg.f[98]++;const bookOrderBytes=(cov_1pebg41whg.s[1568]++,await ctx.stub.getState('OrderBook'));cov_1pebg41whg.s[1569]++;if((cov_1pebg41whg.b[285][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[285][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[284][0]++;cov_1pebg41whg.s[1570]++;throw new Error(`Order Book does not exist`);}else{cov_1pebg41whg.b[284][1]++;}const bookOrder=(cov_1pebg41whg.s[1571]++,JSON.parse(bookOrderBytes.toString()));cov_1pebg41whg.s[1572]++;return bookOrder;}// // We must change this function
// // Order book implementation URL http://web.archive.org/web/20110205154238/http://howtohft.blogspot.com/2011/02/how-to-build-fast-limit-order-book.html
}// module.exports.originationContract=originationContract;
cov_1pebg41whg.s[1573]++;module.exports.securitizationContext=securitizationContext;cov_1pebg41whg.s[1574]++;module.exports.servicingContract=servicingContract;cov_1pebg41whg.s[1575]++;module.exports.ppaContract=ppaContract;cov_1pebg41whg.s[1576]++;module.exports.commonSecuritizationContract=commonSecuritizationContract;cov_1pebg41whg.s[1577]++;module.exports.bondIssuanceContract=bondIssuanceContract;