'use strict';var cov_1pebg41whg=function(){var path="/home/oliver/go/src/github.com/hyperledger/fabric-samples/securitization-chaincode/chaincodes/my_chaincodeTest/lib/securitizationContract.js";var hash="ceaa94ba4674793a1e8d60e43661421e0be8c717";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/oliver/go/src/github.com/hyperledger/fabric-samples/securitization-chaincode/chaincodes/my_chaincodeTest/lib/securitizationContract.js",statementMap:{"0":{start:{line:3,column:26},end:{line:3,column:56}},"1":{start:{line:9,column:8},end:{line:9,column:16}},"2":{start:{line:13,column:8},end:{line:13,column:46}},"3":{start:{line:17,column:8},end:{line:17,column:59}},"4":{start:{line:21,column:8},end:{line:21,column:42}},"5":{start:{line:26,column:8},end:{line:26,column:77}},"6":{start:{line:31,column:8},end:{line:31,column:24}},"7":{start:{line:35,column:8},end:{line:35,column:38}},"8":{start:{line:39,column:8},end:{line:39,column:32}},"9":{start:{line:43,column:8},end:{line:43,column:67}},"10":{start:{line:52,column:8},end:{line:52,column:43}},"11":{start:{line:60,column:8},end:{line:60,column:43}},"12":{start:{line:68,column:21},end:{line:68,column:40}},"13":{start:{line:70,column:17},end:{line:70,column:67}},"14":{start:{line:72,column:8},end:{line:74,column:9}},"15":{start:{line:73,column:12},end:{line:73,column:74}},"16":{start:{line:75,column:16},end:{line:75,column:57}},"17":{start:{line:76,column:19},end:{line:76,column:26}},"18":{start:{line:77,column:20},end:{line:77,column:30}},"19":{start:{line:80,column:8},end:{line:84,column:9}},"20":{start:{line:80,column:19},end:{line:80,column:20}},"21":{start:{line:81,column:12},end:{line:83,column:13}},"22":{start:{line:82,column:16},end:{line:82,column:73}},"23":{start:{line:102,column:27},end:{line:102,column:44}},"24":{start:{line:104,column:18},end:{line:104,column:19}},"25":{start:{line:105,column:8},end:{line:113,column:9}},"26":{start:{line:105,column:18},end:{line:105,column:19}},"27":{start:{line:106,column:12},end:{line:109,column:13}},"28":{start:{line:107,column:16},end:{line:107,column:24}},"29":{start:{line:108,column:16},end:{line:108,column:30}},"30":{start:{line:110,column:12},end:{line:112,column:13}},"31":{start:{line:111,column:16},end:{line:111,column:79}},"32":{start:{line:115,column:8},end:{line:117,column:9}},"33":{start:{line:116,column:12},end:{line:116,column:45}},"34":{start:{line:119,column:8},end:{line:119,column:34}},"35":{start:{line:120,column:8},end:{line:122,column:9}},"36":{start:{line:121,column:12},end:{line:121,column:64}},"37":{start:{line:124,column:8},end:{line:124,column:19}},"38":{start:{line:150,column:24},end:{line:150,column:48}},"39":{start:{line:152,column:19},end:{line:152,column:93}},"40":{start:{line:154,column:8},end:{line:156,column:9}},"41":{start:{line:155,column:12},end:{line:155,column:44}},"42":{start:{line:158,column:19},end:{line:158,column:23}},"43":{start:{line:159,column:19},end:{line:168,column:9}},"44":{start:{line:170,column:8},end:{line:170,column:72}},"45":{start:{line:171,column:8},end:{line:171,column:19}},"46":{start:{line:175,column:21},end:{line:175,column:53}},"47":{start:{line:176,column:21},end:{line:176,column:96}},"48":{start:{line:178,column:23},end:{line:178,column:25}},"49":{start:{line:179,column:20},end:{line:179,column:21}},"50":{start:{line:181,column:8},end:{line:192,column:9}},"51":{start:{line:182,column:12},end:{line:182,column:53}},"52":{start:{line:184,column:12},end:{line:184,column:32}},"53":{start:{line:185,column:12},end:{line:188,column:13}},"54":{start:{line:186,column:16},end:{line:186,column:42}},"55":{start:{line:187,column:16},end:{line:187,column:39}},"56":{start:{line:189,column:12},end:{line:191,column:13}},"57":{start:{line:190,column:16},end:{line:190,column:21}},"58":{start:{line:193,column:8},end:{line:195,column:9}},"59":{start:{line:194,column:12},end:{line:194,column:59}},"60":{start:{line:196,column:16},end:{line:196,column:74}},"61":{start:{line:197,column:8},end:{line:197,column:18}},"62":{start:{line:212,column:18},end:{line:212,column:79}},"63":{start:{line:213,column:8},end:{line:215,column:9}},"64":{start:{line:214,column:12},end:{line:214,column:49}},"65":{start:{line:216,column:8},end:{line:216,column:19}},"66":{start:{line:220,column:19},end:{line:220,column:21}},"67":{start:{line:221,column:12},end:{line:221,column:33}},"68":{start:{line:222,column:2},end:{line:247,column:3}},"69":{start:{line:223,column:3},end:{line:245,column:4}},"70":{start:{line:224,column:18},end:{line:224,column:20}},"71":{start:{line:226,column:4},end:{line:243,column:5}},"72":{start:{line:227,column:5},end:{line:227,column:36}},"73":{start:{line:228,column:5},end:{line:228,column:45}},"74":{start:{line:229,column:5},end:{line:234,column:6}},"75":{start:{line:230,column:6},end:{line:230,column:67}},"76":{start:{line:233,column:6},end:{line:233,column:55}},"77":{start:{line:236,column:5},end:{line:236,column:33}},"78":{start:{line:237,column:5},end:{line:242,column:6}},"79":{start:{line:238,column:6},end:{line:238,column:68}},"80":{start:{line:241,column:6},end:{line:241,column:56}},"81":{start:{line:244,column:4},end:{line:244,column:29}},"82":{start:{line:246,column:3},end:{line:246,column:31}},"83":{start:{line:248,column:2},end:{line:248,column:19}},"84":{start:{line:249,column:2},end:{line:249,column:20}},"85":{start:{line:254,column:18},end:{line:254,column:73}},"86":{start:{line:255,column:30},end:{line:255,column:66}},"87":{start:{line:256,column:16},end:{line:256,column:64}},"88":{start:{line:257,column:2},end:{line:257,column:17}},"89":{start:{line:271,column:8},end:{line:271,column:42}},"90":{start:{line:274,column:24},end:{line:274,column:48}},"91":{start:{line:275,column:22},end:{line:275,column:54}},"92":{start:{line:277,column:18},end:{line:277,column:92}},"93":{start:{line:280,column:8},end:{line:280,column:19}},"94":{start:{line:282,column:34},end:{line:291,column:9}},"95":{start:{line:292,column:8},end:{line:292,column:103}},"96":{start:{line:293,column:8},end:{line:293,column:34}},"97":{start:{line:298,column:23},end:{line:298,column:82}},"98":{start:{line:299,column:20},end:{line:299,column:21}},"99":{start:{line:302,column:8},end:{line:305,column:13}},"100":{start:{line:303,column:12},end:{line:303,column:52}},"101":{start:{line:304,column:12},end:{line:304,column:30}},"102":{start:{line:306,column:8},end:{line:310,column:9}},"103":{start:{line:307,column:12},end:{line:307,column:45}},"104":{start:{line:308,column:14},end:{line:310,column:9}},"105":{start:{line:309,column:12},end:{line:309,column:24}},"106":{start:{line:311,column:8},end:{line:311,column:23}},"107":{start:{line:316,column:21},end:{line:316,column:53}},"108":{start:{line:317,column:23},end:{line:317,column:98}},"109":{start:{line:318,column:22},end:{line:318,column:24}},"110":{start:{line:320,column:8},end:{line:323,column:9}},"111":{start:{line:321,column:12},end:{line:321,column:52}},"112":{start:{line:322,column:12},end:{line:322,column:32}},"113":{start:{line:324,column:8},end:{line:324,column:23}},"114":{start:{line:329,column:21},end:{line:329,column:53}},"115":{start:{line:330,column:23},end:{line:330,column:89}},"116":{start:{line:331,column:22},end:{line:331,column:24}},"117":{start:{line:333,column:8},end:{line:336,column:9}},"118":{start:{line:334,column:12},end:{line:334,column:52}},"119":{start:{line:335,column:12},end:{line:335,column:32}},"120":{start:{line:337,column:8},end:{line:337,column:23}},"121":{start:{line:346,column:8},end:{line:346,column:40}},"122":{start:{line:349,column:8},end:{line:349,column:43}},"123":{start:{line:352,column:22},end:{line:352,column:42}},"124":{start:{line:353,column:8},end:{line:355,column:9}},"125":{start:{line:354,column:12},end:{line:354,column:74}},"126":{start:{line:356,column:21},end:{line:356,column:40}},"127":{start:{line:358,column:8},end:{line:360,column:9}},"128":{start:{line:359,column:12},end:{line:359,column:74}},"129":{start:{line:361,column:8},end:{line:361,column:38}},"130":{start:{line:362,column:16},end:{line:362,column:57}},"131":{start:{line:363,column:19},end:{line:363,column:26}},"132":{start:{line:364,column:20},end:{line:364,column:30}},"133":{start:{line:367,column:8},end:{line:371,column:9}},"134":{start:{line:367,column:19},end:{line:367,column:20}},"135":{start:{line:368,column:12},end:{line:370,column:13}},"136":{start:{line:369,column:16},end:{line:369,column:73}},"137":{start:{line:372,column:20},end:{line:372,column:35}},"138":{start:{line:373,column:8},end:{line:432,column:9}},"139":{start:{line:375,column:16},end:{line:380,column:17}},"140":{start:{line:377,column:20},end:{line:377,column:82}},"141":{start:{line:379,column:20},end:{line:379,column:26}},"142":{start:{line:382,column:16},end:{line:386,column:17}},"143":{start:{line:383,column:20},end:{line:383,column:82}},"144":{start:{line:385,column:20},end:{line:385,column:26}},"145":{start:{line:388,column:16},end:{line:392,column:17}},"146":{start:{line:389,column:20},end:{line:389,column:82}},"147":{start:{line:391,column:20},end:{line:391,column:26}},"148":{start:{line:394,column:16},end:{line:398,column:17}},"149":{start:{line:395,column:20},end:{line:395,column:82}},"150":{start:{line:397,column:20},end:{line:397,column:26}},"151":{start:{line:400,column:16},end:{line:404,column:17}},"152":{start:{line:401,column:20},end:{line:401,column:82}},"153":{start:{line:403,column:20},end:{line:403,column:26}},"154":{start:{line:406,column:16},end:{line:410,column:17}},"155":{start:{line:407,column:20},end:{line:407,column:82}},"156":{start:{line:409,column:20},end:{line:409,column:26}},"157":{start:{line:412,column:16},end:{line:416,column:17}},"158":{start:{line:413,column:20},end:{line:413,column:82}},"159":{start:{line:415,column:20},end:{line:415,column:26}},"160":{start:{line:418,column:16},end:{line:422,column:17}},"161":{start:{line:419,column:20},end:{line:419,column:82}},"162":{start:{line:421,column:20},end:{line:421,column:26}},"163":{start:{line:424,column:16},end:{line:428,column:17}},"164":{start:{line:425,column:20},end:{line:425,column:82}},"165":{start:{line:427,column:20},end:{line:427,column:26}},"166":{start:{line:437,column:15},end:{line:437,column:42}},"167":{start:{line:438,column:8},end:{line:438,column:20}},"168":{start:{line:447,column:23},end:{line:447,column:80}},"169":{start:{line:448,column:20},end:{line:448,column:22}},"170":{start:{line:449,column:8},end:{line:452,column:9}},"171":{start:{line:451,column:12},end:{line:451,column:34}},"172":{start:{line:453,column:8},end:{line:459,column:9}},"173":{start:{line:454,column:12},end:{line:454,column:24}},"174":{start:{line:455,column:14},end:{line:459,column:9}},"175":{start:{line:456,column:12},end:{line:456,column:24}},"176":{start:{line:458,column:12},end:{line:458,column:47}},"177":{start:{line:469,column:23},end:{line:469,column:53}},"178":{start:{line:470,column:8},end:{line:474,column:9}},"179":{start:{line:471,column:12},end:{line:471,column:24}},"180":{start:{line:473,column:12},end:{line:473,column:23}},"181":{start:{line:485,column:23},end:{line:485,column:83}},"182":{start:{line:486,column:20},end:{line:486,column:21}},"183":{start:{line:488,column:8},end:{line:491,column:13}},"184":{start:{line:489,column:12},end:{line:489,column:52}},"185":{start:{line:490,column:12},end:{line:490,column:30}},"186":{start:{line:492,column:8},end:{line:496,column:9}},"187":{start:{line:493,column:12},end:{line:493,column:67}},"188":{start:{line:494,column:14},end:{line:496,column:9}},"189":{start:{line:495,column:12},end:{line:495,column:25}},"190":{start:{line:497,column:8},end:{line:497,column:23}},"191":{start:{line:511,column:23},end:{line:511,column:89}},"192":{start:{line:512,column:20},end:{line:512,column:21}},"193":{start:{line:515,column:8},end:{line:520,column:9}},"194":{start:{line:518,column:12},end:{line:518,column:52}},"195":{start:{line:519,column:12},end:{line:519,column:30}},"196":{start:{line:521,column:8},end:{line:525,column:9}},"197":{start:{line:522,column:12},end:{line:522,column:67}},"198":{start:{line:523,column:14},end:{line:525,column:9}},"199":{start:{line:524,column:12},end:{line:524,column:24}},"200":{start:{line:526,column:8},end:{line:526,column:23}},"201":{start:{line:531,column:21},end:{line:531,column:78}},"202":{start:{line:533,column:8},end:{line:535,column:9}},"203":{start:{line:534,column:12},end:{line:534,column:51}},"204":{start:{line:536,column:8},end:{line:536,column:35}},"205":{start:{line:542,column:17},end:{line:542,column:74}},"206":{start:{line:543,column:16},end:{line:543,column:18}},"207":{start:{line:544,column:8},end:{line:547,column:9}},"208":{start:{line:545,column:12},end:{line:545,column:27}},"209":{start:{line:546,column:12},end:{line:546,column:22}},"210":{start:{line:548,column:29},end:{line:548,column:62}},"211":{start:{line:549,column:8},end:{line:549,column:32}},"212":{start:{line:550,column:8},end:{line:550,column:28}},"213":{start:{line:551,column:8},end:{line:551,column:18}},"214":{start:{line:561,column:26},end:{line:561,column:117}},"215":{start:{line:562,column:30},end:{line:562,column:68}},"216":{start:{line:563,column:8},end:{line:565,column:9}},"217":{start:{line:564,column:12},end:{line:564,column:82}},"218":{start:{line:568,column:21},end:{line:568,column:53}},"219":{start:{line:570,column:8},end:{line:572,column:9}},"220":{start:{line:571,column:12},end:{line:571,column:103}},"221":{start:{line:573,column:8},end:{line:575,column:9}},"222":{start:{line:574,column:12},end:{line:574,column:67}},"223":{start:{line:579,column:24},end:{line:579,column:48}},"224":{start:{line:582,column:20},end:{line:582,column:83}},"225":{start:{line:585,column:34},end:{line:585,column:70}},"226":{start:{line:586,column:8},end:{line:588,column:9}},"227":{start:{line:587,column:12},end:{line:587,column:90}},"228":{start:{line:593,column:18},end:{line:593,column:19}},"229":{start:{line:594,column:20},end:{line:594,column:22}},"230":{start:{line:595,column:20},end:{line:595,column:24}},"231":{start:{line:597,column:38},end:{line:597,column:82}},"232":{start:{line:598,column:29},end:{line:598,column:51}},"233":{start:{line:600,column:23},end:{line:600,column:25}},"234":{start:{line:602,column:28},end:{line:602,column:56}},"235":{start:{line:605,column:22},end:{line:605,column:24}},"236":{start:{line:606,column:20},end:{line:606,column:22}},"237":{start:{line:607,column:22},end:{line:607,column:24}},"238":{start:{line:608,column:29},end:{line:608,column:31}},"239":{start:{line:610,column:34},end:{line:610,column:36}},"240":{start:{line:611,column:25},end:{line:611,column:27}},"241":{start:{line:612,column:33},end:{line:612,column:35}},"242":{start:{line:613,column:33},end:{line:613,column:35}},"243":{start:{line:615,column:31},end:{line:615,column:33}},"244":{start:{line:616,column:59},end:{line:616,column:61}},"245":{start:{line:617,column:36},end:{line:617,column:38}},"246":{start:{line:618,column:36},end:{line:618,column:38}},"247":{start:{line:619,column:69},end:{line:619,column:71}},"248":{start:{line:620,column:48},end:{line:620,column:50}},"249":{start:{line:621,column:37},end:{line:621,column:39}},"250":{start:{line:622,column:30},end:{line:622,column:32}},"251":{start:{line:623,column:29},end:{line:623,column:31}},"252":{start:{line:624,column:33},end:{line:624,column:35}},"253":{start:{line:625,column:25},end:{line:625,column:27}},"254":{start:{line:626,column:33},end:{line:626,column:36}},"255":{start:{line:629,column:41},end:{line:629,column:43}},"256":{start:{line:630,column:45},end:{line:630,column:47}},"257":{start:{line:631,column:30},end:{line:631,column:32}},"258":{start:{line:632,column:35},end:{line:632,column:37}},"259":{start:{line:633,column:34},end:{line:633,column:36}},"260":{start:{line:634,column:39},end:{line:634,column:41}},"261":{start:{line:635,column:43},end:{line:635,column:45}},"262":{start:{line:636,column:33},end:{line:636,column:35}},"263":{start:{line:637,column:43},end:{line:637,column:45}},"264":{start:{line:638,column:44},end:{line:638,column:46}},"265":{start:{line:639,column:32},end:{line:639,column:34}},"266":{start:{line:640,column:42},end:{line:640,column:44}},"267":{start:{line:641,column:35},end:{line:641,column:37}},"268":{start:{line:642,column:33},end:{line:642,column:35}},"269":{start:{line:643,column:37},end:{line:643,column:39}},"270":{start:{line:644,column:34},end:{line:644,column:36}},"271":{start:{line:645,column:39},end:{line:645,column:41}},"272":{start:{line:646,column:51},end:{line:646,column:53}},"273":{start:{line:647,column:35},end:{line:647,column:37}},"274":{start:{line:648,column:36},end:{line:648,column:38}},"275":{start:{line:649,column:49},end:{line:649,column:51}},"276":{start:{line:650,column:44},end:{line:650,column:46}},"277":{start:{line:651,column:37},end:{line:651,column:39}},"278":{start:{line:652,column:38},end:{line:652,column:40}},"279":{start:{line:653,column:41},end:{line:653,column:43}},"280":{start:{line:654,column:51},end:{line:654,column:53}},"281":{start:{line:655,column:34},end:{line:655,column:36}},"282":{start:{line:656,column:30},end:{line:656,column:32}},"283":{start:{line:657,column:38},end:{line:657,column:40}},"284":{start:{line:658,column:42},end:{line:658,column:44}},"285":{start:{line:659,column:34},end:{line:659,column:48}},"286":{start:{line:660,column:38},end:{line:660,column:40}},"287":{start:{line:661,column:24},end:{line:661,column:29}},"288":{start:{line:662,column:33},end:{line:662,column:35}},"289":{start:{line:663,column:34},end:{line:663,column:36}},"290":{start:{line:664,column:36},end:{line:664,column:38}},"291":{start:{line:665,column:37},end:{line:665,column:39}},"292":{start:{line:668,column:18},end:{line:746,column:9}},"293":{start:{line:748,column:28},end:{line:748,column:60}},"294":{start:{line:751,column:8},end:{line:751,column:47}},"295":{start:{line:752,column:8},end:{line:752,column:46}},"296":{start:{line:757,column:8},end:{line:757,column:51}},"297":{start:{line:758,column:8},end:{line:758,column:18}},"298":{start:{line:764,column:21},end:{line:764,column:58}},"299":{start:{line:765,column:22},end:{line:765,column:46}},"300":{start:{line:766,column:15},end:{line:766,column:81}},"301":{start:{line:767,column:28},end:{line:767,column:55}},"302":{start:{line:769,column:8},end:{line:778,column:9}},"303":{start:{line:770,column:12},end:{line:775,column:14}},"304":{start:{line:777,column:12},end:{line:777,column:66}},"305":{start:{line:780,column:28},end:{line:780,column:67}},"306":{start:{line:782,column:8},end:{line:782,column:47}},"307":{start:{line:783,column:8},end:{line:783,column:45}},"308":{start:{line:785,column:8},end:{line:785,column:59}},"309":{start:{line:786,column:8},end:{line:786,column:25}},"310":{start:{line:791,column:21},end:{line:791,column:82}},"311":{start:{line:792,column:20},end:{line:792,column:22}},"312":{start:{line:793,column:8},end:{line:795,column:9}},"313":{start:{line:794,column:12},end:{line:794,column:58}},"314":{start:{line:796,column:8},end:{line:796,column:22}},"315":{start:{line:800,column:22},end:{line:800,column:54}},"316":{start:{line:801,column:23},end:{line:801,column:53}},"317":{start:{line:802,column:8},end:{line:804,column:9}},"318":{start:{line:803,column:12},end:{line:803,column:73}},"319":{start:{line:805,column:18},end:{line:805,column:49}},"320":{start:{line:807,column:8},end:{line:809,column:9}},"321":{start:{line:808,column:12},end:{line:808,column:95}},"322":{start:{line:810,column:8},end:{line:810,column:18}},"323":{start:{line:818,column:22},end:{line:818,column:54}},"324":{start:{line:819,column:23},end:{line:819,column:53}},"325":{start:{line:820,column:8},end:{line:822,column:9}},"326":{start:{line:821,column:12},end:{line:821,column:73}},"327":{start:{line:823,column:18},end:{line:823,column:49}},"328":{start:{line:828,column:8},end:{line:830,column:9}},"329":{start:{line:829,column:12},end:{line:829,column:74}},"330":{start:{line:833,column:8},end:{line:835,column:9}},"331":{start:{line:834,column:12},end:{line:834,column:64}},"332":{start:{line:838,column:8},end:{line:838,column:26}},"333":{start:{line:842,column:8},end:{line:842,column:46}},"334":{start:{line:844,column:28},end:{line:844,column:60}},"335":{start:{line:847,column:8},end:{line:847,column:47}},"336":{start:{line:848,column:8},end:{line:848,column:45}},"337":{start:{line:849,column:8},end:{line:849,column:55}},"338":{start:{line:850,column:8},end:{line:850,column:18}},"339":{start:{line:857,column:24},end:{line:857,column:48}},"340":{start:{line:858,column:23},end:{line:858,column:53}},"341":{start:{line:860,column:8},end:{line:862,column:9}},"342":{start:{line:861,column:12},end:{line:861,column:71}},"343":{start:{line:863,column:18},end:{line:863,column:49}},"344":{start:{line:864,column:22},end:{line:864,column:54}},"345":{start:{line:865,column:8},end:{line:867,column:9}},"346":{start:{line:866,column:9},end:{line:866,column:89}},"347":{start:{line:868,column:8},end:{line:870,column:9}},"348":{start:{line:869,column:12},end:{line:869,column:60}},"349":{start:{line:871,column:8},end:{line:873,column:9}},"350":{start:{line:872,column:12},end:{line:872,column:67}},"351":{start:{line:877,column:27},end:{line:877,column:57}},"352":{start:{line:879,column:8},end:{line:901,column:9}},"353":{start:{line:880,column:12},end:{line:886,column:13}},"354":{start:{line:887,column:12},end:{line:887,column:37}},"355":{start:{line:888,column:12},end:{line:888,column:40}},"356":{start:{line:889,column:12},end:{line:889,column:78}},"357":{start:{line:891,column:12},end:{line:891,column:83}},"358":{start:{line:893,column:12},end:{line:893,column:75}},"359":{start:{line:895,column:12},end:{line:895,column:37}},"360":{start:{line:896,column:12},end:{line:896,column:40}},"361":{start:{line:897,column:12},end:{line:897,column:50}},"362":{start:{line:898,column:12},end:{line:898,column:52}},"363":{start:{line:899,column:12},end:{line:899,column:78}},"364":{start:{line:900,column:12},end:{line:900,column:83}},"365":{start:{line:902,column:24},end:{line:902,column:57}},"366":{start:{line:903,column:8},end:{line:903,column:47}},"367":{start:{line:904,column:8},end:{line:904,column:49}},"368":{start:{line:905,column:8},end:{line:905,column:19}},"369":{start:{line:934,column:30},end:{line:947,column:9}},"370":{start:{line:949,column:21},end:{line:949,column:53}},"371":{start:{line:950,column:23},end:{line:950,column:53}},"372":{start:{line:951,column:8},end:{line:953,column:9}},"373":{start:{line:952,column:12},end:{line:952,column:67}},"374":{start:{line:954,column:18},end:{line:954,column:49}},"375":{start:{line:956,column:8},end:{line:958,column:9}},"376":{start:{line:957,column:12},end:{line:957,column:68}},"377":{start:{line:961,column:8},end:{line:963,column:9}},"378":{start:{line:962,column:12},end:{line:962,column:60}},"379":{start:{line:965,column:8},end:{line:967,column:9}},"380":{start:{line:966,column:12},end:{line:966,column:73}},"381":{start:{line:968,column:23},end:{line:968,column:97}},"382":{start:{line:968,column:56},end:{line:968,column:95}},"383":{start:{line:970,column:8},end:{line:977,column:9}},"384":{start:{line:971,column:12},end:{line:971,column:86}},"385":{start:{line:974,column:12},end:{line:974,column:56}},"386":{start:{line:975,column:12},end:{line:975,column:56}},"387":{start:{line:976,column:12},end:{line:976,column:50}},"388":{start:{line:979,column:8},end:{line:979,column:46}},"389":{start:{line:980,column:8},end:{line:980,column:40}},"390":{start:{line:981,column:8},end:{line:981,column:42}},"391":{start:{line:983,column:28},end:{line:983,column:60}},"392":{start:{line:984,column:8},end:{line:984,column:55}},"393":{start:{line:985,column:8},end:{line:985,column:54}},"394":{start:{line:986,column:8},end:{line:986,column:47}},"395":{start:{line:987,column:8},end:{line:987,column:18}},"396":{start:{line:1037,column:20},end:{line:1037,column:52}},"397":{start:{line:1039,column:23},end:{line:1039,column:53}},"398":{start:{line:1040,column:8},end:{line:1042,column:9}},"399":{start:{line:1041,column:12},end:{line:1041,column:68}},"400":{start:{line:1043,column:16},end:{line:1043,column:47}},"401":{start:{line:1045,column:8},end:{line:1047,column:9}},"402":{start:{line:1046,column:12},end:{line:1046,column:74}},"403":{start:{line:1048,column:8},end:{line:1050,column:9}},"404":{start:{line:1049,column:12},end:{line:1049,column:60}},"405":{start:{line:1052,column:21},end:{line:1052,column:50}},"406":{start:{line:1054,column:8},end:{line:1054,column:46}},"407":{start:{line:1058,column:8},end:{line:1060,column:9}},"408":{start:{line:1059,column:12},end:{line:1059,column:37}},"409":{start:{line:1062,column:8},end:{line:1066,column:9}},"410":{start:{line:1063,column:12},end:{line:1063,column:33}},"411":{start:{line:1065,column:12},end:{line:1065,column:34}},"412":{start:{line:1068,column:8},end:{line:1068,column:43}},"413":{start:{line:1069,column:8},end:{line:1069,column:41}},"414":{start:{line:1070,column:8},end:{line:1070,column:43}},"415":{start:{line:1071,column:8},end:{line:1071,column:44}},"416":{start:{line:1072,column:8},end:{line:1072,column:33}},"417":{start:{line:1073,column:25},end:{line:1073,column:57}},"418":{start:{line:1074,column:8},end:{line:1074,column:53}},"419":{start:{line:1075,column:8},end:{line:1075,column:47}},"420":{start:{line:1076,column:8},end:{line:1076,column:45}},"421":{start:{line:1077,column:8},end:{line:1077,column:18}},"422":{start:{line:1085,column:29},end:{line:1085,column:47}},"423":{start:{line:1086,column:29},end:{line:1086,column:49}},"424":{start:{line:1087,column:29},end:{line:1087,column:47}},"425":{start:{line:1089,column:29},end:{line:1089,column:75}},"426":{start:{line:1091,column:29},end:{line:1091,column:98}},"427":{start:{line:1091,column:56},end:{line:1091,column:97}},"428":{start:{line:1092,column:8},end:{line:1092,column:36}},"429":{start:{line:1101,column:22},end:{line:1101,column:54}},"430":{start:{line:1102,column:27},end:{line:1102,column:106}},"431":{start:{line:1103,column:25},end:{line:1103,column:62}},"432":{start:{line:1104,column:8},end:{line:1106,column:9}},"433":{start:{line:1105,column:12},end:{line:1105,column:82}},"434":{start:{line:1107,column:20},end:{line:1107,column:53}},"435":{start:{line:1109,column:8},end:{line:1111,column:9}},"436":{start:{line:1110,column:12},end:{line:1110,column:164}},"437":{start:{line:1114,column:25},end:{line:1114,column:55}},"438":{start:{line:1116,column:8},end:{line:1118,column:9}},"439":{start:{line:1117,column:12},end:{line:1117,column:67}},"440":{start:{line:1120,column:19},end:{line:1120,column:52}},"441":{start:{line:1123,column:8},end:{line:1125,column:9}},"442":{start:{line:1124,column:12},end:{line:1124,column:74}},"443":{start:{line:1126,column:8},end:{line:1128,column:9}},"444":{start:{line:1127,column:12},end:{line:1127,column:72}},"445":{start:{line:1131,column:26},end:{line:1131,column:40}},"446":{start:{line:1132,column:23},end:{line:1132,column:47}},"447":{start:{line:1134,column:35},end:{line:1134,column:88}},"448":{start:{line:1136,column:24},end:{line:1136,column:83}},"449":{start:{line:1140,column:24},end:{line:1140,column:60}},"450":{start:{line:1141,column:8},end:{line:1143,column:9}},"451":{start:{line:1142,column:12},end:{line:1142,column:50}},"452":{start:{line:1147,column:26},end:{line:1160,column:9}},"453":{start:{line:1149,column:29},end:{line:1149,column:88}},"454":{start:{line:1151,column:32},end:{line:1151,column:51}},"455":{start:{line:1152,column:16},end:{line:1152,column:32}},"456":{start:{line:1155,column:26},end:{line:1155,column:88}},"457":{start:{line:1155,column:72},end:{line:1155,column:85}},"458":{start:{line:1156,column:29},end:{line:1156,column:137}},"459":{start:{line:1157,column:32},end:{line:1157,column:51}},"460":{start:{line:1158,column:16},end:{line:1158,column:32}},"461":{start:{line:1162,column:8},end:{line:1164,column:9}},"462":{start:{line:1163,column:12},end:{line:1163,column:63}},"463":{start:{line:1170,column:8},end:{line:1175,column:9}},"464":{start:{line:1171,column:12},end:{line:1171,column:118}},"465":{start:{line:1174,column:12},end:{line:1174,column:172}},"466":{start:{line:1177,column:21},end:{line:1177,column:36}},"467":{start:{line:1179,column:22},end:{line:1179,column:34}},"468":{start:{line:1180,column:22},end:{line:1180,column:52}},"469":{start:{line:1181,column:8},end:{line:1183,column:9}},"470":{start:{line:1182,column:12},end:{line:1182,column:111}},"471":{start:{line:1185,column:8},end:{line:1185,column:48}},"472":{start:{line:1186,column:8},end:{line:1186,column:46}},"473":{start:{line:1187,column:8},end:{line:1187,column:45}},"474":{start:{line:1188,column:8},end:{line:1188,column:44}},"475":{start:{line:1189,column:8},end:{line:1189,column:34}},"476":{start:{line:1195,column:30},end:{line:1195,column:70}},"477":{start:{line:1196,column:8},end:{line:1199,column:9}},"478":{start:{line:1198,column:12},end:{line:1198,column:31}},"479":{start:{line:1201,column:26},end:{line:1201,column:69}},"480":{start:{line:1211,column:8},end:{line:1217,column:9}},"481":{start:{line:1212,column:12},end:{line:1212,column:77}},"482":{start:{line:1216,column:12},end:{line:1216,column:111}},"483":{start:{line:1223,column:8},end:{line:1223,column:79}},"484":{start:{line:1224,column:8},end:{line:1224,column:18}},"485":{start:{line:1242,column:25},end:{line:1242,column:57}},"486":{start:{line:1243,column:8},end:{line:1245,column:9}},"487":{start:{line:1244,column:12},end:{line:1244,column:77}},"488":{start:{line:1246,column:20},end:{line:1246,column:53}},"489":{start:{line:1248,column:22},end:{line:1248,column:41}},"490":{start:{line:1251,column:21},end:{line:1251,column:47}},"491":{start:{line:1252,column:24},end:{line:1252,column:48}},"492":{start:{line:1254,column:19},end:{line:1254,column:93}},"493":{start:{line:1255,column:19},end:{line:1255,column:97}},"494":{start:{line:1257,column:8},end:{line:1257,column:19}},"495":{start:{line:1258,column:20},end:{line:1267,column:9}},"496":{start:{line:1268,column:8},end:{line:1268,column:20}},"497":{start:{line:1269,column:20},end:{line:1278,column:9}},"498":{start:{line:1280,column:18},end:{line:1280,column:20}},"499":{start:{line:1281,column:8},end:{line:1281,column:45}},"500":{start:{line:1282,column:8},end:{line:1282,column:77}},"501":{start:{line:1283,column:8},end:{line:1290,column:9}},"502":{start:{line:1284,column:12},end:{line:1284,column:81}},"503":{start:{line:1285,column:12},end:{line:1285,column:31}},"504":{start:{line:1286,column:12},end:{line:1286,column:24}},"505":{start:{line:1288,column:12},end:{line:1288,column:25}},"506":{start:{line:1289,column:12},end:{line:1289,column:24}},"507":{start:{line:1296,column:25},end:{line:1296,column:57}},"508":{start:{line:1297,column:8},end:{line:1299,column:9}},"509":{start:{line:1298,column:12},end:{line:1298,column:77}},"510":{start:{line:1300,column:20},end:{line:1300,column:53}},"511":{start:{line:1302,column:22},end:{line:1302,column:41}},"512":{start:{line:1307,column:21},end:{line:1307,column:47}},"513":{start:{line:1308,column:24},end:{line:1308,column:48}},"514":{start:{line:1310,column:19},end:{line:1310,column:93}},"515":{start:{line:1311,column:19},end:{line:1311,column:97}},"516":{start:{line:1313,column:8},end:{line:1313,column:19}},"517":{start:{line:1314,column:20},end:{line:1323,column:9}},"518":{start:{line:1325,column:8},end:{line:1325,column:20}},"519":{start:{line:1326,column:20},end:{line:1335,column:9}},"520":{start:{line:1336,column:8},end:{line:1336,column:20}},"521":{start:{line:1337,column:20},end:{line:1346,column:9}},"522":{start:{line:1349,column:18},end:{line:1349,column:20}},"523":{start:{line:1350,column:8},end:{line:1350,column:45}},"524":{start:{line:1351,column:8},end:{line:1351,column:77}},"525":{start:{line:1352,column:8},end:{line:1352,column:77}},"526":{start:{line:1353,column:8},end:{line:1360,column:9}},"527":{start:{line:1354,column:12},end:{line:1354,column:81}},"528":{start:{line:1355,column:12},end:{line:1355,column:37}},"529":{start:{line:1356,column:12},end:{line:1356,column:24}},"530":{start:{line:1358,column:12},end:{line:1358,column:31}},"531":{start:{line:1359,column:12},end:{line:1359,column:24}},"532":{start:{line:1411,column:8},end:{line:1411,column:41}},"533":{start:{line:1415,column:8},end:{line:1415,column:43}},"534":{start:{line:1420,column:23},end:{line:1420,column:82}},"535":{start:{line:1421,column:20},end:{line:1421,column:21}},"536":{start:{line:1424,column:8},end:{line:1427,column:13}},"537":{start:{line:1425,column:12},end:{line:1425,column:52}},"538":{start:{line:1426,column:12},end:{line:1426,column:30}},"539":{start:{line:1428,column:8},end:{line:1432,column:9}},"540":{start:{line:1429,column:12},end:{line:1429,column:67}},"541":{start:{line:1430,column:14},end:{line:1432,column:9}},"542":{start:{line:1431,column:12},end:{line:1431,column:24}},"543":{start:{line:1433,column:8},end:{line:1433,column:23}},"544":{start:{line:1438,column:22},end:{line:1438,column:36}},"545":{start:{line:1439,column:8},end:{line:1441,column:9}},"546":{start:{line:1440,column:12},end:{line:1440,column:100}},"547":{start:{line:1442,column:21},end:{line:1442,column:40}},"548":{start:{line:1443,column:8},end:{line:1445,column:9}},"549":{start:{line:1444,column:12},end:{line:1444,column:74}},"550":{start:{line:1446,column:8},end:{line:1446,column:38}},"551":{start:{line:1447,column:16},end:{line:1447,column:57}},"552":{start:{line:1448,column:19},end:{line:1448,column:26}},"553":{start:{line:1449,column:19},end:{line:1449,column:29}},"554":{start:{line:1450,column:8},end:{line:1454,column:9}},"555":{start:{line:1450,column:19},end:{line:1450,column:20}},"556":{start:{line:1451,column:12},end:{line:1453,column:13}},"557":{start:{line:1452,column:16},end:{line:1452,column:73}},"558":{start:{line:1455,column:8},end:{line:1510,column:9}},"559":{start:{line:1457,column:16},end:{line:1461,column:17}},"560":{start:{line:1458,column:20},end:{line:1458,column:108}},"561":{start:{line:1460,column:20},end:{line:1460,column:26}},"562":{start:{line:1463,column:16},end:{line:1467,column:17}},"563":{start:{line:1464,column:20},end:{line:1464,column:108}},"564":{start:{line:1466,column:20},end:{line:1466,column:26}},"565":{start:{line:1469,column:16},end:{line:1473,column:17}},"566":{start:{line:1470,column:20},end:{line:1470,column:108}},"567":{start:{line:1472,column:20},end:{line:1472,column:26}},"568":{start:{line:1475,column:16},end:{line:1479,column:17}},"569":{start:{line:1476,column:20},end:{line:1476,column:108}},"570":{start:{line:1478,column:20},end:{line:1478,column:26}},"571":{start:{line:1481,column:16},end:{line:1485,column:17}},"572":{start:{line:1482,column:20},end:{line:1482,column:108}},"573":{start:{line:1484,column:20},end:{line:1484,column:26}},"574":{start:{line:1487,column:16},end:{line:1491,column:17}},"575":{start:{line:1488,column:20},end:{line:1488,column:108}},"576":{start:{line:1490,column:20},end:{line:1490,column:26}},"577":{start:{line:1493,column:16},end:{line:1497,column:17}},"578":{start:{line:1494,column:20},end:{line:1494,column:108}},"579":{start:{line:1496,column:20},end:{line:1496,column:26}},"580":{start:{line:1499,column:16},end:{line:1503,column:17}},"581":{start:{line:1500,column:20},end:{line:1500,column:108}},"582":{start:{line:1502,column:20},end:{line:1502,column:26}},"583":{start:{line:1505,column:16},end:{line:1509,column:17}},"584":{start:{line:1506,column:20},end:{line:1506,column:108}},"585":{start:{line:1508,column:20},end:{line:1508,column:26}},"586":{start:{line:1514,column:18},end:{line:1514,column:45}},"587":{start:{line:1515,column:8},end:{line:1515,column:20}},"588":{start:{line:1524,column:23},end:{line:1524,column:80}},"589":{start:{line:1525,column:20},end:{line:1525,column:22}},"590":{start:{line:1526,column:8},end:{line:1529,column:9}},"591":{start:{line:1528,column:12},end:{line:1528,column:34}},"592":{start:{line:1530,column:8},end:{line:1536,column:9}},"593":{start:{line:1531,column:12},end:{line:1531,column:24}},"594":{start:{line:1532,column:14},end:{line:1536,column:9}},"595":{start:{line:1533,column:12},end:{line:1533,column:24}},"596":{start:{line:1535,column:12},end:{line:1535,column:47}},"597":{start:{line:1547,column:24},end:{line:1547,column:84}},"598":{start:{line:1548,column:20},end:{line:1548,column:21}},"599":{start:{line:1551,column:16},end:{line:1551,column:18}},"600":{start:{line:1552,column:8},end:{line:1555,column:9}},"601":{start:{line:1553,column:12},end:{line:1553,column:52}},"602":{start:{line:1554,column:12},end:{line:1554,column:30}},"603":{start:{line:1557,column:8},end:{line:1568,column:9}},"604":{start:{line:1558,column:12},end:{line:1558,column:26}},"605":{start:{line:1559,column:12},end:{line:1559,column:32}},"606":{start:{line:1560,column:12},end:{line:1560,column:29}},"607":{start:{line:1561,column:12},end:{line:1561,column:23}},"608":{start:{line:1562,column:14},end:{line:1568,column:9}},"609":{start:{line:1563,column:12},end:{line:1563,column:28}},"610":{start:{line:1564,column:12},end:{line:1564,column:32}},"611":{start:{line:1565,column:12},end:{line:1565,column:23}},"612":{start:{line:1567,column:12},end:{line:1567,column:67}},"613":{start:{line:1572,column:17},end:{line:1572,column:76}},"614":{start:{line:1573,column:8},end:{line:1575,column:9}},"615":{start:{line:1574,column:12},end:{line:1574,column:74}},"616":{start:{line:1576,column:8},end:{line:1576,column:22}},"617":{start:{line:1595,column:21},end:{line:1595,column:53}},"618":{start:{line:1597,column:24},end:{line:1597,column:48}},"619":{start:{line:1598,column:24},end:{line:1598,column:90}},"620":{start:{line:1600,column:18},end:{line:1608,column:9}},"621":{start:{line:1610,column:28},end:{line:1610,column:62}},"622":{start:{line:1611,column:8},end:{line:1611,column:55}},"623":{start:{line:1612,column:8},end:{line:1612,column:51}},"624":{start:{line:1613,column:8},end:{line:1613,column:47}},"625":{start:{line:1614,column:8},end:{line:1614,column:20}},"626":{start:{line:1618,column:21},end:{line:1618,column:79}},"627":{start:{line:1620,column:20},end:{line:1620,column:22}},"628":{start:{line:1621,column:8},end:{line:1623,column:9}},"629":{start:{line:1622,column:12},end:{line:1622,column:58}},"630":{start:{line:1624,column:8},end:{line:1624,column:22}},"631":{start:{line:1637,column:21},end:{line:1637,column:53}},"632":{start:{line:1639,column:24},end:{line:1639,column:48}},"633":{start:{line:1640,column:24},end:{line:1640,column:91}},"634":{start:{line:1642,column:18},end:{line:1650,column:9}},"635":{start:{line:1651,column:28},end:{line:1651,column:62}},"636":{start:{line:1652,column:8},end:{line:1652,column:55}},"637":{start:{line:1653,column:8},end:{line:1653,column:52}},"638":{start:{line:1654,column:8},end:{line:1654,column:47}},"639":{start:{line:1655,column:8},end:{line:1655,column:20}},"640":{start:{line:1659,column:21},end:{line:1659,column:80}},"641":{start:{line:1661,column:20},end:{line:1661,column:22}},"642":{start:{line:1662,column:8},end:{line:1664,column:9}},"643":{start:{line:1663,column:12},end:{line:1663,column:58}},"644":{start:{line:1665,column:8},end:{line:1665,column:22}},"645":{start:{line:1669,column:21},end:{line:1669,column:80}},"646":{start:{line:1671,column:20},end:{line:1671,column:22}},"647":{start:{line:1672,column:8},end:{line:1674,column:9}},"648":{start:{line:1673,column:12},end:{line:1673,column:58}},"649":{start:{line:1675,column:8},end:{line:1675,column:22}},"650":{start:{line:1687,column:21},end:{line:1687,column:53}},"651":{start:{line:1689,column:30},end:{line:1689,column:67}},"652":{start:{line:1690,column:8},end:{line:1692,column:9}},"653":{start:{line:1691,column:12},end:{line:1691,column:86}},"654":{start:{line:1693,column:25},end:{line:1693,column:63}},"655":{start:{line:1695,column:8},end:{line:1697,column:9}},"656":{start:{line:1696,column:12},end:{line:1696,column:99}},"657":{start:{line:1705,column:23},end:{line:1705,column:95}},"658":{start:{line:1706,column:25},end:{line:1706,column:65}},"659":{start:{line:1707,column:8},end:{line:1709,column:9}},"660":{start:{line:1708,column:12},end:{line:1708,column:85}},"661":{start:{line:1710,column:22},end:{line:1710,column:55}},"662":{start:{line:1712,column:8},end:{line:1714,column:9}},"663":{start:{line:1713,column:12},end:{line:1713,column:63}},"664":{start:{line:1717,column:8},end:{line:1719,column:9}},"665":{start:{line:1718,column:12},end:{line:1718,column:103}},"666":{start:{line:1722,column:8},end:{line:1722,column:33}},"667":{start:{line:1725,column:31},end:{line:1725,column:69}},"668":{start:{line:1726,column:8},end:{line:1728,column:9}},"669":{start:{line:1727,column:12},end:{line:1727,column:79}},"670":{start:{line:1729,column:24},end:{line:1729,column:63}},"671":{start:{line:1730,column:8},end:{line:1732,column:9}},"672":{start:{line:1731,column:12},end:{line:1731,column:61}},"673":{start:{line:1734,column:8},end:{line:1734,column:45}},"674":{start:{line:1736,column:17},end:{line:1736,column:41}},"675":{start:{line:1738,column:22},end:{line:1743,column:9}},"676":{start:{line:1744,column:25},end:{line:1744,column:39}},"677":{start:{line:1745,column:27},end:{line:1745,column:63}},"678":{start:{line:1746,column:8},end:{line:1746,column:55}},"679":{start:{line:1747,column:8},end:{line:1747,column:51}},"680":{start:{line:1748,column:8},end:{line:1748,column:50}},"681":{start:{line:1749,column:8},end:{line:1749,column:50}},"682":{start:{line:1750,column:8},end:{line:1750,column:47}},"683":{start:{line:1751,column:8},end:{line:1751,column:24}},"684":{start:{line:1756,column:25},end:{line:1756,column:57}},"685":{start:{line:1757,column:8},end:{line:1759,column:9}},"686":{start:{line:1758,column:12},end:{line:1758,column:93}},"687":{start:{line:1760,column:20},end:{line:1760,column:53}},"688":{start:{line:1762,column:28},end:{line:1762,column:63}},"689":{start:{line:1763,column:8},end:{line:1765,column:9}},"690":{start:{line:1764,column:12},end:{line:1764,column:95}},"691":{start:{line:1766,column:23},end:{line:1766,column:59}},"692":{start:{line:1768,column:8},end:{line:1770,column:9}},"693":{start:{line:1769,column:12},end:{line:1769,column:75}},"694":{start:{line:1772,column:24},end:{line:1772,column:48}},"695":{start:{line:1775,column:19},end:{line:1775,column:98}},"696":{start:{line:1776,column:19},end:{line:1776,column:101}},"697":{start:{line:1777,column:27},end:{line:1777,column:92}},"698":{start:{line:1780,column:28},end:{line:1780,column:57}},"699":{start:{line:1786,column:8},end:{line:1786,column:20}},"700":{start:{line:1787,column:8},end:{line:1796,column:10}},"701":{start:{line:1797,column:8},end:{line:1797,column:20}},"702":{start:{line:1798,column:8},end:{line:1806,column:10}},"703":{start:{line:1808,column:8},end:{line:1808,column:37}},"704":{start:{line:1809,column:8},end:{line:1809,column:35}},"705":{start:{line:1811,column:8},end:{line:1811,column:44}},"706":{start:{line:1812,column:8},end:{line:1812,column:47}},"707":{start:{line:1814,column:8},end:{line:1814,column:77}},"708":{start:{line:1815,column:8},end:{line:1815,column:87}},"709":{start:{line:1816,column:8},end:{line:1818,column:9}},"710":{start:{line:1817,column:12},end:{line:1817,column:81}},"711":{start:{line:1831,column:22},end:{line:1831,column:54}},"712":{start:{line:1832,column:25},end:{line:1832,column:63}},"713":{start:{line:1833,column:8},end:{line:1835,column:9}},"714":{start:{line:1834,column:12},end:{line:1834,column:59}},"715":{start:{line:1836,column:20},end:{line:1836,column:53}},"716":{start:{line:1839,column:23},end:{line:1839,column:75}},"717":{start:{line:1840,column:24},end:{line:1840,column:56}},"718":{start:{line:1841,column:8},end:{line:1843,column:9}},"719":{start:{line:1842,column:12},end:{line:1842,column:94}},"720":{start:{line:1845,column:8},end:{line:1848,column:9}},"721":{start:{line:1847,column:12},end:{line:1847,column:73}},"722":{start:{line:1849,column:19},end:{line:1849,column:51}},"723":{start:{line:1850,column:8},end:{line:1853,column:9}},"724":{start:{line:1852,column:12},end:{line:1852,column:74}},"725":{start:{line:1854,column:8},end:{line:1856,column:9}},"726":{start:{line:1855,column:12},end:{line:1855,column:81}},"727":{start:{line:1858,column:8},end:{line:1858,column:40}},"728":{start:{line:1859,column:8},end:{line:1861,column:9}},"729":{start:{line:1860,column:12},end:{line:1860,column:75}},"730":{start:{line:1863,column:8},end:{line:1863,column:78}},"731":{start:{line:1865,column:8},end:{line:1865,column:50}},"732":{start:{line:1873,column:22},end:{line:1873,column:54}},"733":{start:{line:1874,column:24},end:{line:1874,column:55}},"734":{start:{line:1875,column:8},end:{line:1877,column:9}},"735":{start:{line:1876,column:12},end:{line:1876,column:83}},"736":{start:{line:1878,column:18},end:{line:1878,column:70}},"737":{start:{line:1879,column:20},end:{line:1884,column:9}},"738":{start:{line:1885,column:28},end:{line:1885,column:62}},"739":{start:{line:1886,column:8},end:{line:1886,column:50}},"740":{start:{line:1887,column:8},end:{line:1887,column:20}},"741":{start:{line:1893,column:22},end:{line:1893,column:54}},"742":{start:{line:1895,column:27},end:{line:1895,column:60}},"743":{start:{line:1896,column:8},end:{line:1898,column:9}},"744":{start:{line:1897,column:12},end:{line:1897,column:58}},"745":{start:{line:1899,column:21},end:{line:1899,column:55}},"746":{start:{line:1900,column:21},end:{line:1900,column:36}},"747":{start:{line:1901,column:24},end:{line:1901,column:55}},"748":{start:{line:1902,column:8},end:{line:1904,column:9}},"749":{start:{line:1903,column:12},end:{line:1903,column:81}},"750":{start:{line:1905,column:19},end:{line:1905,column:51}},"751":{start:{line:1906,column:8},end:{line:1908,column:9}},"752":{start:{line:1907,column:12},end:{line:1907,column:67}},"753":{start:{line:1912,column:24},end:{line:1912,column:48}},"754":{start:{line:1913,column:18},end:{line:1913,column:83}},"755":{start:{line:1915,column:23},end:{line:1921,column:9}},"756":{start:{line:1923,column:21},end:{line:1923,column:25}},"757":{start:{line:1924,column:21},end:{line:1924,column:31}},"758":{start:{line:1929,column:24},end:{line:1945,column:9}},"759":{start:{line:1946,column:24},end:{line:1946,column:62}},"760":{start:{line:1947,column:8},end:{line:1947,column:53}},"761":{start:{line:1948,column:8},end:{line:1948,column:43}},"762":{start:{line:1949,column:8},end:{line:1949,column:82}},"763":{start:{line:1950,column:8},end:{line:1950,column:48}},"764":{start:{line:1951,column:8},end:{line:1951,column:47}},"765":{start:{line:1952,column:8},end:{line:1952,column:27}},"766":{start:{line:1965,column:8},end:{line:1965,column:46}},"767":{start:{line:1969,column:8},end:{line:1969,column:43}},"768":{start:{line:1974,column:22},end:{line:1974,column:36}},"769":{start:{line:1975,column:8},end:{line:1977,column:9}},"770":{start:{line:1976,column:12},end:{line:1976,column:100}},"771":{start:{line:1978,column:21},end:{line:1978,column:40}},"772":{start:{line:1980,column:8},end:{line:1982,column:9}},"773":{start:{line:1981,column:12},end:{line:1981,column:74}},"774":{start:{line:1983,column:8},end:{line:1983,column:38}},"775":{start:{line:1984,column:16},end:{line:1984,column:51}},"776":{start:{line:1985,column:19},end:{line:1985,column:26}},"777":{start:{line:1986,column:19},end:{line:1986,column:29}},"778":{start:{line:1987,column:8},end:{line:1991,column:9}},"779":{start:{line:1987,column:19},end:{line:1987,column:20}},"780":{start:{line:1988,column:12},end:{line:1990,column:13}},"781":{start:{line:1989,column:16},end:{line:1989,column:92}},"782":{start:{line:1993,column:8},end:{line:2050,column:9}},"783":{start:{line:1995,column:16},end:{line:1999,column:17}},"784":{start:{line:1996,column:20},end:{line:1996,column:108}},"785":{start:{line:1998,column:20},end:{line:1998,column:26}},"786":{start:{line:2001,column:16},end:{line:2005,column:17}},"787":{start:{line:2002,column:20},end:{line:2002,column:108}},"788":{start:{line:2004,column:20},end:{line:2004,column:26}},"789":{start:{line:2007,column:16},end:{line:2011,column:17}},"790":{start:{line:2008,column:20},end:{line:2008,column:108}},"791":{start:{line:2010,column:20},end:{line:2010,column:26}},"792":{start:{line:2013,column:16},end:{line:2017,column:17}},"793":{start:{line:2014,column:20},end:{line:2014,column:108}},"794":{start:{line:2016,column:20},end:{line:2016,column:26}},"795":{start:{line:2025,column:16},end:{line:2029,column:17}},"796":{start:{line:2026,column:20},end:{line:2026,column:108}},"797":{start:{line:2028,column:20},end:{line:2028,column:26}},"798":{start:{line:2043,column:16},end:{line:2047,column:17}},"799":{start:{line:2044,column:20},end:{line:2044,column:108}},"800":{start:{line:2046,column:20},end:{line:2046,column:26}},"801":{start:{line:2054,column:18},end:{line:2054,column:45}},"802":{start:{line:2055,column:8},end:{line:2055,column:20}},"803":{start:{line:2061,column:23},end:{line:2061,column:82}},"804":{start:{line:2062,column:20},end:{line:2062,column:21}},"805":{start:{line:2065,column:8},end:{line:2068,column:13}},"806":{start:{line:2066,column:12},end:{line:2066,column:52}},"807":{start:{line:2067,column:12},end:{line:2067,column:30}},"808":{start:{line:2069,column:8},end:{line:2073,column:9}},"809":{start:{line:2070,column:12},end:{line:2070,column:89}},"810":{start:{line:2071,column:14},end:{line:2073,column:9}},"811":{start:{line:2072,column:12},end:{line:2072,column:24}},"812":{start:{line:2074,column:8},end:{line:2074,column:23}},"813":{start:{line:2079,column:24},end:{line:2079,column:48}},"814":{start:{line:2081,column:19},end:{line:2081,column:84}},"815":{start:{line:2083,column:8},end:{line:2085,column:9}},"816":{start:{line:2084,column:12},end:{line:2084,column:44}},"817":{start:{line:2087,column:19},end:{line:2087,column:23}},"818":{start:{line:2088,column:24},end:{line:2104,column:9}},"819":{start:{line:2106,column:30},end:{line:2106,column:68}},"820":{start:{line:2107,column:8},end:{line:2107,column:54}},"821":{start:{line:2108,column:8},end:{line:2108,column:24}},"822":{start:{line:2113,column:22},end:{line:2113,column:54}},"823":{start:{line:2114,column:23},end:{line:2114,column:89}},"824":{start:{line:2116,column:23},end:{line:2116,column:25}},"825":{start:{line:2117,column:20},end:{line:2117,column:21}},"826":{start:{line:2120,column:8},end:{line:2130,column:9}},"827":{start:{line:2121,column:12},end:{line:2121,column:53}},"828":{start:{line:2122,column:12},end:{line:2122,column:32}},"829":{start:{line:2123,column:12},end:{line:2126,column:13}},"830":{start:{line:2124,column:16},end:{line:2124,column:42}},"831":{start:{line:2125,column:16},end:{line:2125,column:39}},"832":{start:{line:2127,column:12},end:{line:2129,column:13}},"833":{start:{line:2128,column:16},end:{line:2128,column:21}},"834":{start:{line:2132,column:8},end:{line:2135,column:9}},"835":{start:{line:2133,column:12},end:{line:2133,column:59}},"836":{start:{line:2136,column:16},end:{line:2136,column:73}},"837":{start:{line:2137,column:8},end:{line:2137,column:18}},"838":{start:{line:2155,column:27},end:{line:2155,column:44}},"839":{start:{line:2157,column:18},end:{line:2157,column:19}},"840":{start:{line:2158,column:8},end:{line:2166,column:9}},"841":{start:{line:2158,column:18},end:{line:2158,column:19}},"842":{start:{line:2159,column:12},end:{line:2162,column:13}},"843":{start:{line:2160,column:16},end:{line:2160,column:24}},"844":{start:{line:2161,column:16},end:{line:2161,column:30}},"845":{start:{line:2163,column:12},end:{line:2165,column:13}},"846":{start:{line:2164,column:16},end:{line:2164,column:79}},"847":{start:{line:2168,column:8},end:{line:2170,column:9}},"848":{start:{line:2169,column:12},end:{line:2169,column:45}},"849":{start:{line:2172,column:8},end:{line:2172,column:34}},"850":{start:{line:2173,column:8},end:{line:2175,column:9}},"851":{start:{line:2174,column:12},end:{line:2174,column:64}},"852":{start:{line:2177,column:8},end:{line:2177,column:19}},"853":{start:{line:2188,column:22},end:{line:2188,column:54}},"854":{start:{line:2189,column:25},end:{line:2189,column:57}},"855":{start:{line:2190,column:8},end:{line:2192,column:9}},"856":{start:{line:2191,column:12},end:{line:2191,column:93}},"857":{start:{line:2193,column:20},end:{line:2193,column:53}},"858":{start:{line:2195,column:8},end:{line:2197,column:9}},"859":{start:{line:2196,column:12},end:{line:2196,column:99}},"860":{start:{line:2202,column:8},end:{line:2204,column:9}},"861":{start:{line:2203,column:12},end:{line:2203,column:71}},"862":{start:{line:2206,column:22},end:{line:2206,column:41}},"863":{start:{line:2208,column:24},end:{line:2208,column:48}},"864":{start:{line:2209,column:19},end:{line:2209,column:93}},"865":{start:{line:2210,column:19},end:{line:2210,column:93}},"866":{start:{line:2213,column:8},end:{line:2213,column:19}},"867":{start:{line:2214,column:20},end:{line:2222,column:9}},"868":{start:{line:2223,column:8},end:{line:2223,column:20}},"869":{start:{line:2224,column:20},end:{line:2232,column:9}},"870":{start:{line:2234,column:8},end:{line:2234,column:45}},"871":{start:{line:2235,column:8},end:{line:2235,column:77}},"872":{start:{line:2236,column:8},end:{line:2238,column:9}},"873":{start:{line:2237,column:12},end:{line:2237,column:81}},"874":{start:{line:2240,column:8},end:{line:2240,column:23}},"875":{start:{line:2245,column:22},end:{line:2245,column:54}},"876":{start:{line:2246,column:24},end:{line:2246,column:55}},"877":{start:{line:2247,column:8},end:{line:2249,column:9}},"878":{start:{line:2248,column:12},end:{line:2248,column:91}},"879":{start:{line:2250,column:19},end:{line:2250,column:57}},"880":{start:{line:2252,column:8},end:{line:2254,column:9}},"881":{start:{line:2253,column:12},end:{line:2253,column:104}},"882":{start:{line:2255,column:8},end:{line:2257,column:9}},"883":{start:{line:2256,column:12},end:{line:2256,column:80}},"884":{start:{line:2259,column:22},end:{line:2259,column:40}},"885":{start:{line:2261,column:24},end:{line:2261,column:42}},"886":{start:{line:2262,column:19},end:{line:2262,column:88}},"887":{start:{line:2264,column:8},end:{line:2264,column:19}},"888":{start:{line:2265,column:8},end:{line:2265,column:27}},"889":{start:{line:2267,column:20},end:{line:2283,column:9}},"890":{start:{line:2285,column:8},end:{line:2312,column:9}},"891":{start:{line:2286,column:23},end:{line:2286,column:88}},"892":{start:{line:2287,column:12},end:{line:2287,column:24}},"893":{start:{line:2288,column:12},end:{line:2288,column:31}},"894":{start:{line:2289,column:24},end:{line:2305,column:13}},"895":{start:{line:2306,column:12},end:{line:2306,column:48}},"896":{start:{line:2307,column:12},end:{line:2307,column:79}},"897":{start:{line:2308,column:12},end:{line:2308,column:79}},"898":{start:{line:2310,column:12},end:{line:2310,column:48}},"899":{start:{line:2311,column:12},end:{line:2311,column:79}},"900":{start:{line:2313,column:8},end:{line:2313,column:23}},"901":{start:{line:2319,column:8},end:{line:2319,column:217}},"902":{start:{line:2319,column:39},end:{line:2319,column:215}},"903":{start:{line:2320,column:8},end:{line:2320,column:120}},"904":{start:{line:2320,column:39},end:{line:2320,column:118}},"905":{start:{line:2321,column:8},end:{line:2321,column:115}},"906":{start:{line:2321,column:39},end:{line:2321,column:113}},"907":{start:{line:2322,column:8},end:{line:2322,column:25}},"908":{start:{line:2328,column:8},end:{line:2328,column:217}},"909":{start:{line:2328,column:39},end:{line:2328,column:215}},"910":{start:{line:2329,column:8},end:{line:2329,column:120}},"911":{start:{line:2329,column:39},end:{line:2329,column:118}},"912":{start:{line:2330,column:8},end:{line:2330,column:115}},"913":{start:{line:2330,column:39},end:{line:2330,column:113}},"914":{start:{line:2331,column:8},end:{line:2331,column:25}},"915":{start:{line:2341,column:8},end:{line:2341,column:49}},"916":{start:{line:2342,column:19},end:{line:2342,column:51}},"917":{start:{line:2343,column:8},end:{line:2343,column:29}},"918":{start:{line:2345,column:8},end:{line:2345,column:30}},"919":{start:{line:2348,column:27},end:{line:2348,column:68}},"920":{start:{line:2349,column:8},end:{line:2352,column:9}},"921":{start:{line:2350,column:12},end:{line:2350,column:41}},"922":{start:{line:2351,column:12},end:{line:2351,column:37}},"923":{start:{line:2354,column:8},end:{line:2354,column:29}},"924":{start:{line:2355,column:22},end:{line:2355,column:59}},"925":{start:{line:2359,column:8},end:{line:2359,column:29}},"926":{start:{line:2360,column:21},end:{line:2360,column:23}},"927":{start:{line:2361,column:23},end:{line:2361,column:25}},"928":{start:{line:2362,column:24},end:{line:2362,column:26}},"929":{start:{line:2363,column:33},end:{line:2363,column:35}},"930":{start:{line:2364,column:33},end:{line:2364,column:35}},"931":{start:{line:2365,column:33},end:{line:2365,column:35}},"932":{start:{line:2366,column:18},end:{line:2366,column:19}},"933":{start:{line:2367,column:28},end:{line:2367,column:30}},"934":{start:{line:2368,column:19},end:{line:2368,column:20}},"935":{start:{line:2372,column:26},end:{line:2372,column:50}},"936":{start:{line:2374,column:8},end:{line:2374,column:29}},"937":{start:{line:2375,column:28},end:{line:2391,column:9}},"938":{start:{line:2393,column:17},end:{line:2393,column:29}},"939":{start:{line:2394,column:17},end:{line:2394,column:29}},"940":{start:{line:2396,column:8},end:{line:2396,column:29}},"941":{start:{line:2403,column:27},end:{line:2403,column:29}},"942":{start:{line:2405,column:8},end:{line:2517,column:9}},"943":{start:{line:2405,column:19},end:{line:2405,column:20}},"944":{start:{line:2406,column:24},end:{line:2406,column:25}},"945":{start:{line:2407,column:12},end:{line:2407,column:48}},"946":{start:{line:2408,column:12},end:{line:2408,column:38}},"947":{start:{line:2409,column:28},end:{line:2409,column:48}},"948":{start:{line:2410,column:12},end:{line:2410,column:36}},"949":{start:{line:2411,column:35},end:{line:2411,column:61}},"950":{start:{line:2412,column:12},end:{line:2412,column:44}},"951":{start:{line:2413,column:12},end:{line:2416,column:13}},"952":{start:{line:2414,column:16},end:{line:2414,column:39}},"953":{start:{line:2415,column:16},end:{line:2415,column:41}},"954":{start:{line:2417,column:12},end:{line:2417,column:68}},"955":{start:{line:2418,column:12},end:{line:2422,column:13}},"956":{start:{line:2419,column:16},end:{line:2419,column:60}},"957":{start:{line:2421,column:16},end:{line:2421,column:63}},"958":{start:{line:2427,column:27},end:{line:2427,column:63}},"959":{start:{line:2428,column:12},end:{line:2430,column:13}},"960":{start:{line:2429,column:16},end:{line:2429,column:56}},"961":{start:{line:2437,column:12},end:{line:2437,column:52}},"962":{start:{line:2439,column:31},end:{line:2439,column:42}},"963":{start:{line:2441,column:12},end:{line:2441,column:41}},"964":{start:{line:2442,column:12},end:{line:2442,column:39}},"965":{start:{line:2443,column:12},end:{line:2443,column:43}},"966":{start:{line:2444,column:12},end:{line:2444,column:62}},"967":{start:{line:2445,column:33},end:{line:2445,column:70}},"968":{start:{line:2446,column:12},end:{line:2446,column:33}},"969":{start:{line:2447,column:12},end:{line:2447,column:59}},"970":{start:{line:2451,column:12},end:{line:2470,column:13}},"971":{start:{line:2452,column:16},end:{line:2452,column:51}},"972":{start:{line:2453,column:16},end:{line:2453,column:47}},"973":{start:{line:2454,column:16},end:{line:2454,column:39}},"974":{start:{line:2455,column:16},end:{line:2455,column:53}},"975":{start:{line:2456,column:16},end:{line:2456,column:40}},"976":{start:{line:2457,column:16},end:{line:2457,column:56}},"977":{start:{line:2458,column:16},end:{line:2458,column:77}},"978":{start:{line:2459,column:16},end:{line:2459,column:62}},"979":{start:{line:2463,column:16},end:{line:2463,column:53}},"980":{start:{line:2464,column:16},end:{line:2464,column:41}},"981":{start:{line:2465,column:16},end:{line:2465,column:39}},"982":{start:{line:2466,column:16},end:{line:2466,column:84}},"983":{start:{line:2467,column:16},end:{line:2467,column:87}},"984":{start:{line:2468,column:16},end:{line:2468,column:108}},"985":{start:{line:2469,column:16},end:{line:2469,column:93}},"986":{start:{line:2472,column:12},end:{line:2472,column:58}},"987":{start:{line:2479,column:12},end:{line:2479,column:30}},"988":{start:{line:2480,column:12},end:{line:2480,column:30}},"989":{start:{line:2481,column:28},end:{line:2481,column:36}},"990":{start:{line:2482,column:12},end:{line:2512,column:13}},"991":{start:{line:2483,column:16},end:{line:2483,column:39}},"992":{start:{line:2484,column:16},end:{line:2484,column:52}},"993":{start:{line:2485,column:26},end:{line:2485,column:77}},"994":{start:{line:2485,column:51},end:{line:2485,column:76}},"995":{start:{line:2486,column:16},end:{line:2486,column:38}},"996":{start:{line:2489,column:16},end:{line:2489,column:39}},"997":{start:{line:2490,column:26},end:{line:2490,column:77}},"998":{start:{line:2490,column:51},end:{line:2490,column:76}},"999":{start:{line:2491,column:16},end:{line:2491,column:34}},"1000":{start:{line:2492,column:16},end:{line:2492,column:47}},"1001":{start:{line:2493,column:16},end:{line:2493,column:36}},"1002":{start:{line:2494,column:16},end:{line:2494,column:34}},"1003":{start:{line:2495,column:16},end:{line:2497,column:17}},"1004":{start:{line:2496,column:20},end:{line:2496,column:44}},"1005":{start:{line:2498,column:16},end:{line:2498,column:37}},"1006":{start:{line:2499,column:16},end:{line:2499,column:33}},"1007":{start:{line:2500,column:16},end:{line:2500,column:63}},"1008":{start:{line:2501,column:16},end:{line:2501,column:35}},"1009":{start:{line:2502,column:16},end:{line:2502,column:70}},"1010":{start:{line:2503,column:16},end:{line:2503,column:44}},"1011":{start:{line:2508,column:16},end:{line:2508,column:32}},"1012":{start:{line:2509,column:16},end:{line:2509,column:53}},"1013":{start:{line:2510,column:16},end:{line:2510,column:37}},"1014":{start:{line:2513,column:12},end:{line:2513,column:54}},"1015":{start:{line:2514,column:12},end:{line:2514,column:39}},"1016":{start:{line:2519,column:8},end:{line:2519,column:41}},"1017":{start:{line:2520,column:8},end:{line:2520,column:39}},"1018":{start:{line:2521,column:27},end:{line:2521,column:28}},"1019":{start:{line:2522,column:8},end:{line:2536,column:9}},"1020":{start:{line:2522,column:19},end:{line:2522,column:20}},"1021":{start:{line:2523,column:12},end:{line:2523,column:59}},"1022":{start:{line:2527,column:12},end:{line:2527,column:125}},"1023":{start:{line:2528,column:12},end:{line:2528,column:50}},"1024":{start:{line:2530,column:12},end:{line:2530,column:48}},"1025":{start:{line:2531,column:12},end:{line:2531,column:48}},"1026":{start:{line:2532,column:12},end:{line:2532,column:51}},"1027":{start:{line:2534,column:39},end:{line:2534,column:83}},"1028":{start:{line:2535,column:12},end:{line:2535,column:77}},"1029":{start:{line:2538,column:8},end:{line:2538,column:26}},"1030":{start:{line:2539,column:8},end:{line:2539,column:26}},"1031":{start:{line:2541,column:24},end:{line:2541,column:56}},"1032":{start:{line:2543,column:8},end:{line:2543,column:58}},"1033":{start:{line:2544,column:32},end:{line:2553,column:9}},"1034":{start:{line:2554,column:25},end:{line:2554,column:73}},"1035":{start:{line:2555,column:28},end:{line:2555,column:40}},"1036":{start:{line:2556,column:8},end:{line:2556,column:39}},"1037":{start:{line:2557,column:8},end:{line:2557,column:36}},"1038":{start:{line:2558,column:8},end:{line:2558,column:29}},"1039":{start:{line:2559,column:8},end:{line:2559,column:30}},"1040":{start:{line:2560,column:8},end:{line:2593,column:9}},"1041":{start:{line:2561,column:12},end:{line:2561,column:33}},"1042":{start:{line:2562,column:36},end:{line:2571,column:13}},"1043":{start:{line:2572,column:12},end:{line:2572,column:46}},"1044":{start:{line:2573,column:12},end:{line:2573,column:44}},"1045":{start:{line:2574,column:12},end:{line:2574,column:46}},"1046":{start:{line:2575,column:12},end:{line:2575,column:44}},"1047":{start:{line:2576,column:12},end:{line:2576,column:51}},"1048":{start:{line:2577,column:12},end:{line:2577,column:52}},"1049":{start:{line:2578,column:12},end:{line:2578,column:56}},"1050":{start:{line:2579,column:12},end:{line:2579,column:42}},"1051":{start:{line:2580,column:12},end:{line:2580,column:39}},"1052":{start:{line:2581,column:24},end:{line:2581,column:70}},"1053":{start:{line:2581,column:49},end:{line:2581,column:69}},"1054":{start:{line:2582,column:23},end:{line:2582,column:44}},"1055":{start:{line:2583,column:12},end:{line:2583,column:33}},"1056":{start:{line:2584,column:12},end:{line:2584,column:33}},"1057":{start:{line:2585,column:29},end:{line:2585,column:77}},"1058":{start:{line:2586,column:12},end:{line:2586,column:74}},"1059":{start:{line:2587,column:12},end:{line:2587,column:73}},"1060":{start:{line:2590,column:12},end:{line:2590,column:46}},"1061":{start:{line:2591,column:12},end:{line:2591,column:44}},"1062":{start:{line:2592,column:12},end:{line:2592,column:73}},"1063":{start:{line:2595,column:8},end:{line:2613,column:9}},"1064":{start:{line:2596,column:12},end:{line:2596,column:118}},"1065":{start:{line:2597,column:12},end:{line:2597,column:67}},"1066":{start:{line:2598,column:39},end:{line:2598,column:83}},"1067":{start:{line:2599,column:12},end:{line:2599,column:77}},"1068":{start:{line:2600,column:24},end:{line:2600,column:72}},"1069":{start:{line:2600,column:50},end:{line:2600,column:71}},"1070":{start:{line:2601,column:22},end:{line:2601,column:43}},"1071":{start:{line:2602,column:12},end:{line:2602,column:68}},"1072":{start:{line:2603,column:12},end:{line:2603,column:36}},"1073":{start:{line:2604,column:12},end:{line:2604,column:47}},"1074":{start:{line:2605,column:12},end:{line:2605,column:32}},"1075":{start:{line:2606,column:12},end:{line:2606,column:33}},"1076":{start:{line:2607,column:12},end:{line:2607,column:52}},"1077":{start:{line:2608,column:14},end:{line:2613,column:9}},"1078":{start:{line:2609,column:24},end:{line:2609,column:69}},"1079":{start:{line:2609,column:50},end:{line:2609,column:68}},"1080":{start:{line:2610,column:12},end:{line:2610,column:36}},"1081":{start:{line:2612,column:12},end:{line:2612,column:33}},"1082":{start:{line:2615,column:8},end:{line:2617,column:9}},"1083":{start:{line:2616,column:12},end:{line:2616,column:36}},"1084":{start:{line:2618,column:8},end:{line:2618,column:60}},"1085":{start:{line:2619,column:8},end:{line:2619,column:60}},"1086":{start:{line:2621,column:8},end:{line:2621,column:29}},"1087":{start:{line:2625,column:8},end:{line:2625,column:24}},"1088":{start:{line:2629,column:8},end:{line:2629,column:45}},"1089":{start:{line:2630,column:19},end:{line:2630,column:51}},"1090":{start:{line:2631,column:25},end:{line:2631,column:92}},"1091":{start:{line:2632,column:16},end:{line:2632,column:35}},"1092":{start:{line:2633,column:8},end:{line:2633,column:24}},"1093":{start:{line:2634,column:27},end:{line:2634,column:55}},"1094":{start:{line:2635,column:8},end:{line:2637,column:9}},"1095":{start:{line:2636,column:12},end:{line:2636,column:72}},"1096":{start:{line:2638,column:8},end:{line:2638,column:42}},"1097":{start:{line:2639,column:22},end:{line:2639,column:59}},"1098":{start:{line:2645,column:8},end:{line:2645,column:42}},"1099":{start:{line:2646,column:8},end:{line:2646,column:30}},"1100":{start:{line:2647,column:8},end:{line:2649,column:9}},"1101":{start:{line:2648,column:12},end:{line:2648,column:56}},"1102":{start:{line:2650,column:8},end:{line:2650,column:41}},"1103":{start:{line:2651,column:24},end:{line:2651,column:40}},"1104":{start:{line:2654,column:28},end:{line:2654,column:30}},"1105":{start:{line:2655,column:29},end:{line:2655,column:31}},"1106":{start:{line:2656,column:25},end:{line:2656,column:27}},"1107":{start:{line:2657,column:23},end:{line:2657,column:25}},"1108":{start:{line:2658,column:18},end:{line:2658,column:19}},"1109":{start:{line:2664,column:22},end:{line:2664,column:114}},"1110":{start:{line:2665,column:21},end:{line:2665,column:95}},"1111":{start:{line:2666,column:8},end:{line:2666,column:31}},"1112":{start:{line:2667,column:8},end:{line:2667,column:30}},"1113":{start:{line:2670,column:8},end:{line:2692,column:9}},"1114":{start:{line:2671,column:12},end:{line:2671,column:42}},"1115":{start:{line:2672,column:12},end:{line:2672,column:57}},"1116":{start:{line:2674,column:12},end:{line:2674,column:39}},"1117":{start:{line:2675,column:12},end:{line:2675,column:41}},"1118":{start:{line:2676,column:12},end:{line:2676,column:36}},"1119":{start:{line:2677,column:12},end:{line:2681,column:13}},"1120":{start:{line:2678,column:16},end:{line:2678,column:44}},"1121":{start:{line:2679,column:16},end:{line:2679,column:46}},"1122":{start:{line:2680,column:16},end:{line:2680,column:29}},"1123":{start:{line:2682,column:12},end:{line:2691,column:13}},"1124":{start:{line:2683,column:16},end:{line:2683,column:58}},"1125":{start:{line:2684,column:16},end:{line:2684,column:52}},"1126":{start:{line:2685,column:16},end:{line:2685,column:24}},"1127":{start:{line:2687,column:16},end:{line:2687,column:51}},"1128":{start:{line:2688,column:16},end:{line:2688,column:48}},"1129":{start:{line:2689,column:16},end:{line:2689,column:47}},"1130":{start:{line:2690,column:16},end:{line:2690,column:21}},"1131":{start:{line:2693,column:8},end:{line:2693,column:34}},"1132":{start:{line:2695,column:8},end:{line:2697,column:9}},"1133":{start:{line:2696,column:12},end:{line:2696,column:58}},"1134":{start:{line:2698,column:8},end:{line:2698,column:37}},"1135":{start:{line:2699,column:8},end:{line:2699,column:35}},"1136":{start:{line:2700,column:8},end:{line:2700,column:37}},"1137":{start:{line:2701,column:8},end:{line:2701,column:35}},"1138":{start:{line:2703,column:22},end:{line:2703,column:46}},"1139":{start:{line:2704,column:19},end:{line:2704,column:23}},"1140":{start:{line:2705,column:8},end:{line:2720,column:9}},"1141":{start:{line:2707,column:12},end:{line:2707,column:44}},"1142":{start:{line:2708,column:12},end:{line:2708,column:115}},"1143":{start:{line:2709,column:12},end:{line:2709,column:35}},"1144":{start:{line:2710,column:12},end:{line:2710,column:42}},"1145":{start:{line:2711,column:12},end:{line:2711,column:52}},"1146":{start:{line:2713,column:12},end:{line:2713,column:35}},"1147":{start:{line:2714,column:12},end:{line:2714,column:34}},"1148":{start:{line:2715,column:12},end:{line:2715,column:42}},"1149":{start:{line:2716,column:12},end:{line:2716,column:66}},"1150":{start:{line:2717,column:12},end:{line:2717,column:125}},"1151":{start:{line:2718,column:28},end:{line:2718,column:66}},"1152":{start:{line:2719,column:12},end:{line:2719,column:61}},"1153":{start:{line:2722,column:8},end:{line:2722,column:48}},"1154":{start:{line:2723,column:25},end:{line:2723,column:34}},"1155":{start:{line:2724,column:8},end:{line:2724,column:41}},"1156":{start:{line:2725,column:8},end:{line:2725,column:68}},"1157":{start:{line:2726,column:8},end:{line:2726,column:70}},"1158":{start:{line:2728,column:8},end:{line:2728,column:111}},"1159":{start:{line:2730,column:32},end:{line:2730,column:73}},"1160":{start:{line:2731,column:8},end:{line:2731,column:69}},"1161":{start:{line:2732,column:8},end:{line:2732,column:27}},"1162":{start:{line:2739,column:8},end:{line:2739,column:49}},"1163":{start:{line:2741,column:36},end:{line:2741,column:77}},"1164":{start:{line:2742,column:8},end:{line:2744,column:9}},"1165":{start:{line:2743,column:12},end:{line:2743,column:36}},"1166":{start:{line:2745,column:31},end:{line:2745,column:77}},"1167":{start:{line:2746,column:20},end:{line:2746,column:45}},"1168":{start:{line:2747,column:8},end:{line:2747,column:42}},"1169":{start:{line:2749,column:19},end:{line:2749,column:51}},"1170":{start:{line:2750,column:21},end:{line:2750,column:23}},"1171":{start:{line:2752,column:23},end:{line:2752,column:25}},"1172":{start:{line:2753,column:24},end:{line:2753,column:26}},"1173":{start:{line:2754,column:33},end:{line:2754,column:35}},"1174":{start:{line:2755,column:33},end:{line:2755,column:35}},"1175":{start:{line:2756,column:18},end:{line:2756,column:19}},"1176":{start:{line:2757,column:28},end:{line:2757,column:30}},"1177":{start:{line:2758,column:19},end:{line:2758,column:20}},"1178":{start:{line:2762,column:26},end:{line:2762,column:50}},"1179":{start:{line:2764,column:37},end:{line:2773,column:9}},"1180":{start:{line:2774,column:17},end:{line:2774,column:29}},"1181":{start:{line:2775,column:17},end:{line:2775,column:29}},"1182":{start:{line:2781,column:27},end:{line:2781,column:29}},"1183":{start:{line:2783,column:8},end:{line:2881,column:9}},"1184":{start:{line:2783,column:19},end:{line:2783,column:20}},"1185":{start:{line:2784,column:12},end:{line:2784,column:44}},"1186":{start:{line:2785,column:12},end:{line:2785,column:37}},"1187":{start:{line:2788,column:24},end:{line:2788,column:25}},"1188":{start:{line:2789,column:23},end:{line:2789,column:43}},"1189":{start:{line:2790,column:12},end:{line:2790,column:31}},"1190":{start:{line:2791,column:35},end:{line:2791,column:61}},"1191":{start:{line:2792,column:12},end:{line:2792,column:43}},"1192":{start:{line:2793,column:12},end:{line:2796,column:13}},"1193":{start:{line:2794,column:16},end:{line:2794,column:45}},"1194":{start:{line:2795,column:16},end:{line:2795,column:40}},"1195":{start:{line:2801,column:27},end:{line:2801,column:58}},"1196":{start:{line:2804,column:12},end:{line:2804,column:68}},"1197":{start:{line:2805,column:12},end:{line:2809,column:13}},"1198":{start:{line:2806,column:16},end:{line:2806,column:41}},"1199":{start:{line:2808,column:16},end:{line:2808,column:44}},"1200":{start:{line:2813,column:12},end:{line:2813,column:52}},"1201":{start:{line:2814,column:26},end:{line:2814,column:37}},"1202":{start:{line:2815,column:12},end:{line:2815,column:37}},"1203":{start:{line:2816,column:12},end:{line:2816,column:35}},"1204":{start:{line:2817,column:12},end:{line:2817,column:33}},"1205":{start:{line:2818,column:12},end:{line:2818,column:55}},"1206":{start:{line:2819,column:12},end:{line:2835,column:13}},"1207":{start:{line:2820,column:16},end:{line:2820,column:51}},"1208":{start:{line:2821,column:16},end:{line:2821,column:43}},"1209":{start:{line:2822,column:16},end:{line:2822,column:39}},"1210":{start:{line:2823,column:16},end:{line:2823,column:72}},"1211":{start:{line:2824,column:16},end:{line:2824,column:56}},"1212":{start:{line:2825,column:16},end:{line:2825,column:81}},"1213":{start:{line:2829,column:16},end:{line:2829,column:53}},"1214":{start:{line:2830,column:16},end:{line:2830,column:41}},"1215":{start:{line:2831,column:16},end:{line:2831,column:39}},"1216":{start:{line:2832,column:16},end:{line:2832,column:98}},"1217":{start:{line:2833,column:16},end:{line:2833,column:82}},"1218":{start:{line:2834,column:16},end:{line:2834,column:107}},"1219":{start:{line:2838,column:12},end:{line:2838,column:39}},"1220":{start:{line:2844,column:12},end:{line:2844,column:30}},"1221":{start:{line:2845,column:12},end:{line:2845,column:30}},"1222":{start:{line:2846,column:28},end:{line:2846,column:36}},"1223":{start:{line:2847,column:12},end:{line:2879,column:13}},"1224":{start:{line:2848,column:16},end:{line:2848,column:52}},"1225":{start:{line:2849,column:26},end:{line:2849,column:77}},"1226":{start:{line:2849,column:51},end:{line:2849,column:76}},"1227":{start:{line:2850,column:16},end:{line:2850,column:38}},"1228":{start:{line:2853,column:26},end:{line:2853,column:77}},"1229":{start:{line:2853,column:51},end:{line:2853,column:76}},"1230":{start:{line:2854,column:16},end:{line:2857,column:17}},"1231":{start:{line:2855,column:20},end:{line:2855,column:49}},"1232":{start:{line:2856,column:20},end:{line:2856,column:44}},"1233":{start:{line:2859,column:16},end:{line:2859,column:37}},"1234":{start:{line:2860,column:16},end:{line:2860,column:40}},"1235":{start:{line:2861,column:16},end:{line:2861,column:38}},"1236":{start:{line:2862,column:16},end:{line:2862,column:33}},"1237":{start:{line:2863,column:16},end:{line:2863,column:44}},"1238":{start:{line:2864,column:16},end:{line:2864,column:67}},"1239":{start:{line:2865,column:16},end:{line:2865,column:39}},"1240":{start:{line:2866,column:16},end:{line:2866,column:74}},"1241":{start:{line:2871,column:16},end:{line:2871,column:32}},"1242":{start:{line:2872,column:16},end:{line:2872,column:53}},"1243":{start:{line:2873,column:16},end:{line:2873,column:37}},"1244":{start:{line:2880,column:12},end:{line:2880,column:39}},"1245":{start:{line:2882,column:27},end:{line:2882,column:28}},"1246":{start:{line:2883,column:8},end:{line:2899,column:13}},"1247":{start:{line:2883,column:19},end:{line:2883,column:20}},"1248":{start:{line:2884,column:12},end:{line:2884,column:59}},"1249":{start:{line:2889,column:12},end:{line:2889,column:152}},"1250":{start:{line:2890,column:12},end:{line:2890,column:59}},"1251":{start:{line:2892,column:12},end:{line:2892,column:57}},"1252":{start:{line:2894,column:12},end:{line:2894,column:56}},"1253":{start:{line:2896,column:48},end:{line:2896,column:101}},"1254":{start:{line:2897,column:12},end:{line:2897,column:95}},"1255":{start:{line:2898,column:12},end:{line:2898,column:60}},"1256":{start:{line:2902,column:8},end:{line:2902,column:50}},"1257":{start:{line:2904,column:8},end:{line:2904,column:26}},"1258":{start:{line:2905,column:8},end:{line:2905,column:26}},"1259":{start:{line:2906,column:24},end:{line:2906,column:56}},"1260":{start:{line:2908,column:23},end:{line:2924,column:9}},"1261":{start:{line:2925,column:25},end:{line:2925,column:64}},"1262":{start:{line:2926,column:28},end:{line:2926,column:40}},"1263":{start:{line:2927,column:8},end:{line:2927,column:39}},"1264":{start:{line:2928,column:8},end:{line:2928,column:37}},"1265":{start:{line:2929,column:8},end:{line:2929,column:29}},"1266":{start:{line:2931,column:8},end:{line:2974,column:9}},"1267":{start:{line:2932,column:12},end:{line:2932,column:33}},"1268":{start:{line:2934,column:27},end:{line:2950,column:13}},"1269":{start:{line:2951,column:12},end:{line:2951,column:38}},"1270":{start:{line:2952,column:12},end:{line:2952,column:35}},"1271":{start:{line:2953,column:12},end:{line:2953,column:37}},"1272":{start:{line:2954,column:12},end:{line:2954,column:35}},"1273":{start:{line:2955,column:12},end:{line:2955,column:42}},"1274":{start:{line:2956,column:12},end:{line:2956,column:55}},"1275":{start:{line:2957,column:12},end:{line:2957,column:59}},"1276":{start:{line:2958,column:12},end:{line:2958,column:45}},"1277":{start:{line:2959,column:12},end:{line:2959,column:39}},"1278":{start:{line:2960,column:24},end:{line:2960,column:70}},"1279":{start:{line:2960,column:49},end:{line:2960,column:69}},"1280":{start:{line:2961,column:23},end:{line:2961,column:44}},"1281":{start:{line:2962,column:12},end:{line:2962,column:33}},"1282":{start:{line:2963,column:12},end:{line:2963,column:33}},"1283":{start:{line:2965,column:29},end:{line:2965,column:68}},"1284":{start:{line:2966,column:12},end:{line:2966,column:65}},"1285":{start:{line:2967,column:12},end:{line:2967,column:64}},"1286":{start:{line:2969,column:12},end:{line:2969,column:37}},"1287":{start:{line:2970,column:12},end:{line:2970,column:35}},"1288":{start:{line:2973,column:12},end:{line:2973,column:64}},"1289":{start:{line:2977,column:8},end:{line:2995,column:9}},"1290":{start:{line:2978,column:12},end:{line:2978,column:145}},"1291":{start:{line:2979,column:12},end:{line:2979,column:72}},"1292":{start:{line:2980,column:48},end:{line:2980,column:101}},"1293":{start:{line:2981,column:12},end:{line:2981,column:95}},"1294":{start:{line:2982,column:24},end:{line:2982,column:72}},"1295":{start:{line:2982,column:50},end:{line:2982,column:71}},"1296":{start:{line:2983,column:22},end:{line:2983,column:43}},"1297":{start:{line:2984,column:12},end:{line:2984,column:68}},"1298":{start:{line:2985,column:12},end:{line:2985,column:36}},"1299":{start:{line:2986,column:12},end:{line:2986,column:56}},"1300":{start:{line:2987,column:12},end:{line:2987,column:32}},"1301":{start:{line:2988,column:12},end:{line:2988,column:33}},"1302":{start:{line:2989,column:12},end:{line:2989,column:48}},"1303":{start:{line:2990,column:14},end:{line:2995,column:9}},"1304":{start:{line:2991,column:24},end:{line:2991,column:69}},"1305":{start:{line:2991,column:50},end:{line:2991,column:68}},"1306":{start:{line:2992,column:12},end:{line:2992,column:36}},"1307":{start:{line:2994,column:12},end:{line:2994,column:33}},"1308":{start:{line:2997,column:8},end:{line:2999,column:9}},"1309":{start:{line:2998,column:12},end:{line:2998,column:36}},"1310":{start:{line:3000,column:24},end:{line:3000,column:62}},"1311":{start:{line:3001,column:8},end:{line:3001,column:57}},"1312":{start:{line:3002,column:8},end:{line:3002,column:24}},"1313":{start:{line:3007,column:8},end:{line:3007,column:29}},"1314":{start:{line:3009,column:8},end:{line:3009,column:41}},"1315":{start:{line:3010,column:8},end:{line:3010,column:32}},"1316":{start:{line:3011,column:8},end:{line:3011,column:34}},"1317":{start:{line:3016,column:22},end:{line:3016,column:54}},"1318":{start:{line:3020,column:29},end:{line:3020,column:65}},"1319":{start:{line:3022,column:8},end:{line:3026,column:9}},"1320":{start:{line:3023,column:12},end:{line:3023,column:30}},"1321":{start:{line:3025,column:12},end:{line:3025,column:60}},"1322":{start:{line:3029,column:18},end:{line:3029,column:90}},"1323":{start:{line:3030,column:8},end:{line:3030,column:35}},"1324":{start:{line:3031,column:25},end:{line:3031,column:55}},"1325":{start:{line:3033,column:8},end:{line:3033,column:29}},"1326":{start:{line:3035,column:8},end:{line:3037,column:9}},"1327":{start:{line:3036,column:12},end:{line:3036,column:93}},"1328":{start:{line:3038,column:21},end:{line:3038,column:54}},"1329":{start:{line:3039,column:8},end:{line:3041,column:9}},"1330":{start:{line:3040,column:12},end:{line:3040,column:111}},"1331":{start:{line:3042,column:24},end:{line:3042,column:48}},"1332":{start:{line:3043,column:22},end:{line:3043,column:79}},"1333":{start:{line:3046,column:20},end:{line:3046,column:32}},"1334":{start:{line:3048,column:25},end:{line:3061,column:9}},"1335":{start:{line:3066,column:17},end:{line:3066,column:29}},"1336":{start:{line:3067,column:17},end:{line:3067,column:29}},"1337":{start:{line:3069,column:8},end:{line:3069,column:29}},"1338":{start:{line:3071,column:8},end:{line:3094,column:9}},"1339":{start:{line:3072,column:12},end:{line:3072,column:35}},"1340":{start:{line:3073,column:22},end:{line:3073,column:64}},"1341":{start:{line:3074,column:24},end:{line:3087,column:13}},"1342":{start:{line:3088,column:12},end:{line:3088,column:37}},"1343":{start:{line:3090,column:23},end:{line:3090,column:69}},"1344":{start:{line:3091,column:12},end:{line:3091,column:42}},"1345":{start:{line:3092,column:12},end:{line:3092,column:89}},"1346":{start:{line:3093,column:12},end:{line:3093,column:28}},"1347":{start:{line:3096,column:8},end:{line:3096,column:29}},"1348":{start:{line:3098,column:25},end:{line:3098,column:37}},"1349":{start:{line:3100,column:30},end:{line:3100,column:32}},"1350":{start:{line:3101,column:28},end:{line:3101,column:30}},"1351":{start:{line:3102,column:20},end:{line:3102,column:41}},"1352":{start:{line:3103,column:20},end:{line:3103,column:21}},"1353":{start:{line:3104,column:24},end:{line:3104,column:25}},"1354":{start:{line:3105,column:26},end:{line:3105,column:38}},"1355":{start:{line:3106,column:26},end:{line:3106,column:27}},"1356":{start:{line:3107,column:21},end:{line:3107,column:22}},"1357":{start:{line:3108,column:8},end:{line:3108,column:29}},"1358":{start:{line:3111,column:8},end:{line:3147,column:9}},"1359":{start:{line:3112,column:12},end:{line:3112,column:47}},"1360":{start:{line:3113,column:12},end:{line:3113,column:35}},"1361":{start:{line:3114,column:12},end:{line:3146,column:13}},"1362":{start:{line:3115,column:16},end:{line:3115,column:39}},"1363":{start:{line:3116,column:16},end:{line:3116,column:45}},"1364":{start:{line:3117,column:16},end:{line:3117,column:45}},"1365":{start:{line:3118,column:16},end:{line:3118,column:69}},"1366":{start:{line:3119,column:16},end:{line:3119,column:69}},"1367":{start:{line:3121,column:16},end:{line:3143,column:17}},"1368":{start:{line:3122,column:20},end:{line:3122,column:47}},"1369":{start:{line:3124,column:20},end:{line:3124,column:51}},"1370":{start:{line:3125,column:20},end:{line:3125,column:39}},"1371":{start:{line:3126,column:20},end:{line:3126,column:43}},"1372":{start:{line:3127,column:20},end:{line:3127,column:46}},"1373":{start:{line:3128,column:20},end:{line:3128,column:56}},"1374":{start:{line:3129,column:20},end:{line:3129,column:74}},"1375":{start:{line:3130,column:20},end:{line:3130,column:42}},"1376":{start:{line:3132,column:20},end:{line:3132,column:47}},"1377":{start:{line:3135,column:20},end:{line:3135,column:40}},"1378":{start:{line:3136,column:20},end:{line:3136,column:42}},"1379":{start:{line:3137,column:20},end:{line:3137,column:46}},"1380":{start:{line:3138,column:20},end:{line:3138,column:56}},"1381":{start:{line:3139,column:20},end:{line:3139,column:46}},"1382":{start:{line:3140,column:20},end:{line:3140,column:74}},"1383":{start:{line:3141,column:20},end:{line:3141,column:37}},"1384":{start:{line:3145,column:16},end:{line:3145,column:24}},"1385":{start:{line:3148,column:8},end:{line:3148,column:29}},"1386":{start:{line:3151,column:8},end:{line:3151,column:29}},"1387":{start:{line:3152,column:8},end:{line:3152,column:42}},"1388":{start:{line:3154,column:8},end:{line:3182,column:9}},"1389":{start:{line:3155,column:12},end:{line:3155,column:35}},"1390":{start:{line:3158,column:12},end:{line:3158,column:42}},"1391":{start:{line:3159,column:12},end:{line:3159,column:40}},"1392":{start:{line:3160,column:12},end:{line:3160,column:45}},"1393":{start:{line:3161,column:12},end:{line:3161,column:61}},"1394":{start:{line:3163,column:14},end:{line:3182,column:9}},"1395":{start:{line:3164,column:12},end:{line:3164,column:35}},"1396":{start:{line:3167,column:12},end:{line:3167,column:42}},"1397":{start:{line:3168,column:12},end:{line:3168,column:41}},"1398":{start:{line:3169,column:12},end:{line:3169,column:44}},"1399":{start:{line:3170,column:12},end:{line:3170,column:48}},"1400":{start:{line:3171,column:12},end:{line:3171,column:32}},"1401":{start:{line:3175,column:12},end:{line:3175,column:35}},"1402":{start:{line:3178,column:12},end:{line:3178,column:61}},"1403":{start:{line:3179,column:12},end:{line:3179,column:39}},"1404":{start:{line:3180,column:12},end:{line:3180,column:41}},"1405":{start:{line:3181,column:12},end:{line:3181,column:44}},"1406":{start:{line:3183,column:8},end:{line:3183,column:40}},"1407":{start:{line:3187,column:22},end:{line:3187,column:68}},"1408":{start:{line:3188,column:22},end:{line:3188,column:68}},"1409":{start:{line:3189,column:8},end:{line:3189,column:36}},"1410":{start:{line:3190,column:8},end:{line:3190,column:29}},"1411":{start:{line:3193,column:8},end:{line:3193,column:28}},"1412":{start:{line:3194,column:8},end:{line:3194,column:36}},"1413":{start:{line:3195,column:8},end:{line:3195,column:33}},"1414":{start:{line:3196,column:8},end:{line:3213,column:9}},"1415":{start:{line:3198,column:29},end:{line:3201,column:13}},"1416":{start:{line:3209,column:12},end:{line:3209,column:102}},"1417":{start:{line:3214,column:8},end:{line:3214,column:85}},"1418":{start:{line:3215,column:8},end:{line:3215,column:44}},"1419":{start:{line:3216,column:8},end:{line:3216,column:74}},"1420":{start:{line:3218,column:8},end:{line:3218,column:29}},"1421":{start:{line:3219,column:8},end:{line:3219,column:24}},"1422":{start:{line:3227,column:8},end:{line:3227,column:29}},"1423":{start:{line:3228,column:8},end:{line:3228,column:41}},"1424":{start:{line:3230,column:21},end:{line:3230,column:53}},"1425":{start:{line:3231,column:8},end:{line:3231,column:32}},"1426":{start:{line:3232,column:8},end:{line:3232,column:32}},"1427":{start:{line:3233,column:8},end:{line:3233,column:34}},"1428":{start:{line:3234,column:18},end:{line:3234,column:80}},"1429":{start:{line:3235,column:8},end:{line:3235,column:34}},"1430":{start:{line:3236,column:24},end:{line:3236,column:54}},"1431":{start:{line:3239,column:8},end:{line:3241,column:9}},"1432":{start:{line:3240,column:12},end:{line:3240,column:82}},"1433":{start:{line:3242,column:19},end:{line:3242,column:51}},"1434":{start:{line:3243,column:8},end:{line:3245,column:9}},"1435":{start:{line:3244,column:12},end:{line:3244,column:108}},"1436":{start:{line:3246,column:8},end:{line:3248,column:9}},"1437":{start:{line:3247,column:12},end:{line:3247,column:64}},"1438":{start:{line:3249,column:29},end:{line:3249,column:65}},"1439":{start:{line:3251,column:8},end:{line:3255,column:9}},"1440":{start:{line:3252,column:12},end:{line:3252,column:30}},"1441":{start:{line:3254,column:12},end:{line:3254,column:60}},"1442":{start:{line:3258,column:8},end:{line:3258,column:29}},"1443":{start:{line:3259,column:24},end:{line:3259,column:48}},"1444":{start:{line:3260,column:22},end:{line:3260,column:79}},"1445":{start:{line:3261,column:25},end:{line:3274,column:9}},"1446":{start:{line:3276,column:17},end:{line:3276,column:29}},"1447":{start:{line:3277,column:17},end:{line:3277,column:29}},"1448":{start:{line:3279,column:8},end:{line:3279,column:29}},"1449":{start:{line:3281,column:8},end:{line:3308,column:9}},"1450":{start:{line:3282,column:12},end:{line:3282,column:35}},"1451":{start:{line:3283,column:22},end:{line:3283,column:64}},"1452":{start:{line:3285,column:24},end:{line:3298,column:13}},"1453":{start:{line:3300,column:12},end:{line:3300,column:37}},"1454":{start:{line:3302,column:21},end:{line:3302,column:67}},"1455":{start:{line:3304,column:12},end:{line:3304,column:42}},"1456":{start:{line:3305,column:12},end:{line:3305,column:89}},"1457":{start:{line:3307,column:12},end:{line:3307,column:28}},"1458":{start:{line:3310,column:8},end:{line:3310,column:29}},"1459":{start:{line:3311,column:27},end:{line:3311,column:39}},"1460":{start:{line:3312,column:31},end:{line:3312,column:33}},"1461":{start:{line:3313,column:28},end:{line:3313,column:30}},"1462":{start:{line:3314,column:38},end:{line:3314,column:40}},"1463":{start:{line:3315,column:20},end:{line:3315,column:41}},"1464":{start:{line:3316,column:24},end:{line:3316,column:25}},"1465":{start:{line:3317,column:20},end:{line:3317,column:21}},"1466":{start:{line:3318,column:21},end:{line:3318,column:22}},"1467":{start:{line:3320,column:8},end:{line:3359,column:9}},"1468":{start:{line:3321,column:12},end:{line:3358,column:13}},"1469":{start:{line:3322,column:16},end:{line:3322,column:39}},"1470":{start:{line:3323,column:16},end:{line:3323,column:45}},"1471":{start:{line:3324,column:16},end:{line:3324,column:45}},"1472":{start:{line:3325,column:16},end:{line:3351,column:17}},"1473":{start:{line:3326,column:20},end:{line:3326,column:45}},"1474":{start:{line:3327,column:20},end:{line:3327,column:39}},"1475":{start:{line:3328,column:20},end:{line:3328,column:43}},"1476":{start:{line:3329,column:20},end:{line:3329,column:51}},"1477":{start:{line:3332,column:20},end:{line:3332,column:52}},"1478":{start:{line:3333,column:20},end:{line:3333,column:46}},"1479":{start:{line:3334,column:20},end:{line:3334,column:65}},"1480":{start:{line:3335,column:20},end:{line:3335,column:74}},"1481":{start:{line:3336,column:20},end:{line:3336,column:42}},"1482":{start:{line:3339,column:20},end:{line:3339,column:45}},"1483":{start:{line:3340,column:20},end:{line:3340,column:40}},"1484":{start:{line:3341,column:20},end:{line:3341,column:42}},"1485":{start:{line:3342,column:20},end:{line:3342,column:46}},"1486":{start:{line:3343,column:20},end:{line:3343,column:54}},"1487":{start:{line:3346,column:20},end:{line:3346,column:52}},"1488":{start:{line:3347,column:20},end:{line:3347,column:46}},"1489":{start:{line:3348,column:20},end:{line:3348,column:73}},"1490":{start:{line:3349,column:20},end:{line:3349,column:74}},"1491":{start:{line:3350,column:20},end:{line:3350,column:37}},"1492":{start:{line:3356,column:16},end:{line:3356,column:39}},"1493":{start:{line:3357,column:16},end:{line:3357,column:24}},"1494":{start:{line:3362,column:8},end:{line:3362,column:29}},"1495":{start:{line:3363,column:8},end:{line:3363,column:29}},"1496":{start:{line:3364,column:8},end:{line:3364,column:42}},"1497":{start:{line:3368,column:8},end:{line:3395,column:9}},"1498":{start:{line:3369,column:12},end:{line:3369,column:35}},"1499":{start:{line:3372,column:12},end:{line:3372,column:41}},"1500":{start:{line:3373,column:12},end:{line:3373,column:40}},"1501":{start:{line:3374,column:12},end:{line:3374,column:45}},"1502":{start:{line:3375,column:12},end:{line:3375,column:61}},"1503":{start:{line:3377,column:14},end:{line:3395,column:9}},"1504":{start:{line:3380,column:12},end:{line:3380,column:35}},"1505":{start:{line:3381,column:12},end:{line:3381,column:41}},"1506":{start:{line:3382,column:12},end:{line:3382,column:41}},"1507":{start:{line:3383,column:12},end:{line:3383,column:44}},"1508":{start:{line:3384,column:12},end:{line:3384,column:48}},"1509":{start:{line:3390,column:12},end:{line:3390,column:61}},"1510":{start:{line:3391,column:12},end:{line:3391,column:35}},"1511":{start:{line:3392,column:12},end:{line:3392,column:39}},"1512":{start:{line:3393,column:12},end:{line:3393,column:41}},"1513":{start:{line:3394,column:12},end:{line:3394,column:45}},"1514":{start:{line:3396,column:8},end:{line:3396,column:40}},"1515":{start:{line:3397,column:8},end:{line:3397,column:34}},"1516":{start:{line:3402,column:20},end:{line:3402,column:66}},"1517":{start:{line:3403,column:20},end:{line:3403,column:66}},"1518":{start:{line:3404,column:8},end:{line:3404,column:36}},"1519":{start:{line:3410,column:8},end:{line:3410,column:29}},"1520":{start:{line:3413,column:8},end:{line:3429,column:9}},"1521":{start:{line:3414,column:12},end:{line:3414,column:36}},"1522":{start:{line:3415,column:29},end:{line:3418,column:13}},"1523":{start:{line:3425,column:12},end:{line:3425,column:102}},"1524":{start:{line:3430,column:8},end:{line:3430,column:44}},"1525":{start:{line:3431,column:8},end:{line:3431,column:74}},"1526":{start:{line:3432,column:8},end:{line:3432,column:85}},"1527":{start:{line:3433,column:8},end:{line:3433,column:29}},"1528":{start:{line:3435,column:8},end:{line:3435,column:24}},"1529":{start:{line:3442,column:8},end:{line:3442,column:32}},"1530":{start:{line:3443,column:8},end:{line:3445,column:9}},"1531":{start:{line:3444,column:12},end:{line:3444,column:64}},"1532":{start:{line:3446,column:22},end:{line:3446,column:54}},"1533":{start:{line:3448,column:18},end:{line:3448,column:80}},"1534":{start:{line:3449,column:8},end:{line:3449,column:34}},"1535":{start:{line:3450,column:24},end:{line:3450,column:54}},"1536":{start:{line:3451,column:8},end:{line:3453,column:9}},"1537":{start:{line:3452,column:12},end:{line:3452,column:83}},"1538":{start:{line:3456,column:19},end:{line:3456,column:51}},"1539":{start:{line:3457,column:8},end:{line:3459,column:9}},"1540":{start:{line:3458,column:12},end:{line:3458,column:108}},"1541":{start:{line:3460,column:8},end:{line:3462,column:9}},"1542":{start:{line:3461,column:12},end:{line:3461,column:63}},"1543":{start:{line:3464,column:29},end:{line:3464,column:65}},"1544":{start:{line:3466,column:8},end:{line:3470,column:9}},"1545":{start:{line:3467,column:12},end:{line:3467,column:61}},"1546":{start:{line:3469,column:12},end:{line:3469,column:60}},"1547":{start:{line:3472,column:24},end:{line:3472,column:48}},"1548":{start:{line:3474,column:22},end:{line:3474,column:79}},"1549":{start:{line:3475,column:25},end:{line:3487,column:9}},"1550":{start:{line:3489,column:17},end:{line:3489,column:29}},"1551":{start:{line:3490,column:17},end:{line:3490,column:29}},"1552":{start:{line:3494,column:8},end:{line:3498,column:9}},"1553":{start:{line:3497,column:12},end:{line:3497,column:59}},"1554":{start:{line:3500,column:27},end:{line:3500,column:39}},"1555":{start:{line:3501,column:31},end:{line:3501,column:33}},"1556":{start:{line:3502,column:28},end:{line:3502,column:30}},"1557":{start:{line:3503,column:38},end:{line:3503,column:40}},"1558":{start:{line:3504,column:20},end:{line:3504,column:41}},"1559":{start:{line:3505,column:24},end:{line:3505,column:25}},"1560":{start:{line:3506,column:20},end:{line:3506,column:21}},"1561":{start:{line:3509,column:8},end:{line:3540,column:9}},"1562":{start:{line:3510,column:12},end:{line:3539,column:13}},"1563":{start:{line:3511,column:16},end:{line:3511,column:39}},"1564":{start:{line:3512,column:16},end:{line:3512,column:45}},"1565":{start:{line:3513,column:16},end:{line:3513,column:45}},"1566":{start:{line:3514,column:16},end:{line:3535,column:17}},"1567":{start:{line:3515,column:20},end:{line:3515,column:45}},"1568":{start:{line:3516,column:20},end:{line:3516,column:39}},"1569":{start:{line:3517,column:20},end:{line:3517,column:43}},"1570":{start:{line:3518,column:20},end:{line:3518,column:51}},"1571":{start:{line:3519,column:20},end:{line:3519,column:52}},"1572":{start:{line:3520,column:20},end:{line:3520,column:46}},"1573":{start:{line:3521,column:20},end:{line:3521,column:65}},"1574":{start:{line:3522,column:20},end:{line:3522,column:74}},"1575":{start:{line:3523,column:20},end:{line:3523,column:42}},"1576":{start:{line:3525,column:20},end:{line:3525,column:45}},"1577":{start:{line:3526,column:20},end:{line:3526,column:40}},"1578":{start:{line:3527,column:20},end:{line:3527,column:42}},"1579":{start:{line:3528,column:20},end:{line:3528,column:46}},"1580":{start:{line:3529,column:20},end:{line:3529,column:54}},"1581":{start:{line:3530,column:20},end:{line:3530,column:52}},"1582":{start:{line:3531,column:20},end:{line:3531,column:46}},"1583":{start:{line:3532,column:20},end:{line:3532,column:73}},"1584":{start:{line:3533,column:20},end:{line:3533,column:74}},"1585":{start:{line:3534,column:20},end:{line:3534,column:37}},"1586":{start:{line:3537,column:16},end:{line:3537,column:39}},"1587":{start:{line:3538,column:16},end:{line:3538,column:24}},"1588":{start:{line:3542,column:8},end:{line:3542,column:37}},"1589":{start:{line:3543,column:8},end:{line:3543,column:36}},"1590":{start:{line:3544,column:8},end:{line:3544,column:41}},"1591":{start:{line:3545,column:8},end:{line:3545,column:65}},"1592":{start:{line:3550,column:20},end:{line:3550,column:66}},"1593":{start:{line:3551,column:20},end:{line:3551,column:66}},"1594":{start:{line:3552,column:8},end:{line:3552,column:36}},"1595":{start:{line:3553,column:8},end:{line:3561,column:9}},"1596":{start:{line:3555,column:29},end:{line:3558,column:13}},"1597":{start:{line:3560,column:12},end:{line:3560,column:102}},"1598":{start:{line:3563,column:8},end:{line:3563,column:84}},"1599":{start:{line:3564,column:8},end:{line:3564,column:44}},"1600":{start:{line:3565,column:8},end:{line:3565,column:74}},"1601":{start:{line:3568,column:8},end:{line:3568,column:24}},"1602":{start:{line:3575,column:8},end:{line:3577,column:9}},"1603":{start:{line:3576,column:12},end:{line:3576,column:64}},"1604":{start:{line:3578,column:22},end:{line:3578,column:54}},"1605":{start:{line:3581,column:18},end:{line:3581,column:90}},"1606":{start:{line:3582,column:8},end:{line:3582,column:35}},"1607":{start:{line:3583,column:25},end:{line:3583,column:55}},"1608":{start:{line:3584,column:8},end:{line:3586,column:9}},"1609":{start:{line:3585,column:12},end:{line:3585,column:84}},"1610":{start:{line:3587,column:21},end:{line:3587,column:54}},"1611":{start:{line:3588,column:8},end:{line:3590,column:9}},"1612":{start:{line:3589,column:12},end:{line:3589,column:111}},"1613":{start:{line:3593,column:29},end:{line:3593,column:65}},"1614":{start:{line:3595,column:8},end:{line:3600,column:9}},"1615":{start:{line:3596,column:12},end:{line:3596,column:59}},"1616":{start:{line:3599,column:12},end:{line:3599,column:60}},"1617":{start:{line:3603,column:24},end:{line:3603,column:48}},"1618":{start:{line:3604,column:22},end:{line:3604,column:79}},"1619":{start:{line:3605,column:25},end:{line:3617,column:9}},"1620":{start:{line:3619,column:17},end:{line:3619,column:29}},"1621":{start:{line:3620,column:17},end:{line:3620,column:29}},"1622":{start:{line:3623,column:8},end:{line:3627,column:9}},"1623":{start:{line:3626,column:12},end:{line:3626,column:59}},"1624":{start:{line:3629,column:25},end:{line:3629,column:37}},"1625":{start:{line:3631,column:30},end:{line:3631,column:32}},"1626":{start:{line:3632,column:28},end:{line:3632,column:30}},"1627":{start:{line:3633,column:20},end:{line:3633,column:41}},"1628":{start:{line:3634,column:20},end:{line:3634,column:21}},"1629":{start:{line:3635,column:24},end:{line:3635,column:25}},"1630":{start:{line:3636,column:26},end:{line:3636,column:38}},"1631":{start:{line:3637,column:26},end:{line:3637,column:27}},"1632":{start:{line:3639,column:8},end:{line:3675,column:9}},"1633":{start:{line:3640,column:12},end:{line:3640,column:47}},"1634":{start:{line:3641,column:12},end:{line:3641,column:35}},"1635":{start:{line:3642,column:12},end:{line:3674,column:13}},"1636":{start:{line:3643,column:16},end:{line:3643,column:39}},"1637":{start:{line:3644,column:16},end:{line:3644,column:45}},"1638":{start:{line:3645,column:16},end:{line:3645,column:45}},"1639":{start:{line:3646,column:16},end:{line:3646,column:69}},"1640":{start:{line:3647,column:16},end:{line:3647,column:69}},"1641":{start:{line:3649,column:16},end:{line:3671,column:17}},"1642":{start:{line:3650,column:20},end:{line:3650,column:47}},"1643":{start:{line:3652,column:20},end:{line:3652,column:51}},"1644":{start:{line:3653,column:20},end:{line:3653,column:39}},"1645":{start:{line:3654,column:20},end:{line:3654,column:43}},"1646":{start:{line:3655,column:20},end:{line:3655,column:46}},"1647":{start:{line:3656,column:20},end:{line:3656,column:56}},"1648":{start:{line:3657,column:20},end:{line:3657,column:74}},"1649":{start:{line:3658,column:20},end:{line:3658,column:42}},"1650":{start:{line:3660,column:20},end:{line:3660,column:47}},"1651":{start:{line:3663,column:20},end:{line:3663,column:40}},"1652":{start:{line:3664,column:20},end:{line:3664,column:42}},"1653":{start:{line:3665,column:20},end:{line:3665,column:46}},"1654":{start:{line:3666,column:20},end:{line:3666,column:56}},"1655":{start:{line:3667,column:20},end:{line:3667,column:46}},"1656":{start:{line:3668,column:20},end:{line:3668,column:74}},"1657":{start:{line:3669,column:20},end:{line:3669,column:37}},"1658":{start:{line:3673,column:16},end:{line:3673,column:24}},"1659":{start:{line:3683,column:8},end:{line:3683,column:38}},"1660":{start:{line:3684,column:8},end:{line:3684,column:36}},"1661":{start:{line:3685,column:8},end:{line:3685,column:41}},"1662":{start:{line:3687,column:8},end:{line:3687,column:65}},"1663":{start:{line:3689,column:22},end:{line:3689,column:68}},"1664":{start:{line:3690,column:22},end:{line:3690,column:68}},"1665":{start:{line:3691,column:8},end:{line:3691,column:36}},"1666":{start:{line:3693,column:8},end:{line:3699,column:9}},"1667":{start:{line:3694,column:29},end:{line:3697,column:13}},"1668":{start:{line:3698,column:12},end:{line:3698,column:102}},"1669":{start:{line:3700,column:8},end:{line:3700,column:85}},"1670":{start:{line:3702,column:8},end:{line:3702,column:44}},"1671":{start:{line:3703,column:8},end:{line:3703,column:74}},"1672":{start:{line:3705,column:8},end:{line:3705,column:24}},"1673":{start:{line:3974,column:29},end:{line:3974,column:65}},"1674":{start:{line:3975,column:8},end:{line:3977,column:9}},"1675":{start:{line:3976,column:12},end:{line:3976,column:57}},"1676":{start:{line:3978,column:24},end:{line:3978,column:61}},"1677":{start:{line:3979,column:8},end:{line:3979,column:24}},"1678":{start:{line:3992,column:0},end:{line:3992,column:59}},"1679":{start:{line:3993,column:0},end:{line:3993,column:51}},"1680":{start:{line:3994,column:0},end:{line:3994,column:39}},"1681":{start:{line:3995,column:0},end:{line:3995,column:73}},"1682":{start:{line:3996,column:0},end:{line:3996,column:57}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:18},end:{line:10,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:14},end:{line:14,column:5}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:16,column:4},end:{line:16,column:5}},loc:{start:{line:16,column:26},end:{line:18,column:5}},line:16},"3":{name:"(anonymous_3)",decl:{start:{line:20,column:4},end:{line:20,column:5}},loc:{start:{line:20,column:20},end:{line:22,column:5}},line:20},"4":{name:"(anonymous_4)",decl:{start:{line:25,column:4},end:{line:25,column:5}},loc:{start:{line:25,column:13},end:{line:27,column:5}},line:25},"5":{name:"(anonymous_5)",decl:{start:{line:30,column:4},end:{line:30,column:5}},loc:{start:{line:30,column:19},end:{line:32,column:5}},line:30},"6":{name:"(anonymous_6)",decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:33},end:{line:36,column:5}},line:34},"7":{name:"(anonymous_7)",decl:{start:{line:38,column:4},end:{line:38,column:5}},loc:{start:{line:38,column:27},end:{line:40,column:5}},line:38},"8":{name:"(anonymous_8)",decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:21},end:{line:44,column:5}},line:42},"9":{name:"(anonymous_9)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:18},end:{line:53,column:5}},line:50},"10":{name:"(anonymous_10)",decl:{start:{line:59,column:4},end:{line:59,column:5}},loc:{start:{line:59,column:20},end:{line:61,column:5}},line:59},"11":{name:"(anonymous_11)",decl:{start:{line:63,column:4},end:{line:63,column:5}},loc:{start:{line:63,column:33},end:{line:85,column:5}},line:63},"12":{name:"(anonymous_12)",decl:{start:{line:89,column:4},end:{line:89,column:5}},loc:{start:{line:89,column:32},end:{line:125,column:5}},line:89},"13":{name:"(anonymous_13)",decl:{start:{line:149,column:4},end:{line:149,column:5}},loc:{start:{line:149,column:52},end:{line:172,column:5}},line:149},"14":{name:"(anonymous_14)",decl:{start:{line:174,column:4},end:{line:174,column:5}},loc:{start:{line:174,column:24},end:{line:198,column:5}},line:174},"15":{name:"(anonymous_15)",decl:{start:{line:209,column:4},end:{line:209,column:5}},loc:{start:{line:209,column:30},end:{line:217,column:5}},line:209},"16":{name:"(anonymous_16)",decl:{start:{line:219,column:4},end:{line:219,column:5}},loc:{start:{line:219,column:46},end:{line:250,column:2}},line:219},"17":{name:"(anonymous_17)",decl:{start:{line:253,column:4},end:{line:253,column:5}},loc:{start:{line:253,column:44},end:{line:258,column:5}},line:253},"18":{name:"(anonymous_18)",decl:{start:{line:266,column:4},end:{line:266,column:5}},loc:{start:{line:266,column:26},end:{line:294,column:5}},line:266},"19":{name:"(anonymous_19)",decl:{start:{line:297,column:4},end:{line:297,column:5}},loc:{start:{line:297,column:61},end:{line:312,column:5}},line:297},"20":{name:"(anonymous_20)",decl:{start:{line:315,column:4},end:{line:315,column:5}},loc:{start:{line:315,column:27},end:{line:325,column:5}},line:315},"21":{name:"(anonymous_21)",decl:{start:{line:328,column:4},end:{line:328,column:5}},loc:{start:{line:328,column:26},end:{line:338,column:5}},line:328},"22":{name:"(anonymous_22)",decl:{start:{line:344,column:4},end:{line:344,column:5}},loc:{start:{line:344,column:18},end:{line:347,column:5}},line:344},"23":{name:"(anonymous_23)",decl:{start:{line:348,column:4},end:{line:348,column:5}},loc:{start:{line:348,column:20},end:{line:350,column:5}},line:348},"24":{name:"(anonymous_24)",decl:{start:{line:351,column:4},end:{line:351,column:5}},loc:{start:{line:351,column:33},end:{line:433,column:5}},line:351},"25":{name:"(anonymous_25)",decl:{start:{line:436,column:4},end:{line:436,column:5}},loc:{start:{line:436,column:31},end:{line:439,column:5}},line:436},"26":{name:"(anonymous_26)",decl:{start:{line:446,column:5},end:{line:446,column:6}},loc:{start:{line:446,column:39},end:{line:460,column:5}},line:446},"27":{name:"(anonymous_27)",decl:{start:{line:468,column:4},end:{line:468,column:5}},loc:{start:{line:468,column:35},end:{line:475,column:5}},line:468},"28":{name:"(anonymous_28)",decl:{start:{line:484,column:4},end:{line:484,column:5}},loc:{start:{line:484,column:62},end:{line:498,column:5}},line:484},"29":{name:"(anonymous_29)",decl:{start:{line:510,column:4},end:{line:510,column:5}},loc:{start:{line:510,column:68},end:{line:527,column:5}},line:510},"30":{name:"(anonymous_30)",decl:{start:{line:530,column:4},end:{line:530,column:5}},loc:{start:{line:530,column:44},end:{line:537,column:5}},line:530},"31":{name:"(anonymous_31)",decl:{start:{line:541,column:4},end:{line:541,column:5}},loc:{start:{line:541,column:33},end:{line:552,column:5}},line:541},"32":{name:"(anonymous_32)",decl:{start:{line:559,column:4},end:{line:559,column:5}},loc:{start:{line:559,column:72},end:{line:759,column:5}},line:559},"33":{name:"(anonymous_33)",decl:{start:{line:763,column:4},end:{line:763,column:5}},loc:{start:{line:763,column:38},end:{line:787,column:5}},line:763},"34":{name:"(anonymous_34)",decl:{start:{line:790,column:4},end:{line:790,column:5}},loc:{start:{line:790,column:30},end:{line:797,column:5}},line:790},"35":{name:"(anonymous_35)",decl:{start:{line:799,column:4},end:{line:799,column:5}},loc:{start:{line:799,column:31},end:{line:811,column:5}},line:799},"36":{name:"(anonymous_36)",decl:{start:{line:816,column:4},end:{line:816,column:5}},loc:{start:{line:816,column:35},end:{line:851,column:5}},line:816},"37":{name:"(anonymous_37)",decl:{start:{line:856,column:4},end:{line:856,column:5}},loc:{start:{line:856,column:33},end:{line:906,column:5}},line:856},"38":{name:"(anonymous_38)",decl:{start:{line:933,column:4},end:{line:933,column:5}},loc:{start:{line:933,column:76},end:{line:988,column:5}},line:933},"39":{name:"(anonymous_39)",decl:{start:{line:968,column:45},end:{line:968,column:46}},loc:{start:{line:968,column:56},end:{line:968,column:95}},line:968},"40":{name:"(anonymous_40)",decl:{start:{line:1036,column:4},end:{line:1036,column:5}},loc:{start:{line:1036,column:67},end:{line:1078,column:5}},line:1036},"41":{name:"(anonymous_41)",decl:{start:{line:1084,column:4},end:{line:1084,column:5}},loc:{start:{line:1084,column:60},end:{line:1093,column:5}},line:1084},"42":{name:"(anonymous_42)",decl:{start:{line:1091,column:51},end:{line:1091,column:52}},loc:{start:{line:1091,column:56},end:{line:1091,column:97}},line:1091},"43":{name:"(anonymous_43)",decl:{start:{line:1097,column:4},end:{line:1097,column:5}},loc:{start:{line:1097,column:61},end:{line:1225,column:5}},line:1097},"44":{name:"(anonymous_44)",decl:{start:{line:1148,column:34},end:{line:1148,column:35}},loc:{start:{line:1148,column:98},end:{line:1153,column:13}},line:1148},"45":{name:"(anonymous_45)",decl:{start:{line:1154,column:38},end:{line:1154,column:39}},loc:{start:{line:1154,column:150},end:{line:1159,column:13}},line:1154},"46":{name:"(anonymous_46)",decl:{start:{line:1155,column:56},end:{line:1155,column:57}},loc:{start:{line:1155,column:70},end:{line:1155,column:87}},line:1155},"47":{name:"(anonymous_47)",decl:{start:{line:1239,column:4},end:{line:1239,column:5}},loc:{start:{line:1239,column:64},end:{line:1291,column:5}},line:1239},"48":{name:"(anonymous_48)",decl:{start:{line:1293,column:4},end:{line:1293,column:5}},loc:{start:{line:1293,column:98},end:{line:1361,column:5}},line:1293},"49":{name:"(anonymous_49)",decl:{start:{line:1410,column:4},end:{line:1410,column:5}},loc:{start:{line:1410,column:18},end:{line:1412,column:5}},line:1410},"50":{name:"(anonymous_50)",decl:{start:{line:1414,column:4},end:{line:1414,column:5}},loc:{start:{line:1414,column:20},end:{line:1416,column:5}},line:1414},"51":{name:"(anonymous_51)",decl:{start:{line:1419,column:4},end:{line:1419,column:5}},loc:{start:{line:1419,column:61},end:{line:1434,column:5}},line:1419},"52":{name:"(anonymous_52)",decl:{start:{line:1437,column:4},end:{line:1437,column:5}},loc:{start:{line:1437,column:33},end:{line:1511,column:5}},line:1437},"53":{name:"(anonymous_53)",decl:{start:{line:1513,column:4},end:{line:1513,column:5}},loc:{start:{line:1513,column:31},end:{line:1516,column:5}},line:1513},"54":{name:"(anonymous_54)",decl:{start:{line:1523,column:4},end:{line:1523,column:5}},loc:{start:{line:1523,column:38},end:{line:1537,column:5}},line:1523},"55":{name:"(anonymous_55)",decl:{start:{line:1546,column:4},end:{line:1546,column:5}},loc:{start:{line:1546,column:62},end:{line:1569,column:5}},line:1546},"56":{name:"(anonymous_56)",decl:{start:{line:1571,column:4},end:{line:1571,column:5}},loc:{start:{line:1571,column:33},end:{line:1577,column:5}},line:1571},"57":{name:"(anonymous_57)",decl:{start:{line:1589,column:4},end:{line:1589,column:5}},loc:{start:{line:1589,column:38},end:{line:1615,column:5}},line:1589},"58":{name:"(anonymous_58)",decl:{start:{line:1617,column:4},end:{line:1617,column:5}},loc:{start:{line:1617,column:30},end:{line:1626,column:5}},line:1617},"59":{name:"(anonymous_59)",decl:{start:{line:1636,column:4},end:{line:1636,column:5}},loc:{start:{line:1636,column:41},end:{line:1656,column:5}},line:1636},"60":{name:"(anonymous_60)",decl:{start:{line:1658,column:4},end:{line:1658,column:5}},loc:{start:{line:1658,column:31},end:{line:1666,column:5}},line:1658},"61":{name:"(anonymous_61)",decl:{start:{line:1668,column:4},end:{line:1668,column:5}},loc:{start:{line:1668,column:31},end:{line:1677,column:5}},line:1668},"62":{name:"(anonymous_62)",decl:{start:{line:1686,column:4},end:{line:1686,column:5}},loc:{start:{line:1686,column:126},end:{line:1752,column:5}},line:1686},"63":{name:"(anonymous_63)",decl:{start:{line:1755,column:4},end:{line:1755,column:5}},loc:{start:{line:1755,column:56},end:{line:1820,column:5}},line:1755},"64":{name:"(anonymous_64)",decl:{start:{line:1830,column:4},end:{line:1830,column:5}},loc:{start:{line:1830,column:119},end:{line:1866,column:5}},line:1830},"65":{name:"(anonymous_65)",decl:{start:{line:1872,column:4},end:{line:1872,column:5}},loc:{start:{line:1872,column:28},end:{line:1888,column:5}},line:1872},"66":{name:"(anonymous_66)",decl:{start:{line:1892,column:4},end:{line:1892,column:5}},loc:{start:{line:1892,column:35},end:{line:1953,column:5}},line:1892},"67":{name:"(anonymous_67)",decl:{start:{line:1963,column:4},end:{line:1963,column:5}},loc:{start:{line:1963,column:18},end:{line:1966,column:5}},line:1963},"68":{name:"(anonymous_68)",decl:{start:{line:1968,column:4},end:{line:1968,column:5}},loc:{start:{line:1968,column:20},end:{line:1970,column:5}},line:1968},"69":{name:"(anonymous_69)",decl:{start:{line:1973,column:4},end:{line:1973,column:5}},loc:{start:{line:1973,column:33},end:{line:2051,column:5}},line:1973},"70":{name:"(anonymous_70)",decl:{start:{line:2053,column:4},end:{line:2053,column:5}},loc:{start:{line:2053,column:31},end:{line:2056,column:5}},line:2053},"71":{name:"(anonymous_71)",decl:{start:{line:2060,column:4},end:{line:2060,column:5}},loc:{start:{line:2060,column:61},end:{line:2075,column:5}},line:2060},"72":{name:"(anonymous_72)",decl:{start:{line:2078,column:4},end:{line:2078,column:5}},loc:{start:{line:2078,column:51},end:{line:2109,column:5}},line:2078},"73":{name:"(anonymous_73)",decl:{start:{line:2112,column:4},end:{line:2112,column:5}},loc:{start:{line:2112,column:23},end:{line:2138,column:5}},line:2112},"74":{name:"(anonymous_74)",decl:{start:{line:2142,column:4},end:{line:2142,column:5}},loc:{start:{line:2142,column:32},end:{line:2178,column:5}},line:2142},"75":{name:"(anonymous_75)",decl:{start:{line:2187,column:4},end:{line:2187,column:5}},loc:{start:{line:2187,column:42},end:{line:2241,column:5}},line:2187},"76":{name:"(anonymous_76)",decl:{start:{line:2244,column:4},end:{line:2244,column:5}},loc:{start:{line:2244,column:42},end:{line:2314,column:5}},line:2244},"77":{name:"(anonymous_77)",decl:{start:{line:2318,column:4},end:{line:2318,column:5}},loc:{start:{line:2318,column:44},end:{line:2323,column:5}},line:2318},"78":{name:"(anonymous_78)",decl:{start:{line:2319,column:30},end:{line:2319,column:31}},loc:{start:{line:2319,column:39},end:{line:2319,column:215}},line:2319},"79":{name:"(anonymous_79)",decl:{start:{line:2320,column:30},end:{line:2320,column:31}},loc:{start:{line:2320,column:39},end:{line:2320,column:118}},line:2320},"80":{name:"(anonymous_80)",decl:{start:{line:2321,column:30},end:{line:2321,column:31}},loc:{start:{line:2321,column:39},end:{line:2321,column:113}},line:2321},"81":{name:"(anonymous_81)",decl:{start:{line:2327,column:4},end:{line:2327,column:5}},loc:{start:{line:2327,column:45},end:{line:2332,column:5}},line:2327},"82":{name:"(anonymous_82)",decl:{start:{line:2328,column:30},end:{line:2328,column:31}},loc:{start:{line:2328,column:39},end:{line:2328,column:215}},line:2328},"83":{name:"(anonymous_83)",decl:{start:{line:2329,column:30},end:{line:2329,column:31}},loc:{start:{line:2329,column:39},end:{line:2329,column:118}},line:2329},"84":{name:"(anonymous_84)",decl:{start:{line:2330,column:30},end:{line:2330,column:31}},loc:{start:{line:2330,column:39},end:{line:2330,column:113}},line:2330},"85":{name:"(anonymous_85)",decl:{start:{line:2339,column:4},end:{line:2339,column:5}},loc:{start:{line:2339,column:63},end:{line:2626,column:5}},line:2339},"86":{name:"(anonymous_86)",decl:{start:{line:2485,column:44},end:{line:2485,column:45}},loc:{start:{line:2485,column:51},end:{line:2485,column:76}},line:2485},"87":{name:"(anonymous_87)",decl:{start:{line:2490,column:44},end:{line:2490,column:45}},loc:{start:{line:2490,column:51},end:{line:2490,column:76}},line:2490},"88":{name:"(anonymous_88)",decl:{start:{line:2581,column:42},end:{line:2581,column:43}},loc:{start:{line:2581,column:49},end:{line:2581,column:69}},line:2581},"89":{name:"(anonymous_89)",decl:{start:{line:2600,column:42},end:{line:2600,column:43}},loc:{start:{line:2600,column:50},end:{line:2600,column:71}},line:2600},"90":{name:"(anonymous_90)",decl:{start:{line:2609,column:42},end:{line:2609,column:43}},loc:{start:{line:2609,column:50},end:{line:2609,column:68}},line:2609},"91":{name:"(anonymous_91)",decl:{start:{line:2628,column:4},end:{line:2628,column:5}},loc:{start:{line:2628,column:57},end:{line:2733,column:5}},line:2628},"92":{name:"(anonymous_92)",decl:{start:{line:2737,column:4},end:{line:2737,column:5}},loc:{start:{line:2737,column:64},end:{line:3003,column:5}},line:2737},"93":{name:"(anonymous_93)",decl:{start:{line:2849,column:44},end:{line:2849,column:45}},loc:{start:{line:2849,column:51},end:{line:2849,column:76}},line:2849},"94":{name:"(anonymous_94)",decl:{start:{line:2853,column:44},end:{line:2853,column:45}},loc:{start:{line:2853,column:51},end:{line:2853,column:76}},line:2853},"95":{name:"(anonymous_95)",decl:{start:{line:2960,column:42},end:{line:2960,column:43}},loc:{start:{line:2960,column:49},end:{line:2960,column:69}},line:2960},"96":{name:"(anonymous_96)",decl:{start:{line:2982,column:42},end:{line:2982,column:43}},loc:{start:{line:2982,column:50},end:{line:2982,column:71}},line:2982},"97":{name:"(anonymous_97)",decl:{start:{line:2991,column:42},end:{line:2991,column:43}},loc:{start:{line:2991,column:50},end:{line:2991,column:68}},line:2991},"98":{name:"(anonymous_98)",decl:{start:{line:3006,column:4},end:{line:3006,column:5}},loc:{start:{line:3006,column:66},end:{line:3221,column:5}},line:3006},"99":{name:"(anonymous_99)",decl:{start:{line:3226,column:4},end:{line:3226,column:5}},loc:{start:{line:3226,column:63},end:{line:3436,column:5}},line:3226},"100":{name:"(anonymous_100)",decl:{start:{line:3441,column:4},end:{line:3441,column:5}},loc:{start:{line:3441,column:63},end:{line:3569,column:5}},line:3441},"101":{name:"(anonymous_101)",decl:{start:{line:3574,column:4},end:{line:3574,column:5}},loc:{start:{line:3574,column:65},end:{line:3706,column:5}},line:3574},"102":{name:"(anonymous_102)",decl:{start:{line:3973,column:4},end:{line:3973,column:5}},loc:{start:{line:3973,column:29},end:{line:3980,column:5}},line:3973}},branchMap:{"0":{loc:{start:{line:72,column:8},end:{line:74,column:9}},type:"if",locations:[{start:{line:72,column:8},end:{line:74,column:9}},{start:{line:72,column:8},end:{line:74,column:9}}],line:72},"1":{loc:{start:{line:81,column:12},end:{line:83,column:13}},type:"if",locations:[{start:{line:81,column:12},end:{line:83,column:13}},{start:{line:81,column:12},end:{line:83,column:13}}],line:81},"2":{loc:{start:{line:106,column:12},end:{line:109,column:13}},type:"if",locations:[{start:{line:106,column:12},end:{line:109,column:13}},{start:{line:106,column:12},end:{line:109,column:13}}],line:106},"3":{loc:{start:{line:110,column:12},end:{line:112,column:13}},type:"if",locations:[{start:{line:110,column:12},end:{line:112,column:13}},{start:{line:110,column:12},end:{line:112,column:13}}],line:110},"4":{loc:{start:{line:115,column:8},end:{line:117,column:9}},type:"if",locations:[{start:{line:115,column:8},end:{line:117,column:9}},{start:{line:115,column:8},end:{line:117,column:9}}],line:115},"5":{loc:{start:{line:115,column:12},end:{line:115,column:54}},type:"binary-expr",locations:[{start:{line:115,column:12},end:{line:115,column:43}},{start:{line:115,column:47},end:{line:115,column:54}}],line:115},"6":{loc:{start:{line:120,column:8},end:{line:122,column:9}},type:"if",locations:[{start:{line:120,column:8},end:{line:122,column:9}},{start:{line:120,column:8},end:{line:122,column:9}}],line:120},"7":{loc:{start:{line:185,column:12},end:{line:188,column:13}},type:"if",locations:[{start:{line:185,column:12},end:{line:188,column:13}},{start:{line:185,column:12},end:{line:188,column:13}}],line:185},"8":{loc:{start:{line:185,column:16},end:{line:185,column:55}},type:"binary-expr",locations:[{start:{line:185,column:16},end:{line:185,column:31}},{start:{line:185,column:35},end:{line:185,column:55}}],line:185},"9":{loc:{start:{line:189,column:12},end:{line:191,column:13}},type:"if",locations:[{start:{line:189,column:12},end:{line:191,column:13}},{start:{line:189,column:12},end:{line:191,column:13}}],line:189},"10":{loc:{start:{line:193,column:8},end:{line:195,column:9}},type:"if",locations:[{start:{line:193,column:8},end:{line:195,column:9}},{start:{line:193,column:8},end:{line:195,column:9}}],line:193},"11":{loc:{start:{line:193,column:12},end:{line:193,column:60}},type:"binary-expr",locations:[{start:{line:193,column:12},end:{line:193,column:35}},{start:{line:193,column:39},end:{line:193,column:60}}],line:193},"12":{loc:{start:{line:213,column:8},end:{line:215,column:9}},type:"if",locations:[{start:{line:213,column:8},end:{line:215,column:9}},{start:{line:213,column:8},end:{line:215,column:9}}],line:213},"13":{loc:{start:{line:223,column:3},end:{line:245,column:4}},type:"if",locations:[{start:{line:223,column:3},end:{line:245,column:4}},{start:{line:223,column:3},end:{line:245,column:4}}],line:223},"14":{loc:{start:{line:223,column:7},end:{line:223,column:46}},type:"binary-expr",locations:[{start:{line:223,column:7},end:{line:223,column:16}},{start:{line:223,column:20},end:{line:223,column:46}}],line:223},"15":{loc:{start:{line:226,column:4},end:{line:243,column:5}},type:"if",locations:[{start:{line:226,column:4},end:{line:243,column:5}},{start:{line:226,column:4},end:{line:243,column:5}}],line:226},"16":{loc:{start:{line:226,column:8},end:{line:226,column:39}},type:"binary-expr",locations:[{start:{line:226,column:8},end:{line:226,column:17}},{start:{line:226,column:21},end:{line:226,column:39}}],line:226},"17":{loc:{start:{line:306,column:8},end:{line:310,column:9}},type:"if",locations:[{start:{line:306,column:8},end:{line:310,column:9}},{start:{line:306,column:8},end:{line:310,column:9}}],line:306},"18":{loc:{start:{line:308,column:14},end:{line:310,column:9}},type:"if",locations:[{start:{line:308,column:14},end:{line:310,column:9}},{start:{line:308,column:14},end:{line:310,column:9}}],line:308},"19":{loc:{start:{line:353,column:8},end:{line:355,column:9}},type:"if",locations:[{start:{line:353,column:8},end:{line:355,column:9}},{start:{line:353,column:8},end:{line:355,column:9}}],line:353},"20":{loc:{start:{line:353,column:12},end:{line:353,column:66}},type:"binary-expr",locations:[{start:{line:353,column:12},end:{line:353,column:39}},{start:{line:353,column:43},end:{line:353,column:66}}],line:353},"21":{loc:{start:{line:358,column:8},end:{line:360,column:9}},type:"if",locations:[{start:{line:358,column:8},end:{line:360,column:9}},{start:{line:358,column:8},end:{line:360,column:9}}],line:358},"22":{loc:{start:{line:368,column:12},end:{line:370,column:13}},type:"if",locations:[{start:{line:368,column:12},end:{line:370,column:13}},{start:{line:368,column:12},end:{line:370,column:13}}],line:368},"23":{loc:{start:{line:373,column:8},end:{line:432,column:9}},type:"switch",locations:[{start:{line:374,column:12},end:{line:380,column:17}},{start:{line:381,column:12},end:{line:386,column:17}},{start:{line:387,column:12},end:{line:392,column:17}},{start:{line:393,column:12},end:{line:398,column:17}},{start:{line:399,column:12},end:{line:404,column:17}},{start:{line:405,column:12},end:{line:410,column:17}},{start:{line:411,column:12},end:{line:416,column:17}},{start:{line:417,column:12},end:{line:422,column:17}},{start:{line:423,column:12},end:{line:428,column:17}}],line:373},"24":{loc:{start:{line:375,column:16},end:{line:380,column:17}},type:"if",locations:[{start:{line:375,column:16},end:{line:380,column:17}},{start:{line:375,column:16},end:{line:380,column:17}}],line:375},"25":{loc:{start:{line:382,column:16},end:{line:386,column:17}},type:"if",locations:[{start:{line:382,column:16},end:{line:386,column:17}},{start:{line:382,column:16},end:{line:386,column:17}}],line:382},"26":{loc:{start:{line:388,column:16},end:{line:392,column:17}},type:"if",locations:[{start:{line:388,column:16},end:{line:392,column:17}},{start:{line:388,column:16},end:{line:392,column:17}}],line:388},"27":{loc:{start:{line:394,column:16},end:{line:398,column:17}},type:"if",locations:[{start:{line:394,column:16},end:{line:398,column:17}},{start:{line:394,column:16},end:{line:398,column:17}}],line:394},"28":{loc:{start:{line:400,column:16},end:{line:404,column:17}},type:"if",locations:[{start:{line:400,column:16},end:{line:404,column:17}},{start:{line:400,column:16},end:{line:404,column:17}}],line:400},"29":{loc:{start:{line:406,column:16},end:{line:410,column:17}},type:"if",locations:[{start:{line:406,column:16},end:{line:410,column:17}},{start:{line:406,column:16},end:{line:410,column:17}}],line:406},"30":{loc:{start:{line:412,column:16},end:{line:416,column:17}},type:"if",locations:[{start:{line:412,column:16},end:{line:416,column:17}},{start:{line:412,column:16},end:{line:416,column:17}}],line:412},"31":{loc:{start:{line:418,column:16},end:{line:422,column:17}},type:"if",locations:[{start:{line:418,column:16},end:{line:422,column:17}},{start:{line:418,column:16},end:{line:422,column:17}}],line:418},"32":{loc:{start:{line:424,column:16},end:{line:428,column:17}},type:"if",locations:[{start:{line:424,column:16},end:{line:428,column:17}},{start:{line:424,column:16},end:{line:428,column:17}}],line:424},"33":{loc:{start:{line:453,column:8},end:{line:459,column:9}},type:"if",locations:[{start:{line:453,column:8},end:{line:459,column:9}},{start:{line:453,column:8},end:{line:459,column:9}}],line:453},"34":{loc:{start:{line:455,column:14},end:{line:459,column:9}},type:"if",locations:[{start:{line:455,column:14},end:{line:459,column:9}},{start:{line:455,column:14},end:{line:459,column:9}}],line:455},"35":{loc:{start:{line:470,column:8},end:{line:474,column:9}},type:"if",locations:[{start:{line:470,column:8},end:{line:474,column:9}},{start:{line:470,column:8},end:{line:474,column:9}}],line:470},"36":{loc:{start:{line:470,column:12},end:{line:470,column:46}},type:"binary-expr",locations:[{start:{line:470,column:12},end:{line:470,column:21}},{start:{line:470,column:25},end:{line:470,column:46}}],line:470},"37":{loc:{start:{line:492,column:8},end:{line:496,column:9}},type:"if",locations:[{start:{line:492,column:8},end:{line:496,column:9}},{start:{line:492,column:8},end:{line:496,column:9}}],line:492},"38":{loc:{start:{line:494,column:14},end:{line:496,column:9}},type:"if",locations:[{start:{line:494,column:14},end:{line:496,column:9}},{start:{line:494,column:14},end:{line:496,column:9}}],line:494},"39":{loc:{start:{line:521,column:8},end:{line:525,column:9}},type:"if",locations:[{start:{line:521,column:8},end:{line:525,column:9}},{start:{line:521,column:8},end:{line:525,column:9}}],line:521},"40":{loc:{start:{line:523,column:14},end:{line:525,column:9}},type:"if",locations:[{start:{line:523,column:14},end:{line:525,column:9}},{start:{line:523,column:14},end:{line:525,column:9}}],line:523},"41":{loc:{start:{line:544,column:8},end:{line:547,column:9}},type:"if",locations:[{start:{line:544,column:8},end:{line:547,column:9}},{start:{line:544,column:8},end:{line:547,column:9}}],line:544},"42":{loc:{start:{line:544,column:12},end:{line:544,column:38}},type:"binary-expr",locations:[{start:{line:544,column:12},end:{line:544,column:17}},{start:{line:544,column:21},end:{line:544,column:38}}],line:544},"43":{loc:{start:{line:563,column:8},end:{line:565,column:9}},type:"if",locations:[{start:{line:563,column:8},end:{line:565,column:9}},{start:{line:563,column:8},end:{line:565,column:9}}],line:563},"44":{loc:{start:{line:563,column:11},end:{line:563,column:63}},type:"binary-expr",locations:[{start:{line:563,column:11},end:{line:563,column:29}},{start:{line:563,column:33},end:{line:563,column:63}}],line:563},"45":{loc:{start:{line:570,column:8},end:{line:572,column:9}},type:"if",locations:[{start:{line:570,column:8},end:{line:572,column:9}},{start:{line:570,column:8},end:{line:572,column:9}}],line:570},"46":{loc:{start:{line:573,column:8},end:{line:575,column:9}},type:"if",locations:[{start:{line:573,column:8},end:{line:575,column:9}},{start:{line:573,column:8},end:{line:575,column:9}}],line:573},"47":{loc:{start:{line:586,column:8},end:{line:588,column:9}},type:"if",locations:[{start:{line:586,column:8},end:{line:588,column:9}},{start:{line:586,column:8},end:{line:588,column:9}}],line:586},"48":{loc:{start:{line:769,column:8},end:{line:778,column:9}},type:"if",locations:[{start:{line:769,column:8},end:{line:778,column:9}},{start:{line:769,column:8},end:{line:778,column:9}}],line:769},"49":{loc:{start:{line:769,column:12},end:{line:769,column:60}},type:"binary-expr",locations:[{start:{line:769,column:12},end:{line:769,column:28}},{start:{line:769,column:32},end:{line:769,column:60}}],line:769},"50":{loc:{start:{line:802,column:8},end:{line:804,column:9}},type:"if",locations:[{start:{line:802,column:8},end:{line:804,column:9}},{start:{line:802,column:8},end:{line:804,column:9}}],line:802},"51":{loc:{start:{line:802,column:12},end:{line:802,column:46}},type:"binary-expr",locations:[{start:{line:802,column:12},end:{line:802,column:21}},{start:{line:802,column:25},end:{line:802,column:46}}],line:802},"52":{loc:{start:{line:807,column:8},end:{line:809,column:9}},type:"if",locations:[{start:{line:807,column:8},end:{line:809,column:9}},{start:{line:807,column:8},end:{line:809,column:9}}],line:807},"53":{loc:{start:{line:820,column:8},end:{line:822,column:9}},type:"if",locations:[{start:{line:820,column:8},end:{line:822,column:9}},{start:{line:820,column:8},end:{line:822,column:9}}],line:820},"54":{loc:{start:{line:820,column:11},end:{line:820,column:45}},type:"binary-expr",locations:[{start:{line:820,column:11},end:{line:820,column:20}},{start:{line:820,column:24},end:{line:820,column:45}}],line:820},"55":{loc:{start:{line:828,column:8},end:{line:830,column:9}},type:"if",locations:[{start:{line:828,column:8},end:{line:830,column:9}},{start:{line:828,column:8},end:{line:830,column:9}}],line:828},"56":{loc:{start:{line:833,column:8},end:{line:835,column:9}},type:"if",locations:[{start:{line:833,column:8},end:{line:835,column:9}},{start:{line:833,column:8},end:{line:835,column:9}}],line:833},"57":{loc:{start:{line:860,column:8},end:{line:862,column:9}},type:"if",locations:[{start:{line:860,column:8},end:{line:862,column:9}},{start:{line:860,column:8},end:{line:862,column:9}}],line:860},"58":{loc:{start:{line:860,column:12},end:{line:860,column:46}},type:"binary-expr",locations:[{start:{line:860,column:12},end:{line:860,column:21}},{start:{line:860,column:25},end:{line:860,column:46}}],line:860},"59":{loc:{start:{line:865,column:8},end:{line:867,column:9}},type:"if",locations:[{start:{line:865,column:8},end:{line:867,column:9}},{start:{line:865,column:8},end:{line:867,column:9}}],line:865},"60":{loc:{start:{line:868,column:8},end:{line:870,column:9}},type:"if",locations:[{start:{line:868,column:8},end:{line:870,column:9}},{start:{line:868,column:8},end:{line:870,column:9}}],line:868},"61":{loc:{start:{line:871,column:8},end:{line:873,column:9}},type:"if",locations:[{start:{line:871,column:8},end:{line:873,column:9}},{start:{line:871,column:8},end:{line:873,column:9}}],line:871},"62":{loc:{start:{line:879,column:8},end:{line:901,column:9}},type:"if",locations:[{start:{line:879,column:8},end:{line:901,column:9}},{start:{line:879,column:8},end:{line:901,column:9}}],line:879},"63":{loc:{start:{line:951,column:8},end:{line:953,column:9}},type:"if",locations:[{start:{line:951,column:8},end:{line:953,column:9}},{start:{line:951,column:8},end:{line:953,column:9}}],line:951},"64":{loc:{start:{line:951,column:12},end:{line:951,column:46}},type:"binary-expr",locations:[{start:{line:951,column:12},end:{line:951,column:21}},{start:{line:951,column:25},end:{line:951,column:46}}],line:951},"65":{loc:{start:{line:956,column:8},end:{line:958,column:9}},type:"if",locations:[{start:{line:956,column:8},end:{line:958,column:9}},{start:{line:956,column:8},end:{line:958,column:9}}],line:956},"66":{loc:{start:{line:961,column:8},end:{line:963,column:9}},type:"if",locations:[{start:{line:961,column:8},end:{line:963,column:9}},{start:{line:961,column:8},end:{line:963,column:9}}],line:961},"67":{loc:{start:{line:965,column:8},end:{line:967,column:9}},type:"if",locations:[{start:{line:965,column:8},end:{line:967,column:9}},{start:{line:965,column:8},end:{line:967,column:9}}],line:965},"68":{loc:{start:{line:970,column:8},end:{line:977,column:9}},type:"if",locations:[{start:{line:970,column:8},end:{line:977,column:9}},{start:{line:970,column:8},end:{line:977,column:9}}],line:970},"69":{loc:{start:{line:1040,column:8},end:{line:1042,column:9}},type:"if",locations:[{start:{line:1040,column:8},end:{line:1042,column:9}},{start:{line:1040,column:8},end:{line:1042,column:9}}],line:1040},"70":{loc:{start:{line:1040,column:11},end:{line:1040,column:45}},type:"binary-expr",locations:[{start:{line:1040,column:11},end:{line:1040,column:20}},{start:{line:1040,column:24},end:{line:1040,column:45}}],line:1040},"71":{loc:{start:{line:1045,column:8},end:{line:1047,column:9}},type:"if",locations:[{start:{line:1045,column:8},end:{line:1047,column:9}},{start:{line:1045,column:8},end:{line:1047,column:9}}],line:1045},"72":{loc:{start:{line:1048,column:8},end:{line:1050,column:9}},type:"if",locations:[{start:{line:1048,column:8},end:{line:1050,column:9}},{start:{line:1048,column:8},end:{line:1050,column:9}}],line:1048},"73":{loc:{start:{line:1058,column:8},end:{line:1060,column:9}},type:"if",locations:[{start:{line:1058,column:8},end:{line:1060,column:9}},{start:{line:1058,column:8},end:{line:1060,column:9}}],line:1058},"74":{loc:{start:{line:1062,column:8},end:{line:1066,column:9}},type:"if",locations:[{start:{line:1062,column:8},end:{line:1066,column:9}},{start:{line:1062,column:8},end:{line:1066,column:9}}],line:1062},"75":{loc:{start:{line:1091,column:56},end:{line:1091,column:97}},type:"binary-expr",locations:[{start:{line:1091,column:56},end:{line:1091,column:77}},{start:{line:1091,column:81},end:{line:1091,column:97}}],line:1091},"76":{loc:{start:{line:1104,column:8},end:{line:1106,column:9}},type:"if",locations:[{start:{line:1104,column:8},end:{line:1106,column:9}},{start:{line:1104,column:8},end:{line:1106,column:9}}],line:1104},"77":{loc:{start:{line:1104,column:12},end:{line:1104,column:50}},type:"binary-expr",locations:[{start:{line:1104,column:12},end:{line:1104,column:23}},{start:{line:1104,column:27},end:{line:1104,column:50}}],line:1104},"78":{loc:{start:{line:1109,column:8},end:{line:1111,column:9}},type:"if",locations:[{start:{line:1109,column:8},end:{line:1111,column:9}},{start:{line:1109,column:8},end:{line:1111,column:9}}],line:1109},"79":{loc:{start:{line:1116,column:8},end:{line:1118,column:9}},type:"if",locations:[{start:{line:1116,column:8},end:{line:1118,column:9}},{start:{line:1116,column:8},end:{line:1118,column:9}}],line:1116},"80":{loc:{start:{line:1116,column:12},end:{line:1116,column:50}},type:"binary-expr",locations:[{start:{line:1116,column:12},end:{line:1116,column:23}},{start:{line:1116,column:27},end:{line:1116,column:50}}],line:1116},"81":{loc:{start:{line:1123,column:8},end:{line:1125,column:9}},type:"if",locations:[{start:{line:1123,column:8},end:{line:1125,column:9}},{start:{line:1123,column:8},end:{line:1125,column:9}}],line:1123},"82":{loc:{start:{line:1126,column:8},end:{line:1128,column:9}},type:"if",locations:[{start:{line:1126,column:8},end:{line:1128,column:9}},{start:{line:1126,column:8},end:{line:1128,column:9}}],line:1126},"83":{loc:{start:{line:1141,column:8},end:{line:1143,column:9}},type:"if",locations:[{start:{line:1141,column:8},end:{line:1143,column:9}},{start:{line:1141,column:8},end:{line:1143,column:9}}],line:1141},"84":{loc:{start:{line:1162,column:8},end:{line:1164,column:9}},type:"if",locations:[{start:{line:1162,column:8},end:{line:1164,column:9}},{start:{line:1162,column:8},end:{line:1164,column:9}}],line:1162},"85":{loc:{start:{line:1170,column:8},end:{line:1175,column:9}},type:"if",locations:[{start:{line:1170,column:8},end:{line:1175,column:9}},{start:{line:1170,column:8},end:{line:1175,column:9}}],line:1170},"86":{loc:{start:{line:1181,column:8},end:{line:1183,column:9}},type:"if",locations:[{start:{line:1181,column:8},end:{line:1183,column:9}},{start:{line:1181,column:8},end:{line:1183,column:9}}],line:1181},"87":{loc:{start:{line:1196,column:8},end:{line:1199,column:9}},type:"if",locations:[{start:{line:1196,column:8},end:{line:1199,column:9}},{start:{line:1196,column:8},end:{line:1199,column:9}}],line:1196},"88":{loc:{start:{line:1196,column:12},end:{line:1196,column:31}},type:"binary-expr",locations:[{start:{line:1196,column:12},end:{line:1196,column:18}},{start:{line:1196,column:22},end:{line:1196,column:31}}],line:1196},"89":{loc:{start:{line:1211,column:8},end:{line:1217,column:9}},type:"if",locations:[{start:{line:1211,column:8},end:{line:1217,column:9}},{start:{line:1211,column:8},end:{line:1217,column:9}}],line:1211},"90":{loc:{start:{line:1243,column:8},end:{line:1245,column:9}},type:"if",locations:[{start:{line:1243,column:8},end:{line:1245,column:9}},{start:{line:1243,column:8},end:{line:1245,column:9}}],line:1243},"91":{loc:{start:{line:1243,column:12},end:{line:1243,column:50}},type:"binary-expr",locations:[{start:{line:1243,column:12},end:{line:1243,column:23}},{start:{line:1243,column:27},end:{line:1243,column:50}}],line:1243},"92":{loc:{start:{line:1283,column:8},end:{line:1290,column:9}},type:"if",locations:[{start:{line:1283,column:8},end:{line:1290,column:9}},{start:{line:1283,column:8},end:{line:1290,column:9}}],line:1283},"93":{loc:{start:{line:1297,column:8},end:{line:1299,column:9}},type:"if",locations:[{start:{line:1297,column:8},end:{line:1299,column:9}},{start:{line:1297,column:8},end:{line:1299,column:9}}],line:1297},"94":{loc:{start:{line:1297,column:12},end:{line:1297,column:50}},type:"binary-expr",locations:[{start:{line:1297,column:12},end:{line:1297,column:23}},{start:{line:1297,column:27},end:{line:1297,column:50}}],line:1297},"95":{loc:{start:{line:1353,column:8},end:{line:1360,column:9}},type:"if",locations:[{start:{line:1353,column:8},end:{line:1360,column:9}},{start:{line:1353,column:8},end:{line:1360,column:9}}],line:1353},"96":{loc:{start:{line:1428,column:8},end:{line:1432,column:9}},type:"if",locations:[{start:{line:1428,column:8},end:{line:1432,column:9}},{start:{line:1428,column:8},end:{line:1432,column:9}}],line:1428},"97":{loc:{start:{line:1430,column:14},end:{line:1432,column:9}},type:"if",locations:[{start:{line:1430,column:14},end:{line:1432,column:9}},{start:{line:1430,column:14},end:{line:1432,column:9}}],line:1430},"98":{loc:{start:{line:1439,column:8},end:{line:1441,column:9}},type:"if",locations:[{start:{line:1439,column:8},end:{line:1441,column:9}},{start:{line:1439,column:8},end:{line:1441,column:9}}],line:1439},"99":{loc:{start:{line:1439,column:12},end:{line:1439,column:96}},type:"binary-expr",locations:[{start:{line:1439,column:12},end:{line:1439,column:39}},{start:{line:1439,column:43},end:{line:1439,column:63}},{start:{line:1439,column:67},end:{line:1439,column:96}}],line:1439},"100":{loc:{start:{line:1443,column:8},end:{line:1445,column:9}},type:"if",locations:[{start:{line:1443,column:8},end:{line:1445,column:9}},{start:{line:1443,column:8},end:{line:1445,column:9}}],line:1443},"101":{loc:{start:{line:1451,column:12},end:{line:1453,column:13}},type:"if",locations:[{start:{line:1451,column:12},end:{line:1453,column:13}},{start:{line:1451,column:12},end:{line:1453,column:13}}],line:1451},"102":{loc:{start:{line:1455,column:8},end:{line:1510,column:9}},type:"switch",locations:[{start:{line:1456,column:12},end:{line:1461,column:17}},{start:{line:1462,column:12},end:{line:1467,column:17}},{start:{line:1468,column:12},end:{line:1473,column:17}},{start:{line:1474,column:12},end:{line:1479,column:17}},{start:{line:1480,column:12},end:{line:1485,column:17}},{start:{line:1486,column:12},end:{line:1491,column:17}},{start:{line:1492,column:12},end:{line:1497,column:17}},{start:{line:1498,column:12},end:{line:1503,column:17}},{start:{line:1504,column:12},end:{line:1509,column:17}}],line:1455},"103":{loc:{start:{line:1457,column:16},end:{line:1461,column:17}},type:"if",locations:[{start:{line:1457,column:16},end:{line:1461,column:17}},{start:{line:1457,column:16},end:{line:1461,column:17}}],line:1457},"104":{loc:{start:{line:1463,column:16},end:{line:1467,column:17}},type:"if",locations:[{start:{line:1463,column:16},end:{line:1467,column:17}},{start:{line:1463,column:16},end:{line:1467,column:17}}],line:1463},"105":{loc:{start:{line:1469,column:16},end:{line:1473,column:17}},type:"if",locations:[{start:{line:1469,column:16},end:{line:1473,column:17}},{start:{line:1469,column:16},end:{line:1473,column:17}}],line:1469},"106":{loc:{start:{line:1475,column:16},end:{line:1479,column:17}},type:"if",locations:[{start:{line:1475,column:16},end:{line:1479,column:17}},{start:{line:1475,column:16},end:{line:1479,column:17}}],line:1475},"107":{loc:{start:{line:1481,column:16},end:{line:1485,column:17}},type:"if",locations:[{start:{line:1481,column:16},end:{line:1485,column:17}},{start:{line:1481,column:16},end:{line:1485,column:17}}],line:1481},"108":{loc:{start:{line:1487,column:16},end:{line:1491,column:17}},type:"if",locations:[{start:{line:1487,column:16},end:{line:1491,column:17}},{start:{line:1487,column:16},end:{line:1491,column:17}}],line:1487},"109":{loc:{start:{line:1493,column:16},end:{line:1497,column:17}},type:"if",locations:[{start:{line:1493,column:16},end:{line:1497,column:17}},{start:{line:1493,column:16},end:{line:1497,column:17}}],line:1493},"110":{loc:{start:{line:1499,column:16},end:{line:1503,column:17}},type:"if",locations:[{start:{line:1499,column:16},end:{line:1503,column:17}},{start:{line:1499,column:16},end:{line:1503,column:17}}],line:1499},"111":{loc:{start:{line:1505,column:16},end:{line:1509,column:17}},type:"if",locations:[{start:{line:1505,column:16},end:{line:1509,column:17}},{start:{line:1505,column:16},end:{line:1509,column:17}}],line:1505},"112":{loc:{start:{line:1530,column:8},end:{line:1536,column:9}},type:"if",locations:[{start:{line:1530,column:8},end:{line:1536,column:9}},{start:{line:1530,column:8},end:{line:1536,column:9}}],line:1530},"113":{loc:{start:{line:1532,column:14},end:{line:1536,column:9}},type:"if",locations:[{start:{line:1532,column:14},end:{line:1536,column:9}},{start:{line:1532,column:14},end:{line:1536,column:9}}],line:1532},"114":{loc:{start:{line:1557,column:8},end:{line:1568,column:9}},type:"if",locations:[{start:{line:1557,column:8},end:{line:1568,column:9}},{start:{line:1557,column:8},end:{line:1568,column:9}}],line:1557},"115":{loc:{start:{line:1562,column:14},end:{line:1568,column:9}},type:"if",locations:[{start:{line:1562,column:14},end:{line:1568,column:9}},{start:{line:1562,column:14},end:{line:1568,column:9}}],line:1562},"116":{loc:{start:{line:1573,column:8},end:{line:1575,column:9}},type:"if",locations:[{start:{line:1573,column:8},end:{line:1575,column:9}},{start:{line:1573,column:8},end:{line:1575,column:9}}],line:1573},"117":{loc:{start:{line:1573,column:12},end:{line:1573,column:39}},type:"binary-expr",locations:[{start:{line:1573,column:12},end:{line:1573,column:20}},{start:{line:1573,column:24},end:{line:1573,column:39}}],line:1573},"118":{loc:{start:{line:1690,column:8},end:{line:1692,column:9}},type:"if",locations:[{start:{line:1690,column:8},end:{line:1692,column:9}},{start:{line:1690,column:8},end:{line:1692,column:9}}],line:1690},"119":{loc:{start:{line:1690,column:12},end:{line:1690,column:60}},type:"binary-expr",locations:[{start:{line:1690,column:12},end:{line:1690,column:28}},{start:{line:1690,column:32},end:{line:1690,column:60}}],line:1690},"120":{loc:{start:{line:1695,column:8},end:{line:1697,column:9}},type:"if",locations:[{start:{line:1695,column:8},end:{line:1697,column:9}},{start:{line:1695,column:8},end:{line:1697,column:9}}],line:1695},"121":{loc:{start:{line:1707,column:8},end:{line:1709,column:9}},type:"if",locations:[{start:{line:1707,column:8},end:{line:1709,column:9}},{start:{line:1707,column:8},end:{line:1709,column:9}}],line:1707},"122":{loc:{start:{line:1707,column:12},end:{line:1707,column:50}},type:"binary-expr",locations:[{start:{line:1707,column:12},end:{line:1707,column:23}},{start:{line:1707,column:27},end:{line:1707,column:50}}],line:1707},"123":{loc:{start:{line:1712,column:8},end:{line:1714,column:9}},type:"if",locations:[{start:{line:1712,column:8},end:{line:1714,column:9}},{start:{line:1712,column:8},end:{line:1714,column:9}}],line:1712},"124":{loc:{start:{line:1717,column:8},end:{line:1719,column:9}},type:"if",locations:[{start:{line:1717,column:8},end:{line:1719,column:9}},{start:{line:1717,column:8},end:{line:1719,column:9}}],line:1717},"125":{loc:{start:{line:1726,column:8},end:{line:1728,column:9}},type:"if",locations:[{start:{line:1726,column:8},end:{line:1728,column:9}},{start:{line:1726,column:8},end:{line:1728,column:9}}],line:1726},"126":{loc:{start:{line:1726,column:12},end:{line:1726,column:62}},type:"binary-expr",locations:[{start:{line:1726,column:12},end:{line:1726,column:29}},{start:{line:1726,column:33},end:{line:1726,column:62}}],line:1726},"127":{loc:{start:{line:1730,column:8},end:{line:1732,column:9}},type:"if",locations:[{start:{line:1730,column:8},end:{line:1732,column:9}},{start:{line:1730,column:8},end:{line:1732,column:9}}],line:1730},"128":{loc:{start:{line:1730,column:13},end:{line:1730,column:145}},type:"binary-expr",locations:[{start:{line:1730,column:13},end:{line:1730,column:59}},{start:{line:1730,column:63},end:{line:1730,column:105}},{start:{line:1730,column:109},end:{line:1730,column:145}}],line:1730},"129":{loc:{start:{line:1757,column:8},end:{line:1759,column:9}},type:"if",locations:[{start:{line:1757,column:8},end:{line:1759,column:9}},{start:{line:1757,column:8},end:{line:1759,column:9}}],line:1757},"130":{loc:{start:{line:1757,column:12},end:{line:1757,column:50}},type:"binary-expr",locations:[{start:{line:1757,column:12},end:{line:1757,column:23}},{start:{line:1757,column:27},end:{line:1757,column:50}}],line:1757},"131":{loc:{start:{line:1763,column:8},end:{line:1765,column:9}},type:"if",locations:[{start:{line:1763,column:8},end:{line:1765,column:9}},{start:{line:1763,column:8},end:{line:1765,column:9}}],line:1763},"132":{loc:{start:{line:1763,column:12},end:{line:1763,column:56}},type:"binary-expr",locations:[{start:{line:1763,column:12},end:{line:1763,column:26}},{start:{line:1763,column:30},end:{line:1763,column:56}}],line:1763},"133":{loc:{start:{line:1768,column:8},end:{line:1770,column:9}},type:"if",locations:[{start:{line:1768,column:8},end:{line:1770,column:9}},{start:{line:1768,column:8},end:{line:1770,column:9}}],line:1768},"134":{loc:{start:{line:1768,column:11},end:{line:1768,column:50}},type:"binary-expr",locations:[{start:{line:1768,column:11},end:{line:1768,column:30}},{start:{line:1768,column:34},end:{line:1768,column:50}}],line:1768},"135":{loc:{start:{line:1816,column:8},end:{line:1818,column:9}},type:"if",locations:[{start:{line:1816,column:8},end:{line:1818,column:9}},{start:{line:1816,column:8},end:{line:1818,column:9}}],line:1816},"136":{loc:{start:{line:1833,column:8},end:{line:1835,column:9}},type:"if",locations:[{start:{line:1833,column:8},end:{line:1835,column:9}},{start:{line:1833,column:8},end:{line:1835,column:9}}],line:1833},"137":{loc:{start:{line:1833,column:11},end:{line:1833,column:49}},type:"binary-expr",locations:[{start:{line:1833,column:11},end:{line:1833,column:22}},{start:{line:1833,column:26},end:{line:1833,column:49}}],line:1833},"138":{loc:{start:{line:1841,column:8},end:{line:1843,column:9}},type:"if",locations:[{start:{line:1841,column:8},end:{line:1843,column:9}},{start:{line:1841,column:8},end:{line:1843,column:9}}],line:1841},"139":{loc:{start:{line:1841,column:12},end:{line:1841,column:48}},type:"binary-expr",locations:[{start:{line:1841,column:12},end:{line:1841,column:22}},{start:{line:1841,column:26},end:{line:1841,column:48}}],line:1841},"140":{loc:{start:{line:1845,column:8},end:{line:1848,column:9}},type:"if",locations:[{start:{line:1845,column:8},end:{line:1848,column:9}},{start:{line:1845,column:8},end:{line:1848,column:9}}],line:1845},"141":{loc:{start:{line:1850,column:8},end:{line:1853,column:9}},type:"if",locations:[{start:{line:1850,column:8},end:{line:1853,column:9}},{start:{line:1850,column:8},end:{line:1853,column:9}}],line:1850},"142":{loc:{start:{line:1854,column:8},end:{line:1856,column:9}},type:"if",locations:[{start:{line:1854,column:8},end:{line:1856,column:9}},{start:{line:1854,column:8},end:{line:1856,column:9}}],line:1854},"143":{loc:{start:{line:1859,column:8},end:{line:1861,column:9}},type:"if",locations:[{start:{line:1859,column:8},end:{line:1861,column:9}},{start:{line:1859,column:8},end:{line:1861,column:9}}],line:1859},"144":{loc:{start:{line:1859,column:12},end:{line:1859,column:165}},type:"binary-expr",locations:[{start:{line:1859,column:12},end:{line:1859,column:62}},{start:{line:1859,column:66},end:{line:1859,column:118}},{start:{line:1859,column:122},end:{line:1859,column:165}}],line:1859},"145":{loc:{start:{line:1875,column:8},end:{line:1877,column:9}},type:"if",locations:[{start:{line:1875,column:8},end:{line:1877,column:9}},{start:{line:1875,column:8},end:{line:1877,column:9}}],line:1875},"146":{loc:{start:{line:1875,column:12},end:{line:1875,column:48}},type:"binary-expr",locations:[{start:{line:1875,column:12},end:{line:1875,column:22}},{start:{line:1875,column:26},end:{line:1875,column:48}}],line:1875},"147":{loc:{start:{line:1896,column:8},end:{line:1898,column:9}},type:"if",locations:[{start:{line:1896,column:8},end:{line:1898,column:9}},{start:{line:1896,column:8},end:{line:1898,column:9}}],line:1896},"148":{loc:{start:{line:1896,column:12},end:{line:1896,column:52}},type:"binary-expr",locations:[{start:{line:1896,column:12},end:{line:1896,column:24}},{start:{line:1896,column:28},end:{line:1896,column:52}}],line:1896},"149":{loc:{start:{line:1902,column:8},end:{line:1904,column:9}},type:"if",locations:[{start:{line:1902,column:8},end:{line:1904,column:9}},{start:{line:1902,column:8},end:{line:1904,column:9}}],line:1902},"150":{loc:{start:{line:1902,column:12},end:{line:1902,column:48}},type:"binary-expr",locations:[{start:{line:1902,column:12},end:{line:1902,column:22}},{start:{line:1902,column:26},end:{line:1902,column:48}}],line:1902},"151":{loc:{start:{line:1906,column:8},end:{line:1908,column:9}},type:"if",locations:[{start:{line:1906,column:8},end:{line:1908,column:9}},{start:{line:1906,column:8},end:{line:1908,column:9}}],line:1906},"152":{loc:{start:{line:1975,column:8},end:{line:1977,column:9}},type:"if",locations:[{start:{line:1975,column:8},end:{line:1977,column:9}},{start:{line:1975,column:8},end:{line:1977,column:9}}],line:1975},"153":{loc:{start:{line:1975,column:12},end:{line:1975,column:94}},type:"binary-expr",locations:[{start:{line:1975,column:12},end:{line:1975,column:37}},{start:{line:1975,column:41},end:{line:1975,column:61}},{start:{line:1975,column:65},end:{line:1975,column:94}}],line:1975},"154":{loc:{start:{line:1980,column:8},end:{line:1982,column:9}},type:"if",locations:[{start:{line:1980,column:8},end:{line:1982,column:9}},{start:{line:1980,column:8},end:{line:1982,column:9}}],line:1980},"155":{loc:{start:{line:1988,column:12},end:{line:1990,column:13}},type:"if",locations:[{start:{line:1988,column:12},end:{line:1990,column:13}},{start:{line:1988,column:12},end:{line:1990,column:13}}],line:1988},"156":{loc:{start:{line:1993,column:8},end:{line:2050,column:9}},type:"switch",locations:[{start:{line:1994,column:12},end:{line:1999,column:17}},{start:{line:2000,column:12},end:{line:2005,column:17}},{start:{line:2006,column:12},end:{line:2011,column:17}},{start:{line:2012,column:12},end:{line:2017,column:17}},{start:{line:2024,column:12},end:{line:2029,column:17}},{start:{line:2042,column:12},end:{line:2047,column:17}}],line:1993},"157":{loc:{start:{line:1995,column:16},end:{line:1999,column:17}},type:"if",locations:[{start:{line:1995,column:16},end:{line:1999,column:17}},{start:{line:1995,column:16},end:{line:1999,column:17}}],line:1995},"158":{loc:{start:{line:2001,column:16},end:{line:2005,column:17}},type:"if",locations:[{start:{line:2001,column:16},end:{line:2005,column:17}},{start:{line:2001,column:16},end:{line:2005,column:17}}],line:2001},"159":{loc:{start:{line:2007,column:16},end:{line:2011,column:17}},type:"if",locations:[{start:{line:2007,column:16},end:{line:2011,column:17}},{start:{line:2007,column:16},end:{line:2011,column:17}}],line:2007},"160":{loc:{start:{line:2013,column:16},end:{line:2017,column:17}},type:"if",locations:[{start:{line:2013,column:16},end:{line:2017,column:17}},{start:{line:2013,column:16},end:{line:2017,column:17}}],line:2013},"161":{loc:{start:{line:2025,column:16},end:{line:2029,column:17}},type:"if",locations:[{start:{line:2025,column:16},end:{line:2029,column:17}},{start:{line:2025,column:16},end:{line:2029,column:17}}],line:2025},"162":{loc:{start:{line:2025,column:20},end:{line:2025,column:69}},type:"binary-expr",locations:[{start:{line:2025,column:20},end:{line:2025,column:45}},{start:{line:2025,column:49},end:{line:2025,column:69}}],line:2025},"163":{loc:{start:{line:2043,column:16},end:{line:2047,column:17}},type:"if",locations:[{start:{line:2043,column:16},end:{line:2047,column:17}},{start:{line:2043,column:16},end:{line:2047,column:17}}],line:2043},"164":{loc:{start:{line:2043,column:20},end:{line:2043,column:69}},type:"binary-expr",locations:[{start:{line:2043,column:20},end:{line:2043,column:45}},{start:{line:2043,column:49},end:{line:2043,column:69}}],line:2043},"165":{loc:{start:{line:2069,column:8},end:{line:2073,column:9}},type:"if",locations:[{start:{line:2069,column:8},end:{line:2073,column:9}},{start:{line:2069,column:8},end:{line:2073,column:9}}],line:2069},"166":{loc:{start:{line:2071,column:14},end:{line:2073,column:9}},type:"if",locations:[{start:{line:2071,column:14},end:{line:2073,column:9}},{start:{line:2071,column:14},end:{line:2073,column:9}}],line:2071},"167":{loc:{start:{line:2123,column:12},end:{line:2126,column:13}},type:"if",locations:[{start:{line:2123,column:12},end:{line:2126,column:13}},{start:{line:2123,column:12},end:{line:2126,column:13}}],line:2123},"168":{loc:{start:{line:2127,column:12},end:{line:2129,column:13}},type:"if",locations:[{start:{line:2127,column:12},end:{line:2129,column:13}},{start:{line:2127,column:12},end:{line:2129,column:13}}],line:2127},"169":{loc:{start:{line:2132,column:8},end:{line:2135,column:9}},type:"if",locations:[{start:{line:2132,column:8},end:{line:2135,column:9}},{start:{line:2132,column:8},end:{line:2135,column:9}}],line:2132},"170":{loc:{start:{line:2132,column:12},end:{line:2132,column:60}},type:"binary-expr",locations:[{start:{line:2132,column:12},end:{line:2132,column:35}},{start:{line:2132,column:39},end:{line:2132,column:60}}],line:2132},"171":{loc:{start:{line:2159,column:12},end:{line:2162,column:13}},type:"if",locations:[{start:{line:2159,column:12},end:{line:2162,column:13}},{start:{line:2159,column:12},end:{line:2162,column:13}}],line:2159},"172":{loc:{start:{line:2163,column:12},end:{line:2165,column:13}},type:"if",locations:[{start:{line:2163,column:12},end:{line:2165,column:13}},{start:{line:2163,column:12},end:{line:2165,column:13}}],line:2163},"173":{loc:{start:{line:2168,column:8},end:{line:2170,column:9}},type:"if",locations:[{start:{line:2168,column:8},end:{line:2170,column:9}},{start:{line:2168,column:8},end:{line:2170,column:9}}],line:2168},"174":{loc:{start:{line:2168,column:12},end:{line:2168,column:54}},type:"binary-expr",locations:[{start:{line:2168,column:12},end:{line:2168,column:43}},{start:{line:2168,column:47},end:{line:2168,column:54}}],line:2168},"175":{loc:{start:{line:2173,column:8},end:{line:2175,column:9}},type:"if",locations:[{start:{line:2173,column:8},end:{line:2175,column:9}},{start:{line:2173,column:8},end:{line:2175,column:9}}],line:2173},"176":{loc:{start:{line:2190,column:8},end:{line:2192,column:9}},type:"if",locations:[{start:{line:2190,column:8},end:{line:2192,column:9}},{start:{line:2190,column:8},end:{line:2192,column:9}}],line:2190},"177":{loc:{start:{line:2190,column:12},end:{line:2190,column:50}},type:"binary-expr",locations:[{start:{line:2190,column:12},end:{line:2190,column:23}},{start:{line:2190,column:27},end:{line:2190,column:50}}],line:2190},"178":{loc:{start:{line:2195,column:8},end:{line:2197,column:9}},type:"if",locations:[{start:{line:2195,column:8},end:{line:2197,column:9}},{start:{line:2195,column:8},end:{line:2197,column:9}}],line:2195},"179":{loc:{start:{line:2202,column:8},end:{line:2204,column:9}},type:"if",locations:[{start:{line:2202,column:8},end:{line:2204,column:9}},{start:{line:2202,column:8},end:{line:2204,column:9}}],line:2202},"180":{loc:{start:{line:2236,column:8},end:{line:2238,column:9}},type:"if",locations:[{start:{line:2236,column:8},end:{line:2238,column:9}},{start:{line:2236,column:8},end:{line:2238,column:9}}],line:2236},"181":{loc:{start:{line:2247,column:8},end:{line:2249,column:9}},type:"if",locations:[{start:{line:2247,column:8},end:{line:2249,column:9}},{start:{line:2247,column:8},end:{line:2249,column:9}}],line:2247},"182":{loc:{start:{line:2247,column:12},end:{line:2247,column:48}},type:"binary-expr",locations:[{start:{line:2247,column:12},end:{line:2247,column:22}},{start:{line:2247,column:26},end:{line:2247,column:48}}],line:2247},"183":{loc:{start:{line:2252,column:8},end:{line:2254,column:9}},type:"if",locations:[{start:{line:2252,column:8},end:{line:2254,column:9}},{start:{line:2252,column:8},end:{line:2254,column:9}}],line:2252},"184":{loc:{start:{line:2255,column:8},end:{line:2257,column:9}},type:"if",locations:[{start:{line:2255,column:8},end:{line:2257,column:9}},{start:{line:2255,column:8},end:{line:2257,column:9}}],line:2255},"185":{loc:{start:{line:2285,column:8},end:{line:2312,column:9}},type:"if",locations:[{start:{line:2285,column:8},end:{line:2312,column:9}},{start:{line:2285,column:8},end:{line:2312,column:9}}],line:2285},"186":{loc:{start:{line:2319,column:39},end:{line:2319,column:215}},type:"cond-expr",locations:[{start:{line:2319,column:123},end:{line:2319,column:124}},{start:{line:2319,column:127},end:{line:2319,column:215}}],line:2319},"187":{loc:{start:{line:2319,column:40},end:{line:2319,column:119}},type:"binary-expr",locations:[{start:{line:2319,column:40},end:{line:2319,column:53}},{start:{line:2319,column:57},end:{line:2319,column:69}},{start:{line:2319,column:73},end:{line:2319,column:85}},{start:{line:2319,column:89},end:{line:2319,column:102}},{start:{line:2319,column:106},end:{line:2319,column:119}}],line:2319},"188":{loc:{start:{line:2319,column:127},end:{line:2319,column:215}},type:"cond-expr",locations:[{start:{line:2319,column:210},end:{line:2319,column:212}},{start:{line:2319,column:214},end:{line:2319,column:215}}],line:2319},"189":{loc:{start:{line:2319,column:128},end:{line:2319,column:207}},type:"binary-expr",locations:[{start:{line:2319,column:128},end:{line:2319,column:141}},{start:{line:2319,column:145},end:{line:2319,column:157}},{start:{line:2319,column:161},end:{line:2319,column:173}},{start:{line:2319,column:177},end:{line:2319,column:190}},{start:{line:2319,column:194},end:{line:2319,column:207}}],line:2319},"190":{loc:{start:{line:2320,column:39},end:{line:2320,column:118}},type:"cond-expr",locations:[{start:{line:2320,column:61},end:{line:2320,column:62}},{start:{line:2320,column:66},end:{line:2320,column:117}}],line:2320},"191":{loc:{start:{line:2320,column:66},end:{line:2320,column:117}},type:"cond-expr",locations:[{start:{line:2320,column:88},end:{line:2320,column:90}},{start:{line:2320,column:93},end:{line:2320,column:117}}],line:2320},"192":{loc:{start:{line:2320,column:93},end:{line:2320,column:117}},type:"cond-expr",locations:[{start:{line:2320,column:111},end:{line:2320,column:112}},{start:{line:2320,column:115},end:{line:2320,column:117}}],line:2320},"193":{loc:{start:{line:2321,column:39},end:{line:2321,column:113}},type:"cond-expr",locations:[{start:{line:2321,column:71},end:{line:2321,column:73}},{start:{line:2321,column:76},end:{line:2321,column:112}}],line:2321},"194":{loc:{start:{line:2321,column:40},end:{line:2321,column:67}},type:"binary-expr",locations:[{start:{line:2321,column:40},end:{line:2321,column:52}},{start:{line:2321,column:56},end:{line:2321,column:67}}],line:2321},"195":{loc:{start:{line:2321,column:76},end:{line:2321,column:112}},type:"cond-expr",locations:[{start:{line:2321,column:106},end:{line:2321,column:108}},{start:{line:2321,column:111},end:{line:2321,column:112}}],line:2321},"196":{loc:{start:{line:2321,column:76},end:{line:2321,column:103}},type:"binary-expr",locations:[{start:{line:2321,column:76},end:{line:2321,column:88}},{start:{line:2321,column:92},end:{line:2321,column:103}}],line:2321},"197":{loc:{start:{line:2328,column:39},end:{line:2328,column:215}},type:"cond-expr",locations:[{start:{line:2328,column:123},end:{line:2328,column:124}},{start:{line:2328,column:127},end:{line:2328,column:215}}],line:2328},"198":{loc:{start:{line:2328,column:40},end:{line:2328,column:119}},type:"binary-expr",locations:[{start:{line:2328,column:40},end:{line:2328,column:53}},{start:{line:2328,column:57},end:{line:2328,column:69}},{start:{line:2328,column:73},end:{line:2328,column:85}},{start:{line:2328,column:89},end:{line:2328,column:102}},{start:{line:2328,column:106},end:{line:2328,column:119}}],line:2328},"199":{loc:{start:{line:2328,column:127},end:{line:2328,column:215}},type:"cond-expr",locations:[{start:{line:2328,column:210},end:{line:2328,column:212}},{start:{line:2328,column:214},end:{line:2328,column:215}}],line:2328},"200":{loc:{start:{line:2328,column:128},end:{line:2328,column:207}},type:"binary-expr",locations:[{start:{line:2328,column:128},end:{line:2328,column:141}},{start:{line:2328,column:145},end:{line:2328,column:157}},{start:{line:2328,column:161},end:{line:2328,column:173}},{start:{line:2328,column:177},end:{line:2328,column:190}},{start:{line:2328,column:194},end:{line:2328,column:207}}],line:2328},"201":{loc:{start:{line:2329,column:39},end:{line:2329,column:118}},type:"cond-expr",locations:[{start:{line:2329,column:61},end:{line:2329,column:63}},{start:{line:2329,column:67},end:{line:2329,column:117}}],line:2329},"202":{loc:{start:{line:2329,column:67},end:{line:2329,column:117}},type:"cond-expr",locations:[{start:{line:2329,column:89},end:{line:2329,column:90}},{start:{line:2329,column:93},end:{line:2329,column:117}}],line:2329},"203":{loc:{start:{line:2329,column:93},end:{line:2329,column:117}},type:"cond-expr",locations:[{start:{line:2329,column:111},end:{line:2329,column:112}},{start:{line:2329,column:115},end:{line:2329,column:117}}],line:2329},"204":{loc:{start:{line:2330,column:39},end:{line:2330,column:113}},type:"cond-expr",locations:[{start:{line:2330,column:71},end:{line:2330,column:73}},{start:{line:2330,column:76},end:{line:2330,column:112}}],line:2330},"205":{loc:{start:{line:2330,column:40},end:{line:2330,column:67}},type:"binary-expr",locations:[{start:{line:2330,column:40},end:{line:2330,column:52}},{start:{line:2330,column:56},end:{line:2330,column:67}}],line:2330},"206":{loc:{start:{line:2330,column:76},end:{line:2330,column:112}},type:"cond-expr",locations:[{start:{line:2330,column:106},end:{line:2330,column:108}},{start:{line:2330,column:111},end:{line:2330,column:112}}],line:2330},"207":{loc:{start:{line:2330,column:76},end:{line:2330,column:103}},type:"binary-expr",locations:[{start:{line:2330,column:76},end:{line:2330,column:88}},{start:{line:2330,column:92},end:{line:2330,column:103}}],line:2330},"208":{loc:{start:{line:2349,column:8},end:{line:2352,column:9}},type:"if",locations:[{start:{line:2349,column:8},end:{line:2352,column:9}},{start:{line:2349,column:8},end:{line:2352,column:9}}],line:2349},"209":{loc:{start:{line:2349,column:11},end:{line:2349,column:57}},type:"binary-expr",locations:[{start:{line:2349,column:11},end:{line:2349,column:26}},{start:{line:2349,column:30},end:{line:2349,column:57}}],line:2349},"210":{loc:{start:{line:2413,column:12},end:{line:2416,column:13}},type:"if",locations:[{start:{line:2413,column:12},end:{line:2416,column:13}},{start:{line:2413,column:12},end:{line:2416,column:13}}],line:2413},"211":{loc:{start:{line:2418,column:12},end:{line:2422,column:13}},type:"if",locations:[{start:{line:2418,column:12},end:{line:2422,column:13}},{start:{line:2418,column:12},end:{line:2422,column:13}}],line:2418},"212":{loc:{start:{line:2428,column:12},end:{line:2430,column:13}},type:"if",locations:[{start:{line:2428,column:12},end:{line:2430,column:13}},{start:{line:2428,column:12},end:{line:2430,column:13}}],line:2428},"213":{loc:{start:{line:2428,column:16},end:{line:2428,column:54}},type:"binary-expr",locations:[{start:{line:2428,column:16},end:{line:2428,column:27}},{start:{line:2428,column:31},end:{line:2428,column:54}}],line:2428},"214":{loc:{start:{line:2451,column:12},end:{line:2470,column:13}},type:"if",locations:[{start:{line:2451,column:12},end:{line:2470,column:13}},{start:{line:2451,column:12},end:{line:2470,column:13}}],line:2451},"215":{loc:{start:{line:2482,column:12},end:{line:2512,column:13}},type:"if",locations:[{start:{line:2482,column:12},end:{line:2512,column:13}},{start:{line:2482,column:12},end:{line:2512,column:13}}],line:2482},"216":{loc:{start:{line:2495,column:16},end:{line:2497,column:17}},type:"if",locations:[{start:{line:2495,column:16},end:{line:2497,column:17}},{start:{line:2495,column:16},end:{line:2497,column:17}}],line:2495},"217":{loc:{start:{line:2560,column:8},end:{line:2593,column:9}},type:"if",locations:[{start:{line:2560,column:8},end:{line:2593,column:9}},{start:{line:2560,column:8},end:{line:2593,column:9}}],line:2560},"218":{loc:{start:{line:2595,column:8},end:{line:2613,column:9}},type:"if",locations:[{start:{line:2595,column:8},end:{line:2613,column:9}},{start:{line:2595,column:8},end:{line:2613,column:9}}],line:2595},"219":{loc:{start:{line:2595,column:12},end:{line:2595,column:83}},type:"binary-expr",locations:[{start:{line:2595,column:12},end:{line:2595,column:58}},{start:{line:2595,column:62},end:{line:2595,column:83}}],line:2595},"220":{loc:{start:{line:2608,column:14},end:{line:2613,column:9}},type:"if",locations:[{start:{line:2608,column:14},end:{line:2613,column:9}},{start:{line:2608,column:14},end:{line:2613,column:9}}],line:2608},"221":{loc:{start:{line:2608,column:18},end:{line:2608,column:89}},type:"binary-expr",locations:[{start:{line:2608,column:18},end:{line:2608,column:64}},{start:{line:2608,column:68},end:{line:2608,column:89}}],line:2608},"222":{loc:{start:{line:2615,column:8},end:{line:2617,column:9}},type:"if",locations:[{start:{line:2615,column:8},end:{line:2617,column:9}},{start:{line:2615,column:8},end:{line:2617,column:9}}],line:2615},"223":{loc:{start:{line:2635,column:8},end:{line:2637,column:9}},type:"if",locations:[{start:{line:2635,column:8},end:{line:2637,column:9}},{start:{line:2635,column:8},end:{line:2637,column:9}}],line:2635},"224":{loc:{start:{line:2635,column:12},end:{line:2635,column:58}},type:"binary-expr",locations:[{start:{line:2635,column:12},end:{line:2635,column:27}},{start:{line:2635,column:31},end:{line:2635,column:58}}],line:2635},"225":{loc:{start:{line:2647,column:8},end:{line:2649,column:9}},type:"if",locations:[{start:{line:2647,column:8},end:{line:2649,column:9}},{start:{line:2647,column:8},end:{line:2649,column:9}}],line:2647},"226":{loc:{start:{line:2677,column:12},end:{line:2681,column:13}},type:"if",locations:[{start:{line:2677,column:12},end:{line:2681,column:13}},{start:{line:2677,column:12},end:{line:2681,column:13}}],line:2677},"227":{loc:{start:{line:2677,column:16},end:{line:2677,column:62}},type:"binary-expr",locations:[{start:{line:2677,column:16},end:{line:2677,column:35}},{start:{line:2677,column:39},end:{line:2677,column:62}}],line:2677},"228":{loc:{start:{line:2682,column:12},end:{line:2691,column:13}},type:"if",locations:[{start:{line:2682,column:12},end:{line:2691,column:13}},{start:{line:2682,column:12},end:{line:2691,column:13}}],line:2682},"229":{loc:{start:{line:2695,column:8},end:{line:2697,column:9}},type:"if",locations:[{start:{line:2695,column:8},end:{line:2697,column:9}},{start:{line:2695,column:8},end:{line:2697,column:9}}],line:2695},"230":{loc:{start:{line:2705,column:8},end:{line:2720,column:9}},type:"if",locations:[{start:{line:2705,column:8},end:{line:2720,column:9}},{start:{line:2705,column:8},end:{line:2720,column:9}}],line:2705},"231":{loc:{start:{line:2742,column:8},end:{line:2744,column:9}},type:"if",locations:[{start:{line:2742,column:8},end:{line:2744,column:9}},{start:{line:2742,column:8},end:{line:2744,column:9}}],line:2742},"232":{loc:{start:{line:2742,column:11},end:{line:2742,column:75}},type:"binary-expr",locations:[{start:{line:2742,column:11},end:{line:2742,column:35}},{start:{line:2742,column:39},end:{line:2742,column:75}}],line:2742},"233":{loc:{start:{line:2793,column:12},end:{line:2796,column:13}},type:"if",locations:[{start:{line:2793,column:12},end:{line:2796,column:13}},{start:{line:2793,column:12},end:{line:2796,column:13}}],line:2793},"234":{loc:{start:{line:2805,column:12},end:{line:2809,column:13}},type:"if",locations:[{start:{line:2805,column:12},end:{line:2809,column:13}},{start:{line:2805,column:12},end:{line:2809,column:13}}],line:2805},"235":{loc:{start:{line:2819,column:12},end:{line:2835,column:13}},type:"if",locations:[{start:{line:2819,column:12},end:{line:2835,column:13}},{start:{line:2819,column:12},end:{line:2835,column:13}}],line:2819},"236":{loc:{start:{line:2847,column:12},end:{line:2879,column:13}},type:"if",locations:[{start:{line:2847,column:12},end:{line:2879,column:13}},{start:{line:2847,column:12},end:{line:2879,column:13}}],line:2847},"237":{loc:{start:{line:2854,column:16},end:{line:2857,column:17}},type:"if",locations:[{start:{line:2854,column:16},end:{line:2857,column:17}},{start:{line:2854,column:16},end:{line:2857,column:17}}],line:2854},"238":{loc:{start:{line:2931,column:8},end:{line:2974,column:9}},type:"if",locations:[{start:{line:2931,column:8},end:{line:2974,column:9}},{start:{line:2931,column:8},end:{line:2974,column:9}}],line:2931},"239":{loc:{start:{line:2977,column:8},end:{line:2995,column:9}},type:"if",locations:[{start:{line:2977,column:8},end:{line:2995,column:9}},{start:{line:2977,column:8},end:{line:2995,column:9}}],line:2977},"240":{loc:{start:{line:2977,column:12},end:{line:2977,column:83}},type:"binary-expr",locations:[{start:{line:2977,column:12},end:{line:2977,column:58}},{start:{line:2977,column:62},end:{line:2977,column:83}}],line:2977},"241":{loc:{start:{line:2990,column:14},end:{line:2995,column:9}},type:"if",locations:[{start:{line:2990,column:14},end:{line:2995,column:9}},{start:{line:2990,column:14},end:{line:2995,column:9}}],line:2990},"242":{loc:{start:{line:2990,column:18},end:{line:2990,column:89}},type:"binary-expr",locations:[{start:{line:2990,column:18},end:{line:2990,column:64}},{start:{line:2990,column:68},end:{line:2990,column:89}}],line:2990},"243":{loc:{start:{line:2997,column:8},end:{line:2999,column:9}},type:"if",locations:[{start:{line:2997,column:8},end:{line:2999,column:9}},{start:{line:2997,column:8},end:{line:2999,column:9}}],line:2997},"244":{loc:{start:{line:3022,column:8},end:{line:3026,column:9}},type:"if",locations:[{start:{line:3022,column:8},end:{line:3026,column:9}},{start:{line:3022,column:8},end:{line:3026,column:9}}],line:3022},"245":{loc:{start:{line:3022,column:12},end:{line:3022,column:58}},type:"binary-expr",locations:[{start:{line:3022,column:12},end:{line:3022,column:27}},{start:{line:3022,column:31},end:{line:3022,column:58}}],line:3022},"246":{loc:{start:{line:3035,column:8},end:{line:3037,column:9}},type:"if",locations:[{start:{line:3035,column:8},end:{line:3037,column:9}},{start:{line:3035,column:8},end:{line:3037,column:9}}],line:3035},"247":{loc:{start:{line:3035,column:12},end:{line:3035,column:50}},type:"binary-expr",locations:[{start:{line:3035,column:12},end:{line:3035,column:23}},{start:{line:3035,column:27},end:{line:3035,column:50}}],line:3035},"248":{loc:{start:{line:3039,column:8},end:{line:3041,column:9}},type:"if",locations:[{start:{line:3039,column:8},end:{line:3041,column:9}},{start:{line:3039,column:8},end:{line:3041,column:9}}],line:3039},"249":{loc:{start:{line:3071,column:8},end:{line:3094,column:9}},type:"if",locations:[{start:{line:3071,column:8},end:{line:3094,column:9}},{start:{line:3071,column:8},end:{line:3094,column:9}}],line:3071},"250":{loc:{start:{line:3114,column:12},end:{line:3146,column:13}},type:"if",locations:[{start:{line:3114,column:12},end:{line:3146,column:13}},{start:{line:3114,column:12},end:{line:3146,column:13}}],line:3114},"251":{loc:{start:{line:3114,column:16},end:{line:3114,column:97}},type:"binary-expr",locations:[{start:{line:3114,column:16},end:{line:3114,column:45}},{start:{line:3114,column:49},end:{line:3114,column:63}},{start:{line:3114,column:67},end:{line:3114,column:97}}],line:3114},"252":{loc:{start:{line:3121,column:16},end:{line:3143,column:17}},type:"if",locations:[{start:{line:3121,column:16},end:{line:3143,column:17}},{start:{line:3121,column:16},end:{line:3143,column:17}}],line:3121},"253":{loc:{start:{line:3154,column:8},end:{line:3182,column:9}},type:"if",locations:[{start:{line:3154,column:8},end:{line:3182,column:9}},{start:{line:3154,column:8},end:{line:3182,column:9}}],line:3154},"254":{loc:{start:{line:3163,column:14},end:{line:3182,column:9}},type:"if",locations:[{start:{line:3163,column:14},end:{line:3182,column:9}},{start:{line:3163,column:14},end:{line:3182,column:9}}],line:3163},"255":{loc:{start:{line:3163,column:17},end:{line:3163,column:63}},type:"binary-expr",locations:[{start:{line:3163,column:17},end:{line:3163,column:47}},{start:{line:3163,column:51},end:{line:3163,column:63}}],line:3163},"256":{loc:{start:{line:3196,column:8},end:{line:3213,column:9}},type:"if",locations:[{start:{line:3196,column:8},end:{line:3213,column:9}},{start:{line:3196,column:8},end:{line:3213,column:9}}],line:3196},"257":{loc:{start:{line:3239,column:8},end:{line:3241,column:9}},type:"if",locations:[{start:{line:3239,column:8},end:{line:3241,column:9}},{start:{line:3239,column:8},end:{line:3241,column:9}}],line:3239},"258":{loc:{start:{line:3239,column:12},end:{line:3239,column:48}},type:"binary-expr",locations:[{start:{line:3239,column:12},end:{line:3239,column:22}},{start:{line:3239,column:26},end:{line:3239,column:48}}],line:3239},"259":{loc:{start:{line:3243,column:8},end:{line:3245,column:9}},type:"if",locations:[{start:{line:3243,column:8},end:{line:3245,column:9}},{start:{line:3243,column:8},end:{line:3245,column:9}}],line:3243},"260":{loc:{start:{line:3246,column:8},end:{line:3248,column:9}},type:"if",locations:[{start:{line:3246,column:8},end:{line:3248,column:9}},{start:{line:3246,column:8},end:{line:3248,column:9}}],line:3246},"261":{loc:{start:{line:3251,column:8},end:{line:3255,column:9}},type:"if",locations:[{start:{line:3251,column:8},end:{line:3255,column:9}},{start:{line:3251,column:8},end:{line:3255,column:9}}],line:3251},"262":{loc:{start:{line:3251,column:12},end:{line:3251,column:58}},type:"binary-expr",locations:[{start:{line:3251,column:12},end:{line:3251,column:27}},{start:{line:3251,column:31},end:{line:3251,column:58}}],line:3251},"263":{loc:{start:{line:3281,column:8},end:{line:3308,column:9}},type:"if",locations:[{start:{line:3281,column:8},end:{line:3308,column:9}},{start:{line:3281,column:8},end:{line:3308,column:9}}],line:3281},"264":{loc:{start:{line:3321,column:12},end:{line:3358,column:13}},type:"if",locations:[{start:{line:3321,column:12},end:{line:3358,column:13}},{start:{line:3321,column:12},end:{line:3358,column:13}}],line:3321},"265":{loc:{start:{line:3321,column:16},end:{line:3321,column:97}},type:"binary-expr",locations:[{start:{line:3321,column:16},end:{line:3321,column:45}},{start:{line:3321,column:49},end:{line:3321,column:63}},{start:{line:3321,column:67},end:{line:3321,column:97}}],line:3321},"266":{loc:{start:{line:3325,column:16},end:{line:3351,column:17}},type:"if",locations:[{start:{line:3325,column:16},end:{line:3351,column:17}},{start:{line:3325,column:16},end:{line:3351,column:17}}],line:3325},"267":{loc:{start:{line:3368,column:8},end:{line:3395,column:9}},type:"if",locations:[{start:{line:3368,column:8},end:{line:3395,column:9}},{start:{line:3368,column:8},end:{line:3395,column:9}}],line:3368},"268":{loc:{start:{line:3377,column:14},end:{line:3395,column:9}},type:"if",locations:[{start:{line:3377,column:14},end:{line:3395,column:9}},{start:{line:3377,column:14},end:{line:3395,column:9}}],line:3377},"269":{loc:{start:{line:3377,column:17},end:{line:3377,column:63}},type:"binary-expr",locations:[{start:{line:3377,column:17},end:{line:3377,column:47}},{start:{line:3377,column:51},end:{line:3377,column:63}}],line:3377},"270":{loc:{start:{line:3413,column:8},end:{line:3429,column:9}},type:"if",locations:[{start:{line:3413,column:8},end:{line:3429,column:9}},{start:{line:3413,column:8},end:{line:3429,column:9}}],line:3413},"271":{loc:{start:{line:3443,column:8},end:{line:3445,column:9}},type:"if",locations:[{start:{line:3443,column:8},end:{line:3445,column:9}},{start:{line:3443,column:8},end:{line:3445,column:9}}],line:3443},"272":{loc:{start:{line:3451,column:8},end:{line:3453,column:9}},type:"if",locations:[{start:{line:3451,column:8},end:{line:3453,column:9}},{start:{line:3451,column:8},end:{line:3453,column:9}}],line:3451},"273":{loc:{start:{line:3451,column:12},end:{line:3451,column:48}},type:"binary-expr",locations:[{start:{line:3451,column:12},end:{line:3451,column:22}},{start:{line:3451,column:26},end:{line:3451,column:48}}],line:3451},"274":{loc:{start:{line:3457,column:8},end:{line:3459,column:9}},type:"if",locations:[{start:{line:3457,column:8},end:{line:3459,column:9}},{start:{line:3457,column:8},end:{line:3459,column:9}}],line:3457},"275":{loc:{start:{line:3460,column:8},end:{line:3462,column:9}},type:"if",locations:[{start:{line:3460,column:8},end:{line:3462,column:9}},{start:{line:3460,column:8},end:{line:3462,column:9}}],line:3460},"276":{loc:{start:{line:3466,column:8},end:{line:3470,column:9}},type:"if",locations:[{start:{line:3466,column:8},end:{line:3470,column:9}},{start:{line:3466,column:8},end:{line:3470,column:9}}],line:3466},"277":{loc:{start:{line:3466,column:12},end:{line:3466,column:58}},type:"binary-expr",locations:[{start:{line:3466,column:12},end:{line:3466,column:27}},{start:{line:3466,column:31},end:{line:3466,column:58}}],line:3466},"278":{loc:{start:{line:3494,column:8},end:{line:3498,column:9}},type:"if",locations:[{start:{line:3494,column:8},end:{line:3498,column:9}},{start:{line:3494,column:8},end:{line:3498,column:9}}],line:3494},"279":{loc:{start:{line:3510,column:12},end:{line:3539,column:13}},type:"if",locations:[{start:{line:3510,column:12},end:{line:3539,column:13}},{start:{line:3510,column:12},end:{line:3539,column:13}}],line:3510},"280":{loc:{start:{line:3510,column:16},end:{line:3510,column:97}},type:"binary-expr",locations:[{start:{line:3510,column:16},end:{line:3510,column:45}},{start:{line:3510,column:49},end:{line:3510,column:63}},{start:{line:3510,column:67},end:{line:3510,column:97}}],line:3510},"281":{loc:{start:{line:3514,column:16},end:{line:3535,column:17}},type:"if",locations:[{start:{line:3514,column:16},end:{line:3535,column:17}},{start:{line:3514,column:16},end:{line:3535,column:17}}],line:3514},"282":{loc:{start:{line:3553,column:8},end:{line:3561,column:9}},type:"if",locations:[{start:{line:3553,column:8},end:{line:3561,column:9}},{start:{line:3553,column:8},end:{line:3561,column:9}}],line:3553},"283":{loc:{start:{line:3575,column:8},end:{line:3577,column:9}},type:"if",locations:[{start:{line:3575,column:8},end:{line:3577,column:9}},{start:{line:3575,column:8},end:{line:3577,column:9}}],line:3575},"284":{loc:{start:{line:3584,column:8},end:{line:3586,column:9}},type:"if",locations:[{start:{line:3584,column:8},end:{line:3586,column:9}},{start:{line:3584,column:8},end:{line:3586,column:9}}],line:3584},"285":{loc:{start:{line:3584,column:12},end:{line:3584,column:50}},type:"binary-expr",locations:[{start:{line:3584,column:12},end:{line:3584,column:23}},{start:{line:3584,column:27},end:{line:3584,column:50}}],line:3584},"286":{loc:{start:{line:3588,column:8},end:{line:3590,column:9}},type:"if",locations:[{start:{line:3588,column:8},end:{line:3590,column:9}},{start:{line:3588,column:8},end:{line:3590,column:9}}],line:3588},"287":{loc:{start:{line:3595,column:8},end:{line:3600,column:9}},type:"if",locations:[{start:{line:3595,column:8},end:{line:3600,column:9}},{start:{line:3595,column:8},end:{line:3600,column:9}}],line:3595},"288":{loc:{start:{line:3595,column:12},end:{line:3595,column:58}},type:"binary-expr",locations:[{start:{line:3595,column:12},end:{line:3595,column:27}},{start:{line:3595,column:31},end:{line:3595,column:58}}],line:3595},"289":{loc:{start:{line:3623,column:8},end:{line:3627,column:9}},type:"if",locations:[{start:{line:3623,column:8},end:{line:3627,column:9}},{start:{line:3623,column:8},end:{line:3627,column:9}}],line:3623},"290":{loc:{start:{line:3642,column:12},end:{line:3674,column:13}},type:"if",locations:[{start:{line:3642,column:12},end:{line:3674,column:13}},{start:{line:3642,column:12},end:{line:3674,column:13}}],line:3642},"291":{loc:{start:{line:3642,column:16},end:{line:3642,column:97}},type:"binary-expr",locations:[{start:{line:3642,column:16},end:{line:3642,column:45}},{start:{line:3642,column:49},end:{line:3642,column:63}},{start:{line:3642,column:67},end:{line:3642,column:97}}],line:3642},"292":{loc:{start:{line:3649,column:16},end:{line:3671,column:17}},type:"if",locations:[{start:{line:3649,column:16},end:{line:3671,column:17}},{start:{line:3649,column:16},end:{line:3671,column:17}}],line:3649},"293":{loc:{start:{line:3693,column:8},end:{line:3699,column:9}},type:"if",locations:[{start:{line:3693,column:8},end:{line:3699,column:9}},{start:{line:3693,column:8},end:{line:3699,column:9}}],line:3693},"294":{loc:{start:{line:3975,column:8},end:{line:3977,column:9}},type:"if",locations:[{start:{line:3975,column:8},end:{line:3977,column:9}},{start:{line:3975,column:8},end:{line:3977,column:9}}],line:3975},"295":{loc:{start:{line:3975,column:12},end:{line:3975,column:58}},type:"binary-expr",locations:[{start:{line:3975,column:12},end:{line:3975,column:27}},{start:{line:3975,column:31},end:{line:3975,column:58}}],line:3975}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1509":0,"1510":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1517":0,"1518":0,"1519":0,"1520":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":0,"1526":0,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1550":0,"1551":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1557":0,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1572":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":0,"1581":0,"1582":0,"1583":0,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":0,"1593":0,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":0,"1600":0,"1601":0,"1602":0,"1603":0,"1604":0,"1605":0,"1606":0,"1607":0,"1608":0,"1609":0,"1610":0,"1611":0,"1612":0,"1613":0,"1614":0,"1615":0,"1616":0,"1617":0,"1618":0,"1619":0,"1620":0,"1621":0,"1622":0,"1623":0,"1624":0,"1625":0,"1626":0,"1627":0,"1628":0,"1629":0,"1630":0,"1631":0,"1632":0,"1633":0,"1634":0,"1635":0,"1636":0,"1637":0,"1638":0,"1639":0,"1640":0,"1641":0,"1642":0,"1643":0,"1644":0,"1645":0,"1646":0,"1647":0,"1648":0,"1649":0,"1650":0,"1651":0,"1652":0,"1653":0,"1654":0,"1655":0,"1656":0,"1657":0,"1658":0,"1659":0,"1660":0,"1661":0,"1662":0,"1663":0,"1664":0,"1665":0,"1666":0,"1667":0,"1668":0,"1669":0,"1670":0,"1671":0,"1672":0,"1673":0,"1674":0,"1675":0,"1676":0,"1677":0,"1678":0,"1679":0,"1680":0,"1681":0,"1682":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0,0,0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0,0],"100":[0,0],"101":[0,0],"102":[0,0,0,0,0,0,0,0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0,0],"154":[0,0],"155":[0,0],"156":[0,0,0,0,0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0,0,0,0],"188":[0,0],"189":[0,0,0,0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0,0,0,0],"199":[0,0],"200":[0,0,0,0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"ceaa94ba4674793a1e8d60e43661421e0be8c717"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{Contract,Context}=(cov_1pebg41whg.s[0]++,require('fabric-contract-api'));//const { Buffer } = require('safe-buffer');
class securitizationContext extends Context{constructor(){cov_1pebg41whg.f[0]++;cov_1pebg41whg.s[1]++;super();}//GetMSPID() returns MSP ID of the client digital certificate
GetMSPID(){cov_1pebg41whg.f[1]++;cov_1pebg41whg.s[2]++;return this.clientIdentity.getMSPID();}//GetUserIdentity(value) returns the value of the attribute of the digital certificate 
GetUserIdentity(value){cov_1pebg41whg.f[2]++;cov_1pebg41whg.s[3]++;return this.clientIdentity.getAttributeValue(value);}//GetTxTimestamp() returns server's time
GetTxTimestamp(){cov_1pebg41whg.f[3]++;cov_1pebg41whg.s[4]++;return this.stub.getTxTimestamp();}//GetRole() returns a boolean value depending on the digital certificate role, i.e if client certificate
//has a role of client, it returns true, otherwise false 
GetRole(){cov_1pebg41whg.f[4]++;cov_1pebg41whg.s[5]++;return this.clientIdentity.assertAttributeValue('hf.role','client');}//SetMSPID saves MSPID into ctx module
// SetMSPID provides a value for MSP ID
SetMSPID(mspid){cov_1pebg41whg.f[5]++;cov_1pebg41whg.s[6]++;this.mspid=mspid;}//SetEventPayload(eventPayload) saves eventPayload into ctx module
SetEventPayload(eventPayload){cov_1pebg41whg.f[6]++;cov_1pebg41whg.s[7]++;this.eventPayload=eventPayload;}//SetEventName(eventName) saves eventName into ctx module
SetEventName(eventName){cov_1pebg41whg.f[7]++;cov_1pebg41whg.s[8]++;this.eventName=eventName;}//GetEventPayload submits event and returns it
GetEventPayload(){cov_1pebg41whg.f[8]++;cov_1pebg41whg.s[9]++;return this.stub.setEvent(this.eventName,this.eventPayload);}}//Common classes do not concern about organization membership
class commonSecuritizationContract extends Contract{constructor(){cov_1pebg41whg.f[9]++;cov_1pebg41whg.s[10]++;// Unique namespace when multiple contracts per chaincode file
super('common.securitization.com');}//We use our context shown above
/**
     * Define a custom context for securitization
    */createContext(){cov_1pebg41whg.f[10]++;cov_1pebg41whg.s[11]++;return new securitizationContext();}async beforeTransaction(ctx){cov_1pebg41whg.f[11]++;// let getTxTimestamp=await ctx.GetTxTimestamp();
// //console.log(`txTimeStamp: ${getTxTimestamp}`);
// let getTxDateTimestamp=await ctx.GetTxDateTimestamp();
// //console.log(`txDateTimeStamp: ${txDateTimeStamp}`);
let isClient=(cov_1pebg41whg.s[12]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
let role=(cov_1pebg41whg.s[13]++,await ctx.clientIdentity.getAttributeValue('role'));//console.log(`role: ${role}`)
cov_1pebg41whg.s[14]++;if(!isClient){cov_1pebg41whg.b[0][0]++;cov_1pebg41whg.s[15]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[0][1]++;}let par=(cov_1pebg41whg.s[16]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[17]++,par.fcn);let params=(cov_1pebg41whg.s[18]++,par.params);//console.log(func);
//console.log(params);
cov_1pebg41whg.s[19]++;for(let i=(cov_1pebg41whg.s[20]++,0);i<params.length;i++){cov_1pebg41whg.s[21]++;if(params[i]===''){cov_1pebg41whg.b[1][0]++;cov_1pebg41whg.s[22]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[1][1]++;}}}// Here auxiliary functions
// Our token will have 2 decimals, like fiat currencies
async _checkDecimals(number){cov_1pebg41whg.f[12]++;// In nodejs every atribute is passed as a string
// First check if it is a number
// number.stringify()
// if(typeof number !=='number'){
//     throw new Error('Wrong notation');
// }
// Not necessary, we are working with 2decimal-numbers
// Integer between -2^53-1 and 2^53-1
// if (!Number.isSafeInteger(number)){
//     throw new Error('Wrong number');
// }
// Check if it is a 2decimal-number
const numberString=(cov_1pebg41whg.s[23]++,number.toString());let index;let count=(cov_1pebg41whg.s[24]++,0);cov_1pebg41whg.s[25]++;for(let i=(cov_1pebg41whg.s[26]++,0);i<numberString.length;i++){cov_1pebg41whg.s[27]++;if(numberString[i]==='.'){cov_1pebg41whg.b[2][0]++;cov_1pebg41whg.s[28]++;index=i;cov_1pebg41whg.s[29]++;count=count+1;}else{cov_1pebg41whg.b[2][1]++;}cov_1pebg41whg.s[30]++;if(numberString[i]===','){cov_1pebg41whg.b[3][0]++;cov_1pebg41whg.s[31]++;throw new Error('Wrong format. Try using dot instead of comma');}else{cov_1pebg41whg.b[3][1]++;}}//console.log(`numero de puntos ${count}`);
cov_1pebg41whg.s[32]++;if((cov_1pebg41whg.b[5][0]++,numberString.length-1-index>2)||(cov_1pebg41whg.b[5][1]++,count>1)){cov_1pebg41whg.b[4][0]++;cov_1pebg41whg.s[33]++;throw new Error('Wrong decimals');}else{cov_1pebg41whg.b[4][1]++;}// Check if it is strictly positive
cov_1pebg41whg.s[34]++;number=parseFloat(number);cov_1pebg41whg.s[35]++;if(number<=0){cov_1pebg41whg.b[6][0]++;cov_1pebg41whg.s[36]++;throw new Error('Number must be strictly positive');}else{cov_1pebg41whg.b[6][1]++;}cov_1pebg41whg.s[37]++;return true;}//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//---------------------------------------IMPORTANTE----------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
// Diferenciar 2 casos:
// En cuanto al dinero si es dinero que va destinado al pago de cupones o de principal
// En cuanto a bonos si son del mismo tramo o no (esto de momento nada)
// Funcionan
// Transfer money
async _transferMoney(ctx,userID,amount,keyFrom){cov_1pebg41whg.f[13]++;const genericID=(cov_1pebg41whg.s[38]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[39]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));cov_1pebg41whg.s[40]++;for(const key of keyFrom){cov_1pebg41whg.s[41]++;await ctx.stub.deleteState(key);}let typeID=(cov_1pebg41whg.s[42]++,':0');const utxo=(cov_1pebg41whg.s[43]++,{ID:key1+typeID,GenericID:genericID,Owner:userID,Issuer:await ctx.clientIdentity.getID(),Amount:amount,Factor:100,CanBeUsed:true,TypeID:typeID});cov_1pebg41whg.s[44]++;await ctx.stub.putState(key1,Buffer.from(JSON.stringify(utxo)));cov_1pebg41whg.s[45]++;return utxo;}async PoolMoney(ctx){cov_1pebg41whg.f[14]++;const userID=(cov_1pebg41whg.s[46]++,await ctx.GetUserIdentity('cif'));let iterator=(cov_1pebg41whg.s[47]++,await ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]));let amount;let resultKeys=(cov_1pebg41whg.s[48]++,[]);let counter=(cov_1pebg41whg.s[49]++,0);let value;cov_1pebg41whg.s[50]++;for await(const res of iterator){cov_1pebg41whg.s[51]++;value=JSON.parse(res.value.toString());// //console.log(`value: ${value.Amount}`)
cov_1pebg41whg.s[52]++;amount=value.Amount;cov_1pebg41whg.s[53]++;if((cov_1pebg41whg.b[8][0]++,value.CanBeUsed)&&(cov_1pebg41whg.b[8][1]++,value.Owner===userID)){cov_1pebg41whg.b[7][0]++;cov_1pebg41whg.s[54]++;resultKeys.push(value.ID);cov_1pebg41whg.s[55]++;counter=counter+amount;}else{cov_1pebg41whg.b[7][1]++;}cov_1pebg41whg.s[56]++;if(resultKeys.length===2){cov_1pebg41whg.b[9][0]++;cov_1pebg41whg.s[57]++;break;}else{cov_1pebg41whg.b[9][1]++;}}cov_1pebg41whg.s[58]++;if((cov_1pebg41whg.b[11][0]++,resultKeys.length===0)||(cov_1pebg41whg.b[11][1]++,resultKeys.length===1)){cov_1pebg41whg.b[10][0]++;cov_1pebg41whg.s[59]++;throw new Error('There is nothing left to do');}else{cov_1pebg41whg.b[10][1]++;}let ret=(cov_1pebg41whg.s[60]++,await this._transferMoney(ctx,userID,counter,resultKeys));cov_1pebg41whg.s[61]++;return ret;}// In this scenario, Originator will initiate the securitization lifecycle. This org will propose a PPA to a
// farmer/irrigator. To achieve that it is important for the originator to know (listen to enrollments) which farmers
// have been registered as participants of the network, in order to propose a PPA to a particular irrigator, not to a
// generic farmer
// If we know the User ID, then we can query the PPA asociated with that ID
async QueryPPA(ctx,userID){cov_1pebg41whg.f[15]++;// Prior verificatios deactivated in testing (because of test-network)
// Who can query this data?
const ppa=(cov_1pebg41whg.s[62]++,await this._mygetStateByPartialCompositeKey(ctx,'PPA',userID));cov_1pebg41whg.s[63]++;if(ppa===true){cov_1pebg41whg.b[12][0]++;cov_1pebg41whg.s[64]++;throw new Error('PPA does not exist');}else{cov_1pebg41whg.b[12][1]++;}cov_1pebg41whg.s[65]++;return ppa;}async _getAllResults(iterator,isHistory){cov_1pebg41whg.f[16]++;let allResults=(cov_1pebg41whg.s[66]++,[]);let res=(cov_1pebg41whg.s[67]++,await iterator.next());cov_1pebg41whg.s[68]++;while(!res.done){cov_1pebg41whg.s[69]++;if((cov_1pebg41whg.b[14][0]++,res.value)&&(cov_1pebg41whg.b[14][1]++,res.value.value.toString())){cov_1pebg41whg.b[13][0]++;let jsonRes=(cov_1pebg41whg.s[70]++,{});//console.log(res.value.value.toString('utf8'));
cov_1pebg41whg.s[71]++;if((cov_1pebg41whg.b[16][0]++,isHistory)&&(cov_1pebg41whg.b[16][1]++,isHistory===true)){cov_1pebg41whg.b[15][0]++;cov_1pebg41whg.s[72]++;jsonRes.TxId=res.value.tx_id;cov_1pebg41whg.s[73]++;jsonRes.Timestamp=res.value.timestamp;cov_1pebg41whg.s[74]++;try{cov_1pebg41whg.s[75]++;jsonRes.Value=JSON.parse(res.value.value.toString('utf8'));}catch(err){cov_1pebg41whg.s[76]++;//console.log(err);
jsonRes.Value=res.value.value.toString('utf8');}}else{cov_1pebg41whg.b[15][1]++;cov_1pebg41whg.s[77]++;jsonRes.Key=res.value.key;cov_1pebg41whg.s[78]++;try{cov_1pebg41whg.s[79]++;jsonRes.Record=JSON.parse(res.value.value.toString('utf8'));}catch(err){cov_1pebg41whg.s[80]++;//console.log(err);
jsonRes.Record=res.value.value.toString('utf8');}}cov_1pebg41whg.s[81]++;allResults.push(jsonRes);}else{cov_1pebg41whg.b[13][1]++;}cov_1pebg41whg.s[82]++;res=await iterator.next();}cov_1pebg41whg.s[83]++;iterator.close();cov_1pebg41whg.s[84]++;return allResults;}async QueryPPAHistory(ctx,userID,ppaID){cov_1pebg41whg.f[17]++;const key=(cov_1pebg41whg.s[85]++,await ctx.stub.createCompositeKey('PPA',[userID,ppaID]));let resultsIterator=(cov_1pebg41whg.s[86]++,await ctx.stub.getHistoryForKey(key));let results=(cov_1pebg41whg.s[87]++,await this._getAllResults(resultsIterator,true));cov_1pebg41whg.s[88]++;return results;}// Igual esto tiene que ir en un canal donde esté el/los bancos.
// Esta funcion la tengo que activar para "crear dinero"
// Minting money
async Mint(ctx,amount){cov_1pebg41whg.f[18]++;cov_1pebg41whg.s[89]++;// if (amount==='' || amount==='0'){
//     throw new Error('Please, choose a valid value for this field')
// }
// Checking format
await this._checkDecimals(amount);// Each UTXO will have a unique, free-collision key
const genericID=(cov_1pebg41whg.s[90]++,await ctx.stub.getTxID());const userID=(cov_1pebg41whg.s[91]++,await ctx.GetUserIdentity('cif'));const key=(cov_1pebg41whg.s[92]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));let typeID;cov_1pebg41whg.s[93]++;typeID=':0';//mirar si añadiendo ':0' sigue haciendo bien el query
const securitizationCoin=(cov_1pebg41whg.s[94]++,{ID:key+typeID,GenericID:genericID,TypeID:typeID,Issuer:await ctx.clientIdentity.getID(),Owner:userID,Amount:parseInt(parseFloat(amount)*100),Factor:100,CanBeUsed:true});cov_1pebg41whg.s[95]++;await ctx.stub.putState(securitizationCoin.ID,Buffer.from(JSON.stringify(securitizationCoin)));cov_1pebg41whg.s[96]++;return securitizationCoin;}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[19]++;const iterator=(cov_1pebg41whg.s[97]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[98]++,0);let results;cov_1pebg41whg.s[99]++;for await(const res of iterator){cov_1pebg41whg.s[100]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[101]++;counter=counter+1;}cov_1pebg41whg.s[102]++;if(counter>1){cov_1pebg41whg.b[17][0]++;cov_1pebg41whg.s[103]++;throw new Error('Check this...');}else{cov_1pebg41whg.b[17][1]++;cov_1pebg41whg.s[104]++;if(counter===0){cov_1pebg41whg.b[18][0]++;cov_1pebg41whg.s[105]++;return true;}else{cov_1pebg41whg.b[18][1]++;}}cov_1pebg41whg.s[106]++;return results;}// funciona
async QueryMyCoins(ctx){cov_1pebg41whg.f[20]++;const userID=(cov_1pebg41whg.s[107]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[108]++,await ctx.stub.getStateByPartialCompositeKey('securitizationCoin',[userID]));let results=(cov_1pebg41whg.s[109]++,[]);let valor;cov_1pebg41whg.s[110]++;for await(const res of iterator){cov_1pebg41whg.s[111]++;valor=JSON.parse(res.value.toString());cov_1pebg41whg.s[112]++;results.push(valor);}cov_1pebg41whg.s[113]++;return results;}// funciona
async QueryMyBond(ctx){cov_1pebg41whg.f[21]++;const userID=(cov_1pebg41whg.s[114]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[115]++,await ctx.stub.getStateByPartialCompositeKey('BondToken',[userID]));let results=(cov_1pebg41whg.s[116]++,[]);let valor;cov_1pebg41whg.s[117]++;for await(const res of iterator){cov_1pebg41whg.s[118]++;valor=JSON.parse(res.value.toString());cov_1pebg41whg.s[119]++;results.push(valor);}cov_1pebg41whg.s[120]++;return results;}}class ppaContract extends Contract{constructor(){cov_1pebg41whg.f[22]++;cov_1pebg41whg.s[121]++;// Unique namespace when multiple contracts per chaincode file
super('ppa.securitization.com');}createContext(){cov_1pebg41whg.f[23]++;cov_1pebg41whg.s[122]++;return new securitizationContext();}async beforeTransaction(ctx){cov_1pebg41whg.f[24]++;let userMSPID=(cov_1pebg41whg.s[123]++,await ctx.GetMSPID());cov_1pebg41whg.s[124]++;if((cov_1pebg41whg.b[20][0]++,userMSPID!=='originatorMSP')&&(cov_1pebg41whg.b[20][1]++,userMSPID!=='farmerMSP')){cov_1pebg41whg.b[19][0]++;cov_1pebg41whg.s[125]++;throw new Error('You are not allowed to perform this action');}else{cov_1pebg41whg.b[19][1]++;}let isClient=(cov_1pebg41whg.s[126]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
cov_1pebg41whg.s[127]++;if(!isClient){cov_1pebg41whg.b[21][0]++;cov_1pebg41whg.s[128]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[21][1]++;}cov_1pebg41whg.s[129]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[130]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[131]++,par.fcn);let params=(cov_1pebg41whg.s[132]++,par.params);//console.log(func);
//console.log(params);
cov_1pebg41whg.s[133]++;for(let i=(cov_1pebg41whg.s[134]++,0);i<params.length;i++){cov_1pebg41whg.s[135]++;if(params[i]===''){cov_1pebg41whg.b[22][0]++;cov_1pebg41whg.s[136]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[22][1]++;}}const mspid=(cov_1pebg41whg.s[137]++,await ctx.mspid);cov_1pebg41whg.s[138]++;switch(func){case'PPAProposal':cov_1pebg41whg.b[23][0]++;cov_1pebg41whg.s[139]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[24][0]++;cov_1pebg41whg.s[140]++;//console.log('es este caso');
throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[24][1]++;cov_1pebg41whg.s[141]++;return;}case'AcceptPPA':cov_1pebg41whg.b[23][1]++;cov_1pebg41whg.s[142]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[25][0]++;cov_1pebg41whg.s[143]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[25][1]++;cov_1pebg41whg.s[144]++;return;}case'MintPPA':cov_1pebg41whg.b[23][2]++;cov_1pebg41whg.s[145]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[26][0]++;cov_1pebg41whg.s[146]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[26][1]++;cov_1pebg41whg.s[147]++;return;}case'MaintenanceServiceRequest':cov_1pebg41whg.b[23][3]++;cov_1pebg41whg.s[148]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[27][0]++;cov_1pebg41whg.s[149]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[27][1]++;cov_1pebg41whg.s[150]++;return;}case'EnergyConsumptionPerPPA':cov_1pebg41whg.b[23][4]++;cov_1pebg41whg.s[151]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[28][0]++;cov_1pebg41whg.s[152]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[28][1]++;cov_1pebg41whg.s[153]++;return;}case'MonthlyBillPayout':cov_1pebg41whg.b[23][5]++;cov_1pebg41whg.s[154]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[29][0]++;cov_1pebg41whg.s[155]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[29][1]++;cov_1pebg41whg.s[156]++;return;}case'QueryMyPPA':cov_1pebg41whg.b[23][6]++;cov_1pebg41whg.s[157]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[30][0]++;cov_1pebg41whg.s[158]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[30][1]++;cov_1pebg41whg.s[159]++;return;}case'RequestPPA':cov_1pebg41whg.b[23][7]++;cov_1pebg41whg.s[160]++;if(mspid!=='farmerMSP'){cov_1pebg41whg.b[31][0]++;cov_1pebg41whg.s[161]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[31][1]++;cov_1pebg41whg.s[162]++;return;}case'QueryPPARequest':cov_1pebg41whg.b[23][8]++;cov_1pebg41whg.s[163]++;if(mspid!=='originatorMSP'){cov_1pebg41whg.b[32][0]++;cov_1pebg41whg.s[164]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[32][1]++;cov_1pebg41whg.s[165]++;return;}// case 'WriteCommonRealTimeParameters':
}}//afterTransaction will return the event of the transaction
async afterTransaction(ctx){cov_1pebg41whg.f[25]++;let event=(cov_1pebg41whg.s[166]++,await ctx.GetEventPayload());cov_1pebg41whg.s[167]++;return event;}/**
     *
     * @param {*} ctx
     * @returns the size of the pool
     */async _isPoolCreated(ctx,poolName){cov_1pebg41whg.f[26]++;const iterator=(cov_1pebg41whg.s[168]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let results=(cov_1pebg41whg.s[169]++,[]);cov_1pebg41whg.s[170]++;for await(const res of iterator){cov_1pebg41whg.s[171]++;// push key instead of value json
results.push(res.key);}cov_1pebg41whg.s[172]++;if(results.length===0){cov_1pebg41whg.b[33][0]++;cov_1pebg41whg.s[173]++;return false;}else{cov_1pebg41whg.b[33][1]++;cov_1pebg41whg.s[174]++;if(results.length===1){cov_1pebg41whg.b[34][0]++;cov_1pebg41whg.s[175]++;return true;}else{cov_1pebg41whg.b[34][1]++;cov_1pebg41whg.s[176]++;throw new Error(`State not unique`);}}}/**
     *
     * @param {*} ctx
     * @param {*} userID is the ID linked to user (DNI, CIF,...) which is inside his/her ecert
     * @returns the number of PPAs with that partial composite key
     */ // Auxiliary function to query if PPA contract for this userID has already been proposed
async _isPPAProposed(ctx,ppaID){cov_1pebg41whg.f[27]++;const ppaBytes=(cov_1pebg41whg.s[177]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[178]++;if((cov_1pebg41whg.b[36][0]++,!ppaBytes)||(cov_1pebg41whg.b[36][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[35][0]++;cov_1pebg41whg.s[179]++;return false;}else{cov_1pebg41whg.b[35][1]++;cov_1pebg41whg.s[180]++;return true;}}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @returns the state associated with that partial key
     */ // This auxiliary function will only work with those states expected to be unique (POOL, REALTIMEPARAMETERS, RATING...)
async _getPoolStateByPartialCompositeKey(ctx,docTypeName){cov_1pebg41whg.f[28]++;const iterator=(cov_1pebg41whg.s[181]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[]));let counter=(cov_1pebg41whg.s[182]++,0);let results;cov_1pebg41whg.s[183]++;for await(const res of iterator){cov_1pebg41whg.s[184]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[185]++;counter=counter+1;}cov_1pebg41whg.s[186]++;if(counter>1){cov_1pebg41whg.b[37][0]++;cov_1pebg41whg.s[187]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[37][1]++;cov_1pebg41whg.s[188]++;if(counter===0){cov_1pebg41whg.b[38][0]++;cov_1pebg41whg.s[189]++;return false;}else{cov_1pebg41whg.b[38][1]++;}}cov_1pebg41whg.s[190]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @param {*} userID
     * @returns
     */ // Auxiliary function to retrieve a value associated with a partial key. It is expected that
// this value is unique. One partial key may have multiple values associated to itself.
async _mygetStateByPartialCompositeKey(ctx,docTypeName,userID){cov_1pebg41whg.f[29]++;const iterator=(cov_1pebg41whg.s[191]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[userID]));let counter=(cov_1pebg41whg.s[192]++,0);let results;cov_1pebg41whg.s[193]++;for await(const res of iterator){cov_1pebg41whg.s[194]++;// console.log('funciona _mygetStateByPartialCompositeKey en PPA')
// console.log(res)
results=JSON.parse(res.value.toString());cov_1pebg41whg.s[195]++;counter=counter+1;}cov_1pebg41whg.s[196]++;if(counter>1){cov_1pebg41whg.b[39][0]++;cov_1pebg41whg.s[197]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[39][1]++;cov_1pebg41whg.s[198]++;if(counter===0){cov_1pebg41whg.b[40][0]++;cov_1pebg41whg.s[199]++;return true;}else{cov_1pebg41whg.b[40][1]++;}}cov_1pebg41whg.s[200]++;return results;}// returns which proportion is allocated to coupon and which to principal
async _getCouponProportion(ctx,poolName){cov_1pebg41whg.f[30]++;let iterator=(cov_1pebg41whg.s[201]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let result;cov_1pebg41whg.s[202]++;for await(const res of iterator){cov_1pebg41whg.s[203]++;result=JSON.parse(res.value.toString());}cov_1pebg41whg.s[204]++;return result.CouponPortion;}// This auxiliary function will allow us to determine to which identity are we going to pay the bills
async _isPPAinPool(ctx,ppaID){cov_1pebg41whg.f[31]++;let pool=(cov_1pebg41whg.s[205]++,await this._getPoolStateByPartialCompositeKey(ctx,'POOL'));let res=(cov_1pebg41whg.s[206]++,[]);cov_1pebg41whg.s[207]++;if((cov_1pebg41whg.b[42][0]++,!pool)||(cov_1pebg41whg.b[42][1]++,pool.length===0)){cov_1pebg41whg.b[41][0]++;cov_1pebg41whg.s[208]++;res.push(false);cov_1pebg41whg.s[209]++;return res;}else{cov_1pebg41whg.b[41][1]++;}const containsppaID=(cov_1pebg41whg.s[210]++,await pool.ppaIDs.includes(ppaID));cov_1pebg41whg.s[211]++;res.push(containsppaID);cov_1pebg41whg.s[212]++;res.push(pool.Owner);cov_1pebg41whg.s[213]++;return res;}// This function will contain the contractual terms of the PPA
// This function will be executed by Originator, who will propose a PPA to a particular user, by means
// of his/her digitalCertAsBytes.
// This function will need a myriad of input arguments. Currently those arguments are commented
async PPAProposal(ctx,PPARequestClientCert,PPARequestGenericID,date){cov_1pebg41whg.f[32]++;let PPARequestKey=(cov_1pebg41whg.s[214]++,await ctx.stub.createCompositeKey('PPARequest',[PPARequestClientCert,PPARequestGenericID]));let PPARequestAsBytes=(cov_1pebg41whg.s[215]++,await ctx.stub.getState(PPARequestKey));cov_1pebg41whg.s[216]++;if((cov_1pebg41whg.b[44][0]++,!PPARequestAsBytes)||(cov_1pebg41whg.b[44][1]++,PPARequestAsBytes.length===0)){cov_1pebg41whg.b[43][0]++;cov_1pebg41whg.s[217]++;throw new Error(`PPARequest with ID ${PPARequestKey} does not exist`);}else{cov_1pebg41whg.b[43][1]++;}// Prior verifications
const userID=(cov_1pebg41whg.s[218]++,await ctx.GetUserIdentity('cif'));//console.log(userID);
cov_1pebg41whg.s[219]++;if(userID!==ownerID){cov_1pebg41whg.b[45][0]++;cov_1pebg41whg.s[220]++;throw new Error(`Field ownerID ${ownerID} does not match your user identity of the ecert`);}else{cov_1pebg41whg.b[45][1]++;}cov_1pebg41whg.s[221]++;if(ownerID===customerID){cov_1pebg41whg.b[46][0]++;cov_1pebg41whg.s[222]++;throw new Error(`Check owner and customer identities`);}else{cov_1pebg41whg.b[46][1]++;}// PPA ID will be a "sum" of multiple keys, one of them is a free-collision key, the txID
// This is not necessary, because each user will be subscribed to just one PPA
const genericID=(cov_1pebg41whg.s[223]++,await ctx.stub.getTxID());// Create this composite Key
const ppaID=(cov_1pebg41whg.s[224]++,await ctx.stub.createCompositeKey('PPA',[customerID,genericID]));// We also verify if a farmer/irrigator has already been offered a PPA
const ppaHasBeenProposed=(cov_1pebg41whg.s[225]++,await this._isPPAProposed(ctx,ppaID));cov_1pebg41whg.s[226]++;if(ppaHasBeenProposed){cov_1pebg41whg.b[47][0]++;cov_1pebg41whg.s[227]++;throw new Error(`Error: PPA for user ${customerID} has already been offered`);}else{cov_1pebg41whg.b[47][1]++;}// //console.log('aqui2')
// TODO
// We define parameters of the PPA, just in case these parameters are common parameters.
const day=(cov_1pebg41whg.s[228]++,1);const month=(cov_1pebg41whg.s[229]++,10);const year=(cov_1pebg41whg.s[230]++,2032);const ordinaryTerminationDate=(cov_1pebg41whg.s[231]++,new Date(year,month-1,day).setHours(0,0,0,0));const firstExtension=(cov_1pebg41whg.s[232]++,Date(year,month-2,day));const customer=(cov_1pebg41whg.s[233]++,'');// const customerID='';
const customerEmail=(cov_1pebg41whg.s[234]++,ctx.GetUserIdentity('email'));// Owner is the ecert whose identity has proposed this PPA
// const owner= ctx.clientIdentity.getID();
const system=(cov_1pebg41whg.s[235]++,'');const land=(cov_1pebg41whg.s[236]++,'');const landID=(cov_1pebg41whg.s[237]++,'');const lastingPeriod=(cov_1pebg41whg.s[238]++,'');// const ordinaryTerminationDate= '';
const advancedTerminated=(cov_1pebg41whg.s[239]++,'');const startDate=(cov_1pebg41whg.s[240]++,'');const extendedAgreement=(cov_1pebg41whg.s[241]++,'');const initialExtensions=(cov_1pebg41whg.s[242]++,'');// const firstExtension= '';
const secondExtension=(cov_1pebg41whg.s[243]++,'');const extensionTimePriorToOrdinaryTerminationDate=(cov_1pebg41whg.s[244]++,'');const isExtensionMandatory=(cov_1pebg41whg.s[245]++,'');const additionalExtensions=(cov_1pebg41whg.s[246]++,'');const additionalExtensionTimePriorToLastAdditionalExtension=(cov_1pebg41whg.s[247]++,'');const additionalExtensionContractPrice=(cov_1pebg41whg.s[248]++,'');const isAdditionalExtension=(cov_1pebg41whg.s[249]++,'');const purchaseOption=(cov_1pebg41whg.s[250]++,'');const contractPrice=(cov_1pebg41whg.s[251]++,'');const paymentsFrequency=(cov_1pebg41whg.s[252]++,12);const unitPrice=(cov_1pebg41whg.s[253]++,'');const minimumMonthlyFee=(cov_1pebg41whg.s[254]++,100);// const firstMonthlyPayment= '';
// const succesiveMonthlyPayments= '';
const dismantlingSystemIncluded=(cov_1pebg41whg.s[255]++,'');const settlementBillingBussinesDays=(cov_1pebg41whg.s[256]++,'');const dueAmountsDays=(cov_1pebg41whg.s[257]++,'');const isInterestTriggered=(cov_1pebg41whg.s[258]++,'');const sellToThirdParties=(cov_1pebg41whg.s[259]++,'');const amountPayableToCustomer=(cov_1pebg41whg.s[260]++,'');const settlementAmountPayableDays=(cov_1pebg41whg.s[261]++,'');const amountPayableType=(cov_1pebg41whg.s[262]++,'');const highestEnergyDemandConexion=(cov_1pebg41whg.s[263]++,'');const grantFinancialAidBeneficiary=(cov_1pebg41whg.s[264]++,'');const netAmountSubsidy=(cov_1pebg41whg.s[265]++,'');const reductionContractPriceFees=(cov_1pebg41whg.s[266]++,'');const grantCollectionTime=(cov_1pebg41whg.s[267]++,'');const customerGoodFaith=(cov_1pebg41whg.s[268]++,'');const systemLandMaintenance=(cov_1pebg41whg.s[269]++,'');const maintenanceHistory=(cov_1pebg41whg.s[270]++,'');const powerSupplyInterruption=(cov_1pebg41whg.s[271]++,'');const powerSupplyInterruptionAdvancedTime=(cov_1pebg41whg.s[272]++,'');const anomalyCircumstance=(cov_1pebg41whg.s[273]++,'');const isCustomerAuthorized=(cov_1pebg41whg.s[274]++,'');const additionalPowerSupplyInterruption=(cov_1pebg41whg.s[275]++,'');const powerSupplyInterruptionCause=(cov_1pebg41whg.s[276]++,'');const extraordinaryExpenses=(cov_1pebg41whg.s[277]++,'');const isMaintenanceNecessary=(cov_1pebg41whg.s[278]++,'');const legalObligationSystemLand=(cov_1pebg41whg.s[279]++,'');const measurementEquipementResponsibility=(cov_1pebg41whg.s[280]++,'');const annualAccountsTime=(cov_1pebg41whg.s[281]++,'');const annualAccounts=(cov_1pebg41whg.s[282]++,'');const informationChangedTime=(cov_1pebg41whg.s[283]++,'');const highSpeedInternetConection=(cov_1pebg41whg.s[284]++,'');const lastModificationOn=(cov_1pebg41whg.s[285]++,new Date(date));const lastModificationUserID=(cov_1pebg41whg.s[286]++,'');const isSigned=(cov_1pebg41whg.s[287]++,false);const energyConsumption=(cov_1pebg41whg.s[288]++,[]);const facturacionMensual=(cov_1pebg41whg.s[289]++,[]);const lastEnergyConsumption=(cov_1pebg41whg.s[290]++,'');const lastFacturacionMensual=(cov_1pebg41whg.s[291]++,'');// Defining attributes of the object PPA
const PPA=(cov_1pebg41whg.s[292]++,{docType:'PPA',ppaID:ppaID,Customer:customer,CustomerID:customerID// CustomerEmail: customerEmail,
// OwnerID: ownerID,
// Owner: await ctx.clientIdentity.getID(),
// System: system,
// Land: land,
// LandID: landID,
// LastingPeriod: lastingPeriod,
// OrdinaryTerminationDate: ordinaryTerminationDate,
// AdvancedTerminated: advancedTerminated,
// StartDate: startDate,
// EnergyConsumption: energyConsumption,
// ExtendedAgreement: extendedAgreement,
// InitialExtensions: initialExtensions,
// FirstExtension: firstExtension,
// SecondExtension: secondExtension,
// BillDate: '',
// ExtensionTimePriorToOrdinaryTerminationDate: extensionTimePriorToOrdinaryTerminationDate,
// IsExtensionMandatory: isExtensionMandatory,
// AdditionalExtensions: additionalExtensions,
// AdditionalExtensionTimePriorToLastAdditionalExtension: additionalExtensionTimePriorToLastAdditionalExtension,
// AdditionalExtensionContractPrice: additionalExtensionContractPrice,
// IsAdditionalExtension: isAdditionalExtension,
// PurchaseOption: purchaseOption,
// ContractPrice: contractPrice,
// PaymentsFrequency: paymentsFrequency,
// FacturacionMensual: facturacionMensual,
// LastFacturacionMensual: lastFacturacionMensual,
// LastEnergyConsumption: lastEnergyConsumption,
// EnergyConsumption: energyConsumption,
// UnitPrice: unitPrice,
// MinimumMonthlyFee: minimumMonthlyFee,
// DismantlingSystemIncluded: dismantlingSystemIncluded,
// SettlementBillingBussinesDays: settlementBillingBussinesDays,
// DueAmountsDays: dueAmountsDays,
// IsInterestTriggered: isInterestTriggered,
// SellToThirdParties: sellToThirdParties,
// AmountPayableToCustomer: {
//     myMethod: () => {
//         if (!PPA.SellToThirdParties){
//             return 0
//         }
//         return 100
//     }
// },
// SettlementAmountPayableDays: settlementAmountPayableDays,
// AmountPayableType: amountPayableType,
// HighestEnergyDemandConexion: highestEnergyDemandConexion,
// GrantFinancialAidBeneficiary: grantFinancialAidBeneficiary,
// NetAmountSubsidy: netAmountSubsidy,
// ReductionContractPriceFees: reductionContractPriceFees,
// GrantCollectionTime: grantCollectionTime,
// CustomerGoodFaith: customerGoodFaith,
// SystemLandMaintenance: systemLandMaintenance,
// MaintenanceHistory: maintenanceHistory,
// PowerSupplyInterruption: powerSupplyInterruption,
// PowerSupplyInterruptionAdvancedTime: powerSupplyInterruptionAdvancedTime,
// AnomalyCircumstance: anomalyCircumstance,
// IsCustomerAuthorized: isCustomerAuthorized,
// AdditionalPowerSupplyInterruption: additionalPowerSupplyInterruption,
// PowerSupplyInterruptionCause: powerSupplyInterruptionCause,
// ExtraordinaryExpenses: extraordinaryExpenses,
// IsMaintenanceNecessary: isMaintenanceNecessary,
// LegalObligationSystemLand: legalObligationSystemLand,
// MeasurementEquipementResponsibility: measurementEquipementResponsibility,
// AnnualAccountsTime: annualAccountsTime,
// AnnualAccounts: annualAccounts,
// InformationChangedTime: informationChangedTime,
// HighSpeedInternetConection: highSpeedInternetConection,
// LastModificationOn: lastModificationOn,
// LastModificationUserID: lastModificationUserID,
// IsSigned: isSigned,
// IsServiceMaintenanceOn: false,
// IsLastBillPaid: false,
});const valueBuffer=(cov_1pebg41whg.s[293]++,Buffer.from(JSON.stringify(PPA)));// set event must be inside after transaction
cov_1pebg41whg.s[294]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[295]++;await ctx.SetEventName('PPAproposed');// await ctx.stub.putState('ppa',valueBuffer);
cov_1pebg41whg.s[296]++;await ctx.stub.putState(ppaID,valueBuffer);cov_1pebg41whg.s[297]++;return PPA;}// Irrigator client will submit a request in order to subscribe a PPA
// More arguments should be included
async RequestPPA(ctx,landID,crops){cov_1pebg41whg.f[33]++;const userID=(cov_1pebg41whg.s[298]++,await ctx.clientIdentity.getIDBytes());let requestID=(cov_1pebg41whg.s[299]++,await ctx.stub.getTxID());let ID=(cov_1pebg41whg.s[300]++,await ctx.stub.createCompositeKey('PPARequest',[userID,requestID]));let PPARequestBytes=(cov_1pebg41whg.s[301]++,await ctx.stub.getState(ID));let PPARequest;cov_1pebg41whg.s[302]++;if((cov_1pebg41whg.b[49][0]++,!PPARequestBytes)||(cov_1pebg41whg.b[49][1]++,PPARequestBytes.length===0)){cov_1pebg41whg.b[48][0]++;cov_1pebg41whg.s[303]++;PPARequest={ID:ID,UserID:userID,LandID:landID,Crops:crops};}else{cov_1pebg41whg.b[48][1]++;cov_1pebg41whg.s[304]++;throw new Error(`State with ID ${ID} already exists`);}const valueBuffer=(cov_1pebg41whg.s[305]++,Buffer.from(JSON.stringify(PPARequest)));cov_1pebg41whg.s[306]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[307]++;await ctx.SetEventName('PPARequest');cov_1pebg41whg.s[308]++;await ctx.stub.putState(PPARequest.ID,valueBuffer);cov_1pebg41whg.s[309]++;return PPARequest;}// Originator client queries PPARequests
async QueryPPARequest(ctx){cov_1pebg41whg.f[34]++;let iterator=(cov_1pebg41whg.s[310]++,await ctx.stub.getStateByPartialCompositeKey("PPARequest",[]));let results=(cov_1pebg41whg.s[311]++,[]);cov_1pebg41whg.s[312]++;for await(const res of iterator){cov_1pebg41whg.s[313]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[314]++;return results;}async QueryMyPPA(ctx,ppaID){cov_1pebg41whg.f[35]++;const userID=(cov_1pebg41whg.s[315]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[316]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[317]++;if((cov_1pebg41whg.b[51][0]++,!ppaBytes)||(cov_1pebg41whg.b[51][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[50][0]++;cov_1pebg41whg.s[318]++;throw new Error(`PPA state with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[50][1]++;}const ppa=(cov_1pebg41whg.s[319]++,JSON.parse(ppaBytes.toString()));cov_1pebg41whg.s[320]++;if(userID!==ppa.CustomerID){cov_1pebg41whg.b[52][0]++;cov_1pebg41whg.s[321]++;throw new Error(`Field CustomerID does not match your user identity of the eCert`);}else{cov_1pebg41whg.b[52][1]++;}cov_1pebg41whg.s[322]++;return ppa;}// Farmer/Irrigator will execute this function and by doing that, he/she accepts/signs the PPA
// proposal
async AcceptPPA(ctx,ppaID,date){cov_1pebg41whg.f[36]++;// we retrieve the value associated with this partial key
const userID=(cov_1pebg41whg.s[323]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[324]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[325]++;if((cov_1pebg41whg.b[54][0]++,!ppaBytes)||(cov_1pebg41whg.b[54][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[53][0]++;cov_1pebg41whg.s[326]++;throw new Error(`Error PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[53][1]++;}const ppa=(cov_1pebg41whg.s[327]++,JSON.parse(ppaBytes.toString()));// ppa returns true if no PPA Contract for that userID has been issued.
// ppa returns error if something is wrong with PPA Contract
// Otherwise, ppa returns ppa value for that partial key
cov_1pebg41whg.s[328]++;if(ppa.CustomerID!==userID){cov_1pebg41whg.b[55][0]++;cov_1pebg41whg.s[329]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[55][1]++;}// Check if attribute IsSigned is true
cov_1pebg41whg.s[330]++;if(ppa.IsSigned){cov_1pebg41whg.b[56][0]++;cov_1pebg41whg.s[331]++;throw new Error(`Your PPA has been already signed`);}else{cov_1pebg41whg.b[56][1]++;}// Otherwise, change the IsSigned state.
cov_1pebg41whg.s[332]++;ppa.IsSigned=true;// ppa.Customer=await ctx.clientIdentity.getID();
// Attach current date
cov_1pebg41whg.s[333]++;ppa.LastModificationOn=new Date(date);const valueBuffer=(cov_1pebg41whg.s[334]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[335]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[336]++;await ctx.SetEventName('PPAaccepted');cov_1pebg41whg.s[337]++;await ctx.stub.putState(ppa.ppaID,valueBuffer);cov_1pebg41whg.s[338]++;return ppa;}// If a farmer signs a PPAproposal, originator will receive its event and according to it, will issue a POOL token that
// will record every ppaID. The owner of this Token will receive the payments farmers will do.
// This will be the pool of PPAs
async MintPPA(ctx,ppaID,date){cov_1pebg41whg.f[37]++;const genericID=(cov_1pebg41whg.s[339]++,await ctx.stub.getTxID());const ppaBytes=(cov_1pebg41whg.s[340]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[341]++;if((cov_1pebg41whg.b[58][0]++,!ppaBytes)||(cov_1pebg41whg.b[58][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[57][0]++;cov_1pebg41whg.s[342]++;throw new Error(`Error: no State related to key ${ppaID}`);}else{cov_1pebg41whg.b[57][1]++;}const ppa=(cov_1pebg41whg.s[343]++,JSON.parse(ppaBytes.toString()));const userID=(cov_1pebg41whg.s[344]++,await ctx.GetUserIdentity('cif'));cov_1pebg41whg.s[345]++;if(userID!==ppa.OwnerID){cov_1pebg41whg.b[59][0]++;cov_1pebg41whg.s[346]++;throw new Error(`Field ownerID does not match your user identity of the ecert`);}else{cov_1pebg41whg.b[59][1]++;}cov_1pebg41whg.s[347]++;if(!ppa.IsSigned){cov_1pebg41whg.b[60][0]++;cov_1pebg41whg.s[348]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[60][1]++;}cov_1pebg41whg.s[349]++;if(ppa.IsIssued){cov_1pebg41whg.b[61][0]++;cov_1pebg41whg.s[350]++;throw new Error(`This PPA is already inside the POOL`);}else{cov_1pebg41whg.b[61][1]++;}// Include PPA Key inside Pool of assets
let pool;let hasBeenCreated=(cov_1pebg41whg.s[351]++,await this._isPoolCreated(ctx));cov_1pebg41whg.s[352]++;if(hasBeenCreated===0){cov_1pebg41whg.b[62][0]++;cov_1pebg41whg.s[353]++;pool={poolID:'',ppaIDs:[],OwnerID:'',LastModificationOn:new Date(date),CouponPortion:1};cov_1pebg41whg.s[354]++;pool.OwnerID=ppa.OwnerID;cov_1pebg41whg.s[355]++;pool.ppaIDs.push(ppa.ppaID);cov_1pebg41whg.s[356]++;pool.poolID=await ctx.stub.createCompositeKey('POOL',[genericID]);//console.log(pool);
cov_1pebg41whg.s[357]++;await ctx.stub.putState(pool.poolID,Buffer.from(JSON.stringify(pool)));}else{cov_1pebg41whg.b[62][1]++;cov_1pebg41whg.s[358]++;pool=await this._getPoolStateByPartialCompositeKey(ctx,'POOL');//console.log(pool)
cov_1pebg41whg.s[359]++;pool.OwnerID=ppa.OwnerID;cov_1pebg41whg.s[360]++;pool.ppaIDs.push(ppa.ppaID);cov_1pebg41whg.s[361]++;ppa.LastModificationOn=new Date(date);cov_1pebg41whg.s[362]++;await ctx.stub.deleteState(pool.poolID);cov_1pebg41whg.s[363]++;pool.poolID=await ctx.stub.createCompositeKey('POOL',[genericID]);cov_1pebg41whg.s[364]++;await ctx.stub.putState(pool.poolID,Buffer.from(JSON.stringify(pool)));}let valueBuffer=(cov_1pebg41whg.s[365]++,Buffer.from(JSON.stringify(pool)));cov_1pebg41whg.s[366]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[367]++;await ctx.SetEventName('PPAtokenMinted');cov_1pebg41whg.s[368]++;return pool;}// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ---------------------------------------TODO-----------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
/**
     *
     * @param {Context} ctx
     * @param {string} argtype is the default types of maintenance services originator is
     *  able to provide
     */ // Farmer will execute this function in order to request one of the default maintenance services
// offered by Originator. She/He will record the date request was made, so originator must be listening
// to events of this type if no overexpenses are considered
async MaintenanceServiceRequest(ctx,ppaID,serviceMaintenanceType,date){cov_1pebg41whg.f[38]++;const maintenanceType=(cov_1pebg41whg.s[369]++,[{name:'service1',price:12},{name:'service2',price:12},{name:'service3',price:12}]);const userID=(cov_1pebg41whg.s[370]++,await ctx.GetUserIdentity('cif'));const ppaBytes=(cov_1pebg41whg.s[371]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[372]++;if((cov_1pebg41whg.b[64][0]++,!ppaBytes)||(cov_1pebg41whg.b[64][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[63][0]++;cov_1pebg41whg.s[373]++;throw new Error(`PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[63][1]++;}const ppa=(cov_1pebg41whg.s[374]++,JSON.parse(ppaBytes.toString()));// check ID of eCert and ID of PPA customer
cov_1pebg41whg.s[375]++;if(userID!==ppa.CustomerID){cov_1pebg41whg.b[65][0]++;cov_1pebg41whg.s[376]++;throw new Error(`Customer ID and User ID do not match`);}else{cov_1pebg41whg.b[65][1]++;}// We check if it has been signed
cov_1pebg41whg.s[377]++;if(!ppa.IsSigned){cov_1pebg41whg.b[66][0]++;cov_1pebg41whg.s[378]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[66][1]++;}cov_1pebg41whg.s[379]++;if(ppa.IsInDefault){cov_1pebg41whg.b[67][0]++;cov_1pebg41whg.s[380]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[67][1]++;}const solution=(cov_1pebg41whg.s[381]++,maintenanceType.find(service=>{cov_1pebg41whg.f[39]++;cov_1pebg41whg.s[382]++;return service.name===serviceMaintenanceType;}));// Prior input parameters verifications
cov_1pebg41whg.s[383]++;if(solution===undefined){cov_1pebg41whg.b[68][0]++;cov_1pebg41whg.s[384]++;throw new Error(`The ${serviceMaintenanceType} service is not available`);}else{cov_1pebg41whg.b[68][1]++;cov_1pebg41whg.s[385]++;ppa.MaintenanceServiceRequest=solution.name;cov_1pebg41whg.s[386]++;ppa.LastMaintenanceServiceOn=new Date(date);cov_1pebg41whg.s[387]++;ppa.ServiceRequestDate=new Date(date);}cov_1pebg41whg.s[388]++;ppa.LastModificationOn=new Date(date);cov_1pebg41whg.s[389]++;ppa.IsServiceMaintenanceOn=true;cov_1pebg41whg.s[390]++;ppa.LastModificationUserID=userID;// En golang los Bytes de la ID funcionan bien
const valueBuffer=(cov_1pebg41whg.s[391]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[392]++;await ctx.stub.putState(ppa.ppaID,valueBuffer);cov_1pebg41whg.s[393]++;await ctx.SetEventName('MaintenanceRequired');cov_1pebg41whg.s[394]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[395]++;return ppa;}// for simplicity we are not considering a symbiosys between oracles and blockchain
// networks (in this version), so we will introduce that real time parameters as a function
// which will be called beforeTransaction (or not). That parameters state will include current
// electricity price, current payment proportion between principal and coupon...
// async WriteCommonRealTimeParameters(ctx,currentElectricityPrice, paymentProportionAllocated,date){
//     // At the moment no identity verifications
//     // Who can commit this function????
//     // We are going to assign an easy-to-query key
//     const key='RealTimeParameters';
//     // Check if this doc already exists
//     const oldvalueBytes=await ctx.stub.getState(key);
//     let value;
//     if (!oldvalueBytes || oldvalueBytes.length === 0) {
//         value={
//             ID: key,
//             ElectricityPrice: currentElectricityPrice,
//             ProportionAllocated: paymentProportionAllocated,
//             LastModificationOn: new Date(date)
//         };
//         const valueBuffer = Buffer.from(JSON.stringify(value));
//         await ctx.stub.putState(key, valueBuffer);
//     }
//     value= JSON.parse(oldvalueBytes.toString());
//     value.key=key;
//     value.ElectricityPrice=currentElectricityPrice;
//     value.ProportionAllocated=paymentProportionAllocated;
//     value.LastModificationOn= new Date(date);
//     const valueBuffer= Buffer.from(JSON.stringify(value));
//     await ctx.stub.putState(key,valueBuffer);
// }
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------
// could this function be executed from .job file?
// Originator will execute this function monthly to update the PPA with data about energy
// consumption
async EnergyConsumptionPerPPA(ctx,ppaID,energyConsumption,date){cov_1pebg41whg.f[40]++;let ownerID=(cov_1pebg41whg.s[396]++,await ctx.GetUserIdentity('cif'));// retrieve PPA state
const ppaBytes=(cov_1pebg41whg.s[397]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[398]++;if((cov_1pebg41whg.b[70][0]++,!ppaBytes)||(cov_1pebg41whg.b[70][1]++,ppaBytes.length===0)){cov_1pebg41whg.b[69][0]++;cov_1pebg41whg.s[399]++;throw new Error(`State with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[69][1]++;}let ppa=(cov_1pebg41whg.s[400]++,JSON.parse(ppaBytes.toString()));// check if owner of the PPA (originator) matches the client who executes this function
cov_1pebg41whg.s[401]++;if(ownerID!==ppa.OwnerID){cov_1pebg41whg.b[71][0]++;cov_1pebg41whg.s[402]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[71][1]++;}cov_1pebg41whg.s[403]++;if(!ppa.IsSigned){cov_1pebg41whg.b[72][0]++;cov_1pebg41whg.s[404]++;throw new Error('This PPA has not been signed');}else{cov_1pebg41whg.b[72][1]++;}const energy=(cov_1pebg41whg.s[405]++,parseFloat(energyConsumption));// update the date
cov_1pebg41whg.s[406]++;ppa.LastModificationOn=new Date(date);// these data will be reset once a year (once its size is equal to 12)
cov_1pebg41whg.s[407]++;if(ppa.EnergyConsumption.length===ppa.PaymentsFrequency){cov_1pebg41whg.b[73][0]++;cov_1pebg41whg.s[408]++;ppa.EnergyConsumption=[];}else{cov_1pebg41whg.b[73][1]++;}cov_1pebg41whg.s[409]++;if(!ppa.IsLastBillPaid){cov_1pebg41whg.b[74][0]++;cov_1pebg41whg.s[410]++;ppa.IsInDefault=true;}else{cov_1pebg41whg.b[74][1]++;cov_1pebg41whg.s[411]++;ppa.IsInDefault=false;}// append data
cov_1pebg41whg.s[412]++;ppa.EnergyConsumption.push(energy);cov_1pebg41whg.s[413]++;ppa.LastEnergyConsumption=energy;cov_1pebg41whg.s[414]++;ppa.LastModificationUserID=ownerID;cov_1pebg41whg.s[415]++;ppa.BillDate=ppa.LastModificationOn;cov_1pebg41whg.s[416]++;ppa.IsLastBillPaid=false;const ppaBuffer=(cov_1pebg41whg.s[417]++,Buffer.from(JSON.stringify(ppa)));cov_1pebg41whg.s[418]++;await ctx.stub.putState(ppa.ppaID,ppaBuffer);cov_1pebg41whg.s[419]++;await ctx.SetEventName('BillDelivered');cov_1pebg41whg.s[420]++;await ctx.SetEventPayload(ppaBuffer);cov_1pebg41whg.s[421]++;return ppa;}// TODO: add non working days
// This auxiliary function serves to compute the time between two dates, including if there are
// non working days in between. It serves to pay bills, to maintenance service request and every function
// which involves a fixed period of time to be executed.
async _checkNonWorkingDays(currentDate,notificationDate){cov_1pebg41whg.f[41]++;const nonWorkingDay1=(cov_1pebg41whg.s[422]++,new Date(2022,0,1));const nonWorkingDay2=(cov_1pebg41whg.s[423]++,new Date(2021,11,25));const nonWorkingDay3=(cov_1pebg41whg.s[424]++,new Date(2022,4,1));const nonWorkingDays=(cov_1pebg41whg.s[425]++,[nonWorkingDay1,nonWorkingDay2,nonWorkingDay3]);const new_resultados=(cov_1pebg41whg.s[426]++,nonWorkingDays.filter(day=>{cov_1pebg41whg.f[42]++;cov_1pebg41whg.s[427]++;return(cov_1pebg41whg.b[75][0]++,day>=notificationDate)&&(cov_1pebg41whg.b[75][1]++,day<=currentDate);}));cov_1pebg41whg.s[428]++;return new_resultados.length;}// Once originator has issued a bill, farmer/irrigator must pay for the consumed energy in a
// certain period of time, otherwise farmer will be considered a defaulter
async MonthlyBillPayout(ctx,ppaID,tokenID,typeID,date){cov_1pebg41whg.f[43]++;// TODO: Igual es necerario que algun dato salga de algun oracle
// retrieve the state of the token
const userID=(cov_1pebg41whg.s[429]++,await ctx.GetUserIdentity('cif'));const compositeKey=(cov_1pebg41whg.s[430]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID,typeID]));const tokenBytes=(cov_1pebg41whg.s[431]++,await ctx.stub.getState(compositeKey));cov_1pebg41whg.s[432]++;if((cov_1pebg41whg.b[77][0]++,!tokenBytes)||(cov_1pebg41whg.b[77][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[76][0]++;cov_1pebg41whg.s[433]++;throw new Error(`Error token with ID ${compositeKey} does not exist`);}else{cov_1pebg41whg.b[76][1]++;}const token=(cov_1pebg41whg.s[434]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[435]++;if(!token.CanBeUsed){cov_1pebg41whg.b[78][0]++;cov_1pebg41whg.s[436]++;throw new Error(`Error, token with ID ${tokenID} is allocated to other services. Try to use another key or cancel whatever your token is allocated to`);}else{cov_1pebg41whg.b[78][1]++;}// Now we retrieve the PPA associated with userDNI
const valueBytes=(cov_1pebg41whg.s[437]++,await ctx.stub.getState(ppaID));cov_1pebg41whg.s[438]++;if((cov_1pebg41whg.b[80][0]++,!valueBytes)||(cov_1pebg41whg.b[80][1]++,valueBytes.length===0)){cov_1pebg41whg.b[79][0]++;cov_1pebg41whg.s[439]++;throw new Error(`PPA with ID ${ppaID} does not exist`);}else{cov_1pebg41whg.b[79][1]++;}let value=(cov_1pebg41whg.s[440]++,JSON.parse(valueBytes.toString()));// Check if customer and user who send transaction proposal match
// Not compulsory, we have already checked this with the ppa proposal
cov_1pebg41whg.s[441]++;if(value.CustomerID!==userID){cov_1pebg41whg.b[81][0]++;cov_1pebg41whg.s[442]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[81][1]++;}cov_1pebg41whg.s[443]++;if(!value.IsSigned){cov_1pebg41whg.b[82][0]++;cov_1pebg41whg.s[444]++;throw new Error(`PPA with ID ${ppaID} has not been signed`);}else{cov_1pebg41whg.b[82][1]++;}// Check if there are non working days between these dates
const currentDate=(cov_1pebg41whg.s[445]++,new Date(date));const billDate=(cov_1pebg41whg.s[446]++,new Date(value.BillDate));const numberNonworkingDays=(cov_1pebg41whg.s[447]++,await this._checkNonWorkingDays(currentDate,billDate));const diff_days=(cov_1pebg41whg.s[448]++,(currentDate.getTime()-billDate.getTime())/(1000*3600*24));// TODO: not sure about this. If user wish to pay, should we accept later payments? better than nothing...
// check if current day is inside boudary dates
const limitDate=(cov_1pebg41whg.s[449]++,value.LimitDate+numberNonworkingDays);cov_1pebg41whg.s[450]++;if(diff_days>limitDate){cov_1pebg41whg.b[83][0]++;cov_1pebg41whg.s[451]++;throw new Error(`Try to pay on time`);}else{cov_1pebg41whg.b[83][1]++;}// These functions should be included in the PPA object
// Define functions to determine the price to pay for
const myFunctions=(cov_1pebg41whg.s[452]++,{firstMonthlyPayment:(par_UnitPrice,par_EnergyConsumption,par_MinimumMonthlyFee)=>{cov_1pebg41whg.f[44]++;const values=(cov_1pebg41whg.s[453]++,[par_UnitPrice*par_EnergyConsumption,par_MinimumMonthlyFee]);// const values=[PPA.UnitPrice*PPA.LastEnergyConsumption,PPA.MinimumMonthlyFee];
const resultado=(cov_1pebg41whg.s[454]++,Math.max(...values));cov_1pebg41whg.s[455]++;return resultado;},succesiveMonthlyPayments:(par_LastEnergyConsumption,par_UnitPrice,par_MinimumMonthlyFee,par_EnergyConsumption,par_FacturacionMensual)=>{cov_1pebg41whg.f[45]++;let total=(cov_1pebg41whg.s[456]++,par_FacturacionMensual.reduce(function(a,b){cov_1pebg41whg.f[46]++;cov_1pebg41whg.s[457]++;return a+b;}));const values=(cov_1pebg41whg.s[458]++,[par_LastEnergyConsumption*par_UnitPrice,Math.abs(par_MinimumMonthlyFee*par_EnergyConsumption.length-total)]);const resultado=(cov_1pebg41whg.s[459]++,Math.max(...values));cov_1pebg41whg.s[460]++;return resultado;}});cov_1pebg41whg.s[461]++;if(value.IsLastBillPaid){cov_1pebg41whg.b[84][0]++;cov_1pebg41whg.s[462]++;throw new Error(`You have already paid this bill`);}else{cov_1pebg41whg.b[84][1]++;}// depending on which period we stay, i.e depending on which size energyconsumption has, which
// is our History per year
let bill;cov_1pebg41whg.s[463]++;if(value.EnergyConsumption.length===1){cov_1pebg41whg.b[85][0]++;cov_1pebg41whg.s[464]++;bill=myFunctions.firstMonthlyPayment(value.UnitPrice,value.LastEnergyConsumption,value.MinimumMonthlyFee);}else{cov_1pebg41whg.b[85][1]++;cov_1pebg41whg.s[465]++;// }else if (value.EnergyConsumption.length!==0){
bill=myFunctions.succesiveMonthlyPayments(value.LastEnergyConsumption,value.UnitPrice,value.MinimumMonthlyFee,value.EnergyConsumption,value.FacturacionMensual);}let new_bill=(cov_1pebg41whg.s[466]++,bill.toFixed(2));// Now it is clear how much has the farmer to pay for, it is time to pay (send his/her tokens)
const myMoney=(cov_1pebg41whg.s[467]++,token.Amount);const balance=(cov_1pebg41whg.s[468]++,myMoney-parseInt(new_bill*100));cov_1pebg41whg.s[469]++;if(balance<0){cov_1pebg41whg.b[86][0]++;cov_1pebg41whg.s[470]++;throw new Error(`Please add more coins to your wallet, or pool them. Bill amounts to ${new_bill}`);}else{cov_1pebg41whg.b[86][1]++;}cov_1pebg41whg.s[471]++;value.FacturacionMensual.push(new_bill);cov_1pebg41whg.s[472]++;value.LastFacturacionMensual=new_bill;cov_1pebg41whg.s[473]++;value.LastModificationOn=currentDate;cov_1pebg41whg.s[474]++;value.LastModificationUserID=userID;cov_1pebg41whg.s[475]++;value.IsLastBillPaid=true;// retrieve PPA Pool state in order to allocate tokens to pool owner or to ppa Owner if ppa
// is not inside pool
let[isInside,owner]=(cov_1pebg41whg.s[476]++,await this._isPPAinPool(ctx,value.ppaID));cov_1pebg41whg.s[477]++;if((cov_1pebg41whg.b[88][0]++,!owner)||(cov_1pebg41whg.b[88][1]++,!isInside)){cov_1pebg41whg.b[87][0]++;cov_1pebg41whg.s[478]++;// bill paid to PPA Owner
owner=value.OwnerID;}else{cov_1pebg41whg.b[87][1]++;}let ret;let couponPortion=(cov_1pebg41whg.s[479]++,await this._getCouponProportion(ctx,'POOL'));// Igual asi es mejor 
// if(isInside){
// }else{
// }
// el caso de que no este dentro de la Pool no existiria usando este statement
cov_1pebg41whg.s[480]++;if(couponPortion===1){cov_1pebg41whg.b[89][0]++;cov_1pebg41whg.s[481]++;ret=await this._TransferMoney(ctx,token.ID,new_bill,owner,userID);}else{cov_1pebg41whg.b[89][1]++;cov_1pebg41whg.s[482]++;// else we must allocate p*Bill tokens to Coupon Payments which will be CanBeUsed=true Tokens
// and 1-p tokens to Principal payment which will be CanBeUsed=false Tokens
ret=await this._TransferMoneyToCouponAndPrincipal(ctx,token.ID,new_bill,couponPortion,owner,userID);}// let CouponPortion=await this._isCouponPortion
// if()
// TODO
// tranfer to tokens' owner
// let ret=await this._TransferMoney(ctx,token.ID,new_bill,owner,userID)
cov_1pebg41whg.s[483]++;await ctx.stub.putState(value.ppaID,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[484]++;return ret;}// As a simplicity we will assume that each user will use just one token ID to pay the bill. If a
// user has some IDs that putting together reach the desirable value, the user will
// pool his tokens, otherwise he/she will not commit the tx
/**
     *
     * @param {*} ctx
     * @param {*} tokenID
     * @param {*} amount
     * @param {*} receiverID
     */ // Auxiliary function to transfer the money farmers pay.
async _TransferMoney(ctx,tokenID,amount,receiverID,userID){cov_1pebg41whg.f[47]++;// No prior verifications needed, because they have been checked in main function, which is
// MonthlyPayout
const tokenBytes=(cov_1pebg41whg.s[485]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[486]++;if((cov_1pebg41whg.b[91][0]++,!tokenBytes)||(cov_1pebg41whg.b[91][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[90][0]++;cov_1pebg41whg.s[487]++;throw new Error(`Error: no token associated with ID ${tokenID}`);}else{cov_1pebg41whg.b[90][1]++;}const token=(cov_1pebg41whg.s[488]++,JSON.parse(tokenBytes.toString()));const balance=(cov_1pebg41whg.s[489]++,token.Amount-amount);const issuer=(cov_1pebg41whg.s[490]++,ctx.clientIdentity.getID());const genericID=(cov_1pebg41whg.s[491]++,await ctx.stub.getTxID());let typeID;const key1=(cov_1pebg41whg.s[492]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[493]++,await ctx.stub.createCompositeKey('securitizationCoin',[receiverID,genericID]));cov_1pebg41whg.s[494]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[495]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:issuer,Amount:balance,Factor:100,CanBeUsed:true});cov_1pebg41whg.s[496]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[497]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:amount,CanBeUsed:true});let utxos=(cov_1pebg41whg.s[498]++,[]);cov_1pebg41whg.s[499]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[500]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[501]++;if(balance!==0){cov_1pebg41whg.b[92][0]++;cov_1pebg41whg.s[502]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));cov_1pebg41whg.s[503]++;utxos=[utxo1,utxo2];cov_1pebg41whg.s[504]++;return utxos;}else{cov_1pebg41whg.b[92][1]++;cov_1pebg41whg.s[505]++;utxos=[utxo2];cov_1pebg41whg.s[506]++;return utxos;}}async _TransferMoneyToCouponAndPrincipal(ctx,tokenID,amount,couponPortion,receiverID,userID){cov_1pebg41whg.f[48]++;// No prior verifications needed, because they have been checked in main function, which is
// MonthlyPayout
const tokenBytes=(cov_1pebg41whg.s[507]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[508]++;if((cov_1pebg41whg.b[94][0]++,!tokenBytes)||(cov_1pebg41whg.b[94][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[93][0]++;cov_1pebg41whg.s[509]++;throw new Error(`Error: no token associated with ID ${tokenID}`);}else{cov_1pebg41whg.b[93][1]++;}const token=(cov_1pebg41whg.s[510]++,JSON.parse(tokenBytes.toString()));const balance=(cov_1pebg41whg.s[511]++,token.Amount-amount);//console.log('balance')
//console.log(balance)
const issuer=(cov_1pebg41whg.s[512]++,ctx.clientIdentity.getID());const genericID=(cov_1pebg41whg.s[513]++,await ctx.stub.getTxID());let typeID;const key1=(cov_1pebg41whg.s[514]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[515]++,await ctx.stub.createCompositeKey('securitizationCoin',[receiverID,genericID]));cov_1pebg41whg.s[516]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[517]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:issuer,Amount:balance,Factor:100,CanBeUsed:true});// this utxo2 will be allocated to Coupon
cov_1pebg41whg.s[518]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[519]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:couponPortion*amount,CanBeUsed:true});cov_1pebg41whg.s[520]++;typeID=':2';const utxo3=(cov_1pebg41whg.s[521]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:receiverID,Issuer:issuer,Factor:100,Amount:(1-couponPortion)*amount,CanBeUsed:false});let utxos=(cov_1pebg41whg.s[522]++,[]);cov_1pebg41whg.s[523]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[524]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[525]++;await ctx.stub.putState(utxo3.ID,Buffer.from(JSON.stringify(utxo3)));cov_1pebg41whg.s[526]++;if(balance!==0){cov_1pebg41whg.b[95][0]++;cov_1pebg41whg.s[527]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));cov_1pebg41whg.s[528]++;utxos=[utxo1,utxo2,utxo3];cov_1pebg41whg.s[529]++;return utxos;}else{cov_1pebg41whg.b[95][1]++;cov_1pebg41whg.s[530]++;utxos=[utxo2,utxo3];cov_1pebg41whg.s[531]++;return utxos;}}// // TODO: Who can execute this function??
// /**
//  *
//  * @param {*} ctx
//  * @param {*} userID
//  * @param {*} date
//  */
// // Each period, originator will check how are performing the PPAs he has offered. This will update
// // if some irrigator is a defaulter or not.
// async MonthlyPerformance(ctx, ppaID,date){
//     const ppaBytes=await ctx.stub.getState(ppaID);
//     if (!ppaBytes || ppaBytes.length === 0){
//         throw new Error(`This PPA ID ${ppaID} does not exist`);
//     }
//     let ppa=JSON.parse(ppaBytes.toString())
//     // Now we check its performance and update PPA according to elapsed time between current date
//     // and payment date or other dates
//     const currentlyDate=new Date(DATE)
//     // Were bills paid on time?
//     // Check difference between dates
//     // TODO: the rest of verifications
//     // ppa.LastModificationOn=date;
//     // ppa.LastModificationUserID=userID;
//     const ppaBuffer= Buffer.from(JSON.stringify(ppa));
//     await ctx.stub.putState(ppa.ppaID,ppaBuffer)
// }
// TODO:
// change userID -> ppaID
}// This is another contract which defines a new bussiness: the acquisition of PPA Tokens,
// valuation of the pool on-chain and  transference of the bonds
class bondIssuanceContract extends Contract{constructor(){cov_1pebg41whg.f[49]++;cov_1pebg41whg.s[532]++;super('bonds.securitization.com');}createContext(){cov_1pebg41whg.f[50]++;cov_1pebg41whg.s[533]++;return new securitizationContext();}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[51]++;const iterator=(cov_1pebg41whg.s[534]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[535]++,0);let results;cov_1pebg41whg.s[536]++;for await(const res of iterator){cov_1pebg41whg.s[537]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[538]++;counter=counter+1;}cov_1pebg41whg.s[539]++;if(counter>1){cov_1pebg41whg.b[96][0]++;cov_1pebg41whg.s[540]++;throw new Error('This state-value pair is not unique');}else{cov_1pebg41whg.b[96][1]++;cov_1pebg41whg.s[541]++;if(counter===0){cov_1pebg41whg.b[97][0]++;cov_1pebg41whg.s[542]++;return true;}else{cov_1pebg41whg.b[97][1]++;}}cov_1pebg41whg.s[543]++;return results;}// Prior verifications included in beforeTransaction logic
async beforeTransaction(ctx){cov_1pebg41whg.f[52]++;let userMSPID=(cov_1pebg41whg.s[544]++,ctx.GetMSPID());cov_1pebg41whg.s[545]++;if((cov_1pebg41whg.b[99][0]++,userMSPID!=='originatorMSP')&&(cov_1pebg41whg.b[99][1]++,userMSPID!=='spvMSP')&&(cov_1pebg41whg.b[99][2]++,userMSPID!=='ratingagencyMSP')){cov_1pebg41whg.b[98][0]++;cov_1pebg41whg.s[546]++;throw new Error(`Your organization ${userMSPID} is not allowed to perform this action`);}else{cov_1pebg41whg.b[98][1]++;}let isClient=(cov_1pebg41whg.s[547]++,await ctx.GetRole());cov_1pebg41whg.s[548]++;if(!isClient){cov_1pebg41whg.b[100][0]++;cov_1pebg41whg.s[549]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[100][1]++;}cov_1pebg41whg.s[550]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[551]++,await ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[552]++,par.fcn);let params=(cov_1pebg41whg.s[553]++,par.params);cov_1pebg41whg.s[554]++;for(let i=(cov_1pebg41whg.s[555]++,0);i<params.length;i++){cov_1pebg41whg.s[556]++;if(params[i]===''){cov_1pebg41whg.b[101][0]++;cov_1pebg41whg.s[557]++;throw new Error('There is at least one empty parameter');}else{cov_1pebg41whg.b[101][1]++;}}cov_1pebg41whg.s[558]++;switch(func){case'BuyRequest':cov_1pebg41whg.b[102][0]++;cov_1pebg41whg.s[559]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[103][0]++;cov_1pebg41whg.s[560]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[103][1]++;cov_1pebg41whg.s[561]++;return;}case'SellRequest':cov_1pebg41whg.b[102][1]++;cov_1pebg41whg.s[562]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[104][0]++;cov_1pebg41whg.s[563]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[104][1]++;cov_1pebg41whg.s[564]++;return;}case'SignRequestOriginator':cov_1pebg41whg.b[102][2]++;cov_1pebg41whg.s[565]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[105][0]++;cov_1pebg41whg.s[566]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[105][1]++;cov_1pebg41whg.s[567]++;return;}case'SignRequestSPV':cov_1pebg41whg.b[102][3]++;cov_1pebg41whg.s[568]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[106][0]++;cov_1pebg41whg.s[569]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[106][1]++;cov_1pebg41whg.s[570]++;return;}case'Rating':cov_1pebg41whg.b[102][4]++;cov_1pebg41whg.s[571]++;if(ctx.mspid!=='ratingagencyMSP'){cov_1pebg41whg.b[107][0]++;cov_1pebg41whg.s[572]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[107][1]++;cov_1pebg41whg.s[573]++;return;}case'IssueBond':cov_1pebg41whg.b[102][5]++;cov_1pebg41whg.s[574]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[108][0]++;cov_1pebg41whg.s[575]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[108][1]++;cov_1pebg41whg.s[576]++;return;}case'QueryPool':cov_1pebg41whg.b[102][6]++;cov_1pebg41whg.s[577]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[109][0]++;cov_1pebg41whg.s[578]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[109][1]++;cov_1pebg41whg.s[579]++;return;}case'QuerySellRequest':cov_1pebg41whg.b[102][7]++;cov_1pebg41whg.s[580]++;if(ctx.mspid!=='spvMSP'){cov_1pebg41whg.b[110][0]++;cov_1pebg41whg.s[581]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[110][1]++;cov_1pebg41whg.s[582]++;return;}case'QueryBuyRequest':cov_1pebg41whg.b[102][8]++;cov_1pebg41whg.s[583]++;if(ctx.mspid!=='originatorMSP'){cov_1pebg41whg.b[111][0]++;cov_1pebg41whg.s[584]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[111][1]++;cov_1pebg41whg.s[585]++;return;}}}async afterTransaction(ctx){cov_1pebg41whg.f[53]++;let event=(cov_1pebg41whg.s[586]++,await ctx.GetEventPayload());cov_1pebg41whg.s[587]++;return event;}/**
     *
     * @param {*} ctx
     * @returns the size of the pool
     */async _isPoolCreated(ctx,poolName){cov_1pebg41whg.f[54]++;const iterator=(cov_1pebg41whg.s[588]++,await ctx.stub.getStateByPartialCompositeKey(poolName,[]));let results=(cov_1pebg41whg.s[589]++,[]);cov_1pebg41whg.s[590]++;for await(const res of iterator){cov_1pebg41whg.s[591]++;// push key instead of value json
results.push(res.key);}cov_1pebg41whg.s[592]++;if(results.length===0){cov_1pebg41whg.b[112][0]++;cov_1pebg41whg.s[593]++;return false;}else{cov_1pebg41whg.b[112][1]++;cov_1pebg41whg.s[594]++;if(results.length===1){cov_1pebg41whg.b[113][0]++;cov_1pebg41whg.s[595]++;return true;}else{cov_1pebg41whg.b[113][1]++;cov_1pebg41whg.s[596]++;throw new Error(`State not unique`);}}}/**
     *
     * @param {*} ctx
     * @param {*} docTypeName
     * @returns the state associated with that partial key
     */ // This auxiliary function will only work with those states expected to be unique (POOL, REALTIMEPARAMETERS, RATING...)
async _getPoolStateByPartialCompositeKey(ctx,docTypeName){cov_1pebg41whg.f[55]++;const iterator=(cov_1pebg41whg.s[597]++,await ctx.stub.getStateByPartialCompositeKey(docTypeName,[]));let counter=(cov_1pebg41whg.s[598]++,0);let results;let isCreated;let res=(cov_1pebg41whg.s[599]++,[]);cov_1pebg41whg.s[600]++;for await(const res of iterator){cov_1pebg41whg.s[601]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[602]++;counter=counter+1;}//console.log(`counter: ${counter}`)
cov_1pebg41whg.s[603]++;if(counter===1){cov_1pebg41whg.b[114][0]++;cov_1pebg41whg.s[604]++;isCreated=true;cov_1pebg41whg.s[605]++;res.push(isCreated);cov_1pebg41whg.s[606]++;res.push(results);cov_1pebg41whg.s[607]++;return res;}else{cov_1pebg41whg.b[114][1]++;cov_1pebg41whg.s[608]++;if(counter===0){cov_1pebg41whg.b[115][0]++;cov_1pebg41whg.s[609]++;isCreated=false;cov_1pebg41whg.s[610]++;res.push(isCreated);cov_1pebg41whg.s[611]++;return res;}else{cov_1pebg41whg.b[115][1]++;cov_1pebg41whg.s[612]++;throw new Error('This state-value pair is not unique');}}}async QueryPool(ctx,poolName){cov_1pebg41whg.f[56]++;let pool=(cov_1pebg41whg.s[613]++,await this._getPoolStateByPartialCompositeKey(ctx,poolName));cov_1pebg41whg.s[614]++;if((cov_1pebg41whg.b[117][0]++,!pool[0])&&(cov_1pebg41whg.b[117][1]++,pool.length===1)){cov_1pebg41whg.b[116][0]++;cov_1pebg41whg.s[615]++;throw new Error(`There is no Pool linked to name ${poolName}`);}else{cov_1pebg41whg.b[116][1]++;}cov_1pebg41whg.s[616]++;return pool[1];}/**
     *
     * @param {*} ctx
     * @param {*} amount
     * @param {*} price
     * @param {*} toIdentity
     */ // SPV will want to buy the pool of assets that originator owns, but firstly she/he needs
// to submit a request to buy it.
async BuyRequest(ctx,amount,price){cov_1pebg41whg.f[57]++;// TODO: originator must achieve a certain pool size to sell??
//       what if actual pool size is greater than spv wants
// if (await this._isPoolCreated(ctx,poolName)===false){
//     throw new Error(`Pool still not created`)
// }
const userID=(cov_1pebg41whg.s[617]++,await ctx.GetUserIdentity('cif'));const genericID=(cov_1pebg41whg.s[618]++,await ctx.stub.getTxID());const requestID=(cov_1pebg41whg.s[619]++,await ctx.stub.createCompositeKey('BuyRequest',[userID,genericID]));let value=(cov_1pebg41whg.s[620]++,{ID:requestID,Owner:userID,Receiver:'',Amount:parseInt(amount),Price:parseInt(parseFloat(price)*100),IsSigned:false,Factor:100});const valueBuffer=(cov_1pebg41whg.s[621]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[622]++;await ctx.stub.putState(requestID,valueBuffer);cov_1pebg41whg.s[623]++;await ctx.SetEventName('BuyRequestIssued');cov_1pebg41whg.s[624]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[625]++;return value;}async QueryBuyRequest(ctx){cov_1pebg41whg.f[58]++;let iterator=(cov_1pebg41whg.s[626]++,await ctx.stub.getStateByPartialCompositeKey('BuyRequest'));let results=(cov_1pebg41whg.s[627]++,[]);cov_1pebg41whg.s[628]++;for await(const res of iterator){cov_1pebg41whg.s[629]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[630]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} price
     * @param {*} toIdentity
     */ // Originator submits a sell request to SPV
async SellRequest(ctx,price,poolID){cov_1pebg41whg.f[59]++;const userID=(cov_1pebg41whg.s[631]++,await ctx.GetUserIdentity('cif'));const genericID=(cov_1pebg41whg.s[632]++,await ctx.stub.getTxID());const requestID=(cov_1pebg41whg.s[633]++,await ctx.stub.createCompositeKey('SellRequest',[userID,genericID]));let value=(cov_1pebg41whg.s[634]++,{ID:requestID,Owner:userID,Receiver:'',Price:parseInt(parseFloat(price)*100),Factor:100,IsSigned:false,BackedBy:poolID});const valueBuffer=(cov_1pebg41whg.s[635]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[636]++;await ctx.stub.putState(requestID,valueBuffer);cov_1pebg41whg.s[637]++;await ctx.SetEventName('SellRequestIssued');cov_1pebg41whg.s[638]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[639]++;return value;}async QuerySellRequest(ctx){cov_1pebg41whg.f[60]++;let iterator=(cov_1pebg41whg.s[640]++,await ctx.stub.getStateByPartialCompositeKey('SellRequest'));let results=(cov_1pebg41whg.s[641]++,[]);cov_1pebg41whg.s[642]++;for await(const res of iterator){cov_1pebg41whg.s[643]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[644]++;return results;}async QueryFullRequest(ctx){cov_1pebg41whg.f[61]++;let iterator=(cov_1pebg41whg.s[645]++,await ctx.stub.getStateByPartialCompositeKey('FullRequest'));let results=(cov_1pebg41whg.s[646]++,[]);cov_1pebg41whg.s[647]++;for await(const res of iterator){cov_1pebg41whg.s[648]++;results.push(JSON.parse(res.value.toString()));}cov_1pebg41whg.s[649]++;return results;}/**
     *
     * @param {*} ctx
     * @param {*} type
     * @param {*} toIdentity  in real case toIdentity is an attribute linked to certificate
     */ // cash owner must sign first
// SPV accepts request. Check if she/he has enough funds
async SignRequestSPV(ctx,tokenID,typeID,buyRequestID,sellRequestID,sellRequestPrice,sellRequestBackedBy,sellRequestOwner){cov_1pebg41whg.f[62]++;const userID=(cov_1pebg41whg.s[650]++,await ctx.GetUserIdentity('cif'));const buyRequestBytes=(cov_1pebg41whg.s[651]++,await ctx.stub.getState(buyRequestID));cov_1pebg41whg.s[652]++;if((cov_1pebg41whg.b[119][0]++,!buyRequestBytes)||(cov_1pebg41whg.b[119][1]++,buyRequestBytes.length===0)){cov_1pebg41whg.b[118][0]++;cov_1pebg41whg.s[653]++;throw new Error(`Buy request linked to ID ${buyRequestID} does not exist`);}else{cov_1pebg41whg.b[118][1]++;}const buyRequest=(cov_1pebg41whg.s[654]++,JSON.parse(buyRequestBytes.toString()));// Check if this request has been already signed
cov_1pebg41whg.s[655]++;if(buyRequest.IsSigned){cov_1pebg41whg.b[120][0]++;cov_1pebg41whg.s[656]++;throw new Error(`Request has been already signed. Not allowed to perform this action`);}else{cov_1pebg41whg.b[120][1]++;}// As cash owner will signs the request, we must be sure that he is the owner of that amount
// and maybe we should block his/her funds
// I dont think this could be necessary because in the DvP we will execute both actions, and
// if one of them does not succeed, noone will succeed.
// In order to not create false requests we are going to freeze tokens
const token_ID=(cov_1pebg41whg.s[657]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));const tokenBytes=(cov_1pebg41whg.s[658]++,await ctx.stub.getState(token_ID+typeID));cov_1pebg41whg.s[659]++;if((cov_1pebg41whg.b[122][0]++,!tokenBytes)||(cov_1pebg41whg.b[122][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[121][0]++;cov_1pebg41whg.s[660]++;throw new Error(`Error, Token with ID ${tokenID+typeID} does not exist`);}else{cov_1pebg41whg.b[121][1]++;}const myFunds=(cov_1pebg41whg.s[661]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[662]++;if(!myFunds.CanBeUsed){cov_1pebg41whg.b[123][0]++;cov_1pebg41whg.s[663]++;throw new Error(`Your token has been already used`);}else{cov_1pebg41whg.b[123][1]++;}// Check our funds
cov_1pebg41whg.s[664]++;if(buyRequest.Price>myFunds.Amount){cov_1pebg41whg.b[124][0]++;cov_1pebg41whg.s[665]++;throw new Error(`Your token has not enough funds. Try to pool your token or ask for mint`);}else{cov_1pebg41whg.b[124][1]++;}// If we have enough funds, then we can sign the request
cov_1pebg41whg.s[666]++;buyRequest.IsSigned=true;// Retrieve sell request
const sellRequestBytes=(cov_1pebg41whg.s[667]++,await ctx.stub.getState(sellRequestID));cov_1pebg41whg.s[668]++;if((cov_1pebg41whg.b[126][0]++,!sellRequestBytes)||(cov_1pebg41whg.b[126][1]++,sellRequestBytes.length===0)){cov_1pebg41whg.b[125][0]++;cov_1pebg41whg.s[669]++;throw new Error(`Sell Request does not exist or have been removed`);}else{cov_1pebg41whg.b[125][1]++;}let sellRequest=(cov_1pebg41whg.s[670]++,JSON.parse(sellRequestBytes.toString()));cov_1pebg41whg.s[671]++;if((cov_1pebg41whg.b[128][0]++,sellRequest.Price!==parseInt(sellRequestPrice))||(cov_1pebg41whg.b[128][1]++,sellRequest.BackedBy!==sellRequestBackedBy)||(cov_1pebg41whg.b[128][2]++,sellRequest.Owner!==sellRequestOwner)){cov_1pebg41whg.b[127][0]++;cov_1pebg41whg.s[672]++;throw new Error(`Sell Request has been modified`);}else{cov_1pebg41whg.b[127][1]++;}cov_1pebg41whg.s[673]++;buyRequest.Receiver=sellRequestOwner;let txid=(cov_1pebg41whg.s[674]++,await ctx.stub.getTxID());const n_value=(cov_1pebg41whg.s[675]++,{ID:'Request'+txid,buyRequest:buyRequest,sellRequest:sellRequest,TokenID:token_ID+typeID});const n_valueID=(cov_1pebg41whg.s[676]++,'Request'+txid);const valueBuffer=(cov_1pebg41whg.s[677]++,Buffer.from(JSON.stringify(n_value)));cov_1pebg41whg.s[678]++;await ctx.stub.putState(n_valueID,valueBuffer);cov_1pebg41whg.s[679]++;await ctx.stub.deleteState(sellRequest.ID);cov_1pebg41whg.s[680]++;await ctx.stub.deleteState(buyRequest.ID);cov_1pebg41whg.s[681]++;await ctx.SetEventName('SignSellRequest');cov_1pebg41whg.s[682]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[683]++;return n_valueID;}async _dvp(ctx,tokenID,securityID,tokensToTransfer){cov_1pebg41whg.f[63]++;const tokenBytes=(cov_1pebg41whg.s[684]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[685]++;if((cov_1pebg41whg.b[130][0]++,!tokenBytes)||(cov_1pebg41whg.b[130][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[129][0]++;cov_1pebg41whg.s[686]++;throw new Error(`Error, Token state according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[129][1]++;}const token=(cov_1pebg41whg.s[687]++,JSON.parse(tokenBytes.toString()));const securityBytes=(cov_1pebg41whg.s[688]++,await ctx.stub.getState(securityID));cov_1pebg41whg.s[689]++;if((cov_1pebg41whg.b[132][0]++,!securityBytes)||(cov_1pebg41whg.b[132][1]++,securityBytes.length===0)){cov_1pebg41whg.b[131][0]++;cov_1pebg41whg.s[690]++;throw new Error(`Error, Pool state according to key ${securityID} does not exist`);}else{cov_1pebg41whg.b[131][1]++;}const security=(cov_1pebg41whg.s[691]++,JSON.parse(securityBytes.toString()));cov_1pebg41whg.s[692]++;if((cov_1pebg41whg.b[134][0]++,!security.CanBeUsed)||(cov_1pebg41whg.b[134][1]++,!token.CanBeUsed)){cov_1pebg41whg.b[133][0]++;cov_1pebg41whg.s[693]++;throw new Error(`Token and/or security have been already used`);}else{cov_1pebg41whg.b[133][1]++;}const genericID=(cov_1pebg41whg.s[694]++,await ctx.stub.getTxID());// 'user' seria el que recibe el token/bono
const key1=(cov_1pebg41whg.s[695]++,await ctx.stub.createCompositeKey('securitizationCoin',[token.Owner,genericID]));const key2=(cov_1pebg41whg.s[696]++,await ctx.stub.createCompositeKey('securitizationCoin',[security.Owner,genericID]));const securityKey1=(cov_1pebg41whg.s[697]++,await ctx.stub.createCompositeKey('POOL',[token.Owner,genericID]));const balanceTokens=(cov_1pebg41whg.s[698]++,token.Amount-tokensToTransfer);let utxo1;let utxo2;let typeID;cov_1pebg41whg.s[699]++;typeID=':1';cov_1pebg41whg.s[700]++;utxo1={ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balanceTokens,Factor:100,CanBeUsed:true};cov_1pebg41whg.s[701]++;typeID=':0';cov_1pebg41whg.s[702]++;utxo2={ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:security.Owner,Issuer:token.Issuer,Amount:tokensToTransfer,CanBeUsed:true};cov_1pebg41whg.s[703]++;security.poolID=securityKey1;cov_1pebg41whg.s[704]++;security.Owner=token.Owner;cov_1pebg41whg.s[705]++;await ctx.stub.deleteState(tokenID);cov_1pebg41whg.s[706]++;await ctx.stub.deleteState(securityID);cov_1pebg41whg.s[707]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[708]++;await ctx.stub.putState(security.poolID,Buffer.from(JSON.stringify(security)));cov_1pebg41whg.s[709]++;if(balanceTokens!=0){cov_1pebg41whg.b[135][0]++;cov_1pebg41whg.s[710]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_1pebg41whg.b[135][1]++;}}/**
     *
     * @param {*} ctx
     * @param {*} tokenid
     */ // securities owner must sign afterwards
// originator accepts request: enough securities
async SignRequestOriginator(ctx,poolName,poolID,fullRequestID,buyRequestIdentity,buyRequestAmount,buyRequestPrice){cov_1pebg41whg.f[64]++;const userID=(cov_1pebg41whg.s[711]++,await ctx.GetUserIdentity('cif'));const valueBytes=(cov_1pebg41whg.s[712]++,await ctx.stub.getState(fullRequestID));cov_1pebg41whg.s[713]++;if((cov_1pebg41whg.b[137][0]++,!valueBytes)||(cov_1pebg41whg.b[137][1]++,valueBytes.length===0)){cov_1pebg41whg.b[136][0]++;cov_1pebg41whg.s[714]++;throw new Error(`Request State does not exist`);}else{cov_1pebg41whg.b[136][1]++;}const value=(cov_1pebg41whg.s[715]++,JSON.parse(valueBytes.toString()));// Originator in order to sign this request must provide an own PPA pool
const tokenID=(cov_1pebg41whg.s[716]++,await ctx.stub.createCompositeKey(poolName,[poolID]));const poolBytes=(cov_1pebg41whg.s[717]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[718]++;if((cov_1pebg41whg.b[139][0]++,!poolBytes)||(cov_1pebg41whg.b[139][1]++,poolBytes.length===0)){cov_1pebg41whg.b[138][0]++;cov_1pebg41whg.s[719]++;throw new Error(`Error, Pool State does not exist according to the key provided`);}else{cov_1pebg41whg.b[138][1]++;}//console.log(value.buyRequest.Receiver);
cov_1pebg41whg.s[720]++;if(userID!==value.buyRequest.Receiver){cov_1pebg41whg.b[140][0]++;cov_1pebg41whg.s[721]++;//console.log('dentro if1')
throw new Error('You are not allowed to perform this action');}else{cov_1pebg41whg.b[140][1]++;}const pool=(cov_1pebg41whg.s[722]++,JSON.parse(poolBytes.toString()));cov_1pebg41whg.s[723]++;if(pool.Owner!==userID){cov_1pebg41whg.b[141][0]++;cov_1pebg41whg.s[724]++;//console.log('dentro if2')
throw new Error(`User ID ${userID} does not match Pool Owner`);}else{cov_1pebg41whg.b[141][1]++;}cov_1pebg41whg.s[725]++;if(pool.ppaIDs.length!==value.buyRequest.Amount){cov_1pebg41whg.b[142][0]++;cov_1pebg41whg.s[726]++;throw new Error(`Size of Pool and size of Buy Request do not match`);}else{cov_1pebg41whg.b[142][1]++;}cov_1pebg41whg.s[727]++;value.sellRequest.IsSigned=true;cov_1pebg41whg.s[728]++;if((cov_1pebg41whg.b[144][0]++,parseInt(buyRequestPrice)!==value.buyRequest.Price)||(cov_1pebg41whg.b[144][1]++,parseInt(buyRequestAmount)!==value.buyRequest.Amount)||(cov_1pebg41whg.b[144][2]++,buyRequestIdentity!==value.buyRequest.Owner)){cov_1pebg41whg.b[143][0]++;cov_1pebg41whg.s[729]++;throw new Error('Some args of Full Request have been modified');}else{cov_1pebg41whg.b[143][1]++;}// DvP is triggered
cov_1pebg41whg.s[730]++;await this._dvp(ctx,value.TokenID,pool.poolID,value.buyRequest.Price);//console.log('hasta aqui')
cov_1pebg41whg.s[731]++;await ctx.stub.deleteState(fullRequestID);}// TODO
// Once SPV has acquired the Pool of PPAs, rating agency will assess PPA assets in order to
// issue securities backed by the Pool.
async Rating(ctx,poolID){cov_1pebg41whg.f[65]++;const userID=(cov_1pebg41whg.s[732]++,await ctx.GetUserIdentity('cif'));const poolBytes=(cov_1pebg41whg.s[733]++,await ctx.stub.getState(poolID));cov_1pebg41whg.s[734]++;if((cov_1pebg41whg.b[146][0]++,!poolBytes)||(cov_1pebg41whg.b[146][1]++,poolBytes.length===0)){cov_1pebg41whg.b[145][0]++;cov_1pebg41whg.s[735]++;throw new Error(`Pool does not exist, not possible to attach a rating`);}else{cov_1pebg41whg.b[145][1]++;}const key=(cov_1pebg41whg.s[736]++,await ctx.stub.createCompositeKey('Rating',[poolID]));const value=(cov_1pebg41whg.s[737]++,{ID:key,BackedBy:poolID,Owner:userID,RatingArgs:""});const valueBuffer=(cov_1pebg41whg.s[738]++,Buffer.from(JSON.stringify(value)));cov_1pebg41whg.s[739]++;await ctx.stub.putState(key,valueBuffer);cov_1pebg41whg.s[740]++;return value;}//check if spv owns every ppa
async IssueBond(ctx,ratingID,p){cov_1pebg41whg.f[66]++;const userID=(cov_1pebg41whg.s[741]++,await ctx.GetUserIdentity('cif'));// We retrieve data from rating
const ratingBytes=(cov_1pebg41whg.s[742]++,await ctx.stub.getState(ratingID));cov_1pebg41whg.s[743]++;if((cov_1pebg41whg.b[148][0]++,!ratingBytes)||(cov_1pebg41whg.b[148][1]++,ratingBytes.length===0)){cov_1pebg41whg.b[147][0]++;cov_1pebg41whg.s[744]++;throw new Error(`Rating still not delivered`);}else{cov_1pebg41whg.b[147][1]++;}const rating=(cov_1pebg41whg.s[745]++,JSON.parse(ratingBytes.toString()));const poolID=(cov_1pebg41whg.s[746]++,rating.BackedBy);const poolBytes=(cov_1pebg41whg.s[747]++,await ctx.stub.getState(poolID));cov_1pebg41whg.s[748]++;if((cov_1pebg41whg.b[150][0]++,!poolBytes)||(cov_1pebg41whg.b[150][1]++,poolBytes.length===0)){cov_1pebg41whg.b[149][0]++;cov_1pebg41whg.s[749]++;throw new Error(`Error, Pool State does not match Pool ID provided`);}else{cov_1pebg41whg.b[149][1]++;}const pool=(cov_1pebg41whg.s[750]++,JSON.parse(poolBytes.toString()));cov_1pebg41whg.s[751]++;if(pool.Owner!==userID){cov_1pebg41whg.b[151][0]++;cov_1pebg41whg.s[752]++;throw new Error(`User ID ${userID} does not own Pool`);}else{cov_1pebg41whg.b[151][1]++;}// Rating State will provide some attributes bons must have.
const genericID=(cov_1pebg41whg.s[753]++,await ctx.stub.getTxID());const key=(cov_1pebg41whg.s[754]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));const new_pool=(cov_1pebg41whg.s[755]++,{ppaIDs:pool.ppaIDs,Owner:pool.Owner,ID:pool.Name+genericID,Name:pool.Name,CouponPortion:p});const typeID=(cov_1pebg41whg.s[756]++,':0');const bondID=(cov_1pebg41whg.s[757]++,key+typeID);// TODO: every time there is an attribute namely Issuer, should it be
// ctx.clientIdentity.getID() or ctx.clientIdentity.getIDBytes();
const bondToken=(cov_1pebg41whg.s[758]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:"",CouponRate:"",MaturityDate:"",Issuer:userID,Owner:userID,Pool:"",AmountPaid:"",OriginalValue:"",MonthlyPayout:"",RemainingPayments:"",Amount:100000,CanBeUsed:true});let valueBuffer=(cov_1pebg41whg.s[759]++,Buffer.from(JSON.stringify(bondToken)));cov_1pebg41whg.s[760]++;await ctx.stub.putState(bondID,valueBuffer);cov_1pebg41whg.s[761]++;await ctx.stub.deleteState(pool.ID);cov_1pebg41whg.s[762]++;await ctx.stub.putState(new_pool.ID,Buffer.from(JSON.stringify(new_pool)));cov_1pebg41whg.s[763]++;await ctx.SetEventName('BondsIssuance');cov_1pebg41whg.s[764]++;await ctx.SetEventPayload(valueBuffer);cov_1pebg41whg.s[765]++;return bondToken.ID;}}class servicingContract extends Contract{constructor(){cov_1pebg41whg.f[67]++;cov_1pebg41whg.s[766]++;// Unique namespace when multiple contracts per chaincode file
super('servicing.securitization.com');}createContext(){cov_1pebg41whg.f[68]++;cov_1pebg41whg.s[767]++;return new securitizationContext();}// TODO: change which orgs can execute this contract
async beforeTransaction(ctx){cov_1pebg41whg.f[69]++;let userMSPID=(cov_1pebg41whg.s[768]++,ctx.GetMSPID());cov_1pebg41whg.s[769]++;if((cov_1pebg41whg.b[153][0]++,userMSPID!=='investorMSP')&&(cov_1pebg41whg.b[153][1]++,userMSPID!=='spvMSP')&&(cov_1pebg41whg.b[153][2]++,userMSPID!=='ratingagencyMSP')){cov_1pebg41whg.b[152][0]++;cov_1pebg41whg.s[770]++;throw new Error(`Your organization ${userMSPID} is not allowed to perform this action`);}else{cov_1pebg41whg.b[152][1]++;}let isClient=(cov_1pebg41whg.s[771]++,await ctx.GetRole());//console.log(`isClient: ${isClient}`);
cov_1pebg41whg.s[772]++;if(!isClient){cov_1pebg41whg.b[154][0]++;cov_1pebg41whg.s[773]++;throw new Error(`You are not allowed to perform this action`);}else{cov_1pebg41whg.b[154][1]++;}cov_1pebg41whg.s[774]++;await ctx.SetMSPID(userMSPID);let par=(cov_1pebg41whg.s[775]++,ctx.stub.getFunctionAndParameters());let func=(cov_1pebg41whg.s[776]++,par.fcn);let params=(cov_1pebg41whg.s[777]++,par.params);cov_1pebg41whg.s[778]++;for(let i=(cov_1pebg41whg.s[779]++,0);i<params.length;i++){cov_1pebg41whg.s[780]++;if(params[i]===''){cov_1pebg41whg.b[155][0]++;cov_1pebg41whg.s[781]++;throw new Error('There is at least one empty parameter that should not be');}else{cov_1pebg41whg.b[155][1]++;}}cov_1pebg41whg.s[782]++;switch(func){case'AskOrder':cov_1pebg41whg.b[156][0]++;cov_1pebg41whg.s[783]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[157][0]++;cov_1pebg41whg.s[784]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[157][1]++;cov_1pebg41whg.s[785]++;return;}case'AskMarketOrder':cov_1pebg41whg.b[156][1]++;cov_1pebg41whg.s[786]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[158][0]++;cov_1pebg41whg.s[787]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[158][1]++;cov_1pebg41whg.s[788]++;return;}case'BidOrder':cov_1pebg41whg.b[156][2]++;cov_1pebg41whg.s[789]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[159][0]++;cov_1pebg41whg.s[790]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[159][1]++;cov_1pebg41whg.s[791]++;return;}case'BidMarketOrder':cov_1pebg41whg.b[156][3]++;cov_1pebg41whg.s[792]++;if(ctx.mspid!=='investorMSP'){cov_1pebg41whg.b[160][0]++;cov_1pebg41whg.s[793]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[160][1]++;cov_1pebg41whg.s[794]++;return;}// case 'Matching':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
case'PoolBond':cov_1pebg41whg.b[156][4]++;cov_1pebg41whg.s[795]++;if((cov_1pebg41whg.b[162][0]++,ctx.mspid!=='investorMSP')&&(cov_1pebg41whg.b[162][1]++,ctx.mspid!=='spvMSP')){cov_1pebg41whg.b[161][0]++;cov_1pebg41whg.s[796]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[161][1]++;cov_1pebg41whg.s[797]++;return;}// case 'MatchingBid':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
// case 'MatchingAsk':
//     if (ctx.mspid!=='investorMSP'){
//         throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);
//     }else{
//         return
//     }
case'TransferCoupons':cov_1pebg41whg.b[156][5]++;cov_1pebg41whg.s[798]++;if((cov_1pebg41whg.b[164][0]++,ctx.mspid!=='investorMSP')&&(cov_1pebg41whg.b[164][1]++,ctx.mspid!=='spvMSP')){cov_1pebg41whg.b[163][0]++;cov_1pebg41whg.s[799]++;throw new Error(`Your organization ${ctx.mspid} is not allowed to perform this action`);}else{cov_1pebg41whg.b[163][1]++;cov_1pebg41whg.s[800]++;return;}}}async afterTransaction(ctx){cov_1pebg41whg.f[70]++;let event=(cov_1pebg41whg.s[801]++,await ctx.GetEventPayload());cov_1pebg41whg.s[802]++;return event;}// This function is expected to return just one value associated with the partialKey of the user Identity Number
async _mygetStateByPartialCompositeKey(ctx,name,userID){cov_1pebg41whg.f[71]++;const iterator=(cov_1pebg41whg.s[803]++,await ctx.stub.getStateByPartialCompositeKey(name,[userID]));let counter=(cov_1pebg41whg.s[804]++,0);let results;cov_1pebg41whg.s[805]++;for await(const res of iterator){cov_1pebg41whg.s[806]++;results=JSON.parse(res.value.toString());cov_1pebg41whg.s[807]++;counter=counter+1;}cov_1pebg41whg.s[808]++;if(counter>1){cov_1pebg41whg.b[165][0]++;cov_1pebg41whg.s[809]++;throw new Error('Partial Key Uniqueness not provided. Something went wrong');}else{cov_1pebg41whg.b[165][1]++;cov_1pebg41whg.s[810]++;if(counter===0){cov_1pebg41whg.b[166][0]++;cov_1pebg41whg.s[811]++;return true;}else{cov_1pebg41whg.b[166][1]++;}}cov_1pebg41whg.s[812]++;return results;}async _transferBond(ctx,userID,amount,keyFrom){cov_1pebg41whg.f[72]++;const genericID=(cov_1pebg41whg.s[813]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[814]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));cov_1pebg41whg.s[815]++;for(const key of keyFrom){cov_1pebg41whg.s[816]++;await ctx.stub.deleteState(key);}let typeID=(cov_1pebg41whg.s[817]++,':0');const bondToken=(cov_1pebg41whg.s[818]++,{ID:key1+typeID,GenericID:genericID,Rating:"",CouponRate:"",MaturityDate:"",Issuer:"",Owner:userID,Pool:"",AmountPaid:"",OriginalValue:"",MonthlyPayout:"",RemainingPayments:"",Amount:amount,TypeID:typeID,CanBeUsed:true});const bondTokenBuffer=(cov_1pebg41whg.s[819]++,Buffer.from(JSON.stringify(bondToken)));cov_1pebg41whg.s[820]++;await ctx.stub.putState(key1,bondTokenBuffer);cov_1pebg41whg.s[821]++;return bondToken;}async PoolBond(ctx){cov_1pebg41whg.f[73]++;const userID=(cov_1pebg41whg.s[822]++,await ctx.GetUserIdentity('cif'));const iterator=(cov_1pebg41whg.s[823]++,await ctx.stub.getStateByPartialCompositeKey('BondToken',[userID]));let amount;let resultKeys=(cov_1pebg41whg.s[824]++,[]);let counter=(cov_1pebg41whg.s[825]++,0);let value;//console.log('before for await')
cov_1pebg41whg.s[826]++;for await(const res of iterator){cov_1pebg41whg.s[827]++;value=JSON.parse(res.value.toString());cov_1pebg41whg.s[828]++;amount=value.Amount;cov_1pebg41whg.s[829]++;if(value.CanBeUsed){cov_1pebg41whg.b[167][0]++;cov_1pebg41whg.s[830]++;resultKeys.push(value.ID);cov_1pebg41whg.s[831]++;counter=counter+amount;}else{cov_1pebg41whg.b[167][1]++;}cov_1pebg41whg.s[832]++;if(resultKeys.length===2){cov_1pebg41whg.b[168][0]++;cov_1pebg41whg.s[833]++;break;}else{cov_1pebg41whg.b[168][1]++;}}//console.log('after for await')
cov_1pebg41whg.s[834]++;if((cov_1pebg41whg.b[170][0]++,resultKeys.length===0)||(cov_1pebg41whg.b[170][1]++,resultKeys.length===1)){cov_1pebg41whg.b[169][0]++;cov_1pebg41whg.s[835]++;throw new Error('There is nothing left to do');// return
}else{cov_1pebg41whg.b[169][1]++;}let ret=(cov_1pebg41whg.s[836]++,await this._transferBond(ctx,userID,counter,resultKeys));cov_1pebg41whg.s[837]++;return ret;}// Our token will have 2 decimals, like fiat currencies
async _checkDecimals(number){cov_1pebg41whg.f[74]++;// In nodejs every atribute is passed as a string
// First check if it is a number
// number.stringify()
// if(typeof number !=='number'){
//     throw new Error('Wrong notation');
// }
// Not necessary, we are working with 2decimal-numbers
// Integer between -2^53-1 and 2^53-1
// if (!Number.isSafeInteger(number)){
//     throw new Error('Wrong number');
// }
// Check if it is a 2decimal-number
const numberString=(cov_1pebg41whg.s[838]++,number.toString());let index;let count=(cov_1pebg41whg.s[839]++,0);cov_1pebg41whg.s[840]++;for(let i=(cov_1pebg41whg.s[841]++,0);i<numberString.length;i++){cov_1pebg41whg.s[842]++;if(numberString[i]==='.'){cov_1pebg41whg.b[171][0]++;cov_1pebg41whg.s[843]++;index=i;cov_1pebg41whg.s[844]++;count=count+1;}else{cov_1pebg41whg.b[171][1]++;}cov_1pebg41whg.s[845]++;if(numberString[i]===','){cov_1pebg41whg.b[172][0]++;cov_1pebg41whg.s[846]++;throw new Error('Wrong format. Try using dot instead of comma');}else{cov_1pebg41whg.b[172][1]++;}}//console.log(`numero de puntos ${count}`);
cov_1pebg41whg.s[847]++;if((cov_1pebg41whg.b[174][0]++,numberString.length-1-index>2)||(cov_1pebg41whg.b[174][1]++,count>1)){cov_1pebg41whg.b[173][0]++;cov_1pebg41whg.s[848]++;throw new Error('Wrong decimals');}else{cov_1pebg41whg.b[173][1]++;}// Check if it is strictly positive
cov_1pebg41whg.s[849]++;number=parseFloat(number);cov_1pebg41whg.s[850]++;if(number<=0){cov_1pebg41whg.b[175][0]++;cov_1pebg41whg.s[851]++;throw new Error('Number must be strictly positive');}else{cov_1pebg41whg.b[175][1]++;}cov_1pebg41whg.s[852]++;return true;}// Bid order will be executed by someone able to buy assets (bonds)
// Auxiliary function to allocate certain amount of money every time a bid order is submitted
async _splitMoney(ctx,tokenID,amount){cov_1pebg41whg.f[75]++;const userID=(cov_1pebg41whg.s[853]++,await ctx.GetUserIdentity('cif'));const tokenBytes=(cov_1pebg41whg.s[854]++,await ctx.stub.getState(tokenID));cov_1pebg41whg.s[855]++;if((cov_1pebg41whg.b[177][0]++,!tokenBytes)||(cov_1pebg41whg.b[177][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[176][0]++;cov_1pebg41whg.s[856]++;throw new Error(`Error, Token state according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[176][1]++;}const token=(cov_1pebg41whg.s[857]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[858]++;if(token.CanBeUsed===false){cov_1pebg41whg.b[178][0]++;cov_1pebg41whg.s[859]++;throw new Error(`This token ID ${tokenID} has already been used. Try another Token ID`);}else{cov_1pebg41whg.b[178][1]++;}//console.log(`amount: ${amount}`);
//console.log(`token.Amount: ${token.Amount}`);
//console.log(token.Amount-amount);
cov_1pebg41whg.s[860]++;if(token.Amount<amount){cov_1pebg41whg.b[179][0]++;cov_1pebg41whg.s[861]++;throw new Error('Error, token State has not enough funds');}else{cov_1pebg41whg.b[179][1]++;}const balance=(cov_1pebg41whg.s[862]++,token.Amount-amount);const genericID=(cov_1pebg41whg.s[863]++,await ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[864]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));const key2=(cov_1pebg41whg.s[865]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,genericID]));let typeID;cov_1pebg41whg.s[866]++;typeID=':1';const utxo1=(cov_1pebg41whg.s[867]++,{ID:key1+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:balance,CanBeUsed:true});cov_1pebg41whg.s[868]++;typeID=':0';const utxo2=(cov_1pebg41whg.s[869]++,{ID:key2+typeID,GenericID:genericID,TypeID:typeID,Owner:token.Owner,Issuer:token.Issuer,Amount:amount,CanBeUsed:false});cov_1pebg41whg.s[870]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[871]++;await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));cov_1pebg41whg.s[872]++;if(balance>0){cov_1pebg41whg.b[180][0]++;cov_1pebg41whg.s[873]++;await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));}else{cov_1pebg41whg.b[180][1]++;}//console.log(utxo2.ID)
cov_1pebg41whg.s[874]++;return utxo2.ID;}// Auxiliary function to allocate certain amount of bonds every time an ask order is submitted
async _splitBonds(ctx,bondID,amount){cov_1pebg41whg.f[76]++;const userID=(cov_1pebg41whg.s[875]++,await ctx.GetUserIdentity('cif'));const bondBytes=(cov_1pebg41whg.s[876]++,await ctx.stub.getState(bondID));cov_1pebg41whg.s[877]++;if((cov_1pebg41whg.b[182][0]++,!bondBytes)||(cov_1pebg41whg.b[182][1]++,bondBytes.length===0)){cov_1pebg41whg.b[181][0]++;cov_1pebg41whg.s[878]++;throw new Error(`Error, Bond State according to key ${bondID} does not exist`);}else{cov_1pebg41whg.b[181][1]++;}const bond=(cov_1pebg41whg.s[879]++,await JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[880]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[183][0]++;cov_1pebg41whg.s[881]++;throw new Error(`This Bond State with ID ${bondID} has already been used in a prior order`);}else{cov_1pebg41whg.b[183][1]++;}cov_1pebg41whg.s[882]++;if(amount>bond.Amount){cov_1pebg41whg.b[184][0]++;cov_1pebg41whg.s[883]++;throw new Error(`This Bond State has not enough bonds to transfer`);}else{cov_1pebg41whg.b[184][1]++;}const balance=(cov_1pebg41whg.s[884]++,bond.Amount-amount);const genericID=(cov_1pebg41whg.s[885]++,ctx.stub.getTxID());const key1=(cov_1pebg41whg.s[886]++,await ctx.stub.createCompositeKey('BondToken',[bond.Owner,genericID]));let typeID;cov_1pebg41whg.s[887]++;typeID=':0';cov_1pebg41whg.s[888]++;bondID=key1+typeID;const bond1=(cov_1pebg41whg.s[889]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:bond.Rating,CouponRate:bond.CouponRate,MaturityDate:bond.MaturityDate,Issuer:bond.Issuer,Owner:bond.Owner,Pool:bond.Pool,AmountPaid:bond.AmountPaid,OriginalValue:bond.OriginalValue,MonthlyPayout:bond.MonthlyPayout,RemainingPayments:bond.RemainingPayments,Amount:amount,CanBeUsed:false});cov_1pebg41whg.s[890]++;if(balance!==0){cov_1pebg41whg.b[185][0]++;const key2=(cov_1pebg41whg.s[891]++,await ctx.stub.createCompositeKey('BondToken',[userID,genericID]));cov_1pebg41whg.s[892]++;typeID=':1';cov_1pebg41whg.s[893]++;bondID=key2+typeID;const bond2=(cov_1pebg41whg.s[894]++,{ID:bondID,GenericID:genericID,TypeID:typeID,Rating:bond.Rating,CouponRate:bond.CouponRate,MaturityDate:bond.MaturityDate,Issuer:bond.Issuer,Owner:userID,Pool:bond.Pool,AmountPaid:bond.AmountPaid,OriginalValue:bond.OriginalValue,MonthlyPayout:bond.MonthlyPayout,RemainingPayments:bond.RemainingPayments,Amount:balance,CanBeUsed:true});cov_1pebg41whg.s[895]++;await ctx.stub.deleteState(bond.ID);cov_1pebg41whg.s[896]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond1)));cov_1pebg41whg.s[897]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond2)));}else{cov_1pebg41whg.b[185][1]++;cov_1pebg41whg.s[898]++;await ctx.stub.deleteState(bond.ID);cov_1pebg41whg.s[899]++;await ctx.stub.putState(bondID,Buffer.from(JSON.stringify(bond1)));}cov_1pebg41whg.s[900]++;return bond1.ID;}// Auxiliary function to sort bid orders according to price, if they are limit or market orders and time they were
// submitted
async _sortingBidOrders(ctx,orderArray){cov_1pebg41whg.f[77]++;cov_1pebg41whg.s[901]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[78]++;cov_1pebg41whg.s[902]++;return(cov_1pebg41whg.b[187][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[187][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[187][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[187][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[187][4]++,a.Time<b.Time)?(cov_1pebg41whg.b[186][0]++,1):(cov_1pebg41whg.b[186][1]++,(cov_1pebg41whg.b[189][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[189][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[189][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[189][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[189][4]++,a.Time>b.Time)?(cov_1pebg41whg.b[188][0]++,-1):(cov_1pebg41whg.b[188][1]++,0));});cov_1pebg41whg.s[903]++;await orderArray.sort((b,a)=>{cov_1pebg41whg.f[79]++;cov_1pebg41whg.s[904]++;return a.Price>b.Price?(cov_1pebg41whg.b[190][0]++,1):(cov_1pebg41whg.b[190][1]++,b.Price>a.Price?(cov_1pebg41whg.b[191][0]++,-1):(cov_1pebg41whg.b[191][1]++,a.Time<b.Time?(cov_1pebg41whg.b[192][0]++,1):(cov_1pebg41whg.b[192][1]++,-1)));});cov_1pebg41whg.s[905]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[80]++;cov_1pebg41whg.s[906]++;return(cov_1pebg41whg.b[194][0]++,!a.FullMatch)&&(cov_1pebg41whg.b[194][1]++,b.FullMatch)?(cov_1pebg41whg.b[193][0]++,-1):(cov_1pebg41whg.b[193][1]++,(cov_1pebg41whg.b[196][0]++,!b.FullMatch)&&(cov_1pebg41whg.b[196][1]++,a.FullMatch)?(cov_1pebg41whg.b[195][0]++,-1):(cov_1pebg41whg.b[195][1]++,1));});cov_1pebg41whg.s[907]++;return orderArray;}// Auxiliary function to sort ask orders according to price, if they are limit or market orders and time they were
// submitted
async _sortingAskOrders(ctx,orderArray){cov_1pebg41whg.f[81]++;cov_1pebg41whg.s[908]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[82]++;cov_1pebg41whg.s[909]++;return(cov_1pebg41whg.b[198][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[198][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[198][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[198][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[198][4]++,a.Time<b.Time)?(cov_1pebg41whg.b[197][0]++,1):(cov_1pebg41whg.b[197][1]++,(cov_1pebg41whg.b[200][0]++,a.MarketPrice)&&(cov_1pebg41whg.b[200][1]++,!a.FullMatch)&&(cov_1pebg41whg.b[200][2]++,!b.FullMatch)&&(cov_1pebg41whg.b[200][3]++,b.MarketPrice)&&(cov_1pebg41whg.b[200][4]++,a.Time>b.Time)?(cov_1pebg41whg.b[199][0]++,-1):(cov_1pebg41whg.b[199][1]++,0));});cov_1pebg41whg.s[910]++;await orderArray.sort((b,a)=>{cov_1pebg41whg.f[83]++;cov_1pebg41whg.s[911]++;return a.Price>b.Price?(cov_1pebg41whg.b[201][0]++,-1):(cov_1pebg41whg.b[201][1]++,b.Price>a.Price?(cov_1pebg41whg.b[202][0]++,1):(cov_1pebg41whg.b[202][1]++,b.Time>a.Time?(cov_1pebg41whg.b[203][0]++,1):(cov_1pebg41whg.b[203][1]++,-1)));});cov_1pebg41whg.s[912]++;await orderArray.sort((a,b)=>{cov_1pebg41whg.f[84]++;cov_1pebg41whg.s[913]++;return(cov_1pebg41whg.b[205][0]++,!a.FullMatch)&&(cov_1pebg41whg.b[205][1]++,b.FullMatch)?(cov_1pebg41whg.b[204][0]++,-1):(cov_1pebg41whg.b[204][1]++,(cov_1pebg41whg.b[207][0]++,!b.FullMatch)&&(cov_1pebg41whg.b[207][1]++,a.FullMatch)?(cov_1pebg41whg.b[206][0]++,-1):(cov_1pebg41whg.b[206][1]++,1));});cov_1pebg41whg.s[914]++;return orderArray;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// 
// Transference triggered due to an Ask Order
async _transferCashTokens(ctx,bidInputs,askInput,orderBook){cov_1pebg41whg.f[85]++;cov_1pebg41whg.s[915]++;//translate into nodejs utxo sample code 
console.log(`Inside _transferCashTokens`);let userID=(cov_1pebg41whg.s[916]++,await ctx.clientIdentity.getID());cov_1pebg41whg.s[917]++;console.log('step 1');cov_1pebg41whg.s[918]++;console.log(bidInputs);let bondTokenBytes=(cov_1pebg41whg.s[919]++,await ctx.stub.getState(askInput.TokenID));cov_1pebg41whg.s[920]++;if((cov_1pebg41whg.b[209][0]++,!bondTokenBytes)||(cov_1pebg41whg.b[209][1]++,bondTokenBytes.length===0)){cov_1pebg41whg.b[208][0]++;cov_1pebg41whg.s[921]++;console.log('inside error 1');cov_1pebg41whg.s[922]++;throw new Error('Error1');}else{cov_1pebg41whg.b[208][1]++;}cov_1pebg41whg.s[923]++;console.log('step 2');let bondToken=(cov_1pebg41whg.s[924]++,JSON.parse(bondTokenBytes.toString()));// let myFunds=bondToken.Amount;
// console.log(`myFunds: ${myFunds}`);
cov_1pebg41whg.s[925]++;console.log('step 3');let usedKeys=(cov_1pebg41whg.s[926]++,[]);let usedOwners=(cov_1pebg41whg.s[927]++,[]);let usedAmounts=(cov_1pebg41whg.s[928]++,[]);let notUsedTokensAmounts=(cov_1pebg41whg.s[929]++,[]);let cashTokensToTransfer=(cov_1pebg41whg.s[930]++,[]);let bondTokensToTransfer=(cov_1pebg41whg.s[931]++,[]);let total=(cov_1pebg41whg.s[932]++,0);let bondsToTransfer=(cov_1pebg41whg.s[933]++,[]);let amount=(cov_1pebg41whg.s[934]++,0);let token;let lastOwner;let transactionID=(cov_1pebg41whg.s[935]++,await ctx.stub.getTxID());cov_1pebg41whg.s[936]++;console.log('step 4');let outputBondToken=(cov_1pebg41whg.s[937]++,{ID:'',GenericID:transactionID,TypeID:':0',Rating:bondToken.Rating,CouponRate:bondToken.CouponRate,MaturityDate:bondToken.MaturityDate,Issuer:bondToken.Issuer,Owner:bondToken.Owner,Pool:bondToken.Pool,AmountPaid:bondToken.AmountPaid,OriginalValue:bondToken.OriginalValue,MonthlyPayout:bondToken.MonthlyPayout,RemainingPayments:bondToken.RemainingPayments,Amount:bondToken.Amount,CanBeUsed:true});let asks=(cov_1pebg41whg.s[938]++,orderBook[1]);let bids=(cov_1pebg41whg.s[939]++,orderBook[0]);cov_1pebg41whg.s[940]++;console.log('step 5');// console.log(bidInputs)
let usedKey;let lastBid;let lastQuantity;let lastRestingQuantity;let lastQuantityMatch;let partialMatched=(cov_1pebg41whg.s[941]++,[]);cov_1pebg41whg.s[942]++;for(let i=(cov_1pebg41whg.s[943]++,0);i<bidInputs.length;i++){let balance=(cov_1pebg41whg.s[944]++,0);cov_1pebg41whg.s[945]++;console.log('inside first for loop');cov_1pebg41whg.s[946]++;console.log(bidInputs[i]);let cashTokenID=(cov_1pebg41whg.s[947]++,bidInputs[i].TokenID);cov_1pebg41whg.s[948]++;console.log(cashTokenID);let quantityToTransfer=(cov_1pebg41whg.s[949]++,bidInputs[i].QuantityMatch);cov_1pebg41whg.s[950]++;console.log(quantityToTransfer);cov_1pebg41whg.s[951]++;if(usedKeys.indexOf(cashTokenID)!==-1){cov_1pebg41whg.b[210][0]++;cov_1pebg41whg.s[952]++;console.log('step 5.1');cov_1pebg41whg.s[953]++;throw new Error('Error2');}else{cov_1pebg41whg.b[210][1]++;}cov_1pebg41whg.s[954]++;balance=bidInputs[i].Quantity-bidInputs[i].QuantityMatch;cov_1pebg41whg.s[955]++;if(balance===0){cov_1pebg41whg.b[211][0]++;cov_1pebg41whg.s[956]++;total+=quantityToTransfer*bidInputs[i].Price;}else{cov_1pebg41whg.b[211][1]++;cov_1pebg41whg.s[957]++;total+=bidInputs[i].Quantity*bidInputs[i].Price;}// let utxoInputCompositeKey=await ctx.stub.createCompositeKey('securitizationCoin', [userID, utxoInputKeys[i]]);
//TODO
//check errors
let valueBytes=(cov_1pebg41whg.s[958]++,await ctx.stub.getState(cashTokenID));cov_1pebg41whg.s[959]++;if((cov_1pebg41whg.b[213][0]++,!valueBytes)||(cov_1pebg41whg.b[213][1]++,valueBytes.length===0)){cov_1pebg41whg.b[212][0]++;cov_1pebg41whg.s[960]++;throw new Error(`state does not exist`);}else{cov_1pebg41whg.b[212][1]++;}//TODO
//check errors
// Error handling not needed since Itoa() was used when setting the utxo amount, guaranteeing it was an integer.
cov_1pebg41whg.s[961]++;token=JSON.parse(valueBytes.toString());let cashTokenOwner=(cov_1pebg41whg.s[962]++,token.Owner);cov_1pebg41whg.s[963]++;console.log('cashtokenowner');cov_1pebg41whg.s[964]++;console.log(cashTokenOwner);cov_1pebg41whg.s[965]++;console.log('cashtoken amount');cov_1pebg41whg.s[966]++;console.log(quantityToTransfer*bidInputs[i].Price);let tokensToTransfer=(cov_1pebg41whg.s[967]++,quantityToTransfer*bidInputs[i].Price);cov_1pebg41whg.s[968]++;console.log('indice');cov_1pebg41whg.s[969]++;console.log(usedOwners.indexOf(cashTokenOwner));// console.log('token Owner')
// console.log(cashTokenOwner)
cov_1pebg41whg.s[970]++;if(usedOwners.indexOf(cashTokenOwner)===-1){cov_1pebg41whg.b[214][0]++;cov_1pebg41whg.s[971]++;console.log('dentro del primer if');cov_1pebg41whg.s[972]++;usedOwners.push(cashTokenOwner);cov_1pebg41whg.s[973]++;console.log(usedOwners);cov_1pebg41whg.s[974]++;usedAmounts.push(quantityToTransfer);cov_1pebg41whg.s[975]++;console.log(usedAmounts);cov_1pebg41whg.s[976]++;notUsedTokensAmounts.push(token.Amount);cov_1pebg41whg.s[977]++;cashTokensToTransfer.push(quantityToTransfer*askInput.Price);cov_1pebg41whg.s[978]++;bondTokensToTransfer.push(quantityToTransfer);// console.log(`quantityToTransfer: ${quantityToTransfer}`)
// bondsToTransfer.append(qu)
}else{cov_1pebg41whg.b[214][1]++;cov_1pebg41whg.s[979]++;console.log('dentro del primer else');cov_1pebg41whg.s[980]++;console.log('usedOwners');cov_1pebg41whg.s[981]++;console.log(usedOwners);cov_1pebg41whg.s[982]++;usedAmounts[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer;cov_1pebg41whg.s[983]++;notUsedTokensAmounts[usedOwners.indexOf(cashTokenOwner)]+=token.Amount;cov_1pebg41whg.s[984]++;cashTokensToTransfer[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer*askInput.Price;cov_1pebg41whg.s[985]++;bondTokensToTransfer[usedOwners.indexOf(cashTokenOwner)]+=quantityToTransfer;}cov_1pebg41whg.s[986]++;amount+=quantityToTransfer*bidInputs[i].Price;// total+=token.Amount;
//revisar
// if(token.Amount<quantityToTransfer){
//     throw new Error('Error')
// }
let index;cov_1pebg41whg.s[987]++;bids=orderBook[0];cov_1pebg41whg.s[988]++;asks=orderBook[1];let thisTokenID=(cov_1pebg41whg.s[989]++,token.ID);cov_1pebg41whg.s[990]++;if(bidInputs[i].FullMatch){cov_1pebg41whg.b[215][0]++;cov_1pebg41whg.s[991]++;console.log('step 5.2');cov_1pebg41whg.s[992]++;await ctx.stub.deleteState(token.ID);let myBid=(cov_1pebg41whg.s[993]++,await bids.filter(item=>{cov_1pebg41whg.f[86]++;cov_1pebg41whg.s[994]++;return item.ID!==bidInputs[i].ID;}));cov_1pebg41whg.s[995]++;orderBook=[myBid,asks];// console.log(`orderBook: ${orderBook}`)
}else{cov_1pebg41whg.b[215][1]++;cov_1pebg41whg.s[996]++;console.log('step 5.3');let myBid=(cov_1pebg41whg.s[997]++,await bids.filter(item=>{cov_1pebg41whg.f[87]++;cov_1pebg41whg.s[998]++;return item.ID===bidInputs[i].ID;}));cov_1pebg41whg.s[999]++;console.log(myBid);cov_1pebg41whg.s[1000]++;index=bids.indexOf(myBid[0]);cov_1pebg41whg.s[1001]++;console.log('Index');cov_1pebg41whg.s[1002]++;console.log(index);cov_1pebg41whg.s[1003]++;if(myBid[0].length>1){cov_1pebg41whg.b[216][0]++;cov_1pebg41whg.s[1004]++;throw new Error('Error');}else{cov_1pebg41whg.b[216][1]++;}cov_1pebg41whg.s[1005]++;lastOwner=token.Owner;cov_1pebg41whg.s[1006]++;lastBid=myBid[0];cov_1pebg41whg.s[1007]++;lastQuantity=myBid.Quantity-myBid.QuantityMatch;cov_1pebg41whg.s[1008]++;lastQuantityMatch=0;cov_1pebg41whg.s[1009]++;lastRestingQuantity=myBid.Quantity-myBid.QuantityMatch;cov_1pebg41whg.s[1010]++;partialMatched.push(lastBid);// New token ID
// myBid[0].TokenID=token.ID;
// myBid[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
cov_1pebg41whg.s[1011]++;usedKey=token.ID;cov_1pebg41whg.s[1012]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[1013]++;orderBook=[bids,asks];// console.log(`orderBook: ${orderBook}`)
}cov_1pebg41whg.s[1014]++;console.log('despues comprobar fullmatch');cov_1pebg41whg.s[1015]++;usedKeys.push(thisTokenID);// usedOwners.push(cashTokenOwner);
}cov_1pebg41whg.s[1016]++;console.log('usedOwners.length');cov_1pebg41whg.s[1017]++;console.log(usedOwners.length);let bondAcumulator=(cov_1pebg41whg.s[1018]++,0);cov_1pebg41whg.s[1019]++;for(let j=(cov_1pebg41whg.s[1020]++,0);j<usedOwners.length;j++){cov_1pebg41whg.s[1021]++;console.log(`creamos estados tipo bond tokens`);//TODO
// check coupons received
cov_1pebg41whg.s[1022]++;outputBondToken.ID=await ctx.stub.createCompositeKey('BondToken',[usedOwners[j],outputBondToken.GenericID,':0']);cov_1pebg41whg.s[1023]++;outputBondToken.Amount=usedAmounts[j];cov_1pebg41whg.s[1024]++;console.log(outputBondToken.Amount);cov_1pebg41whg.s[1025]++;outputBondToken.Owner=usedOwners[j];cov_1pebg41whg.s[1026]++;bondAcumulator+=outputBondToken.Amount;let outputBondTokenBuffer=(cov_1pebg41whg.s[1027]++,Buffer.from(JSON.stringify(outputBondToken)));cov_1pebg41whg.s[1028]++;await ctx.stub.putState(outputBondToken.ID,outputBondTokenBuffer);}cov_1pebg41whg.s[1029]++;bids=orderBook[0];cov_1pebg41whg.s[1030]++;asks=orderBook[1];let submitterID=(cov_1pebg41whg.s[1031]++,await ctx.clientIdentity.getID());cov_1pebg41whg.s[1032]++;console.log('creamos los estados de cash tokens');let securitizationCoin1=(cov_1pebg41whg.s[1033]++,{ID:await ctx.stub.createCompositeKey('securitizationCoin',[submitterID,transactionID,':0']),GenericID:transactionID,TypeID:':0',Issuer:await ctx.clientIdentity.getID(),Owner:submitterID,Amount:total,Factor:100,CanBeUsed:true});let valueBuffer1=(cov_1pebg41whg.s[1034]++,Buffer.from(JSON.stringify(securitizationCoin1)));let restingQuantity=(cov_1pebg41whg.s[1035]++,total-amount);cov_1pebg41whg.s[1036]++;console.log('resting quantity');cov_1pebg41whg.s[1037]++;console.log(restingQuantity);cov_1pebg41whg.s[1038]++;console.log('step 7');cov_1pebg41whg.s[1039]++;console.log(lastOwner);cov_1pebg41whg.s[1040]++;if(restingQuantity!==0){cov_1pebg41whg.b[217][0]++;cov_1pebg41whg.s[1041]++;console.log('step 8');let securitizationCoin2=(cov_1pebg41whg.s[1042]++,{ID:await ctx.stub.createCompositeKey('securitizationCoin',[lastOwner,transactionID,':1']),GenericID:transactionID,TypeID:':1',Issuer:await ctx.clientIdentity.getID(),Owner:lastOwner,Amount:restingQuantity,Factor:100,CanBeUsed:true});cov_1pebg41whg.s[1043]++;console.log('securitizationCoin2');cov_1pebg41whg.s[1044]++;console.log(securitizationCoin2);cov_1pebg41whg.s[1045]++;console.log('securitizationCoin1');cov_1pebg41whg.s[1046]++;console.log(securitizationCoin1);cov_1pebg41whg.s[1047]++;lastBid.TokenID=securitizationCoin2.ID;cov_1pebg41whg.s[1048]++;lastBid.QuantityMatch=lastQuantityMatch;cov_1pebg41whg.s[1049]++;lastBid.RestingQuantity=lastRestingQuantity;cov_1pebg41whg.s[1050]++;lastBid.Quantity=lastQuantity;cov_1pebg41whg.s[1051]++;lastBid.PartialMatch=false;let thisBid=(cov_1pebg41whg.s[1052]++,await bids.filter(item=>{cov_1pebg41whg.f[88]++;cov_1pebg41whg.s[1053]++;return item.ID===lastBid.ID;}));let indice=(cov_1pebg41whg.s[1054]++,bids.indexOf(thisBid));cov_1pebg41whg.s[1055]++;bids[indice]=lastBid;cov_1pebg41whg.s[1056]++;orderBook=[bids,asks];let valueBuffer2=(cov_1pebg41whg.s[1057]++,Buffer.from(JSON.stringify(securitizationCoin2)));cov_1pebg41whg.s[1058]++;await ctx.stub.putState(securitizationCoin2.ID,valueBuffer2);cov_1pebg41whg.s[1059]++;await ctx.stub.putState(securitizationCoin1.ID,valueBuffer1);}else{cov_1pebg41whg.b[217][1]++;cov_1pebg41whg.s[1060]++;// create just one state
console.log('securitizationCoin1');cov_1pebg41whg.s[1061]++;console.log(securitizationCoin1);cov_1pebg41whg.s[1062]++;await ctx.stub.putState(securitizationCoin1.ID,valueBuffer1);}cov_1pebg41whg.s[1063]++;if((cov_1pebg41whg.b[219][0]++,askInput.Quantity-askInput.QuantityMatch!==0)&&(cov_1pebg41whg.b[219][1]++,!askInput.MarketPrice)){cov_1pebg41whg.b[218][0]++;cov_1pebg41whg.s[1064]++;outputBondToken.ID=await ctx.stub.createCompositeKey('BondToken',[userID,outputBondToken.GenericID,':1']);cov_1pebg41whg.s[1065]++;outputBondToken.Amount=bondToken.Amount-bondAcumulator;let outputBondTokenBuffer=(cov_1pebg41whg.s[1066]++,Buffer.from(JSON.stringify(outputBondToken)));cov_1pebg41whg.s[1067]++;await ctx.stub.putState(outputBondToken.ID,outputBondTokenBuffer);let thisAsk=(cov_1pebg41whg.s[1068]++,await asks.filter(item=>{cov_1pebg41whg.f[89]++;cov_1pebg41whg.s[1069]++;return item.ID===askInput.ID;}));let index=(cov_1pebg41whg.s[1070]++,asks.indexOf(thisAsk));cov_1pebg41whg.s[1071]++;thisAsk.Quantity=thisAsk.Quantity-thisAsk.QuantityMatch;cov_1pebg41whg.s[1072]++;thisAsk.QuantityMatch=0;cov_1pebg41whg.s[1073]++;thisAsk.TokenID=outputBondToken.ID;cov_1pebg41whg.s[1074]++;asks[index]=thisAsk;cov_1pebg41whg.s[1075]++;orderBook=[bids,asks];cov_1pebg41whg.s[1076]++;await ctx.stub.deleteState(bondToken.ID);}else{cov_1pebg41whg.b[218][1]++;cov_1pebg41whg.s[1077]++;if((cov_1pebg41whg.b[221][0]++,askInput.Quantity-askInput.QuantityMatch===0)&&(cov_1pebg41whg.b[221][1]++,!askInput.MarketPrice)){cov_1pebg41whg.b[220][0]++;let thisAsk=(cov_1pebg41whg.s[1078]++,await asks.filter(item=>{cov_1pebg41whg.f[90]++;cov_1pebg41whg.s[1079]++;return item.ID!==askInput;}));cov_1pebg41whg.s[1080]++;orderBook=[bids,thisAsk];}else{cov_1pebg41whg.b[220][1]++;cov_1pebg41whg.s[1081]++;orderBook=[bids,asks];}}cov_1pebg41whg.s[1082]++;if(partialMatched.length>1){cov_1pebg41whg.b[222][0]++;cov_1pebg41whg.s[1083]++;throw new Error('Error');}else{cov_1pebg41whg.b[222][1]++;}cov_1pebg41whg.s[1084]++;asks=await this._sortingAskOrders(ctx,orderBook[1]);cov_1pebg41whg.s[1085]++;bids=await this._sortingBidOrders(ctx,orderBook[0]);cov_1pebg41whg.s[1086]++;orderBook=[bids,asks];// let orderBuffer=Buffer.from(JSON.stringify(orderBook));
// await ctx.stub.putState('OrderBook',orderBuffer);
cov_1pebg41whg.s[1087]++;return orderBook;}async TransferCoupons(ctx,bondTokenID,TypeID,spvID){cov_1pebg41whg.f[91]++;cov_1pebg41whg.s[1088]++;console.log('inside TransferCoupons');let userID=(cov_1pebg41whg.s[1089]++,await ctx.clientIdentity.getID());let bondTokenKey=(cov_1pebg41whg.s[1090]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondTokenID]));let key=(cov_1pebg41whg.s[1091]++,bondTokenKey+TypeID);cov_1pebg41whg.s[1092]++;console.log(key);let bondTokenBytes=(cov_1pebg41whg.s[1093]++,await ctx.stub.getState(key));cov_1pebg41whg.s[1094]++;if((cov_1pebg41whg.b[224][0]++,!bondTokenBytes)||(cov_1pebg41whg.b[224][1]++,bondTokenBytes.length===0)){cov_1pebg41whg.b[223][0]++;cov_1pebg41whg.s[1095]++;throw new Error('There is no state associated to that key');}else{cov_1pebg41whg.b[223][1]++;}cov_1pebg41whg.s[1096]++;console.log('paso primer filtro');let bondToken=(cov_1pebg41whg.s[1097]++,JSON.parse(bondTokenBytes.toString()));// let thisDate=await ctx.stub.getTxTimestamp();
// if (thisDate<bondToken.NextCouponPaymentNotBefore){
//     throw new Error('Error, you cannot still withdraw any coupons')
// }
cov_1pebg41whg.s[1098]++;console.log('paso segundo filtro');cov_1pebg41whg.s[1099]++;console.log(bondToken);cov_1pebg41whg.s[1100]++;if(!bondToken.CanBeUsed){cov_1pebg41whg.b[225][0]++;cov_1pebg41whg.s[1101]++;throw new Error(`Bond token cannot be used`);}else{cov_1pebg41whg.b[225][1]++;}cov_1pebg41whg.s[1102]++;console.log('paso tercer filtro');let bondsAmount=(cov_1pebg41whg.s[1103]++,bondToken.Amount);//or .Quantity
//These are attributes within bondToken state
let couponsReceived=(cov_1pebg41whg.s[1104]++,'');let couponsRemaining=(cov_1pebg41whg.s[1105]++,'');let totalCoupons=(cov_1pebg41whg.s[1106]++,'');let resultKeys=(cov_1pebg41whg.s[1107]++,[]);let total=(cov_1pebg41whg.s[1108]++,0);let amount;let lastCashAmount;let cashDifference;let new_value;let myCoupons=(cov_1pebg41whg.s[1109]++,parseInt(bondToken.Amount*bondToken.CouponRate*bondToken.FaceValue/bondToken.CouponFactor));let iterator=(cov_1pebg41whg.s[1110]++,await ctx.stub.getStateByPartialCompositeKey("securitizationCoin",[spvID]));cov_1pebg41whg.s[1111]++;console.log('iterator');cov_1pebg41whg.s[1112]++;console.log(myCoupons);// console.log(iterator)
// console.log(iterator[1])
cov_1pebg41whg.s[1113]++;for await(const res of iterator){cov_1pebg41whg.s[1114]++;console.log('dentro iterator');cov_1pebg41whg.s[1115]++;new_value=JSON.parse(res.value.toString());// console.log(`value: ${value.Amount}`)
cov_1pebg41whg.s[1116]++;console.log('value.Amount');cov_1pebg41whg.s[1117]++;console.log(new_value.Amount);cov_1pebg41whg.s[1118]++;amount=new_value.Amount;cov_1pebg41whg.s[1119]++;if((cov_1pebg41whg.b[227][0]++,new_value.CanBeUsed)&&(cov_1pebg41whg.b[227][1]++,new_value.Owner===spvID)){cov_1pebg41whg.b[226][0]++;cov_1pebg41whg.s[1120]++;console.log('se puede usar');cov_1pebg41whg.s[1121]++;resultKeys.push(new_value.ID);cov_1pebg41whg.s[1122]++;total+=amount;}else{cov_1pebg41whg.b[226][1]++;}cov_1pebg41whg.s[1123]++;if(total<myCoupons){cov_1pebg41whg.b[228][0]++;cov_1pebg41whg.s[1124]++;console.log('aun no ha llegado al maximo');cov_1pebg41whg.s[1125]++;await ctx.stub.deleteState(res.key);cov_1pebg41whg.s[1126]++;continue;}else{cov_1pebg41whg.b[228][1]++;cov_1pebg41whg.s[1127]++;console.log('ha llegado al maximo');cov_1pebg41whg.s[1128]++;lastCashAmount=new_value.Amount;cov_1pebg41whg.s[1129]++;cashDifference=total-myCoupons;cov_1pebg41whg.s[1130]++;break;}}cov_1pebg41whg.s[1131]++;console.log('fuera bucle');cov_1pebg41whg.s[1132]++;if(total<myCoupons){cov_1pebg41whg.b[229][0]++;cov_1pebg41whg.s[1133]++;throw new Error('There are not enough funds');}else{cov_1pebg41whg.b[229][1]++;}cov_1pebg41whg.s[1134]++;console.log('lastCashAmount');cov_1pebg41whg.s[1135]++;console.log(lastCashAmount);cov_1pebg41whg.s[1136]++;console.log('cashDifference');cov_1pebg41whg.s[1137]++;console.log(cashDifference);let genericID=(cov_1pebg41whg.s[1138]++,await ctx.stub.getTxID());let typeID=(cov_1pebg41whg.s[1139]++,':1');cov_1pebg41whg.s[1140]++;if(cashDifference!==0){cov_1pebg41whg.b[230][0]++;cov_1pebg41whg.s[1141]++;//create 
new_value.Amount=cashDifference;cov_1pebg41whg.s[1142]++;new_value.ID=await ctx.stub.createCompositeKey('securitizationCoin',[new_value.Owner,genericID,typeID]);cov_1pebg41whg.s[1143]++;new_value.TypeID=typeID;cov_1pebg41whg.s[1144]++;new_value.GenericID=genericID;cov_1pebg41whg.s[1145]++;await ctx.stub.deleteState(new_value.ID);}else{cov_1pebg41whg.b[230][1]++;cov_1pebg41whg.s[1146]++;new_value.Amount=total;cov_1pebg41whg.s[1147]++;new_value.TypeID=':0';cov_1pebg41whg.s[1148]++;new_value.GenericID=genericID;cov_1pebg41whg.s[1149]++;new_value.Owner=await ctx.clientIdentity.getIDBytes();cov_1pebg41whg.s[1150]++;new_value.ID=await ctx.stub.createCompositeKey('securitizationCoin',[new_value.Owner,genericID,new_value.TypeID]);let valueBuffer=(cov_1pebg41whg.s[1151]++,Buffer.from(JSON.stringify(new_value)));cov_1pebg41whg.s[1152]++;await ctx.stub.putState(new_value.ID,valueBuffer);}cov_1pebg41whg.s[1153]++;await ctx.stub.deleteState(bondTokenID);let newBondToken=(cov_1pebg41whg.s[1154]++,bondToken);cov_1pebg41whg.s[1155]++;newBondToken.GenericID=genericID;cov_1pebg41whg.s[1156]++;newBondToken.CouponsReceived=newBondToken.CouponsReceived+1;cov_1pebg41whg.s[1157]++;newBondToken.CouponsRemaining=newBondToken.CouponsRemaining-1;cov_1pebg41whg.s[1158]++;newBondToken.NextCouponPaymentNotBefore=newBondToken.CouponDatesNotBefore[newBondToken.CouponsReceived];let newBondTokenBuffer=(cov_1pebg41whg.s[1159]++,Buffer.from(JSON.stringify(newBondToken)));cov_1pebg41whg.s[1160]++;await ctx.stub.putState(newBondToken.ID,newBondTokenBuffer);cov_1pebg41whg.s[1161]++;return newBondToken;}//Transference triggered due to a Bid Order
async _transferBondTokens(ctx,askInputs,bidInput,orderBook){cov_1pebg41whg.f[92]++;cov_1pebg41whg.s[1162]++;// console
console.log('Inside _transferBondTokens');// I retrieve cash token
let securitizationCoinBytes=(cov_1pebg41whg.s[1163]++,await ctx.stub.getState(bidInput.TokenID));cov_1pebg41whg.s[1164]++;if((cov_1pebg41whg.b[232][0]++,!securitizationCoinBytes)||(cov_1pebg41whg.b[232][1]++,securitizationCoinBytes.length===0)){cov_1pebg41whg.b[231][0]++;cov_1pebg41whg.s[1165]++;throw new Error('Error');}else{cov_1pebg41whg.b[231][1]++;}let securitizationCoin=(cov_1pebg41whg.s[1166]++,JSON.parse(securitizationCoinBytes.toString()));let myFunds=(cov_1pebg41whg.s[1167]++,securitizationCoin.Amount);cov_1pebg41whg.s[1168]++;console.log(`myFunds: ${myFunds}`);//translate into nodejs utxo sample code 
let userID=(cov_1pebg41whg.s[1169]++,await ctx.clientIdentity.getID());let usedKeys=(cov_1pebg41whg.s[1170]++,[]);let usedKey,lastOwner;let usedOwners=(cov_1pebg41whg.s[1171]++,[]);let usedAmounts=(cov_1pebg41whg.s[1172]++,[]);let notUsedTokensAmounts=(cov_1pebg41whg.s[1173]++,[]);let cashTokensToTransfer=(cov_1pebg41whg.s[1174]++,[]);let total=(cov_1pebg41whg.s[1175]++,0);let bondsToTransfer=(cov_1pebg41whg.s[1176]++,[]);let amount=(cov_1pebg41whg.s[1177]++,0);let token;// let coupons;
// check all bonds are equal (same coupons)
let transactionID=(cov_1pebg41whg.s[1178]++,await ctx.stub.getTxID());let outputSecuritizationCoin=(cov_1pebg41whg.s[1179]++,{ID:'',GenericID:transactionID,TypeID:':0',Issuer:await ctx.clientIdentity.getID(),Owner:'',Amount:'',Factor:100,CanBeUsed:true});let asks=(cov_1pebg41whg.s[1180]++,orderBook[1]);let bids=(cov_1pebg41whg.s[1181]++,orderBook[0]);let lastAsk;let lastAskQuantity;let lastAskQuantityMatch;let lastAskRestingQuantity;let partialMatched=(cov_1pebg41whg.s[1182]++,[]);cov_1pebg41whg.s[1183]++;for(let i=(cov_1pebg41whg.s[1184]++,0);i<askInputs.length;i++){cov_1pebg41whg.s[1185]++;console.log('inside first loop');cov_1pebg41whg.s[1186]++;console.log(askInputs[i]);// console.log('iteracion numero')
// console.log(i)
let balance=(cov_1pebg41whg.s[1187]++,0);let bondID=(cov_1pebg41whg.s[1188]++,askInputs[i].TokenID);cov_1pebg41whg.s[1189]++;console.log(bondID);let quantityToTransfer=(cov_1pebg41whg.s[1190]++,askInputs[i].QuantityMatch);cov_1pebg41whg.s[1191]++;console.log(quantityToTransfer);cov_1pebg41whg.s[1192]++;if(usedKeys.indexOf(bondID)!==-1){cov_1pebg41whg.b[233][0]++;cov_1pebg41whg.s[1193]++;console.log('inside error 1');cov_1pebg41whg.s[1194]++;throw new Error('Error');}else{cov_1pebg41whg.b[233][1]++;}// let utxoInputCompositeKey=await ctx.stub.createCompositeKey('securitizationCoin', [userID, utxoInputKeys[i]]);
//TODO
//check errors
let valueBytes=(cov_1pebg41whg.s[1195]++,await ctx.stub.getState(bondID));//TODO
//check errors
cov_1pebg41whg.s[1196]++;balance=askInputs[i].Quantity-askInputs[i].QuantityMatch;cov_1pebg41whg.s[1197]++;if(balance===0){cov_1pebg41whg.b[234][0]++;cov_1pebg41whg.s[1198]++;total+=quantityToTransfer;}else{cov_1pebg41whg.b[234][1]++;cov_1pebg41whg.s[1199]++;total+=askInputs[i].Quantity;}// Error handling not needed since Itoa() was used when setting the utxo amount, guaranteeing it was an integer.
cov_1pebg41whg.s[1200]++;token=JSON.parse(valueBytes.toString());let bondOwner=(cov_1pebg41whg.s[1201]++,token.Owner);cov_1pebg41whg.s[1202]++;console.log('bondOwner');cov_1pebg41whg.s[1203]++;console.log(bondOwner);cov_1pebg41whg.s[1204]++;console.log('indice');cov_1pebg41whg.s[1205]++;console.log(usedOwners.indexOf(bondOwner));cov_1pebg41whg.s[1206]++;if(usedOwners.indexOf(bondOwner)===-1){cov_1pebg41whg.b[235][0]++;cov_1pebg41whg.s[1207]++;console.log('dentro del primer if');cov_1pebg41whg.s[1208]++;usedOwners.push(bondOwner);cov_1pebg41whg.s[1209]++;console.log(usedOwners);cov_1pebg41whg.s[1210]++;usedAmounts.push(quantityToTransfer*askInputs[i].Price);cov_1pebg41whg.s[1211]++;notUsedTokensAmounts.push(token.Amount);cov_1pebg41whg.s[1212]++;cashTokensToTransfer.push(quantityToTransfer*askInputs[i].Price);//console.log(`quantityToTransfer: ${quantityToTransfer}`)
// bondsToTransfer.append(qu)
}else{cov_1pebg41whg.b[235][1]++;cov_1pebg41whg.s[1213]++;console.log('dentro del primer else');cov_1pebg41whg.s[1214]++;console.log('usedOwners');cov_1pebg41whg.s[1215]++;console.log(usedOwners);cov_1pebg41whg.s[1216]++;usedAmounts[usedOwners.indexOf(bondOwner)]+=quantityToTransfer*askInputs[i].Price;cov_1pebg41whg.s[1217]++;notUsedTokensAmounts[usedOwners.indexOf(bondOwner)]+=token.Amount;cov_1pebg41whg.s[1218]++;cashTokensToTransfer[usedOwners.indexOf(bondOwner)]+=quantityToTransfer*askInputs[i].Price;}cov_1pebg41whg.s[1219]++;amount+=quantityToTransfer;// total+=token.Amount;
// //revisar
// if(token.Amount<quantityToTransfer){
//     throw new Error('Error')
// }
cov_1pebg41whg.s[1220]++;bids=orderBook[0];cov_1pebg41whg.s[1221]++;asks=orderBook[1];let thisTokenID=(cov_1pebg41whg.s[1222]++,token.ID);cov_1pebg41whg.s[1223]++;if(askInputs[i].FullMatch){cov_1pebg41whg.b[236][0]++;cov_1pebg41whg.s[1224]++;await ctx.stub.deleteState(token.ID);let myAsk=(cov_1pebg41whg.s[1225]++,await asks.filter(item=>{cov_1pebg41whg.f[93]++;cov_1pebg41whg.s[1226]++;return item.ID!==askInputs[i].ID;}));cov_1pebg41whg.s[1227]++;orderBook=[bids,myAsk];//console.log(`orderBook: ${orderBook}`)
}else{cov_1pebg41whg.b[236][1]++;let myAsk=(cov_1pebg41whg.s[1228]++,await asks.filter(item=>{cov_1pebg41whg.f[94]++;cov_1pebg41whg.s[1229]++;return item.ID===askInputs[i].ID;}));cov_1pebg41whg.s[1230]++;if(myAsk.length>1){cov_1pebg41whg.b[237][0]++;cov_1pebg41whg.s[1231]++;console.log('inside error 2');cov_1pebg41whg.s[1232]++;throw new Error('Error');}else{cov_1pebg41whg.b[237][1]++;}// index = asks.indexOf(myAsk[0]);
cov_1pebg41whg.s[1233]++;lastOwner=token.Owner;cov_1pebg41whg.s[1234]++;console.log('lastOwner');cov_1pebg41whg.s[1235]++;console.log(lastOwner);cov_1pebg41whg.s[1236]++;lastAsk=myAsk[0];cov_1pebg41whg.s[1237]++;partialMatched.push(lastAsk);cov_1pebg41whg.s[1238]++;lastAskQuantity=myAsk.Quantity-myAsk.QuantityMatch;cov_1pebg41whg.s[1239]++;lastAskQuantityMatch=0;cov_1pebg41whg.s[1240]++;lastAskRestingQuantity=myAsk.Quantity-myAsk.QuantityMatch;// New token ID
// myBid[0].TokenID=token.ID;
// myBid[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
cov_1pebg41whg.s[1241]++;usedKey=token.ID;cov_1pebg41whg.s[1242]++;await ctx.stub.deleteState(token.ID);cov_1pebg41whg.s[1243]++;orderBook=[bids,asks];// myAsk[0].TokenID=token.ID;
// myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
// await ctx.stub.deleteState(token.ID);
//console.log(`orderBook: ${orderBook}`)
}cov_1pebg41whg.s[1244]++;usedKeys.push(thisTokenID);}let cashAcumulator=(cov_1pebg41whg.s[1245]++,0);cov_1pebg41whg.s[1246]++;for(let j=(cov_1pebg41whg.s[1247]++,0);j<usedOwners.length;j++){cov_1pebg41whg.s[1248]++;console.log('creamos estados tipo cash tokens');//console.log(`creamos estados tipo cash tokens`)
//TODO
// check coupons received
cov_1pebg41whg.s[1249]++;outputSecuritizationCoin.ID=await ctx.stub.createCompositeKey('securitizationCoin',[usedOwners[j],outputSecuritizationCoin.GenericID,':0']);cov_1pebg41whg.s[1250]++;outputSecuritizationCoin.Amount=usedAmounts[j];cov_1pebg41whg.s[1251]++;outputSecuritizationCoin.Owner=usedOwners[j];cov_1pebg41whg.s[1252]++;console.log(outputSecuritizationCoin.Amount);let outputSecuritizationCoinBuffer=(cov_1pebg41whg.s[1253]++,Buffer.from(JSON.stringify(outputSecuritizationCoin)));cov_1pebg41whg.s[1254]++;await ctx.stub.putState(outputSecuritizationCoin.ID,outputSecuritizationCoinBuffer);cov_1pebg41whg.s[1255]++;cashAcumulator+=outputSecuritizationCoin.Amount;}cov_1pebg41whg.s[1256]++;console.log('creamos estados bond Tokens');cov_1pebg41whg.s[1257]++;bids=orderBook[0];cov_1pebg41whg.s[1258]++;asks=orderBook[1];let invokerCert=(cov_1pebg41whg.s[1259]++,await ctx.clientIdentity.getID());let bondToken1=(cov_1pebg41whg.s[1260]++,{ID:await ctx.stub.createCompositeKey('BondToken',[invokerCert,transactionID,':0']),GenericID:transactionID,TypeID:':0',Rating:token.Rating,CouponRate:token.CouponRate,MaturityDate:token.MaturityDate,Issuer:securitizationCoin.Owner,Owner:securitizationCoin.Owner,Pool:token.Pool,AmountPaid:token.AmountPaid,OriginalValue:token.OriginalValue,MonthlyPayout:token.MonthlyPayout,RemainingPayments:token.RemainingPayments,Amount:amount,CanBeUsed:true});let valueBuffer1=(cov_1pebg41whg.s[1261]++,Buffer.from(JSON.stringify(bondToken1)));let restingQuantity=(cov_1pebg41whg.s[1262]++,total-amount);cov_1pebg41whg.s[1263]++;console.log('resting quantity');cov_1pebg41whg.s[1264]++;console.log(restingQuantity);cov_1pebg41whg.s[1265]++;console.log('step 7');cov_1pebg41whg.s[1266]++;if(restingQuantity!==0){cov_1pebg41whg.b[238][0]++;cov_1pebg41whg.s[1267]++;console.log('step 8');//console.log(`dentro del tercer if`)
let bondToken2=(cov_1pebg41whg.s[1268]++,{ID:await ctx.stub.createCompositeKey('BondToken',[lastOwner,transactionID,':1']),GenericID:transactionID,TypeID:':1',Rating:token.Rating,CouponRate:token.CouponRate,MaturityDate:token.MaturityDate,Issuer:securitizationCoin.Issuer,Owner:securitizationCoin.Owner,Pool:token.Pool,AmountPaid:token.AmountPaid,OriginalValue:token.OriginalValue,MonthlyPayout:token.MonthlyPayout,RemainingPayments:token.RemainingPayments,Amount:restingQuantity,CanBeUsed:true});cov_1pebg41whg.s[1269]++;console.log('bondToken2');cov_1pebg41whg.s[1270]++;console.log(bondToken2);cov_1pebg41whg.s[1271]++;console.log('bondToken1');cov_1pebg41whg.s[1272]++;console.log(bondToken1);cov_1pebg41whg.s[1273]++;lastAsk.TokenID=bondToken2.ID;cov_1pebg41whg.s[1274]++;lastAsk.QuantityMatch=lastAskQuantityMatch;cov_1pebg41whg.s[1275]++;lastAsk.RestingQuantity=lastAskRestingQuantity;cov_1pebg41whg.s[1276]++;lastAsk.Quantity=lastAskQuantity;cov_1pebg41whg.s[1277]++;lastAsk.PartialMatch=false;let thisAsk=(cov_1pebg41whg.s[1278]++,await asks.filter(item=>{cov_1pebg41whg.f[95]++;cov_1pebg41whg.s[1279]++;return item.ID===lastAsk.ID;}));let indice=(cov_1pebg41whg.s[1280]++,asks.indexOf(thisAsk));cov_1pebg41whg.s[1281]++;asks[indice]=lastAsk;cov_1pebg41whg.s[1282]++;orderBook=[bids,asks];let valueBuffer2=(cov_1pebg41whg.s[1283]++,Buffer.from(JSON.stringify(bondToken2)));cov_1pebg41whg.s[1284]++;await ctx.stub.putState(bondToken2.ID,valueBuffer2);cov_1pebg41whg.s[1285]++;await ctx.stub.putState(bondToken1.ID,valueBuffer1);}else{cov_1pebg41whg.b[238][1]++;cov_1pebg41whg.s[1286]++;console.log('bondToken1');cov_1pebg41whg.s[1287]++;console.log(bondToken1);//console.log(`dentro del tercer else`)
// create just one state
cov_1pebg41whg.s[1288]++;await ctx.stub.putState(bondToken1.ID,valueBuffer1);}cov_1pebg41whg.s[1289]++;if((cov_1pebg41whg.b[240][0]++,bidInput.Quantity-bidInput.QuantityMatch!==0)&&(cov_1pebg41whg.b[240][1]++,!bidInput.MarketPrice)){cov_1pebg41whg.b[239][0]++;cov_1pebg41whg.s[1290]++;outputSecuritizationCoin.ID=await ctx.stub.createCompositeKey('securitizationCoin',[userID,outputSecuritizationCoin.GenericID,':1']);cov_1pebg41whg.s[1291]++;outputSecuritizationCoin.Amount=token.Amount-cashAcumulator;let outputSecuritizationCoinBuffer=(cov_1pebg41whg.s[1292]++,Buffer.from(JSON.stringify(outputSecuritizationCoin)));cov_1pebg41whg.s[1293]++;await ctx.stub.putState(outputSecuritizationCoin.ID,outputSecuritizationCoinBuffer);let thisBid=(cov_1pebg41whg.s[1294]++,await bids.filter(item=>{cov_1pebg41whg.f[96]++;cov_1pebg41whg.s[1295]++;return item.ID===bidInput.ID;}));let index=(cov_1pebg41whg.s[1296]++,bids.indexOf(thisBid));cov_1pebg41whg.s[1297]++;thisBid.Quantity=thisBid.Quantity-thisBid.QuantityMatch;cov_1pebg41whg.s[1298]++;thisBid.QuantityMatch=0;cov_1pebg41whg.s[1299]++;thisBid.TokenID=outputSecuritizationCoin.ID;cov_1pebg41whg.s[1300]++;bids[index]=thisBid;cov_1pebg41whg.s[1301]++;orderBook=[bids,asks];cov_1pebg41whg.s[1302]++;await ctx.stub.deleteState(token.ID);}else{cov_1pebg41whg.b[239][1]++;cov_1pebg41whg.s[1303]++;if((cov_1pebg41whg.b[242][0]++,bidInput.Quantity-bidInput.QuantityMatch===0)&&(cov_1pebg41whg.b[242][1]++,!bidInput.MarketPrice)){cov_1pebg41whg.b[241][0]++;let thisBid=(cov_1pebg41whg.s[1304]++,await bids.filter(item=>{cov_1pebg41whg.f[97]++;cov_1pebg41whg.s[1305]++;return item.ID!==bidInput;}));cov_1pebg41whg.s[1306]++;orderBook=[thisBid,asks];}else{cov_1pebg41whg.b[241][1]++;cov_1pebg41whg.s[1307]++;orderBook=[bids,asks];}}cov_1pebg41whg.s[1308]++;if(partialMatched.length>1){cov_1pebg41whg.b[243][0]++;cov_1pebg41whg.s[1309]++;throw new Error('Error');}else{cov_1pebg41whg.b[243][1]++;}let orderBuffer=(cov_1pebg41whg.s[1310]++,Buffer.from(JSON.stringify(orderBook)));cov_1pebg41whg.s[1311]++;await ctx.stub.putState('OrderBook',orderBuffer);cov_1pebg41whg.s[1312]++;return orderBook;}// Bid order will be executed by someone whose desire is buying bonds.
async BidOrder(ctx,amount,price,tokenID,identificativo,date){cov_1pebg41whg.f[98]++;cov_1pebg41whg.s[1313]++;console.log('paso 1');// first we check the format of price
cov_1pebg41whg.s[1314]++;await this._checkDecimals(price);cov_1pebg41whg.s[1315]++;price=parseFloat(price);cov_1pebg41whg.s[1316]++;price=parseInt(price*100);// if (amount<=0 || price<=0){
//     throw new Error(`Both Amount and Price arguments must be positive`);
// }
// const userID= await ctx.GetUserIdentity('cif');
const userID=(cov_1pebg41whg.s[1317]++,await ctx.clientIdentity.getID());// retrieve order book if it exists
const bookOrderBytes=(cov_1pebg41whg.s[1318]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1319]++;if((cov_1pebg41whg.b[245][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[245][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[244][0]++;cov_1pebg41whg.s[1320]++;bookOrder=[[],[]];}else{cov_1pebg41whg.b[244][1]++;cov_1pebg41whg.s[1321]++;bookOrder=JSON.parse(bookOrderBytes.toString());}// retrieve token we are going to use to pay for
let myKey=(cov_1pebg41whg.s[1322]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));cov_1pebg41whg.s[1323]++;myKey=myKey+identificativo;const tokenBytes=(cov_1pebg41whg.s[1324]++,await ctx.stub.getState(myKey));cov_1pebg41whg.s[1325]++;console.log('paso 2');// prior verifications are also inside auxiliary function
cov_1pebg41whg.s[1326]++;if((cov_1pebg41whg.b[247][0]++,!tokenBytes)||(cov_1pebg41whg.b[247][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[246][0]++;cov_1pebg41whg.s[1327]++;throw new Error(`Error, Token State according to key ${tokenID} does not exist`);}else{cov_1pebg41whg.b[246][1]++;}const token=(cov_1pebg41whg.s[1328]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[1329]++;if(!token.CanBeUsed){cov_1pebg41whg.b[248][0]++;cov_1pebg41whg.s[1330]++;throw new Error(`This Token State with ID ${tokenID} has already been used. Try another Token ID`);}else{cov_1pebg41whg.b[248][1]++;}const genericID=(cov_1pebg41whg.s[1331]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1332]++,await ctx.stub.createCompositeKey('BidOrder',[genericID]));// compute how many tokens we will withdraw from our Token State
const total=(cov_1pebg41whg.s[1333]++,amount*price);let currentOrder=(cov_1pebg41whg.s[1334]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:token.ID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Bid',Time:new Date(date).getTime()});//console.log('tiempo dentro del sc')
//console.log(currentOrder.Time)
let asks=(cov_1pebg41whg.s[1335]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1336]++,bookOrder[0]);//console.log(asks)
cov_1pebg41whg.s[1337]++;console.log('paso 3');// If there  is no asks it means we cannot match our bid order
cov_1pebg41whg.s[1338]++;if(asks.length===0){cov_1pebg41whg.b[249][0]++;cov_1pebg41whg.s[1339]++;console.log('paso 3.1');let newID=(cov_1pebg41whg.s[1340]++,await this._splitMoney(ctx,token.ID,total));const order=(cov_1pebg41whg.s[1341]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:newID,Name:'Bid',FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Time:new Date(date).getTime()});cov_1pebg41whg.s[1342]++;bookOrder[0].push(order);const book=(cov_1pebg41whg.s[1343]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1344]++;bookOrder=[book,bookOrder[1]];cov_1pebg41whg.s[1345]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1346]++;return bookOrder;}else{cov_1pebg41whg.b[249][1]++;}cov_1pebg41whg.s[1347]++;console.log('paso 4');let bidReference=(cov_1pebg41whg.s[1348]++,currentOrder);let bondKeyAcumulator=(cov_1pebg41whg.s[1349]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1350]++,[]);let counter=(cov_1pebg41whg.s[1351]++,bidReference.Quantity);let balance=(cov_1pebg41whg.s[1352]++,0);let totalTokens=(cov_1pebg41whg.s[1353]++,0);let tokensCounter=(cov_1pebg41whg.s[1354]++,token.Amount);let balanceTokens=(cov_1pebg41whg.s[1355]++,0);let myTokens=(cov_1pebg41whg.s[1356]++,0);cov_1pebg41whg.s[1357]++;console.log('paso 5');// console.log(bidReference.Price)
// check if there is matching
cov_1pebg41whg.s[1358]++;for await(const ask of asks){cov_1pebg41whg.s[1359]++;console.log('controlando el break');cov_1pebg41whg.s[1360]++;console.log(ask.Price);cov_1pebg41whg.s[1361]++;if((cov_1pebg41whg.b[251][0]++,ask.Price<=bidReference.Price)&&(cov_1pebg41whg.b[251][1]++,!ask.FullMatch)&&(cov_1pebg41whg.b[251][2]++,myTokens<bidReference.Quantity)){cov_1pebg41whg.b[250][0]++;cov_1pebg41whg.s[1362]++;console.log('paso 5.1');cov_1pebg41whg.s[1363]++;counter=counter-ask.Quantity;cov_1pebg41whg.s[1364]++;balance=ask.Quantity+counter;cov_1pebg41whg.s[1365]++;tokensCounter=tokensCounter-ask.Quantity*ask.Price;cov_1pebg41whg.s[1366]++;balanceTokens=ask.Quantity*ask.Price+tokensCounter;// FULL MATCH means that our submitted order with that size has been completed
cov_1pebg41whg.s[1367]++;if(counter>=0){cov_1pebg41whg.b[252][0]++;cov_1pebg41whg.s[1368]++;console.log('paso 5.1.2.1');// FULL MATCH
cov_1pebg41whg.s[1369]++;ask.QuantityMatch=ask.Quantity;cov_1pebg41whg.s[1370]++;ask.FullMatch=true;cov_1pebg41whg.s[1371]++;ask.PartialMatch=false;cov_1pebg41whg.s[1372]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1373]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1374]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1375]++;myTokens+=ask.Quantity;}else{cov_1pebg41whg.b[252][1]++;cov_1pebg41whg.s[1376]++;console.log('paso 5.1.2.2');// PARTIAL MATCH means that our submitted order with that size has been completed partially
// PARTIAL MATCH
cov_1pebg41whg.s[1377]++;ask.FullMatch=false;cov_1pebg41whg.s[1378]++;ask.PartialMatch=true;cov_1pebg41whg.s[1379]++;ask.QuantityMatch=balance;cov_1pebg41whg.s[1380]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1381]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1382]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1383]++;myTokens+=balance;// And finally break, because we read following a prestablished order
}}else{cov_1pebg41whg.b[250][1]++;cov_1pebg41whg.s[1384]++;continue;}}cov_1pebg41whg.s[1385]++;console.log('paso 6');// now we upload our order and the matching state
cov_1pebg41whg.s[1386]++;console.log(myTokens);cov_1pebg41whg.s[1387]++;console.log(bidReference.Quantity);let newID;cov_1pebg41whg.s[1388]++;if(myTokens===bidReference.Quantity){cov_1pebg41whg.b[253][0]++;cov_1pebg41whg.s[1389]++;console.log('paso 7.1');// Full Match
// currentOrder.ID=orderID
cov_1pebg41whg.s[1390]++;currentOrder.TokenID=token.ID;cov_1pebg41whg.s[1391]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1392]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1393]++;currentOrder.QuantityMatch=currentOrder.Quantity;// currentOrder.MatchID=bidReference.MatchID;
}else{cov_1pebg41whg.b[253][1]++;cov_1pebg41whg.s[1394]++;if((cov_1pebg41whg.b[255][0]++,myTokens<bidReference.Quantity)&&(cov_1pebg41whg.b[255][1]++,myTokens!==0)){cov_1pebg41whg.b[254][0]++;cov_1pebg41whg.s[1395]++;console.log('paso 7.2');// Partial Match
// currentOrder.ID=orderID
cov_1pebg41whg.s[1396]++;currentOrder.TokenID=token.ID;cov_1pebg41whg.s[1397]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1398]++;currentOrder.PartialMatch=true;cov_1pebg41whg.s[1399]++;currentOrder.QuantityMatch=myTokens;cov_1pebg41whg.s[1400]++;console.log('final');// currentOrder.Quantity=counter;
// currentOrder.MatchID=bidReference.MatchID;
}else{cov_1pebg41whg.b[254][1]++;cov_1pebg41whg.s[1401]++;console.log('paso 7.3');// No match
// currentOrder.ID=orderID
cov_1pebg41whg.s[1402]++;newID=await this._splitMoney(ctx,token.ID,total);cov_1pebg41whg.s[1403]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1404]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1405]++;currentOrder.PartialMatch=false;}}cov_1pebg41whg.s[1406]++;bookOrder[0].push(currentOrder);//console.log(bookOrder);
const bookBid=(cov_1pebg41whg.s[1407]++,await this._sortingBidOrders(ctx,bookOrder[0]));const bookAsk=(cov_1pebg41whg.s[1408]++,await this._sortingAskOrders(ctx,bookOrder[1]));cov_1pebg41whg.s[1409]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1410]++;console.log('paso 8');//console.log(bookOrder)
// Finally we submit order book and matching state
cov_1pebg41whg.s[1411]++;console.log('match');cov_1pebg41whg.s[1412]++;console.log(tokenAcumulator);cov_1pebg41whg.s[1413]++;console.log(currentOrder);cov_1pebg41whg.s[1414]++;if(bondKeyAcumulator.length>0){cov_1pebg41whg.b[256][0]++;//console.log('paso 8.1')
const orderMatch=(cov_1pebg41whg.s[1415]++,{Orders:tokenAcumulator,Order:currentOrder});// let orderBuffer=Buffer.from(JSON.stringify(orderMatch));
// await ctx.stub.putState('OrderMatch'+genericID, orderBuffer);
// transference triggered
// cash tokens goes from bid uploader to bond owners and bonds
// goes to bid order uploader
// let ITransferCashTokenID=currentOrder.TokenID;
cov_1pebg41whg.s[1416]++;bookOrder=await this._transferBondTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);//console.log(orderMatch)
//console.log(orderMatch.Orders)
//console.log(orderMatch.Order)
}else{cov_1pebg41whg.b[256][1]++;}cov_1pebg41whg.s[1417]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1418]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1419]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1420]++;console.log('paso 9');cov_1pebg41whg.s[1421]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// AskOrder  will be executed by someone able to sell assets at a limit price
async AskOrder(ctx,amount,price,bondID,identificativo,date){cov_1pebg41whg.f[99]++;cov_1pebg41whg.s[1422]++;console.log('paso 1');cov_1pebg41whg.s[1423]++;await this._checkDecimals(price);// const userID=await ctx.GetUserIdentity('cif');
const userID=(cov_1pebg41whg.s[1424]++,await ctx.clientIdentity.getID());cov_1pebg41whg.s[1425]++;amount=parseInt(amount);cov_1pebg41whg.s[1426]++;price=parseFloat(price);cov_1pebg41whg.s[1427]++;price=parseInt(price*100);let myKey=(cov_1pebg41whg.s[1428]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondID]));cov_1pebg41whg.s[1429]++;myKey=myKey+identificativo;const bondBytes=(cov_1pebg41whg.s[1430]++,await ctx.stub.getState(myKey));// These prior verifications are also inside auxiliary function
cov_1pebg41whg.s[1431]++;if((cov_1pebg41whg.b[258][0]++,!bondBytes)||(cov_1pebg41whg.b[258][1]++,bondBytes.length===0)){cov_1pebg41whg.b[257][0]++;cov_1pebg41whg.s[1432]++;throw new Error(`Error, Bond State with ID ${bondID} does not exist`);}else{cov_1pebg41whg.b[257][1]++;}const bond=(cov_1pebg41whg.s[1433]++,JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[1434]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[259][0]++;cov_1pebg41whg.s[1435]++;throw new Error(`This Bond State with ID ${bondID} has already been used. Try another Bond ID`);}else{cov_1pebg41whg.b[259][1]++;}cov_1pebg41whg.s[1436]++;if(bond.Amount<amount){cov_1pebg41whg.b[260][0]++;cov_1pebg41whg.s[1437]++;throw new Error(`You are not supposed to do that.`);}else{cov_1pebg41whg.b[260][1]++;}const bookOrderBytes=(cov_1pebg41whg.s[1438]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1439]++;if((cov_1pebg41whg.b[262][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[262][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[261][0]++;cov_1pebg41whg.s[1440]++;bookOrder=[[],[]];}else{cov_1pebg41whg.b[261][1]++;cov_1pebg41whg.s[1441]++;bookOrder=JSON.parse(bookOrderBytes.toString());}cov_1pebg41whg.s[1442]++;console.log('paso 2');const genericID=(cov_1pebg41whg.s[1443]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1444]++,await ctx.stub.createCompositeKey('AskOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1445]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:bond.ID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1446]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1447]++,bookOrder[0]);cov_1pebg41whg.s[1448]++;console.log('paso 3');// If there is no bids it means we cannot match our ask order so we just submit it
cov_1pebg41whg.s[1449]++;if(bids.length===0){cov_1pebg41whg.b[263][0]++;cov_1pebg41whg.s[1450]++;console.log('paso 3.1');let newID=(cov_1pebg41whg.s[1451]++,await this._splitBonds(ctx,bond.ID,amount));//console.log(newID)
const order=(cov_1pebg41whg.s[1452]++,{ID:orderID,Quantity:parseInt(amount),Price:price,TokenID:newID,FullMatch:false,MarketPrice:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),// MatchID:[],
Name:'Ask',Time:new Date(date).getTime()});//console.log(order);
cov_1pebg41whg.s[1453]++;bookOrder[1].push(order);let book=(cov_1pebg41whg.s[1454]++,await this._sortingAskOrders(ctx,bookOrder[1]));//console.log(book)
cov_1pebg41whg.s[1455]++;bookOrder=[bookOrder[0],book];cov_1pebg41whg.s[1456]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));// //console.log(ret)
cov_1pebg41whg.s[1457]++;return bookOrder;}else{cov_1pebg41whg.b[263][1]++;}cov_1pebg41whg.s[1458]++;console.log('paso 4');const askReference=(cov_1pebg41whg.s[1459]++,currentOrder);let tokenKeyAcumulator=(cov_1pebg41whg.s[1460]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1461]++,[]);let tokenQuantitiesAcumulator=(cov_1pebg41whg.s[1462]++,[]);let counter=(cov_1pebg41whg.s[1463]++,askReference.Quantity);let totalTokens=(cov_1pebg41whg.s[1464]++,0);let balance=(cov_1pebg41whg.s[1465]++,0);let myTokens=(cov_1pebg41whg.s[1466]++,0);// Check if our order can be matched
cov_1pebg41whg.s[1467]++;for await(const bid of bids){cov_1pebg41whg.s[1468]++;if((cov_1pebg41whg.b[265][0]++,bid.Price>=askReference.Price)&&(cov_1pebg41whg.b[265][1]++,!bid.FullMatch)&&(cov_1pebg41whg.b[265][2]++,myTokens<askReference.Quantity)){cov_1pebg41whg.b[264][0]++;cov_1pebg41whg.s[1469]++;console.log('paso 4.1');cov_1pebg41whg.s[1470]++;counter=counter-bid.Quantity;cov_1pebg41whg.s[1471]++;balance=bid.Quantity+counter;cov_1pebg41whg.s[1472]++;if(counter>=0){cov_1pebg41whg.b[266][0]++;cov_1pebg41whg.s[1473]++;console.log('paso 4.1.1');cov_1pebg41whg.s[1474]++;bid.FullMatch=true;cov_1pebg41whg.s[1475]++;bid.PartialMatch=false;cov_1pebg41whg.s[1476]++;bid.QuantityMatch=bid.Quantity;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1477]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1478]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1479]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_1pebg41whg.s[1480]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1481]++;myTokens+=bid.Quantity;// } else if(counter<0 && balance>0){
}else{cov_1pebg41whg.b[266][1]++;cov_1pebg41whg.s[1482]++;console.log('paso 4.1.2');cov_1pebg41whg.s[1483]++;bid.FullMatch=false;cov_1pebg41whg.s[1484]++;bid.PartialMatch=true;cov_1pebg41whg.s[1485]++;bid.QuantityMatch=balance;cov_1pebg41whg.s[1486]++;bid.Quantity=bid.Quantity-balance;// bid.MatchID.push(askReference.ID);
// askReference.MatchID.push(bid.ID);
cov_1pebg41whg.s[1487]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1488]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1489]++;tokenQuantitiesAcumulator.push(counter+bid.Quantity);cov_1pebg41whg.s[1490]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1491]++;myTokens+=balance;}// else{
//     continue
// }
}else{cov_1pebg41whg.b[264][1]++;cov_1pebg41whg.s[1492]++;console.log('paso 4.2');cov_1pebg41whg.s[1493]++;continue;}}let newID;cov_1pebg41whg.s[1494]++;console.log('paso 5');cov_1pebg41whg.s[1495]++;console.log(myTokens);cov_1pebg41whg.s[1496]++;console.log(askReference.Quantity);//console.log(newID)
//console.log(counter)
// According to what matching situation we are, differents orders will be submitted
cov_1pebg41whg.s[1497]++;if(myTokens===askReference.Quantity){cov_1pebg41whg.b[267][0]++;cov_1pebg41whg.s[1498]++;console.log('paso 5.1');// Full Match
//console.log('case FULLMATCH')
cov_1pebg41whg.s[1499]++;currentOrder.TokenID=bond.ID;cov_1pebg41whg.s[1500]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1501]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1502]++;currentOrder.QuantityMatch=currentOrder.Quantity;// currentOrder.MatchID=askReference.MatchID;
}else{cov_1pebg41whg.b[267][1]++;cov_1pebg41whg.s[1503]++;if((cov_1pebg41whg.b[269][0]++,myTokens<askReference.Quantity)&&(cov_1pebg41whg.b[269][1]++,myTokens!==0)){cov_1pebg41whg.b[268][0]++;cov_1pebg41whg.s[1504]++;// Partial Match
//console.log('PARTIALMATCH')
console.log('paso 5.2');cov_1pebg41whg.s[1505]++;currentOrder.TokenID=bond.ID;cov_1pebg41whg.s[1506]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1507]++;currentOrder.PartialMatch=true;cov_1pebg41whg.s[1508]++;currentOrder.QuantityMatch=myTokens;// currentOrder.Quantity=counter;
// currentOrder.MatchID=askReference.MatchID;
}else{cov_1pebg41whg.b[268][1]++;cov_1pebg41whg.s[1509]++;// No match
//console.log('NOMATCH')
newID=await this._splitBonds(ctx,bond.ID,amount);cov_1pebg41whg.s[1510]++;console.log('paso 5.3');cov_1pebg41whg.s[1511]++;currentOrder.TokenID=newID;cov_1pebg41whg.s[1512]++;currentOrder.FullMatch=false;cov_1pebg41whg.s[1513]++;currentOrder.PartialMatch=false;}}cov_1pebg41whg.s[1514]++;bookOrder[1].push(currentOrder);cov_1pebg41whg.s[1515]++;console.log('funciona ok');// console.log(bookOrder)
// Sort order book according to prior rules
let bookAsk=(cov_1pebg41whg.s[1516]++,await this._sortingAskOrders(ctx,bookOrder[1]));let bookBid=(cov_1pebg41whg.s[1517]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1518]++;bookOrder=[bookBid,bookAsk];// console.log('bookAsk')
// console.log(bookAsk)
// console.log('bookBid')
// console.log(bookBid)
cov_1pebg41whg.s[1519]++;console.log('paso 6');// console.log(bookOrder)
//console.log(tokenKeyAcumulator)
cov_1pebg41whg.s[1520]++;if(tokenKeyAcumulator.length>0){cov_1pebg41whg.b[270][0]++;cov_1pebg41whg.s[1521]++;console.log('Hay match');const orderMatch=(cov_1pebg41whg.s[1522]++,{Orders:tokenAcumulator,Order:currentOrder});// let orderBookBuffer=Buffer.from(JSON.stringify(bookOrder));
// await ctx.stub.putState('OrderMatch'+genericID, orderBuffer);
// finally we set an event saying that our order has been matched and with which orders
// await ctx.SetEventName('OrderBook');
// await ctx.SetEventPayload(orderBBookBuffer);
cov_1pebg41whg.s[1523]++;bookOrder=await this._transferCashTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);//console.log(orderMatch)
//console.log(orderMatch.Orders)
//console.log(orderMatch.Order)
}else{cov_1pebg41whg.b[270][1]++;}cov_1pebg41whg.s[1524]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1525]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1526]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1527]++;console.log('paso 7');// console.log(bookOrder)
cov_1pebg41whg.s[1528]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// AskMarketOrder will be executed by someone whose desire is selling bonds at market price.
async AskMarketOrder(ctx,amount,bondID,identificativo,date){cov_1pebg41whg.f[100]++;cov_1pebg41whg.s[1529]++;amount=parseInt(amount);cov_1pebg41whg.s[1530]++;if(amount<=0){cov_1pebg41whg.b[271][0]++;cov_1pebg41whg.s[1531]++;throw new Error(`Amount argument must be positive`);}else{cov_1pebg41whg.b[271][1]++;}const userID=(cov_1pebg41whg.s[1532]++,await ctx.GetUserIdentity('cif'));let myKey=(cov_1pebg41whg.s[1533]++,await ctx.stub.createCompositeKey('BondToken',[userID,bondID]));cov_1pebg41whg.s[1534]++;myKey=myKey+identificativo;const bondBytes=(cov_1pebg41whg.s[1535]++,await ctx.stub.getState(myKey));cov_1pebg41whg.s[1536]++;if((cov_1pebg41whg.b[273][0]++,!bondBytes)||(cov_1pebg41whg.b[273][1]++,bondBytes.length===0)){cov_1pebg41whg.b[272][0]++;cov_1pebg41whg.s[1537]++;throw new Error(`Error, Bond State with key ${bondID} does not exist`);}else{cov_1pebg41whg.b[272][1]++;}// These prior verifications are also inside auxiliary function.
const bond=(cov_1pebg41whg.s[1538]++,JSON.parse(bondBytes.toString()));cov_1pebg41whg.s[1539]++;if(!bond.CanBeUsed){cov_1pebg41whg.b[274][0]++;cov_1pebg41whg.s[1540]++;throw new Error(`This Bond State with ID ${bondID} has already been used. Try another bond ID`);}else{cov_1pebg41whg.b[274][1]++;}cov_1pebg41whg.s[1541]++;if(bond.Amount<amount){cov_1pebg41whg.b[275][0]++;cov_1pebg41whg.s[1542]++;throw new Error(`Your token has not enough funds`);}else{cov_1pebg41whg.b[275][1]++;}// retrieve order book if it exists
const bookOrderBytes=(cov_1pebg41whg.s[1543]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1544]++;if((cov_1pebg41whg.b[277][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[277][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[276][0]++;cov_1pebg41whg.s[1545]++;throw new Error(`Order Book still not submitted`);}else{cov_1pebg41whg.b[276][1]++;cov_1pebg41whg.s[1546]++;bookOrder=JSON.parse(bookOrderBytes.toString());}const genericID=(cov_1pebg41whg.s[1547]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1548]++,await ctx.stub.createCompositeKey('AskOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1549]++,{ID:orderID,Quantity:amount,Price:'',MarketPrice:true,TokenID:bond.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:amount,Name:'Ask',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1550]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1551]++,bookOrder[0]);// If there is no bids it means we cannot match our ask order
cov_1pebg41whg.s[1552]++;if(bids.length===0){cov_1pebg41whg.b[278][0]++;cov_1pebg41whg.s[1553]++;// For sake of simplicity if there are no asks you cannot submit
// a market order
throw new Error(`There are no bids submitted.`);}else{cov_1pebg41whg.b[278][1]++;}const askReference=(cov_1pebg41whg.s[1554]++,currentOrder);let tokenKeyAcumulator=(cov_1pebg41whg.s[1555]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1556]++,[]);let tokenQuantitiesAcumulator=(cov_1pebg41whg.s[1557]++,[]);let counter=(cov_1pebg41whg.s[1558]++,askReference.Quantity);let totalTokens=(cov_1pebg41whg.s[1559]++,0);let balance=(cov_1pebg41whg.s[1560]++,0);// Check if there is matching
cov_1pebg41whg.s[1561]++;for await(const bid of bids){cov_1pebg41whg.s[1562]++;if((cov_1pebg41whg.b[280][0]++,bid.Price>=askReference.Price)&&(cov_1pebg41whg.b[280][1]++,!bid.FullMatch)&&(cov_1pebg41whg.b[280][2]++,myTokens<askReference.Quantity)){cov_1pebg41whg.b[279][0]++;cov_1pebg41whg.s[1563]++;console.log('paso 4.1');cov_1pebg41whg.s[1564]++;counter=counter-bid.Quantity;cov_1pebg41whg.s[1565]++;balance=bid.Quantity+counter;cov_1pebg41whg.s[1566]++;if(counter>=0){cov_1pebg41whg.b[281][0]++;cov_1pebg41whg.s[1567]++;console.log('paso 4.1.1');cov_1pebg41whg.s[1568]++;bid.FullMatch=true;cov_1pebg41whg.s[1569]++;bid.PartialMatch=false;cov_1pebg41whg.s[1570]++;bid.QuantityMatch=bid.Quantity;cov_1pebg41whg.s[1571]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1572]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1573]++;tokenQuantitiesAcumulator.push(bid.Quantity);cov_1pebg41whg.s[1574]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1575]++;myTokens+=bid.Quantity;}else{cov_1pebg41whg.b[281][1]++;cov_1pebg41whg.s[1576]++;console.log('paso 4.1.2');cov_1pebg41whg.s[1577]++;bid.FullMatch=false;cov_1pebg41whg.s[1578]++;bid.PartialMatch=true;cov_1pebg41whg.s[1579]++;bid.QuantityMatch=balance;cov_1pebg41whg.s[1580]++;bid.Quantity=bid.Quantity-balance;cov_1pebg41whg.s[1581]++;tokenKeyAcumulator.push(bid.ID);cov_1pebg41whg.s[1582]++;tokenAcumulator.push(bid);cov_1pebg41whg.s[1583]++;tokenQuantitiesAcumulator.push(counter+bid.Quantity);cov_1pebg41whg.s[1584]++;totalTokens=totalTokens+bid.Price*bid.QuantityMatch;cov_1pebg41whg.s[1585]++;myTokens+=balance;}}else{cov_1pebg41whg.b[279][1]++;cov_1pebg41whg.s[1586]++;console.log('paso 4.2');cov_1pebg41whg.s[1587]++;continue;}}cov_1pebg41whg.s[1588]++;currentOrder.TokenID=bond.ID;cov_1pebg41whg.s[1589]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1590]++;currentOrder.PartialMatch=false;cov_1pebg41whg.s[1591]++;currentOrder.QuantityMatch=askReference.Quantity-counter;// This kind of order is not included in order book.
// bookOrder[1].push(currentOrder);
let bookAsk=(cov_1pebg41whg.s[1592]++,await this._sortingAskOrders(ctx,bookOrder[1]));let bookBid=(cov_1pebg41whg.s[1593]++,await this._sortingBidOrders(ctx,bookOrder[0]));cov_1pebg41whg.s[1594]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1595]++;if(tokenKeyAcumulator.length>0){cov_1pebg41whg.b[282][0]++;const orderMatch=(cov_1pebg41whg.s[1596]++,{Orders:tokenAcumulator,Order:currentOrder});cov_1pebg41whg.s[1597]++;bookOrder=await this._transferCashTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);}else{cov_1pebg41whg.b[282][1]++;}cov_1pebg41whg.s[1598]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1599]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1600]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1601]++;return bookOrder;}// We must add last market price attribute to order book in order to establish e fair price if there are no asks 
// or bids in the order book
// BidMarketOrder will be executed by someone whose desire is buying bonds at market price.
async BidMarketOrder(ctx,amount,tokenID,identificativo,date){cov_1pebg41whg.f[101]++;cov_1pebg41whg.s[1602]++;if(amount<=0){cov_1pebg41whg.b[283][0]++;cov_1pebg41whg.s[1603]++;throw new Error(`Amount argument must be positive`);}else{cov_1pebg41whg.b[283][1]++;}const userID=(cov_1pebg41whg.s[1604]++,await ctx.GetUserIdentity('cif'));// These prior verifications are also inside auxiliary function
let myKey=(cov_1pebg41whg.s[1605]++,await ctx.stub.createCompositeKey('securitizationCoin',[userID,tokenID]));cov_1pebg41whg.s[1606]++;myKey=myKey+identificativo;const tokenBytes=(cov_1pebg41whg.s[1607]++,await ctx.stub.getState(myKey));cov_1pebg41whg.s[1608]++;if((cov_1pebg41whg.b[285][0]++,!tokenBytes)||(cov_1pebg41whg.b[285][1]++,tokenBytes.length===0)){cov_1pebg41whg.b[284][0]++;cov_1pebg41whg.s[1609]++;throw new Error(`Error, Token State with ID ${tokenID} does not exist`);}else{cov_1pebg41whg.b[284][1]++;}const token=(cov_1pebg41whg.s[1610]++,JSON.parse(tokenBytes.toString()));cov_1pebg41whg.s[1611]++;if(!token.CanBeUsed){cov_1pebg41whg.b[286][0]++;cov_1pebg41whg.s[1612]++;throw new Error(`This Token State with ID ${tokenID} has already been used. Try another token ID`);}else{cov_1pebg41whg.b[286][1]++;}const bookOrderBytes=(cov_1pebg41whg.s[1613]++,await ctx.stub.getState('OrderBook'));let bookOrder;cov_1pebg41whg.s[1614]++;if((cov_1pebg41whg.b[288][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[288][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[287][0]++;cov_1pebg41whg.s[1615]++;throw new Error(`There are no asks submitted.`);// bookOrder=[[],[]];
}else{cov_1pebg41whg.b[287][1]++;cov_1pebg41whg.s[1616]++;bookOrder=JSON.parse(bookOrderBytes.toString());}const genericID=(cov_1pebg41whg.s[1617]++,await ctx.stub.getTxID());const orderID=(cov_1pebg41whg.s[1618]++,await ctx.stub.createCompositeKey('BidOrder',[genericID]));let currentOrder=(cov_1pebg41whg.s[1619]++,{ID:orderID,Quantity:parseInt(amount),Price:'',MarketPrice:true,TokenID:token.ID,FullMatch:false,PartialMatch:false,QuantityMatch:0,RestingQuantity:parseInt(amount),Name:'Bid',Time:new Date(date).getTime()});let asks=(cov_1pebg41whg.s[1620]++,bookOrder[1]);let bids=(cov_1pebg41whg.s[1621]++,bookOrder[0]);// If there  is no asks it means we cannot match our bid order, so it has no sense to commit a bid order
// at market price
cov_1pebg41whg.s[1622]++;if(asks.length===0){cov_1pebg41whg.b[289][0]++;cov_1pebg41whg.s[1623]++;// For sake of simplicity if there are no asks you cannot submit
// a market order
throw new Error(`There are no asks submitted.`);}else{cov_1pebg41whg.b[289][1]++;}let bidReference=(cov_1pebg41whg.s[1624]++,currentOrder);let bondKeyAcumulator=(cov_1pebg41whg.s[1625]++,[]);let tokenAcumulator=(cov_1pebg41whg.s[1626]++,[]);let counter=(cov_1pebg41whg.s[1627]++,bidReference.Quantity);let balance=(cov_1pebg41whg.s[1628]++,0);let totalTokens=(cov_1pebg41whg.s[1629]++,0);let tokensCounter=(cov_1pebg41whg.s[1630]++,token.Amount);let balanceTokens=(cov_1pebg41whg.s[1631]++,0);cov_1pebg41whg.s[1632]++;for await(const ask of asks){cov_1pebg41whg.s[1633]++;console.log('controlando el break');cov_1pebg41whg.s[1634]++;console.log(ask.Price);cov_1pebg41whg.s[1635]++;if((cov_1pebg41whg.b[291][0]++,ask.Price<=bidReference.Price)&&(cov_1pebg41whg.b[291][1]++,!ask.FullMatch)&&(cov_1pebg41whg.b[291][2]++,myTokens<bidReference.Quantity)){cov_1pebg41whg.b[290][0]++;cov_1pebg41whg.s[1636]++;console.log('paso 5.1');cov_1pebg41whg.s[1637]++;counter=counter-ask.Quantity;cov_1pebg41whg.s[1638]++;balance=ask.Quantity+counter;cov_1pebg41whg.s[1639]++;tokensCounter=tokensCounter-ask.Quantity*ask.Price;cov_1pebg41whg.s[1640]++;balanceTokens=ask.Quantity*ask.Price+tokensCounter;// FULL MATCH means that our submitted order with that size has been completed
cov_1pebg41whg.s[1641]++;if(counter>=0){cov_1pebg41whg.b[292][0]++;cov_1pebg41whg.s[1642]++;console.log('paso 5.1.2.1');// FULL MATCH
cov_1pebg41whg.s[1643]++;ask.QuantityMatch=ask.Quantity;cov_1pebg41whg.s[1644]++;ask.FullMatch=true;cov_1pebg41whg.s[1645]++;ask.PartialMatch=false;cov_1pebg41whg.s[1646]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1647]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1648]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1649]++;myTokens+=ask.Quantity;}else{cov_1pebg41whg.b[292][1]++;cov_1pebg41whg.s[1650]++;console.log('paso 5.1.2.2');// PARTIAL MATCH means that our submitted order with that size has been completed partially
// PARTIAL MATCH
cov_1pebg41whg.s[1651]++;ask.FullMatch=false;cov_1pebg41whg.s[1652]++;ask.PartialMatch=true;cov_1pebg41whg.s[1653]++;ask.QuantityMatch=balance;cov_1pebg41whg.s[1654]++;bondKeyAcumulator.push(ask.TokenID);cov_1pebg41whg.s[1655]++;tokenAcumulator.push(ask);cov_1pebg41whg.s[1656]++;totalTokens=totalTokens+ask.Price*ask.QuantityMatch;cov_1pebg41whg.s[1657]++;myTokens+=balance;// And finally break, because we read following a prestablished order
}}else{cov_1pebg41whg.b[290][1]++;cov_1pebg41whg.s[1658]++;continue;}}//console.log('tokenAcumulator');
//console.log(tokenAcumulator);
// let newID=await this._splitMoney(ctx,token.ID,totalTokens);
// if (counter===0){
//console.log('Full Match')
// Full Match
cov_1pebg41whg.s[1659]++;currentOrder.TokenID=token.ID;cov_1pebg41whg.s[1660]++;currentOrder.FullMatch=true;cov_1pebg41whg.s[1661]++;currentOrder.PartialMatch=false;// currentOrder.QuantityMatch=currentOrder.Quantity;
cov_1pebg41whg.s[1662]++;currentOrder.QuantityMatch=bidReference.Quantity-counter;const bookBid=(cov_1pebg41whg.s[1663]++,await this._sortingBidOrders(ctx,bookOrder[0]));const bookAsk=(cov_1pebg41whg.s[1664]++,await this._sortingAskOrders(ctx,bookOrder[1]));cov_1pebg41whg.s[1665]++;bookOrder=[bookBid,bookAsk];cov_1pebg41whg.s[1666]++;if(tokenAcumulator.length>0){cov_1pebg41whg.b[293][0]++;const orderMatch=(cov_1pebg41whg.s[1667]++,{Orders:tokenAcumulator,Order:currentOrder});cov_1pebg41whg.s[1668]++;bookOrder=await this._transferBondTokens(ctx,orderMatch.Orders,orderMatch.Order,bookOrder);}else{cov_1pebg41whg.b[293][1]++;}cov_1pebg41whg.s[1669]++;await ctx.stub.putState('OrderBook',Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1670]++;await ctx.SetEventName('OrderBook');cov_1pebg41whg.s[1671]++;await ctx.SetEventPayload(Buffer.from(JSON.stringify(bookOrder)));cov_1pebg41whg.s[1672]++;return bookOrder;}// // This function will do a delivery versus payment when a Bid Order achieves a match
// // This function will be executed until no state according to that key exists in world state
// async MatchingBid(ctx,orderID){
//     const orderBookBytes=await ctx.stub.getState('OrderBook');
//     if (!orderBookBytes || orderBookBytes.length === 0){
//         throw new Error(`Error, Order Book State does not exist`);
//     }
//     let orderBook=JSON.parse(orderBookBytes.toString());
//     let asks=orderBook[1];
//     let bids=orderBook[0];
//     const orderMatchBytes= await ctx.stub.getState(orderID);
//     if (!orderMatchBytes || orderMatchBytes.length === 0){
//         throw new Error(`Error, Matching Order with ID ${orderID} does not exist`);
//     }
//     let orderMatch=JSON.parse(orderMatchBytes.toString());
//     let order=orderMatch.Order;
//     let orders=orderMatch.Orders[0];
//     let bond=asks.filter(item => item.ID===orders.ID);
//     let token=bids.filter(item=>item.ID===order.ID);
//     let tokenID;
//     let bondID;
//     // delivery vs payment will change the IDs of both token and bond and will be included in order book
//     [tokenID,bondID]=await this._dvp(ctx,bond[0].TokenID,token[0].TokenID, orders.QuantityMatch*order.Price,orders.QuantityMatch);
//     let newCounter=order.QuantityMatch-orders.QuantityMatch;
//     order.TokenID=tokenID;
//     order.QuantityMatch=newCounter;
//     let new_orders=orderMatch.Orders.filter(item => item.ID!==orders.ID);
//     // lo que pasa con el documento de matching: si se han transferido todos, se elimina, en caso contrario solo
//     // se elimina el order del ask
//     // If we have transfered all tokens/bonds we can delete Order Match document from world state
//     if (newCounter===0){
//         await ctx.stub.deleteState(orderID)
//     }else{
//         let match={
//             Orders: new_orders,
//             Order: order,
//         }
//         await ctx.stub.putState(orderID, Buffer.from(JSON.stringify(match)));
//     }
//     // We have to modify order book because orders partially matched have changed their tokens ID
//     // For Ask Orders
//     let myAsk=await asks.filter(item=> item.ID===orders.ID);
//     let index = asks.indexOf(myAsk[0]);
//     myAsk[0].TokenID=bondID;
//     myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
//     if (myAsk[0].RestingQuantity!==0){
//         asks[index]=myAsk[0];
//         orderBook=[bids,asks];
//     }else if (myAsk[0].RestingQuantity===0){
//         myAsk=await asks.filter(item=> item.ID!==orders.ID);
//         orderBook=[bids,myAsk];
//     }
//     asks=orderBook[1];
//     bids=orderBook[0];
//     // For Bid Order
//     let myBid=await bids.filter(item=> item.ID===order.ID);
//     index = bids.indexOf(myBid[0]);
//     myBid[0].TokenID=tokenID;
//     myBid[0].RestingQuantity=myBid[0].RestingQuantity-orders.QuantityMatch;
//     if (myBid[0].RestingQuantity!==0){
//         bids[index]=myBid[0];
//         orderBook=[bids,asks];
//     }else if (myBid[0].RestingQuantity===0){
//         myBid=await bids.filter(item=> item.ID!==order.ID);
//         orderBook=[myBid,asks];
//     }
//     await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// }
// // This function will do a delivery versus payment when an Ask Order achieves a match
// // This function will be executed until no state according to that key exists in world state
// async MatchingAsk(ctx,orderID){
//     const orderBookBytes=await ctx.stub.getState('OrderBook');
//     if (!orderBookBytes || orderBookBytes.length === 0){
//         throw new Error(`Error, Order Book State associated to key ${'OrderBook'} does not exist`);
//     }
//     let orderBook=JSON.parse(orderBookBytes.toString());
//     let asks=orderBook[1];
//     let bids=orderBook[0];
//     // Retrieve order Match State
//     const orderMatchBytes= await ctx.stub.getState(orderID);
//     if (!orderMatchBytes || orderMatchBytes.length === 0){
//         throw new Error(`Error, Matched Order State with ID ${orderID} does not exist`);
//     }
//     const orderMatch=JSON.parse(orderMatchBytes.toString());
//     let order=orderMatch.Order;
//     let orders=orderMatch.Orders[0];
//     let bond=await asks.filter(item => item.ID===order.ID);
//     let token=await bids.filter(item => item.ID===orders.ID);
//     let tokenID;
//     let bondID;
//     // delivery vs payment
//     [tokenID,bondID]=await this._dvp(ctx,bond[0].TokenID,token[0].TokenID, orders.QuantityMatch*orders.Price,orders.QuantityMatch);
//     let newCounter=order.QuantityMatch-orders.QuantityMatch;
//     order.TokenID=tokenID;
//     order.QuantityMatch=newCounter;
//     let new_orders=await orderMatch.Orders.filter(item => item.ID!==orders.ID);
//     // If every Token/Bond have been transfered, we will delete Match Order State
//     if (newCounter===0){
//         await ctx.stub.deleteState(orderID)
//     }else{
//         const match={
//             Orders: new_orders,
//             Order: order,
//         }
//         await ctx.stub.putState(orderID, Buffer.from(JSON.stringify(match)))
//     }
//     let myBid=await bids.filter(item=> item.ID===orders.ID);
//     let index = bids.indexOf(myBid[0]);
//     myBid[0].TokenID=tokenID;
//     myBid[0].RestingQuantity=myBid[0].RestingQuantity-orders.QuantityMatch;
//     if (myBid[0].RestingQuantity!==0){
//         bids[index]=myBid[0];
//         orderBook=[bids,asks];
//     }else if (myBid[0].RestingQuantity===0){
//         myBid=await bids.filter(item=> item.ID!==orders.ID);
//         orderBook=[myBid,asks];
//     }
//     asks=orderBook[1];
//     bids=orderBook[0];
//     let myAsk=await asks.filter(item=> item.ID===order.ID);
//     index = asks.indexOf(myAsk[0]);
//     myAsk[0].TokenID=bondID;
//     myAsk[0].RestingQuantity=myAsk[0].RestingQuantity-orders.QuantityMatch;
//     if (myAsk[0].RestingQuantity!==0){
//         asks[index]=myAsk[0];
//         orderBook=[bids,asks];
//     }else if (myAsk[0].RestingQuantity===0){
//         myAsk=await asks.filter(item=> item.ID!==order.ID);
//         orderBook=[bids,myAsk];
//     }
//     await ctx.stub.putState('OrderBook', Buffer.from(JSON.stringify(orderBook)));
// }
// async _dvp(ctx,bondID,tokenID, tokensToTransfer, bondsToTransfer){
//     //console.log('Paso 1')
//     const tokenBytes=await ctx.stub.getState(tokenID);
//     if (!tokenBytes || tokenBytes.length === 0) {
//         throw new Error(`Error, Token State with key ${tokenID} does not exist`);
//     }
//     //console.log('Paso 2')
//     const token=JSON.parse(tokenBytes.toString());
//     const bondBytes=await ctx.stub.getState(bondID);
//     if (!bondBytes || bondBytes.length === 0) {
//         throw new Error(`Error, Bond State with ID ${bondID} does not exist`);
//     }
//     const bond=JSON.parse(bondBytes.toString());
//     const genericID=await ctx.stub.getTxID();
//     const key1=await ctx.stub.createCompositeKey('securitizationCoin',[bond.Owner,genericID]);
//     const key2=await ctx.stub.createCompositeKey('securitizationCoin',[token.Owner,genericID]);
//     const bondKey1=await ctx.stub.createCompositeKey('BondToken',[token.Owner,genericID]);
//     const bondKey2=await ctx.stub.createCompositeKey('BondToken',[bond.Owner,genericID]);
//     const balanceTokens=token.Amount-tokensToTransfer;
//     let utxo1;
//     let utxo2;
//     let typeID;
//     typeID=':1';
//     utxo1={
//         ID: key1+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: token.Owner,
//         Issuer: token.Issuer,
//         Amount: balanceTokens,
//         CanBeUsed: false,
//     };
//     typeID=':0';
//     utxo2={
//         ID: key2+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: bond.Owner,
//         Issuer: token.Issuer,
//         Amount: tokensToTransfer,
//         CanBeUsed: true
//     };
//     const balanceBonds=bond.Amount-bondsToTransfer;
//     let bond1;
//     let bond2;
//     typeID=':1'
//     // TODO:
//     // Bond Arguments.
//     bond1={
//         ID: bondKey1+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: token.Owner,
//         Issuer: token.Issuer,
//         Amount: balanceBonds,
//         CanBeUsed: false,
//     };
//     typeID=':0'
//     bond2={
//         ID: bondKey2+typeID,
//         GenericID: genericID,
//         TypeID: typeID,
//         Owner: bond.Owner,
//         Issuer: token.Issuer,
//         Amount: bondsToTransfer,
//         CanBeUsed: true
//     };
//     await ctx.stub.deleteState(tokenID);
//     await ctx.stub.deleteState(bondID);
//     //console.log(balanceTokens)
//     //console.log(balanceBonds)
//     if (balanceTokens!==0){
//         //console.log('balanceTokens!==0')
//         await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));
//         await ctx.stub.putState(utxo1.ID,Buffer.from(JSON.stringify(utxo1)));
//     }else{
//         await ctx.stub.putState(utxo2.ID,Buffer.from(JSON.stringify(utxo2)));  
//     }
//     if (balanceBonds!==0){
//         //console.log('balanceBonds!==0')
//         await ctx.stub.putState(bond1.ID,Buffer.from(JSON.stringify(bond1)));
//         await ctx.stub.putState(bond2.ID,Buffer.from(JSON.stringify(bond2)));
//     }else{
//         await ctx.stub.putState(bond2.ID,Buffer.from(JSON.stringify(bond2)));
//     }
//     return [utxo1.ID, bond1.ID]
// }
async QueryOrderBook(ctx){cov_1pebg41whg.f[102]++;const bookOrderBytes=(cov_1pebg41whg.s[1673]++,await ctx.stub.getState('OrderBook'));cov_1pebg41whg.s[1674]++;if((cov_1pebg41whg.b[295][0]++,!bookOrderBytes)||(cov_1pebg41whg.b[295][1]++,bookOrderBytes.length===0)){cov_1pebg41whg.b[294][0]++;cov_1pebg41whg.s[1675]++;throw new Error(`Order Book does not exist`);}else{cov_1pebg41whg.b[294][1]++;}const bookOrder=(cov_1pebg41whg.s[1676]++,JSON.parse(bookOrderBytes.toString()));cov_1pebg41whg.s[1677]++;return bookOrder;}// // We must change this function
// // Order book implementation URL http://web.archive.org/web/20110205154238/http://howtohft.blogspot.com/2011/02/how-to-build-fast-limit-order-book.html
}// module.exports.originationContract=originationContract;
cov_1pebg41whg.s[1678]++;module.exports.securitizationContext=securitizationContext;cov_1pebg41whg.s[1679]++;module.exports.servicingContract=servicingContract;cov_1pebg41whg.s[1680]++;module.exports.ppaContract=ppaContract;cov_1pebg41whg.s[1681]++;module.exports.commonSecuritizationContract=commonSecuritizationContract;cov_1pebg41whg.s[1682]++;module.exports.bondIssuanceContract=bondIssuanceContract;